{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0","program":"/home/chenge/.rustup/toolchains/nightly-2020-10-25-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","num_traits","/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"i128\"","--cfg","feature=\"mesalock_sgx\"","--cfg","feature=\"sgx_tstd\"","--cfg","feature=\"std\"","-C","metadata=c07ffd4d5fc65d1b","-C","extra-filename=-c07ffd4d5fc65d1b","--out-dir","/home/chenge/workplace/rust-sgx-samples/channel_establishment/rpc/target/rls/debug/deps","-L","dependency=/home/chenge/workplace/rust-sgx-samples/channel_establishment/rpc/target/rls/debug/deps","--extern","sgx_tstd=/home/chenge/workplace/rust-sgx-samples/channel_establishment/rpc/target/rls/debug/deps/libsgx_tstd-a15e1fab340c3762.rmeta","--cap-lints","allow","--cfg","has_i128","-L","native=/opt/intel/sgxsdk/lib64","-L","native=/home/chenge/workplace/rust-sgx-samples/channel_establishment/rpc/target/rls/debug/build/sgx_backtrace_sys-b1d6dfbd2989c145/out/libbacktrace/","-L","native=/home/chenge/workplace/rust-sgx-samples/channel_establishment/rpc/target/rls/debug/build/sgx_backtrace_sys-b1d6dfbd2989c145/out/libbacktrace","-L","native=/home/chenge/workplace/rust-sgx-samples/channel_establishment/rpc/target/rls/debug/build/sgx_unwind-18c500f13d2b4158/out/libunwind/src/.libs","--error-format=json","--sysroot","/home/chenge/.rustup/toolchains/nightly-2020-10-25-x86_64-unknown-linux-gnu"],"output":"/home/chenge/workplace/rust-sgx-samples/channel_establishment/rpc/target/rls/debug/deps/libnum_traits-c07ffd4d5fc65d1b.rmeta"},"prelude":{"crate_id":{"name":"num_traits","disambiguator":[5564487366053029109,13855825967045281351]},"crate_root":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src","external_crates":[{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","num":4,"id":{"name":"sgx_tstd","disambiguator":[16379532882838934191,10858443068109453504]}},{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","num":5,"id":{"name":"hashbrown_tstd","disambiguator":[16183371823444078344,9581521231937859750]}},{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","num":6,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","num":7,"id":{"name":"sgx_unwind","disambiguator":[5102318145313185060,11471209729797343327]}},{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","num":8,"id":{"name":"sgx_backtrace_sys","disambiguator":[14660314418822277024,729926221133144524]}},{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","num":9,"id":{"name":"sgx_libc","disambiguator":[9606408002860437706,2854280889918615103]}},{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","num":10,"id":{"name":"sgx_types","disambiguator":[15093814546649415990,6106876177477605172]}},{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","num":11,"id":{"name":"sgx_demangle","disambiguator":[5629922212444546827,5063537095693118307]}},{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","num":12,"id":{"name":"sgx_alloc","disambiguator":[4294983768567477794,6176906306381446119]}},{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","num":13,"id":{"name":"sgx_trts","disambiguator":[13098705569631004602,1313249152699973655]}},{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","num":14,"id":{"name":"sgx_tprotected_fs","disambiguator":[10042502995804616197,13663583401362379357]}}],"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":472,"byte_end":19413,"line_start":11,"line_end":574,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":87},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1308,"byte_end":1315,"line_start":37,"line_end":37,"column_start":17,"column_end":24},"alias_span":null,"name":"Bounded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1379,"byte_end":1384,"line_start":39,"line_end":39,"column_start":16,"column_end":21},"alias_span":null,"name":"Float","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2100},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1401,"byte_end":1411,"line_start":40,"line_end":40,"column_start":16,"column_end":26},"alias_span":null,"name":"FloatConst","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":167},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1520,"byte_end":1524,"line_start":42,"line_end":42,"column_start":16,"column_end":20},"alias_span":null,"name":"cast","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":178},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1526,"byte_end":1537,"line_start":42,"line_end":42,"column_start":22,"column_end":33},"alias_span":null,"name":"AsPrimitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":145},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1539,"byte_end":1552,"line_start":42,"line_end":42,"column_start":35,"column_end":48},"alias_span":null,"name":"FromPrimitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":170},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1554,"byte_end":1561,"line_start":42,"line_end":42,"column_start":50,"column_end":57},"alias_span":null,"name":"NumCast","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":120},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1563,"byte_end":1574,"line_start":42,"line_end":42,"column_start":59,"column_end":70},"alias_span":null,"name":"ToPrimitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":313},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1598,"byte_end":1601,"line_start":43,"line_end":43,"column_start":22,"column_end":25},"alias_span":null,"name":"one","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":311},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1603,"byte_end":1607,"line_start":43,"line_end":43,"column_start":27,"column_end":31},"alias_span":null,"name":"zero","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":302},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1609,"byte_end":1612,"line_start":43,"line_end":43,"column_start":33,"column_end":36},"alias_span":null,"name":"One","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":292},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1614,"byte_end":1618,"line_start":43,"line_end":43,"column_start":38,"column_end":42},"alias_span":null,"name":"Zero","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":329},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1634,"byte_end":1641,"line_start":44,"line_end":44,"column_start":14,"column_end":21},"alias_span":null,"name":"PrimInt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":357},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1671,"byte_end":1681,"line_start":46,"line_end":46,"column_start":5,"column_end":15},"alias_span":null,"name":"CheckedAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":364},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1683,"byte_end":1693,"line_start":46,"line_end":46,"column_start":17,"column_end":27},"alias_span":null,"name":"CheckedDiv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":362},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1695,"byte_end":1705,"line_start":46,"line_end":46,"column_start":29,"column_end":39},"alias_span":null,"name":"CheckedMul","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":369},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1707,"byte_end":1717,"line_start":46,"line_end":46,"column_start":41,"column_end":51},"alias_span":null,"name":"CheckedNeg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":366},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1719,"byte_end":1729,"line_start":46,"line_end":46,"column_start":53,"column_end":63},"alias_span":null,"name":"CheckedRem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":371},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1731,"byte_end":1741,"line_start":46,"line_end":46,"column_start":65,"column_end":75},"alias_span":null,"name":"CheckedShl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":374},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1743,"byte_end":1753,"line_start":46,"line_end":46,"column_start":77,"column_end":87},"alias_span":null,"name":"CheckedShr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":360},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1755,"byte_end":1765,"line_start":46,"line_end":46,"column_start":89,"column_end":99},"alias_span":null,"name":"CheckedSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":377},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1788,"byte_end":1791,"line_start":48,"line_end":48,"column_start":19,"column_end":22},"alias_span":null,"name":"Inv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":395},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1816,"byte_end":1822,"line_start":49,"line_end":49,"column_start":24,"column_end":30},"alias_span":null,"name":"MulAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":400},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1824,"byte_end":1836,"line_start":49,"line_end":49,"column_start":32,"column_end":44},"alias_span":null,"name":"MulAddAssign","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":417},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1864,"byte_end":1874,"line_start":50,"line_end":50,"column_start":26,"column_end":36},"alias_span":null,"name":"Saturating","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":430},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1900,"byte_end":1911,"line_start":51,"line_end":51,"column_start":25,"column_end":36},"alias_span":null,"name":"WrappingAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":434},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1913,"byte_end":1924,"line_start":51,"line_end":51,"column_start":38,"column_end":49},"alias_span":null,"name":"WrappingMul","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":437},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1926,"byte_end":1937,"line_start":51,"line_end":51,"column_start":51,"column_end":62},"alias_span":null,"name":"WrappingShl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":439},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1939,"byte_end":1950,"line_start":51,"line_end":51,"column_start":64,"column_end":75},"alias_span":null,"name":"WrappingShr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":432},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1952,"byte_end":1963,"line_start":51,"line_end":51,"column_start":77,"column_end":88},"alias_span":null,"name":"WrappingSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":472},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1980,"byte_end":1991,"line_start":52,"line_end":52,"column_start":15,"column_end":26},"alias_span":null,"name":"checked_pow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":470},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1993,"byte_end":1996,"line_start":52,"line_end":52,"column_start":28,"column_end":31},"alias_span":null,"name":"pow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":462},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":1998,"byte_end":2001,"line_start":52,"line_end":52,"column_start":33,"column_end":36},"alias_span":null,"name":"Pow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":550},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2019,"byte_end":2022,"line_start":53,"line_end":53,"column_start":16,"column_end":19},"alias_span":null,"name":"abs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":552},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2024,"byte_end":2031,"line_start":53,"line_end":53,"column_start":21,"column_end":28},"alias_span":null,"name":"abs_sub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":554},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2033,"byte_end":2039,"line_start":53,"line_end":53,"column_start":30,"column_end":36},"alias_span":null,"name":"signum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":535},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2041,"byte_end":2047,"line_start":53,"line_end":53,"column_start":38,"column_end":44},"alias_span":null,"name":"Signed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":556},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2049,"byte_end":2057,"line_start":53,"line_end":53,"column_start":46,"column_end":54},"alias_span":null,"name":"Unsigned","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":472,"byte_end":19413,"line_start":11,"line_end":574,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":4370},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":98},{"krate":0,"index":182},{"krate":0,"index":287},{"krate":0,"index":315},{"krate":0,"index":347},{"krate":0,"index":456},{"krate":0,"index":475},{"krate":0,"index":530},{"krate":0,"index":560},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":575},{"krate":0,"index":578},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":4307},{"krate":0,"index":4310},{"krate":0,"index":4313},{"krate":0,"index":4316},{"krate":0,"index":4319},{"krate":0,"index":4322},{"krate":0,"index":4325},{"krate":0,"index":4328},{"krate":0,"index":4331},{"krate":0,"index":4334},{"krate":0,"index":4337},{"krate":0,"index":4340},{"krate":0,"index":596},{"krate":0,"index":4343},{"krate":0,"index":4348},{"krate":0,"index":4350},{"krate":0,"index":4352},{"krate":0,"index":600},{"krate":0,"index":4354},{"krate":0,"index":4361},{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":607}],"decl_id":null,"docs":" Numeric traits for generic mathematics","sig":null,"attributes":[{"value":"/ Numeric traits for generic mathematics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":472,"byte_end":514,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":515,"byte_end":518,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Compatibility","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":519,"byte_end":539,"line_start":13,"line_end":13,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":540,"byte_end":543,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The `num-traits` crate is tested for rustc 1.8 and greater.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":544,"byte_end":607,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"deny(unconditional_recursion)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":667,"byte_end":700,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"no_std","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":792,"byte_end":802,"line_start":21,"line_end":21,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":67},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/bounds.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bounds","qualname":"::bounds","value":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/bounds.rs","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":4468},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":609},{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":621},{"krate":0,"index":624},{"krate":0,"index":627},{"krate":0,"index":630},{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":642},{"krate":0,"index":91},{"krate":0,"index":645},{"krate":0,"index":648},{"krate":0,"index":671},{"krate":0,"index":693},{"krate":0,"index":714},{"krate":0,"index":734},{"krate":0,"index":753},{"krate":0,"index":771},{"krate":0,"index":788},{"krate":0,"index":804},{"krate":0,"index":819},{"krate":0,"index":833},{"krate":0,"index":846},{"krate":0,"index":858},{"krate":0,"index":869},{"krate":0,"index":879},{"krate":0,"index":888},{"krate":0,"index":896},{"krate":0,"index":903},{"krate":0,"index":909},{"krate":0,"index":914},{"krate":0,"index":918},{"krate":0,"index":921}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":87},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/bounds.rs","byte_start":20894,"byte_end":20901,"line_start":9,"line_end":9,"column_start":11,"column_end":18},"name":"Bounded","qualname":"::bounds::Bounded","value":"Bounded","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"decl_id":null,"docs":" Numbers which have upper and lower bounds\n","sig":null,"attributes":[{"value":"/ Numbers which have upper and lower bounds","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/bounds.rs","byte_start":20838,"byte_end":20883,"line_start":8,"line_end":8,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/bounds.rs","byte_start":21037,"byte_end":21046,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"min_value","qualname":"::bounds::Bounded::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" returns the smallest finite number this type can represent\n","sig":null,"attributes":[{"value":"/ returns the smallest finite number this type can represent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/bounds.rs","byte_start":20967,"byte_end":21029,"line_start":11,"line_end":11,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/bounds.rs","byte_start":21131,"byte_end":21140,"line_start":14,"line_end":14,"column_start":8,"column_end":17},"name":"max_value","qualname":"::bounds::Bounded::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" returns the largest finite number this type can represent\n","sig":null,"attributes":[{"value":"/ returns the largest finite number this type can represent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/bounds.rs","byte_start":21062,"byte_end":21123,"line_start":13,"line_end":13,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":98},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cast","qualname":"::cast","value":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":4500},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":924},{"krate":0,"index":939},{"krate":0,"index":954},{"krate":0,"index":969},{"krate":0,"index":984},{"krate":0,"index":999},{"krate":0,"index":1014},{"krate":0,"index":1029},{"krate":0,"index":1044},{"krate":0,"index":1059},{"krate":0,"index":1074},{"krate":0,"index":1089},{"krate":0,"index":1104},{"krate":0,"index":1155},{"krate":0,"index":145},{"krate":0,"index":1206},{"krate":0,"index":1221},{"krate":0,"index":1236},{"krate":0,"index":1251},{"krate":0,"index":1266},{"krate":0,"index":1281},{"krate":0,"index":1296},{"krate":0,"index":1311},{"krate":0,"index":1326},{"krate":0,"index":1341},{"krate":0,"index":1356},{"krate":0,"index":1371},{"krate":0,"index":1386},{"krate":0,"index":1401},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":1444},{"krate":0,"index":1447},{"krate":0,"index":1450},{"krate":0,"index":1453},{"krate":0,"index":1456},{"krate":0,"index":1459},{"krate":0,"index":1462},{"krate":0,"index":1465},{"krate":0,"index":1468},{"krate":0,"index":1471},{"krate":0,"index":1474},{"krate":0,"index":1477},{"krate":0,"index":1480},{"krate":0,"index":1483},{"krate":0,"index":174},{"krate":0,"index":178},{"krate":0,"index":1486},{"krate":0,"index":1488},{"krate":0,"index":1490},{"krate":0,"index":1492},{"krate":0,"index":1494},{"krate":0,"index":1496},{"krate":0,"index":1498},{"krate":0,"index":1500},{"krate":0,"index":1502},{"krate":0,"index":1504},{"krate":0,"index":1506},{"krate":0,"index":1508},{"krate":0,"index":1510},{"krate":0,"index":1512},{"krate":0,"index":1514},{"krate":0,"index":1516},{"krate":0,"index":1518},{"krate":0,"index":1520},{"krate":0,"index":1522},{"krate":0,"index":1524},{"krate":0,"index":1526},{"krate":0,"index":1528},{"krate":0,"index":1530},{"krate":0,"index":1532},{"krate":0,"index":1534},{"krate":0,"index":1536},{"krate":0,"index":1538},{"krate":0,"index":1540},{"krate":0,"index":1542},{"krate":0,"index":1544},{"krate":0,"index":1546},{"krate":0,"index":1548},{"krate":0,"index":1550},{"krate":0,"index":1552},{"krate":0,"index":1554},{"krate":0,"index":1556},{"krate":0,"index":1558},{"krate":0,"index":1560},{"krate":0,"index":1562},{"krate":0,"index":1564},{"krate":0,"index":1566},{"krate":0,"index":1568},{"krate":0,"index":1570},{"krate":0,"index":1572},{"krate":0,"index":1574},{"krate":0,"index":1576},{"krate":0,"index":1578},{"krate":0,"index":1580},{"krate":0,"index":1582},{"krate":0,"index":1584},{"krate":0,"index":1586},{"krate":0,"index":1588},{"krate":0,"index":1590},{"krate":0,"index":1592},{"krate":0,"index":1594},{"krate":0,"index":1596},{"krate":0,"index":1598},{"krate":0,"index":1600},{"krate":0,"index":1602},{"krate":0,"index":1604},{"krate":0,"index":1606},{"krate":0,"index":1608},{"krate":0,"index":1610},{"krate":0,"index":1612},{"krate":0,"index":1614},{"krate":0,"index":1616},{"krate":0,"index":1618},{"krate":0,"index":1620},{"krate":0,"index":1622},{"krate":0,"index":1624},{"krate":0,"index":1626},{"krate":0,"index":1628},{"krate":0,"index":1630},{"krate":0,"index":1632},{"krate":0,"index":1634},{"krate":0,"index":1636},{"krate":0,"index":1638},{"krate":0,"index":1640},{"krate":0,"index":1642},{"krate":0,"index":1644},{"krate":0,"index":1646},{"krate":0,"index":1648},{"krate":0,"index":1650},{"krate":0,"index":1652},{"krate":0,"index":1654},{"krate":0,"index":1656},{"krate":0,"index":1658},{"krate":0,"index":1660},{"krate":0,"index":1662},{"krate":0,"index":1664},{"krate":0,"index":1666},{"krate":0,"index":1668},{"krate":0,"index":1670},{"krate":0,"index":1672},{"krate":0,"index":1674},{"krate":0,"index":1676},{"krate":0,"index":1678},{"krate":0,"index":1680},{"krate":0,"index":1682},{"krate":0,"index":1684},{"krate":0,"index":1686},{"krate":0,"index":1688},{"krate":0,"index":1690},{"krate":0,"index":1692},{"krate":0,"index":1694},{"krate":0,"index":1696},{"krate":0,"index":1698},{"krate":0,"index":1700},{"krate":0,"index":1702},{"krate":0,"index":1704},{"krate":0,"index":1706},{"krate":0,"index":1708},{"krate":0,"index":1710},{"krate":0,"index":1712},{"krate":0,"index":1714},{"krate":0,"index":1716},{"krate":0,"index":1718},{"krate":0,"index":1720},{"krate":0,"index":1722},{"krate":0,"index":1724},{"krate":0,"index":1726},{"krate":0,"index":1728},{"krate":0,"index":1730},{"krate":0,"index":1732},{"krate":0,"index":1734},{"krate":0,"index":1736},{"krate":0,"index":1738},{"krate":0,"index":1740},{"krate":0,"index":1742},{"krate":0,"index":1744},{"krate":0,"index":1746},{"krate":0,"index":1748},{"krate":0,"index":1750},{"krate":0,"index":1752},{"krate":0,"index":1754},{"krate":0,"index":1756},{"krate":0,"index":1758},{"krate":0,"index":1760},{"krate":0,"index":1762},{"krate":0,"index":1764},{"krate":0,"index":1766},{"krate":0,"index":1768},{"krate":0,"index":1770},{"krate":0,"index":1772},{"krate":0,"index":1774},{"krate":0,"index":1776},{"krate":0,"index":1778},{"krate":0,"index":1780},{"krate":0,"index":1782},{"krate":0,"index":1784},{"krate":0,"index":1786},{"krate":0,"index":1788},{"krate":0,"index":1790},{"krate":0,"index":1792},{"krate":0,"index":1794},{"krate":0,"index":1796},{"krate":0,"index":1798},{"krate":0,"index":1800},{"krate":0,"index":1802},{"krate":0,"index":1804},{"krate":0,"index":1806},{"krate":0,"index":1808},{"krate":0,"index":1810},{"krate":0,"index":1812},{"krate":0,"index":1814},{"krate":0,"index":1816},{"krate":0,"index":1818},{"krate":0,"index":1820},{"krate":0,"index":1822},{"krate":0,"index":1824},{"krate":0,"index":1826},{"krate":0,"index":1828},{"krate":0,"index":1830},{"krate":0,"index":1832},{"krate":0,"index":1834},{"krate":0,"index":1836},{"krate":0,"index":1838},{"krate":0,"index":1840},{"krate":0,"index":1842},{"krate":0,"index":1844},{"krate":0,"index":1846},{"krate":0,"index":1848},{"krate":0,"index":1850},{"krate":0,"index":1852},{"krate":0,"index":1854},{"krate":0,"index":1856},{"krate":0,"index":1858},{"krate":0,"index":1860},{"krate":0,"index":1862},{"krate":0,"index":1864},{"krate":0,"index":1866},{"krate":0,"index":1868},{"krate":0,"index":1870},{"krate":0,"index":1872},{"krate":0,"index":1874},{"krate":0,"index":1876},{"krate":0,"index":1878},{"krate":0,"index":1880},{"krate":0,"index":1882},{"krate":0,"index":1884},{"krate":0,"index":1886},{"krate":0,"index":1888},{"krate":0,"index":1890},{"krate":0,"index":1892},{"krate":0,"index":1894},{"krate":0,"index":1896},{"krate":0,"index":1898},{"krate":0,"index":1900},{"krate":0,"index":1902},{"krate":0,"index":1904},{"krate":0,"index":1906},{"krate":0,"index":1908},{"krate":0,"index":1910},{"krate":0,"index":1912},{"krate":0,"index":1914},{"krate":0,"index":1916},{"krate":0,"index":1918},{"krate":0,"index":1920},{"krate":0,"index":1922},{"krate":0,"index":1924},{"krate":0,"index":1926},{"krate":0,"index":1928}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":120},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":24235,"byte_end":24246,"line_start":12,"line_end":12,"column_start":11,"column_end":22},"name":"ToPrimitive","qualname":"::cast::ToPrimitive","value":"ToPrimitive","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134}],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[{"value":"/ A generic trait for converting a value to a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":24169,"byte_end":24224,"line_start":11,"line_end":11,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":24405,"byte_end":24413,"line_start":16,"line_end":16,"column_start":8,"column_end":16},"name":"to_isize","qualname":"::cast::ToPrimitive::to_isize","value":"pub fn to_isize(&Self) -> Option<isize>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `isize`. If the value cannot be\n represented by an `isize`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `isize`. If the value cannot be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":24253,"byte_end":24323,"line_start":13,"line_end":13,"column_start":5,"column_end":75}},{"value":"/ represented by an `isize`, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":24328,"byte_end":24383,"line_start":14,"line_end":14,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":24388,"byte_end":24397,"line_start":15,"line_end":15,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":24660,"byte_end":24665,"line_start":23,"line_end":23,"column_start":8,"column_end":13},"name":"to_i8","qualname":"::cast::ToPrimitive::to_i8","value":"pub fn to_i8(&Self) -> Option<i8>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i8`. If the value cannot be\n represented by an `i8`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i8`. If the value cannot be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":24514,"byte_end":24581,"line_start":20,"line_end":20,"column_start":5,"column_end":72}},{"value":"/ represented by an `i8`, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":24586,"byte_end":24638,"line_start":21,"line_end":21,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":24643,"byte_end":24652,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":24908,"byte_end":24914,"line_start":30,"line_end":30,"column_start":8,"column_end":14},"name":"to_i16","qualname":"::cast::ToPrimitive::to_i16","value":"pub fn to_i16(&Self) -> Option<i16>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i16`. If the value cannot be\n represented by an `i16`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i16`. If the value cannot be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":24760,"byte_end":24828,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ represented by an `i16`, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":24833,"byte_end":24886,"line_start":28,"line_end":28,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":24891,"byte_end":24900,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":25159,"byte_end":25165,"line_start":37,"line_end":37,"column_start":8,"column_end":14},"name":"to_i32","qualname":"::cast::ToPrimitive::to_i32","value":"pub fn to_i32(&Self) -> Option<i32>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i32`. If the value cannot be\n represented by an `i32`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i32`. If the value cannot be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":25011,"byte_end":25079,"line_start":34,"line_end":34,"column_start":5,"column_end":73}},{"value":"/ represented by an `i32`, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":25084,"byte_end":25137,"line_start":35,"line_end":35,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":25142,"byte_end":25151,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":25396,"byte_end":25402,"line_start":43,"line_end":43,"column_start":8,"column_end":14},"name":"to_i64","qualname":"::cast::ToPrimitive::to_i64","value":"pub fn to_i64(&Self) -> Option<i64>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i64`. If the value cannot be\n represented by an `i64`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i64`. If the value cannot be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":25262,"byte_end":25330,"line_start":41,"line_end":41,"column_start":5,"column_end":73}},{"value":"/ represented by an `i64`, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":25335,"byte_end":25388,"line_start":42,"line_end":42,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":25919,"byte_end":25926,"line_start":55,"line_end":55,"column_start":8,"column_end":15},"name":"to_i128","qualname":"::cast::ToPrimitive::to_i128","value":"pub fn to_i128(&Self) -> Option<i128>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i128`. If the value cannot be\n represented by an `i128` (`i64` under the default implementation), then\n `None` is returned.","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i128`. If the value cannot be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":25431,"byte_end":25500,"line_start":45,"line_end":45,"column_start":5,"column_end":74}},{"value":"/ represented by an `i128` (`i64` under the default implementation), then","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":25505,"byte_end":25580,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":25585,"byte_end":25608,"line_start":47,"line_end":47,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":25613,"byte_end":25616,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":25621,"byte_end":25699,"line_start":49,"line_end":49,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":25704,"byte_end":25707,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `to_i64()`. Types implementing","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":25712,"byte_end":25790,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":25795,"byte_end":25876,"line_start":52,"line_end":52,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":25881,"byte_end":25890,"line_start":53,"line_end":53,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":25895,"byte_end":25911,"line_start":54,"line_end":54,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":26151,"byte_end":26159,"line_start":62,"line_end":62,"column_start":8,"column_end":16},"name":"to_usize","qualname":"::cast::ToPrimitive::to_usize","value":"pub fn to_usize(&Self) -> Option<usize>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `usize`. If the value cannot be\n represented by a `usize`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `usize`. If the value cannot be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":26001,"byte_end":26070,"line_start":59,"line_end":59,"column_start":5,"column_end":74}},{"value":"/ represented by a `usize`, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":26075,"byte_end":26129,"line_start":60,"line_end":60,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":26134,"byte_end":26143,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":26404,"byte_end":26409,"line_start":69,"line_end":69,"column_start":8,"column_end":13},"name":"to_u8","qualname":"::cast::ToPrimitive::to_u8","value":"pub fn to_u8(&Self) -> Option<u8>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `u8`. If the value cannot be\n represented by a `u8`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `u8`. If the value cannot be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":26260,"byte_end":26326,"line_start":66,"line_end":66,"column_start":5,"column_end":71}},{"value":"/ represented by a `u8`, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":26331,"byte_end":26382,"line_start":67,"line_end":67,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":26387,"byte_end":26396,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":26650,"byte_end":26656,"line_start":76,"line_end":76,"column_start":8,"column_end":14},"name":"to_u16","qualname":"::cast::ToPrimitive::to_u16","value":"pub fn to_u16(&Self) -> Option<u16>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `u16`. If the value cannot be\n represented by a `u16`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `u16`. If the value cannot be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":26504,"byte_end":26571,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/ represented by a `u16`, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":26576,"byte_end":26628,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":26633,"byte_end":26642,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":26899,"byte_end":26905,"line_start":83,"line_end":83,"column_start":8,"column_end":14},"name":"to_u32","qualname":"::cast::ToPrimitive::to_u32","value":"pub fn to_u32(&Self) -> Option<u32>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `u32`. If the value cannot be\n represented by a `u32`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `u32`. If the value cannot be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":26753,"byte_end":26820,"line_start":80,"line_end":80,"column_start":5,"column_end":72}},{"value":"/ represented by a `u32`, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":26825,"byte_end":26877,"line_start":81,"line_end":81,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":26882,"byte_end":26891,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":27134,"byte_end":27140,"line_start":89,"line_end":89,"column_start":8,"column_end":14},"name":"to_u64","qualname":"::cast::ToPrimitive::to_u64","value":"pub fn to_u64(&Self) -> Option<u64>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `u64`. If the value cannot be\n represented by a `u64`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `u64`. If the value cannot be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":27002,"byte_end":27069,"line_start":87,"line_end":87,"column_start":5,"column_end":72}},{"value":"/ represented by a `u64`, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":27074,"byte_end":27126,"line_start":88,"line_end":88,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":27656,"byte_end":27663,"line_start":101,"line_end":101,"column_start":8,"column_end":15},"name":"to_u128","qualname":"::cast::ToPrimitive::to_u128","value":"pub fn to_u128(&Self) -> Option<u128>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `u128`. If the value cannot be\n represented by a `u128` (`u64` under the default implementation), then\n `None` is returned.","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `u128`. If the value cannot be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":27169,"byte_end":27237,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ represented by a `u128` (`u64` under the default implementation), then","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":27242,"byte_end":27316,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":27321,"byte_end":27344,"line_start":93,"line_end":93,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":27349,"byte_end":27352,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":27357,"byte_end":27435,"line_start":95,"line_end":95,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":27440,"byte_end":27443,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `to_u64()`.  Types implementing","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":27448,"byte_end":27527,"line_start":97,"line_end":97,"column_start":5,"column_end":84}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":27532,"byte_end":27613,"line_start":98,"line_end":98,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":27618,"byte_end":27627,"line_start":99,"line_end":99,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":27632,"byte_end":27648,"line_start":100,"line_end":100,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":27886,"byte_end":27892,"line_start":108,"line_end":108,"column_start":8,"column_end":14},"name":"to_f32","qualname":"::cast::ToPrimitive::to_f32","value":"pub fn to_f32(&Self) -> Option<f32>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `f32`. If the value cannot be\n represented by an `f32`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `f32`. If the value cannot be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":27738,"byte_end":27806,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ represented by an `f32`, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":27811,"byte_end":27864,"line_start":106,"line_end":106,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":27869,"byte_end":27878,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":28137,"byte_end":28143,"line_start":115,"line_end":115,"column_start":8,"column_end":14},"name":"to_f64","qualname":"::cast::ToPrimitive::to_f64","value":"pub fn to_f64(&Self) -> Option<f64>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `f64`. If the value cannot be\n represented by an `f64`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `f64`. If the value cannot be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":27989,"byte_end":28057,"line_start":112,"line_end":112,"column_start":5,"column_end":73}},{"value":"/ represented by an `f64`, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":28062,"byte_end":28115,"line_start":113,"line_end":113,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":28120,"byte_end":28129,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":145},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":36541,"byte_end":36554,"line_start":379,"line_end":379,"column_start":11,"column_end":24},"name":"FromPrimitive","qualname":"::cast::FromPrimitive","value":"FromPrimitive: Sized","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159}],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[{"value":"/ A generic trait for converting a number to a value.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":36475,"byte_end":36530,"line_start":378,"line_end":378,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":36737,"byte_end":36747,"line_start":383,"line_end":383,"column_start":8,"column_end":18},"name":"from_isize","qualname":"::cast::FromPrimitive::from_isize","value":"pub fn from_isize(isize) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts an `isize` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `isize` to return an optional value of this type. If the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":36568,"byte_end":36640,"line_start":380,"line_end":380,"column_start":5,"column_end":77}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":36645,"byte_end":36715,"line_start":381,"line_end":381,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":36720,"byte_end":36729,"line_start":382,"line_end":382,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":37006,"byte_end":37013,"line_start":390,"line_end":390,"column_start":8,"column_end":15},"name":"from_i8","qualname":"::cast::FromPrimitive::from_i8","value":"pub fn from_i8(i8) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts an `i8` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `i8` to return an optional value of this type. If the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":36840,"byte_end":36909,"line_start":387,"line_end":387,"column_start":5,"column_end":74}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":36914,"byte_end":36984,"line_start":388,"line_end":388,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":36989,"byte_end":36998,"line_start":389,"line_end":389,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":37264,"byte_end":37272,"line_start":397,"line_end":397,"column_start":8,"column_end":16},"name":"from_i16","qualname":"::cast::FromPrimitive::from_i16","value":"pub fn from_i16(i16) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts an `i16` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `i16` to return an optional value of this type. If the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":37097,"byte_end":37167,"line_start":394,"line_end":394,"column_start":5,"column_end":75}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":37172,"byte_end":37242,"line_start":395,"line_end":395,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":37247,"byte_end":37256,"line_start":396,"line_end":396,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":37524,"byte_end":37532,"line_start":404,"line_end":404,"column_start":8,"column_end":16},"name":"from_i32","qualname":"::cast::FromPrimitive::from_i32","value":"pub fn from_i32(i32) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts an `i32` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `i32` to return an optional value of this type. If the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":37357,"byte_end":37427,"line_start":401,"line_end":401,"column_start":5,"column_end":75}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":37432,"byte_end":37502,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":37507,"byte_end":37516,"line_start":403,"line_end":403,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":37770,"byte_end":37778,"line_start":410,"line_end":410,"column_start":8,"column_end":16},"name":"from_i64","qualname":"::cast::FromPrimitive::from_i64","value":"pub fn from_i64(i64) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts an `i64` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `i64` to return an optional value of this type. If the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":37617,"byte_end":37687,"line_start":408,"line_end":408,"column_start":5,"column_end":75}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":37692,"byte_end":37762,"line_start":409,"line_end":409,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":38268,"byte_end":38277,"line_start":421,"line_end":421,"column_start":8,"column_end":17},"name":"from_i128","qualname":"::cast::FromPrimitive::from_i128","value":"pub fn from_i128(i128) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts an `i128` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.","sig":null,"attributes":[{"value":"/ Converts an `i128` to return an optional value of this type. If the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":37809,"byte_end":37880,"line_start":412,"line_end":412,"column_start":5,"column_end":76}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":37885,"byte_end":37955,"line_start":413,"line_end":413,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":37960,"byte_end":37963,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":37968,"byte_end":38046,"line_start":415,"line_end":415,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":38051,"byte_end":38054,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `from_i64()`. Types implementing","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":38059,"byte_end":38139,"line_start":417,"line_end":417,"column_start":5,"column_end":85}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":38144,"byte_end":38225,"line_start":418,"line_end":418,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":38230,"byte_end":38239,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":38244,"byte_end":38260,"line_start":420,"line_end":420,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":38537,"byte_end":38547,"line_start":428,"line_end":428,"column_start":8,"column_end":18},"name":"from_usize","qualname":"::cast::FromPrimitive::from_usize","value":"pub fn from_usize(usize) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts a `usize` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts a `usize` to return an optional value of this type. If the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":38369,"byte_end":38440,"line_start":425,"line_end":425,"column_start":5,"column_end":76}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":38445,"byte_end":38515,"line_start":426,"line_end":426,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":38520,"byte_end":38529,"line_start":427,"line_end":427,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":38806,"byte_end":38813,"line_start":435,"line_end":435,"column_start":8,"column_end":15},"name":"from_u8","qualname":"::cast::FromPrimitive::from_u8","value":"pub fn from_u8(u8) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts an `u8` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `u8` to return an optional value of this type. If the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":38640,"byte_end":38709,"line_start":432,"line_end":432,"column_start":5,"column_end":74}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":38714,"byte_end":38784,"line_start":433,"line_end":433,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":38789,"byte_end":38798,"line_start":434,"line_end":434,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":39064,"byte_end":39072,"line_start":442,"line_end":442,"column_start":8,"column_end":16},"name":"from_u16","qualname":"::cast::FromPrimitive::from_u16","value":"pub fn from_u16(u16) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts an `u16` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `u16` to return an optional value of this type. If the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":38897,"byte_end":38967,"line_start":439,"line_end":439,"column_start":5,"column_end":75}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":38972,"byte_end":39042,"line_start":440,"line_end":440,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":39047,"byte_end":39056,"line_start":441,"line_end":441,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":39324,"byte_end":39332,"line_start":449,"line_end":449,"column_start":8,"column_end":16},"name":"from_u32","qualname":"::cast::FromPrimitive::from_u32","value":"pub fn from_u32(u32) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts an `u32` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `u32` to return an optional value of this type. If the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":39157,"byte_end":39227,"line_start":446,"line_end":446,"column_start":5,"column_end":75}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":39232,"byte_end":39302,"line_start":447,"line_end":447,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":39307,"byte_end":39316,"line_start":448,"line_end":448,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":39570,"byte_end":39578,"line_start":455,"line_end":455,"column_start":8,"column_end":16},"name":"from_u64","qualname":"::cast::FromPrimitive::from_u64","value":"pub fn from_u64(u64) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts an `u64` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `u64` to return an optional value of this type. If the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":39417,"byte_end":39487,"line_start":453,"line_end":453,"column_start":5,"column_end":75}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":39492,"byte_end":39562,"line_start":454,"line_end":454,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":40068,"byte_end":40077,"line_start":466,"line_end":466,"column_start":8,"column_end":17},"name":"from_u128","qualname":"::cast::FromPrimitive::from_u128","value":"pub fn from_u128(u128) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts an `u128` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.","sig":null,"attributes":[{"value":"/ Converts an `u128` to return an optional value of this type. If the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":39609,"byte_end":39680,"line_start":457,"line_end":457,"column_start":5,"column_end":76}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":39685,"byte_end":39755,"line_start":458,"line_end":458,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":39760,"byte_end":39763,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":39768,"byte_end":39846,"line_start":460,"line_end":460,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":39851,"byte_end":39854,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `from_u64()`. Types implementing","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":39859,"byte_end":39939,"line_start":462,"line_end":462,"column_start":5,"column_end":85}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":39944,"byte_end":40025,"line_start":463,"line_end":463,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":40030,"byte_end":40039,"line_start":464,"line_end":464,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":40044,"byte_end":40060,"line_start":465,"line_end":465,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":40335,"byte_end":40343,"line_start":473,"line_end":473,"column_start":8,"column_end":16},"name":"from_f32","qualname":"::cast::FromPrimitive::from_f32","value":"pub fn from_f32(f32) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts a `f32` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts a `f32` to return an optional value of this type. If the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":40169,"byte_end":40238,"line_start":470,"line_end":470,"column_start":5,"column_end":74}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":40243,"byte_end":40313,"line_start":471,"line_end":471,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":40318,"byte_end":40327,"line_start":472,"line_end":472,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":40594,"byte_end":40602,"line_start":480,"line_end":480,"column_start":8,"column_end":16},"name":"from_f64","qualname":"::cast::FromPrimitive::from_f64","value":"pub fn from_f64(f64) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts a `f64` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts a `f64` to return an optional value of this type. If the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":40428,"byte_end":40497,"line_start":477,"line_end":477,"column_start":5,"column_end":74}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":40502,"byte_end":40572,"line_start":478,"line_end":478,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":40577,"byte_end":40586,"line_start":479,"line_end":479,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":167},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":44848,"byte_end":44852,"line_start":650,"line_end":650,"column_start":8,"column_end":12},"name":"cast","qualname":"::cast::cast","value":"pub fn cast<T: NumCast, U: NumCast>(T) -> Option<U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one machine scalar to another.","sig":null,"attributes":[{"value":"/ Cast from one machine scalar to another.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":44635,"byte_end":44679,"line_start":639,"line_end":639,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":44680,"byte_end":44683,"line_start":640,"line_end":640,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":44684,"byte_end":44698,"line_start":641,"line_end":641,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":44699,"byte_end":44702,"line_start":642,"line_end":642,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":44703,"byte_end":44710,"line_start":643,"line_end":643,"column_start":1,"column_end":8}},{"value":"/ # use num_traits as num;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":44711,"byte_end":44739,"line_start":644,"line_end":644,"column_start":1,"column_end":29}},{"value":"/ let twenty: f32 = num::cast(0x14).unwrap();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":44740,"byte_end":44787,"line_start":645,"line_end":645,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(twenty, 20f32);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":44788,"byte_end":44818,"line_start":646,"line_end":646,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":44819,"byte_end":44826,"line_start":647,"line_end":647,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":44827,"byte_end":44830,"line_start":648,"line_end":648,"column_start":1,"column_end":4}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":44831,"byte_end":44840,"line_start":649,"line_end":649,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":170},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":44986,"byte_end":44993,"line_start":655,"line_end":655,"column_start":11,"column_end":18},"name":"NumCast","qualname":"::cast::NumCast","value":"NumCast: Sized + ToPrimitive","parent":null,"children":[{"krate":0,"index":171}],"decl_id":null,"docs":" An interface for casting between machine scalars.\n","sig":null,"attributes":[{"value":"/ An interface for casting between machine scalars.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":44922,"byte_end":44975,"line_start":654,"line_end":654,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":45239,"byte_end":45243,"line_start":659,"line_end":659,"column_start":8,"column_end":12},"name":"from","qualname":"::cast::NumCast::from","value":"pub fn from<T: ToPrimitive>(T) -> Option<Self>","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":" Creates a number from another value that can be converted into\n a primitive via the `ToPrimitive` trait. If the source value cannot be\n represented by the target type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Creates a number from another value that can be converted into","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":45021,"byte_end":45087,"line_start":656,"line_end":656,"column_start":5,"column_end":71}},{"value":"/ a primitive via the `ToPrimitive` trait. If the source value cannot be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":45092,"byte_end":45166,"line_start":657,"line_end":657,"column_start":5,"column_end":79}},{"value":"/ represented by the target type, then `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":45171,"byte_end":45231,"line_start":658,"line_end":658,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":178},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":47379,"byte_end":47390,"line_start":734,"line_end":734,"column_start":11,"column_end":22},"name":"AsPrimitive","qualname":"::cast::AsPrimitive","value":"AsPrimitive<T>: 'static + Copy","parent":null,"children":[{"krate":0,"index":180}],"decl_id":null,"docs":" A generic interface for casting between machine scalars with the\n `as` operator, which admits narrowing and precision loss.\n Implementers of this trait `AsPrimitive` should behave like a primitive\n numeric type (e.g. a newtype around another primitive), and the\n intended conversion must never fail.","sig":null,"attributes":[{"value":"/ A generic interface for casting between machine scalars with the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":46271,"byte_end":46339,"line_start":699,"line_end":699,"column_start":1,"column_end":69}},{"value":"/ `as` operator, which admits narrowing and precision loss.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":46340,"byte_end":46401,"line_start":700,"line_end":700,"column_start":1,"column_end":62}},{"value":"/ Implementers of this trait `AsPrimitive` should behave like a primitive","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":46402,"byte_end":46477,"line_start":701,"line_end":701,"column_start":1,"column_end":76}},{"value":"/ numeric type (e.g. a newtype around another primitive), and the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":46478,"byte_end":46545,"line_start":702,"line_end":702,"column_start":1,"column_end":68}},{"value":"/ intended conversion must never fail.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":46546,"byte_end":46586,"line_start":703,"line_end":703,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":46587,"byte_end":46590,"line_start":704,"line_end":704,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":46591,"byte_end":46605,"line_start":705,"line_end":705,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":46606,"byte_end":46609,"line_start":706,"line_end":706,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":46610,"byte_end":46617,"line_start":707,"line_end":707,"column_start":1,"column_end":8}},{"value":"/ # use num_traits::AsPrimitive;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":46618,"byte_end":46652,"line_start":708,"line_end":708,"column_start":1,"column_end":35}},{"value":"/ let three: i32 = (3.14159265f32).as_();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":46653,"byte_end":46696,"line_start":709,"line_end":709,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(three, 3);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":46697,"byte_end":46722,"line_start":710,"line_end":710,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":46723,"byte_end":46730,"line_start":711,"line_end":711,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":46731,"byte_end":46734,"line_start":712,"line_end":712,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":46735,"byte_end":46747,"line_start":713,"line_end":713,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":46748,"byte_end":46751,"line_start":714,"line_end":714,"column_start":1,"column_end":4}},{"value":"/ Currently, some uses of the `as` operator are not entirely safe.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":46752,"byte_end":46820,"line_start":715,"line_end":715,"column_start":1,"column_end":69}},{"value":"/ In particular, it is undefined behavior if:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":46821,"byte_end":46868,"line_start":716,"line_end":716,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":46869,"byte_end":46872,"line_start":717,"line_end":717,"column_start":1,"column_end":4}},{"value":"/ - A truncated floating point value cannot fit in the target integer","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":46873,"byte_end":46944,"line_start":718,"line_end":718,"column_start":1,"column_end":72}},{"value":"/   type ([#10184](https://github.com/rust-lang/rust/issues/10184));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":46945,"byte_end":47015,"line_start":719,"line_end":719,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":47016,"byte_end":47019,"line_start":720,"line_end":720,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":47020,"byte_end":47033,"line_start":721,"line_end":721,"column_start":1,"column_end":14}},{"value":"/ # use num_traits::AsPrimitive;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":47034,"byte_end":47068,"line_start":722,"line_end":722,"column_start":1,"column_end":35}},{"value":"/ let x: u8 = (1.04E+17).as_(); // UB","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":47069,"byte_end":47108,"line_start":723,"line_end":723,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":47109,"byte_end":47116,"line_start":724,"line_end":724,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":47117,"byte_end":47120,"line_start":725,"line_end":725,"column_start":1,"column_end":4}},{"value":"/ - Or a floating point value does not fit in another floating","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":47121,"byte_end":47185,"line_start":726,"line_end":726,"column_start":1,"column_end":65}},{"value":"/   point type ([#15536](https://github.com/rust-lang/rust/issues/15536)).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":47186,"byte_end":47262,"line_start":727,"line_end":727,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":47263,"byte_end":47266,"line_start":728,"line_end":728,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":47267,"byte_end":47280,"line_start":729,"line_end":729,"column_start":1,"column_end":14}},{"value":"/ # use num_traits::AsPrimitive;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":47281,"byte_end":47315,"line_start":730,"line_end":730,"column_start":1,"column_end":35}},{"value":"/ let x: f32 = (1e300f64).as_(); // UB","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":47316,"byte_end":47356,"line_start":731,"line_end":731,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":47357,"byte_end":47364,"line_start":732,"line_end":732,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":47365,"byte_end":47368,"line_start":733,"line_end":733,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":47509,"byte_end":47512,"line_start":739,"line_end":739,"column_start":8,"column_end":11},"name":"as_","qualname":"::cast::AsPrimitive::as_","value":"pub fn as_(Self) -> T","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" Convert a value to another, using the `as` operator.\n","sig":null,"attributes":[{"value":"/ Convert a value to another, using the `as` operator.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":47445,"byte_end":47501,"line_start":738,"line_end":738,"column_start":5,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":182},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"float","qualname":"::float","value":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":1986},{"krate":0,"index":2043},{"krate":0,"index":2100},{"krate":0,"index":2117},{"krate":0,"index":2134}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":192},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49226,"byte_end":49235,"line_start":16,"line_end":16,"column_start":11,"column_end":20},"name":"FloatCore","qualname":"::float::FloatCore","value":"FloatCore: Num + NumCast + Neg<Output = Self> + PartialOrd + Copy","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221}],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[{"value":"/ Generic trait for floating point numbers that works with `no_std`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49084,"byte_end":49154,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49155,"byte_end":49158,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This trait implements a subset of the `Float` trait.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49159,"byte_end":49215,"line_start":15,"line_end":15,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49632,"byte_end":49640,"line_start":32,"line_end":32,"column_start":8,"column_end":16},"name":"infinity","qualname":"::float::FloatCore::infinity","value":"pub fn infinity() -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns positive infinity.","sig":null,"attributes":[{"value":"/ Returns positive infinity.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49298,"byte_end":49328,"line_start":17,"line_end":17,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49333,"byte_end":49336,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49341,"byte_end":49355,"line_start":19,"line_end":19,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49360,"byte_end":49363,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49368,"byte_end":49375,"line_start":21,"line_end":21,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49380,"byte_end":49417,"line_start":22,"line_end":22,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49422,"byte_end":49446,"line_start":23,"line_end":23,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49451,"byte_end":49454,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49459,"byte_end":49493,"line_start":25,"line_end":25,"column_start":5,"column_end":39}},{"value":"/     assert!(T::infinity() == x);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49498,"byte_end":49534,"line_start":26,"line_end":26,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49539,"byte_end":49544,"line_start":27,"line_end":27,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49549,"byte_end":49552,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49557,"byte_end":49582,"line_start":29,"line_end":29,"column_start":5,"column_end":30}},{"value":"/ check(f64::INFINITY);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49587,"byte_end":49612,"line_start":30,"line_end":30,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49617,"byte_end":49624,"line_start":31,"line_end":31,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50003,"byte_end":50015,"line_start":49,"line_end":49,"column_start":8,"column_end":20},"name":"neg_infinity","qualname":"::float::FloatCore::neg_infinity","value":"pub fn neg_infinity() -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns negative infinity.","sig":null,"attributes":[{"value":"/ Returns negative infinity.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49657,"byte_end":49687,"line_start":34,"line_end":34,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49692,"byte_end":49695,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49700,"byte_end":49714,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49719,"byte_end":49722,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49727,"byte_end":49734,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49739,"byte_end":49776,"line_start":39,"line_end":39,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49781,"byte_end":49805,"line_start":40,"line_end":40,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49810,"byte_end":49813,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49818,"byte_end":49852,"line_start":42,"line_end":42,"column_start":5,"column_end":39}},{"value":"/     assert!(T::neg_infinity() == x);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49857,"byte_end":49897,"line_start":43,"line_end":43,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49902,"byte_end":49907,"line_start":44,"line_end":44,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49912,"byte_end":49915,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ check(f32::NEG_INFINITY);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49920,"byte_end":49949,"line_start":46,"line_end":46,"column_start":5,"column_end":34}},{"value":"/ check(f64::NEG_INFINITY);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49954,"byte_end":49983,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49988,"byte_end":49995,"line_start":48,"line_end":48,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50325,"byte_end":50328,"line_start":66,"line_end":66,"column_start":8,"column_end":11},"name":"nan","qualname":"::float::FloatCore::nan","value":"pub fn nan() -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns NaN.","sig":null,"attributes":[{"value":"/ Returns NaN.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50032,"byte_end":50048,"line_start":51,"line_end":51,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50053,"byte_end":50056,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50061,"byte_end":50075,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50080,"byte_end":50083,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50088,"byte_end":50095,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50100,"byte_end":50137,"line_start":56,"line_end":56,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50142,"byte_end":50145,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>() {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50150,"byte_end":50180,"line_start":58,"line_end":58,"column_start":5,"column_end":35}},{"value":"/     let n = T::nan();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50185,"byte_end":50210,"line_start":59,"line_end":59,"column_start":5,"column_end":30}},{"value":"/     assert!(n != n);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50215,"byte_end":50239,"line_start":60,"line_end":60,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50244,"byte_end":50249,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50254,"byte_end":50257,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ check::<f32>();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50262,"byte_end":50281,"line_start":63,"line_end":63,"column_start":5,"column_end":24}},{"value":"/ check::<f64>();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50286,"byte_end":50305,"line_start":64,"line_end":64,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50310,"byte_end":50317,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50744,"byte_end":50752,"line_start":85,"line_end":85,"column_start":8,"column_end":16},"name":"neg_zero","qualname":"::float::FloatCore::neg_zero","value":"pub fn neg_zero() -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns `-0.0`.","sig":null,"attributes":[{"value":"/ Returns `-0.0`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50345,"byte_end":50364,"line_start":68,"line_end":68,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50369,"byte_end":50372,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50377,"byte_end":50391,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50396,"byte_end":50399,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50404,"byte_end":50411,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50416,"byte_end":50453,"line_start":73,"line_end":73,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50458,"byte_end":50482,"line_start":74,"line_end":74,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50487,"byte_end":50490,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(n: T) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50495,"byte_end":50529,"line_start":76,"line_end":76,"column_start":5,"column_end":39}},{"value":"/     let z = T::neg_zero();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50534,"byte_end":50564,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/     assert!(z.is_zero());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50569,"byte_end":50598,"line_start":78,"line_end":78,"column_start":5,"column_end":34}},{"value":"/     assert!(T::one() / z == n);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50603,"byte_end":50638,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50643,"byte_end":50648,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50653,"byte_end":50656,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ check(f32::NEG_INFINITY);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50661,"byte_end":50690,"line_start":82,"line_end":82,"column_start":5,"column_end":34}},{"value":"/ check(f64::NEG_INFINITY);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50695,"byte_end":50724,"line_start":83,"line_end":83,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50729,"byte_end":50736,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51131,"byte_end":51140,"line_start":102,"line_end":102,"column_start":8,"column_end":17},"name":"min_value","qualname":"::float::FloatCore::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the smallest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest finite value that this type can represent.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50769,"byte_end":50836,"line_start":87,"line_end":87,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50841,"byte_end":50844,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50849,"byte_end":50863,"line_start":89,"line_end":89,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50868,"byte_end":50871,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50876,"byte_end":50883,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50888,"byte_end":50925,"line_start":92,"line_end":92,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50930,"byte_end":50954,"line_start":93,"line_end":93,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50959,"byte_end":50962,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":50967,"byte_end":51001,"line_start":95,"line_end":95,"column_start":5,"column_end":39}},{"value":"/     assert!(T::min_value() == x);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51006,"byte_end":51043,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51048,"byte_end":51053,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51058,"byte_end":51061,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ check(f32::MIN);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51066,"byte_end":51086,"line_start":99,"line_end":99,"column_start":5,"column_end":25}},{"value":"/ check(f64::MIN);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51091,"byte_end":51111,"line_start":100,"line_end":100,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51116,"byte_end":51123,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51560,"byte_end":51578,"line_start":119,"line_end":119,"column_start":8,"column_end":26},"name":"min_positive_value","qualname":"::float::FloatCore::min_positive_value","value":"pub fn min_positive_value() -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the smallest positive, normalized value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest positive, normalized value that this type can represent.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51157,"byte_end":51238,"line_start":104,"line_end":104,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51243,"byte_end":51246,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51251,"byte_end":51265,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51270,"byte_end":51273,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51278,"byte_end":51285,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51290,"byte_end":51327,"line_start":109,"line_end":109,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51332,"byte_end":51356,"line_start":110,"line_end":110,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51361,"byte_end":51364,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51369,"byte_end":51403,"line_start":112,"line_end":112,"column_start":5,"column_end":39}},{"value":"/     assert!(T::min_positive_value() == x);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51408,"byte_end":51454,"line_start":113,"line_end":113,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51459,"byte_end":51464,"line_start":114,"line_end":114,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51469,"byte_end":51472,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ check(f32::MIN_POSITIVE);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51477,"byte_end":51506,"line_start":116,"line_end":116,"column_start":5,"column_end":34}},{"value":"/ check(f64::MIN_POSITIVE);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51511,"byte_end":51540,"line_start":117,"line_end":117,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51545,"byte_end":51552,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51940,"byte_end":51947,"line_start":136,"line_end":136,"column_start":8,"column_end":15},"name":"epsilon","qualname":"::float::FloatCore::epsilon","value":"pub fn epsilon() -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns epsilon, a small positive value.","sig":null,"attributes":[{"value":"/ Returns epsilon, a small positive value.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51595,"byte_end":51639,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51644,"byte_end":51647,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51652,"byte_end":51666,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51671,"byte_end":51674,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51679,"byte_end":51686,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51691,"byte_end":51728,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51733,"byte_end":51757,"line_start":127,"line_end":127,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51762,"byte_end":51765,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51770,"byte_end":51804,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/     assert!(T::epsilon() == x);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51809,"byte_end":51844,"line_start":130,"line_end":130,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51849,"byte_end":51854,"line_start":131,"line_end":131,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51859,"byte_end":51862,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ check(f32::EPSILON);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51867,"byte_end":51891,"line_start":133,"line_end":133,"column_start":5,"column_end":29}},{"value":"/ check(f64::EPSILON);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51896,"byte_end":51920,"line_start":134,"line_end":134,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51925,"byte_end":51932,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52325,"byte_end":52334,"line_start":153,"line_end":153,"column_start":8,"column_end":17},"name":"max_value","qualname":"::float::FloatCore::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the largest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the largest finite value that this type can represent.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":51964,"byte_end":52030,"line_start":138,"line_end":138,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52035,"byte_end":52038,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52043,"byte_end":52057,"line_start":140,"line_end":140,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52062,"byte_end":52065,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52070,"byte_end":52077,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52082,"byte_end":52119,"line_start":143,"line_end":143,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52124,"byte_end":52148,"line_start":144,"line_end":144,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52153,"byte_end":52156,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52161,"byte_end":52195,"line_start":146,"line_end":146,"column_start":5,"column_end":39}},{"value":"/     assert!(T::max_value() == x);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52200,"byte_end":52237,"line_start":147,"line_end":147,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52242,"byte_end":52247,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52252,"byte_end":52255,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ check(f32::MAX);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52260,"byte_end":52280,"line_start":150,"line_end":150,"column_start":5,"column_end":25}},{"value":"/ check(f64::MAX);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52285,"byte_end":52305,"line_start":151,"line_end":151,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52310,"byte_end":52317,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52784,"byte_end":52790,"line_start":173,"line_end":173,"column_start":8,"column_end":14},"name":"is_nan","qualname":"::float::FloatCore::is_nan","value":"pub fn is_nan(Self) -> bool","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns `true` if the number is NaN.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is NaN.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52351,"byte_end":52391,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52396,"byte_end":52399,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52404,"byte_end":52418,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52423,"byte_end":52426,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52431,"byte_end":52438,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52443,"byte_end":52480,"line_start":160,"line_end":160,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52485,"byte_end":52509,"line_start":161,"line_end":161,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52514,"byte_end":52517,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52522,"byte_end":52565,"line_start":163,"line_end":163,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_nan() == p);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52570,"byte_end":52603,"line_start":164,"line_end":164,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52608,"byte_end":52613,"line_start":165,"line_end":165,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52618,"byte_end":52621,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ check(f32::NAN, true);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52626,"byte_end":52652,"line_start":167,"line_end":167,"column_start":5,"column_end":31}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52657,"byte_end":52689,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/ check(f64::NAN, true);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52694,"byte_end":52720,"line_start":169,"line_end":169,"column_start":5,"column_end":31}},{"value":"/ check(0.0f64, false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52725,"byte_end":52750,"line_start":170,"line_end":170,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52755,"byte_end":52762,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52767,"byte_end":52776,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53367,"byte_end":53378,"line_start":197,"line_end":197,"column_start":8,"column_end":19},"name":"is_infinite","qualname":"::float::FloatCore::is_infinite","value":"pub fn is_infinite(Self) -> bool","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns `true` if the number is infinite.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is infinite.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52839,"byte_end":52884,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52889,"byte_end":52892,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52897,"byte_end":52911,"line_start":179,"line_end":179,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52916,"byte_end":52919,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52924,"byte_end":52931,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52936,"byte_end":52973,"line_start":182,"line_end":182,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":52978,"byte_end":53002,"line_start":183,"line_end":183,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53007,"byte_end":53010,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53015,"byte_end":53058,"line_start":185,"line_end":185,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_infinite() == p);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53063,"byte_end":53101,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53106,"byte_end":53111,"line_start":187,"line_end":187,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53116,"byte_end":53119,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, true);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53124,"byte_end":53155,"line_start":189,"line_end":189,"column_start":5,"column_end":36}},{"value":"/ check(f32::NEG_INFINITY, true);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53160,"byte_end":53195,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/ check(f32::NAN, false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53200,"byte_end":53227,"line_start":191,"line_end":191,"column_start":5,"column_end":32}},{"value":"/ check(f64::INFINITY, true);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53232,"byte_end":53263,"line_start":192,"line_end":192,"column_start":5,"column_end":36}},{"value":"/ check(f64::NEG_INFINITY, true);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53268,"byte_end":53303,"line_start":193,"line_end":193,"column_start":5,"column_end":40}},{"value":"/ check(0.0f64, false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53308,"byte_end":53333,"line_start":194,"line_end":194,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53338,"byte_end":53345,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53350,"byte_end":53359,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53979,"byte_end":53988,"line_start":220,"line_end":220,"column_start":8,"column_end":17},"name":"is_finite","qualname":"::float::FloatCore::is_finite","value":"pub fn is_finite(Self) -> bool","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns `true` if the number is neither infinite or NaN.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is neither infinite or NaN.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53471,"byte_end":53531,"line_start":201,"line_end":201,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53536,"byte_end":53539,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53544,"byte_end":53558,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53563,"byte_end":53566,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53571,"byte_end":53578,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53583,"byte_end":53620,"line_start":206,"line_end":206,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53625,"byte_end":53649,"line_start":207,"line_end":207,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53654,"byte_end":53657,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53662,"byte_end":53705,"line_start":209,"line_end":209,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_finite() == p);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53710,"byte_end":53746,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53751,"byte_end":53756,"line_start":211,"line_end":211,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53761,"byte_end":53764,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53769,"byte_end":53801,"line_start":213,"line_end":213,"column_start":5,"column_end":37}},{"value":"/ check(f32::MAX, true);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53806,"byte_end":53832,"line_start":214,"line_end":214,"column_start":5,"column_end":31}},{"value":"/ check(f64::NEG_INFINITY, false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53837,"byte_end":53873,"line_start":215,"line_end":215,"column_start":5,"column_end":41}},{"value":"/ check(f64::MIN_POSITIVE, true);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53878,"byte_end":53913,"line_start":216,"line_end":216,"column_start":5,"column_end":40}},{"value":"/ check(f64::NAN, false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53918,"byte_end":53945,"line_start":217,"line_end":217,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53950,"byte_end":53957,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":53962,"byte_end":53971,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54586,"byte_end":54595,"line_start":243,"line_end":243,"column_start":8,"column_end":17},"name":"is_normal","qualname":"::float::FloatCore::is_normal","value":"pub fn is_normal(Self) -> bool","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns `true` if the number is neither zero, infinite, subnormal or NaN.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is neither zero, infinite, subnormal or NaN.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54063,"byte_end":54140,"line_start":224,"line_end":224,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54145,"byte_end":54148,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54153,"byte_end":54167,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54172,"byte_end":54175,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54180,"byte_end":54187,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54192,"byte_end":54229,"line_start":229,"line_end":229,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54234,"byte_end":54258,"line_start":230,"line_end":230,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54263,"byte_end":54266,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54271,"byte_end":54314,"line_start":232,"line_end":232,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_normal() == p);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54319,"byte_end":54355,"line_start":233,"line_end":233,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54360,"byte_end":54365,"line_start":234,"line_end":234,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54370,"byte_end":54373,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54378,"byte_end":54410,"line_start":236,"line_end":236,"column_start":5,"column_end":37}},{"value":"/ check(f32::MAX, true);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54415,"byte_end":54441,"line_start":237,"line_end":237,"column_start":5,"column_end":31}},{"value":"/ check(f64::NEG_INFINITY, false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54446,"byte_end":54482,"line_start":238,"line_end":238,"column_start":5,"column_end":41}},{"value":"/ check(f64::MIN_POSITIVE, true);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54487,"byte_end":54522,"line_start":239,"line_end":239,"column_start":5,"column_end":40}},{"value":"/ check(0.0f64, false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54527,"byte_end":54552,"line_start":240,"line_end":240,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54557,"byte_end":54564,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54569,"byte_end":54578,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55434,"byte_end":55442,"line_start":269,"line_end":269,"column_start":8,"column_end":16},"name":"classify","qualname":"::float::FloatCore::classify","value":"pub fn classify(Self) -> FpCategory","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the floating point category of the number. If only one property\n is going to be tested, it is generally faster to use the specific\n predicate instead.","sig":null,"attributes":[{"value":"/ Returns the floating point category of the number. If only one property","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54669,"byte_end":54744,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ is going to be tested, it is generally faster to use the specific","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54749,"byte_end":54818,"line_start":248,"line_end":248,"column_start":5,"column_end":74}},{"value":"/ predicate instead.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54823,"byte_end":54845,"line_start":249,"line_end":249,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54850,"byte_end":54853,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54858,"byte_end":54872,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54877,"byte_end":54880,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54885,"byte_end":54892,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54897,"byte_end":54934,"line_start":254,"line_end":254,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54939,"byte_end":54963,"line_start":255,"line_end":255,"column_start":5,"column_end":29}},{"value":"/ use std::num::FpCategory;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":54968,"byte_end":54997,"line_start":256,"line_end":256,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55002,"byte_end":55005,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, c: FpCategory) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55010,"byte_end":55059,"line_start":258,"line_end":258,"column_start":5,"column_end":54}},{"value":"/     assert!(x.classify() == c);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55064,"byte_end":55099,"line_start":259,"line_end":259,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55104,"byte_end":55109,"line_start":260,"line_end":260,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55114,"byte_end":55117,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, FpCategory::Infinite);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55122,"byte_end":55169,"line_start":262,"line_end":262,"column_start":5,"column_end":52}},{"value":"/ check(f32::MAX, FpCategory::Normal);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55174,"byte_end":55214,"line_start":263,"line_end":263,"column_start":5,"column_end":45}},{"value":"/ check(f64::NAN, FpCategory::Nan);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55219,"byte_end":55256,"line_start":264,"line_end":264,"column_start":5,"column_end":42}},{"value":"/ check(f64::MIN_POSITIVE, FpCategory::Normal);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55261,"byte_end":55310,"line_start":265,"line_end":265,"column_start":5,"column_end":54}},{"value":"/ check(f64::MIN_POSITIVE / 2.0, FpCategory::Subnormal);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55315,"byte_end":55373,"line_start":266,"line_end":266,"column_start":5,"column_end":63}},{"value":"/ check(0.0f64, FpCategory::Zero);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55378,"byte_end":55414,"line_start":267,"line_end":267,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55419,"byte_end":55426,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56075,"byte_end":56080,"line_start":294,"line_end":294,"column_start":8,"column_end":13},"name":"floor","qualname":"::float::FloatCore::floor","value":"pub fn floor(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the largest integer less than or equal to a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55469,"byte_end":55532,"line_start":271,"line_end":271,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55537,"byte_end":55540,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55545,"byte_end":55559,"line_start":273,"line_end":273,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55564,"byte_end":55567,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55572,"byte_end":55579,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55584,"byte_end":55621,"line_start":276,"line_end":276,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55626,"byte_end":55650,"line_start":277,"line_end":277,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55655,"byte_end":55658,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55663,"byte_end":55703,"line_start":279,"line_end":279,"column_start":5,"column_end":45}},{"value":"/     assert!(x.floor() == y);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55708,"byte_end":55740,"line_start":280,"line_end":280,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55745,"byte_end":55750,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55755,"byte_end":55758,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55763,"byte_end":55803,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/ check(0.9f32, 0.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55808,"byte_end":55831,"line_start":284,"line_end":284,"column_start":5,"column_end":28}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55836,"byte_end":55859,"line_start":285,"line_end":285,"column_start":5,"column_end":28}},{"value":"/ check(1.1f32, 1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55864,"byte_end":55887,"line_start":286,"line_end":286,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55892,"byte_end":55916,"line_start":287,"line_end":287,"column_start":5,"column_end":29}},{"value":"/ check(-0.9f64, -1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55921,"byte_end":55946,"line_start":288,"line_end":288,"column_start":5,"column_end":30}},{"value":"/ check(-1.0f64, -1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55951,"byte_end":55976,"line_start":289,"line_end":289,"column_start":5,"column_end":30}},{"value":"/ check(-1.1f64, -2.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":55981,"byte_end":56006,"line_start":290,"line_end":290,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56011,"byte_end":56041,"line_start":291,"line_end":291,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56046,"byte_end":56053,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56058,"byte_end":56067,"line_start":293,"line_end":293,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56926,"byte_end":56930,"line_start":328,"line_end":328,"column_start":8,"column_end":12},"name":"ceil","qualname":"::float::FloatCore::ceil","value":"pub fn ceil(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the smallest integer greater than or equal to a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56317,"byte_end":56384,"line_start":305,"line_end":305,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56389,"byte_end":56392,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56397,"byte_end":56411,"line_start":307,"line_end":307,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56416,"byte_end":56419,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56424,"byte_end":56431,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56436,"byte_end":56473,"line_start":310,"line_end":310,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56478,"byte_end":56502,"line_start":311,"line_end":311,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56507,"byte_end":56510,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56515,"byte_end":56555,"line_start":313,"line_end":313,"column_start":5,"column_end":45}},{"value":"/     assert!(x.ceil() == y);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56560,"byte_end":56591,"line_start":314,"line_end":314,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56596,"byte_end":56601,"line_start":315,"line_end":315,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56606,"byte_end":56609,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56614,"byte_end":56654,"line_start":317,"line_end":317,"column_start":5,"column_end":45}},{"value":"/ check(0.9f32, 1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56659,"byte_end":56682,"line_start":318,"line_end":318,"column_start":5,"column_end":28}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56687,"byte_end":56710,"line_start":319,"line_end":319,"column_start":5,"column_end":28}},{"value":"/ check(1.1f32, 2.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56715,"byte_end":56738,"line_start":320,"line_end":320,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56743,"byte_end":56767,"line_start":321,"line_end":321,"column_start":5,"column_end":29}},{"value":"/ check(-0.9f64, -0.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56772,"byte_end":56797,"line_start":322,"line_end":322,"column_start":5,"column_end":30}},{"value":"/ check(-1.0f64, -1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56802,"byte_end":56827,"line_start":323,"line_end":323,"column_start":5,"column_end":30}},{"value":"/ check(-1.1f64, -1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56832,"byte_end":56857,"line_start":324,"line_end":324,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56862,"byte_end":56892,"line_start":325,"line_end":325,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56897,"byte_end":56904,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":56909,"byte_end":56918,"line_start":327,"line_end":327,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":57762,"byte_end":57767,"line_start":361,"line_end":361,"column_start":8,"column_end":13},"name":"round","qualname":"::float::FloatCore::round","value":"pub fn round(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the nearest integer to a number. Round half-way cases away from `0.0`.","sig":null,"attributes":[{"value":"/ Returns the nearest integer to a number. Round half-way cases away from `0.0`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":57167,"byte_end":57249,"line_start":339,"line_end":339,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":57254,"byte_end":57257,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":57262,"byte_end":57276,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":57281,"byte_end":57284,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":57289,"byte_end":57296,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":57301,"byte_end":57338,"line_start":344,"line_end":344,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":57343,"byte_end":57367,"line_start":345,"line_end":345,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":57372,"byte_end":57375,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":57380,"byte_end":57420,"line_start":347,"line_end":347,"column_start":5,"column_end":45}},{"value":"/     assert!(x.round() == y);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":57425,"byte_end":57457,"line_start":348,"line_end":348,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":57462,"byte_end":57467,"line_start":349,"line_end":349,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":57472,"byte_end":57475,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":57480,"byte_end":57520,"line_start":351,"line_end":351,"column_start":5,"column_end":45}},{"value":"/ check(0.4f32, 0.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":57525,"byte_end":57548,"line_start":352,"line_end":352,"column_start":5,"column_end":28}},{"value":"/ check(0.5f32, 1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":57553,"byte_end":57576,"line_start":353,"line_end":353,"column_start":5,"column_end":28}},{"value":"/ check(0.6f32, 1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":57581,"byte_end":57604,"line_start":354,"line_end":354,"column_start":5,"column_end":28}},{"value":"/ check(-0.4f64, 0.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":57609,"byte_end":57633,"line_start":355,"line_end":355,"column_start":5,"column_end":29}},{"value":"/ check(-0.5f64, -1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":57638,"byte_end":57663,"line_start":356,"line_end":356,"column_start":5,"column_end":30}},{"value":"/ check(-0.6f64, -1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":57668,"byte_end":57693,"line_start":357,"line_end":357,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":57698,"byte_end":57728,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":57733,"byte_end":57740,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":57745,"byte_end":57754,"line_start":360,"line_end":360,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":58858,"byte_end":58863,"line_start":405,"line_end":405,"column_start":8,"column_end":13},"name":"trunc","qualname":"::float::FloatCore::trunc","value":"pub fn trunc(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Return the integer part of a number.","sig":null,"attributes":[{"value":"/ Return the integer part of a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":58275,"byte_end":58315,"line_start":382,"line_end":382,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":58320,"byte_end":58323,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":58328,"byte_end":58342,"line_start":384,"line_end":384,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":58347,"byte_end":58350,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":58355,"byte_end":58362,"line_start":386,"line_end":386,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":58367,"byte_end":58404,"line_start":387,"line_end":387,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":58409,"byte_end":58433,"line_start":388,"line_end":388,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":58438,"byte_end":58441,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":58446,"byte_end":58486,"line_start":390,"line_end":390,"column_start":5,"column_end":45}},{"value":"/     assert!(x.trunc() == y);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":58491,"byte_end":58523,"line_start":391,"line_end":391,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":58528,"byte_end":58533,"line_start":392,"line_end":392,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":58538,"byte_end":58541,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":58546,"byte_end":58586,"line_start":394,"line_end":394,"column_start":5,"column_end":45}},{"value":"/ check(0.9f32, 0.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":58591,"byte_end":58614,"line_start":395,"line_end":395,"column_start":5,"column_end":28}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":58619,"byte_end":58642,"line_start":396,"line_end":396,"column_start":5,"column_end":28}},{"value":"/ check(1.1f32, 1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":58647,"byte_end":58670,"line_start":397,"line_end":397,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":58675,"byte_end":58699,"line_start":398,"line_end":398,"column_start":5,"column_end":29}},{"value":"/ check(-0.9f64, -0.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":58704,"byte_end":58729,"line_start":399,"line_end":399,"column_start":5,"column_end":30}},{"value":"/ check(-1.0f64, -1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":58734,"byte_end":58759,"line_start":400,"line_end":400,"column_start":5,"column_end":30}},{"value":"/ check(-1.1f64, -1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":58764,"byte_end":58789,"line_start":401,"line_end":401,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":58794,"byte_end":58824,"line_start":402,"line_end":402,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":58829,"byte_end":58836,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":58841,"byte_end":58850,"line_start":404,"line_end":404,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59584,"byte_end":59589,"line_start":437,"line_end":437,"column_start":8,"column_end":13},"name":"fract","qualname":"::float::FloatCore::fract","value":"pub fn fract(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the fractional part of a number.","sig":null,"attributes":[{"value":"/ Returns the fractional part of a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59010,"byte_end":59054,"line_start":414,"line_end":414,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59059,"byte_end":59062,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59067,"byte_end":59081,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59086,"byte_end":59089,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59094,"byte_end":59101,"line_start":418,"line_end":418,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59106,"byte_end":59143,"line_start":419,"line_end":419,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59148,"byte_end":59172,"line_start":420,"line_end":420,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59177,"byte_end":59180,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59185,"byte_end":59225,"line_start":422,"line_end":422,"column_start":5,"column_end":45}},{"value":"/     assert!(x.fract() == y);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59230,"byte_end":59262,"line_start":423,"line_end":423,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59267,"byte_end":59272,"line_start":424,"line_end":424,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59277,"byte_end":59280,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ check(f32::MAX, 0.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59285,"byte_end":59310,"line_start":426,"line_end":426,"column_start":5,"column_end":30}},{"value":"/ check(0.75f32, 0.75);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59315,"byte_end":59340,"line_start":427,"line_end":427,"column_start":5,"column_end":30}},{"value":"/ check(1.0f32, 0.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59345,"byte_end":59368,"line_start":428,"line_end":428,"column_start":5,"column_end":28}},{"value":"/ check(1.25f32, 0.25);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59373,"byte_end":59398,"line_start":429,"line_end":429,"column_start":5,"column_end":30}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59403,"byte_end":59427,"line_start":430,"line_end":430,"column_start":5,"column_end":29}},{"value":"/ check(-0.75f64, -0.75);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59432,"byte_end":59459,"line_start":431,"line_end":431,"column_start":5,"column_end":32}},{"value":"/ check(-1.0f64, 0.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59464,"byte_end":59488,"line_start":432,"line_end":432,"column_start":5,"column_end":29}},{"value":"/ check(-1.25f64, -0.25);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59493,"byte_end":59520,"line_start":433,"line_end":433,"column_start":5,"column_end":32}},{"value":"/ check(f64::MIN, 0.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59525,"byte_end":59550,"line_start":434,"line_end":434,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59555,"byte_end":59562,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59567,"byte_end":59576,"line_start":436,"line_end":436,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60294,"byte_end":60297,"line_start":466,"line_end":466,"column_start":8,"column_end":11},"name":"abs","qualname":"::float::FloatCore::abs","value":"pub fn abs(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Computes the absolute value of `self`. Returns `FloatCore::nan()` if the\n number is `FloatCore::nan()`.","sig":null,"attributes":[{"value":"/ Computes the absolute value of `self`. Returns `FloatCore::nan()` if the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59728,"byte_end":59804,"line_start":445,"line_end":445,"column_start":5,"column_end":81}},{"value":"/ number is `FloatCore::nan()`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59809,"byte_end":59842,"line_start":446,"line_end":446,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59847,"byte_end":59850,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59855,"byte_end":59869,"line_start":448,"line_end":448,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59874,"byte_end":59877,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59882,"byte_end":59889,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59894,"byte_end":59931,"line_start":451,"line_end":451,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59936,"byte_end":59960,"line_start":452,"line_end":452,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59965,"byte_end":59968,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":59973,"byte_end":60013,"line_start":454,"line_end":454,"column_start":5,"column_end":45}},{"value":"/     assert!(x.abs() == y);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60018,"byte_end":60048,"line_start":455,"line_end":455,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60053,"byte_end":60058,"line_start":456,"line_end":456,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60063,"byte_end":60066,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60071,"byte_end":60111,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60116,"byte_end":60139,"line_start":459,"line_end":459,"column_start":5,"column_end":28}},{"value":"/ check(0.0f64, 0.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60144,"byte_end":60167,"line_start":460,"line_end":460,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60172,"byte_end":60196,"line_start":461,"line_end":461,"column_start":5,"column_end":29}},{"value":"/ check(-1.0f64, 1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60201,"byte_end":60225,"line_start":462,"line_end":462,"column_start":5,"column_end":29}},{"value":"/ check(f64::MIN, f64::MAX);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60230,"byte_end":60260,"line_start":463,"line_end":463,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60265,"byte_end":60272,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60277,"byte_end":60286,"line_start":465,"line_end":465,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61221,"byte_end":61227,"line_start":500,"line_end":500,"column_start":8,"column_end":14},"name":"signum","qualname":"::float::FloatCore::signum","value":"pub fn signum(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns a number that represents the sign of `self`.","sig":null,"attributes":[{"value":"/ Returns a number that represents the sign of `self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60490,"byte_end":60546,"line_start":476,"line_end":476,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60551,"byte_end":60554,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ - `1.0` if the number is positive, `+0.0` or `FloatCore::infinity()`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60559,"byte_end":60631,"line_start":478,"line_end":478,"column_start":5,"column_end":77}},{"value":"/ - `-1.0` if the number is negative, `-0.0` or `FloatCore::neg_infinity()`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60636,"byte_end":60713,"line_start":479,"line_end":479,"column_start":5,"column_end":82}},{"value":"/ - `FloatCore::nan()` if the number is `FloatCore::nan()`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60718,"byte_end":60778,"line_start":480,"line_end":480,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60783,"byte_end":60786,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60791,"byte_end":60805,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60810,"byte_end":60813,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60818,"byte_end":60825,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60830,"byte_end":60867,"line_start":485,"line_end":485,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60872,"byte_end":60896,"line_start":486,"line_end":486,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60901,"byte_end":60904,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60909,"byte_end":60949,"line_start":488,"line_end":488,"column_start":5,"column_end":45}},{"value":"/     assert!(x.signum() == y);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60954,"byte_end":60987,"line_start":489,"line_end":489,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":60992,"byte_end":60997,"line_start":490,"line_end":490,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61002,"byte_end":61005,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, 1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61010,"byte_end":61040,"line_start":492,"line_end":492,"column_start":5,"column_end":35}},{"value":"/ check(3.0f32, 1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61045,"byte_end":61068,"line_start":493,"line_end":493,"column_start":5,"column_end":28}},{"value":"/ check(0.0f32, 1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61073,"byte_end":61096,"line_start":494,"line_end":494,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, -1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61101,"byte_end":61126,"line_start":495,"line_end":495,"column_start":5,"column_end":30}},{"value":"/ check(-3.0f64, -1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61131,"byte_end":61156,"line_start":496,"line_end":496,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, -1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61161,"byte_end":61187,"line_start":497,"line_end":497,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61192,"byte_end":61199,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61204,"byte_end":61213,"line_start":499,"line_end":499,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62089,"byte_end":62105,"line_start":533,"line_end":533,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::float::FloatCore::is_sign_positive","value":"pub fn is_sign_positive(Self) -> bool","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is positive, including `+0.0` and\n `FloatCore::infinity()`, and since Rust 1.20 also\n `FloatCore::nan()`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is positive, including `+0.0` and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61426,"byte_end":61488,"line_start":510,"line_end":510,"column_start":5,"column_end":67}},{"value":"/ `FloatCore::infinity()`, and since Rust 1.20 also","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61493,"byte_end":61546,"line_start":511,"line_end":511,"column_start":5,"column_end":58}},{"value":"/ `FloatCore::nan()`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61551,"byte_end":61574,"line_start":512,"line_end":512,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61579,"byte_end":61582,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61587,"byte_end":61601,"line_start":514,"line_end":514,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61606,"byte_end":61609,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61614,"byte_end":61621,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61626,"byte_end":61663,"line_start":517,"line_end":517,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61668,"byte_end":61692,"line_start":518,"line_end":518,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61697,"byte_end":61700,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61705,"byte_end":61748,"line_start":520,"line_end":520,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_sign_positive() == p);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61753,"byte_end":61796,"line_start":521,"line_end":521,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61801,"byte_end":61806,"line_start":522,"line_end":522,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61811,"byte_end":61814,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, true);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61819,"byte_end":61850,"line_start":524,"line_end":524,"column_start":5,"column_end":36}},{"value":"/ check(f32::MAX, true);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61855,"byte_end":61881,"line_start":525,"line_end":525,"column_start":5,"column_end":31}},{"value":"/ check(0.0f32, true);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61886,"byte_end":61910,"line_start":526,"line_end":526,"column_start":5,"column_end":29}},{"value":"/ check(-0.0f64, false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61915,"byte_end":61941,"line_start":527,"line_end":527,"column_start":5,"column_end":31}},{"value":"/ check(f64::NEG_INFINITY, false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61946,"byte_end":61982,"line_start":528,"line_end":528,"column_start":5,"column_end":41}},{"value":"/ check(f64::MIN_POSITIVE, true);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":61987,"byte_end":62022,"line_start":529,"line_end":529,"column_start":5,"column_end":40}},{"value":"/ check(-f64::NAN, false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62027,"byte_end":62055,"line_start":530,"line_end":530,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62060,"byte_end":62067,"line_start":531,"line_end":531,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62072,"byte_end":62081,"line_start":532,"line_end":532,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62835,"byte_end":62851,"line_start":560,"line_end":560,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::float::FloatCore::is_sign_negative","value":"pub fn is_sign_negative(Self) -> bool","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is negative, including `-0.0` and\n `FloatCore::neg_infinity()`, and since Rust 1.20 also\n `-FloatCore::nan()`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is negative, including `-0.0` and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62166,"byte_end":62228,"line_start":537,"line_end":537,"column_start":5,"column_end":67}},{"value":"/ `FloatCore::neg_infinity()`, and since Rust 1.20 also","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62233,"byte_end":62290,"line_start":538,"line_end":538,"column_start":5,"column_end":62}},{"value":"/ `-FloatCore::nan()`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62295,"byte_end":62319,"line_start":539,"line_end":539,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62324,"byte_end":62327,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62332,"byte_end":62346,"line_start":541,"line_end":541,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62351,"byte_end":62354,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62359,"byte_end":62366,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62371,"byte_end":62408,"line_start":544,"line_end":544,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62413,"byte_end":62437,"line_start":545,"line_end":545,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62442,"byte_end":62445,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62450,"byte_end":62493,"line_start":547,"line_end":547,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_sign_negative() == p);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62498,"byte_end":62541,"line_start":548,"line_end":548,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62546,"byte_end":62551,"line_start":549,"line_end":549,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62556,"byte_end":62559,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62564,"byte_end":62596,"line_start":551,"line_end":551,"column_start":5,"column_end":37}},{"value":"/ check(f32::MAX, false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62601,"byte_end":62628,"line_start":552,"line_end":552,"column_start":5,"column_end":32}},{"value":"/ check(0.0f32, false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62633,"byte_end":62658,"line_start":553,"line_end":553,"column_start":5,"column_end":30}},{"value":"/ check(-0.0f64, true);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62663,"byte_end":62688,"line_start":554,"line_end":554,"column_start":5,"column_end":30}},{"value":"/ check(f64::NEG_INFINITY, true);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62693,"byte_end":62728,"line_start":555,"line_end":555,"column_start":5,"column_end":40}},{"value":"/ check(f64::MIN_POSITIVE, false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62733,"byte_end":62769,"line_start":556,"line_end":556,"column_start":5,"column_end":41}},{"value":"/ check(f64::NAN, false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62774,"byte_end":62801,"line_start":557,"line_end":557,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62806,"byte_end":62813,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62818,"byte_end":62827,"line_start":559,"line_end":559,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63484,"byte_end":63487,"line_start":585,"line_end":585,"column_start":8,"column_end":11},"name":"min","qualname":"::float::FloatCore::min","value":"pub fn min(Self, Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the minimum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the minimum of the two numbers.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62946,"byte_end":62989,"line_start":565,"line_end":565,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":62994,"byte_end":62997,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ If one of the arguments is NaN, then the other argument is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63002,"byte_end":63074,"line_start":567,"line_end":567,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63079,"byte_end":63082,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63087,"byte_end":63101,"line_start":569,"line_end":569,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63106,"byte_end":63109,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63114,"byte_end":63121,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63126,"byte_end":63163,"line_start":572,"line_end":572,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63168,"byte_end":63192,"line_start":573,"line_end":573,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63197,"byte_end":63200,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T, min: T) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63205,"byte_end":63253,"line_start":575,"line_end":575,"column_start":5,"column_end":53}},{"value":"/     assert!(x.min(y) == min);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63258,"byte_end":63291,"line_start":576,"line_end":576,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63296,"byte_end":63301,"line_start":577,"line_end":577,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63306,"byte_end":63309,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ check(1.0f32, 2.0, 1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63314,"byte_end":63342,"line_start":579,"line_end":579,"column_start":5,"column_end":33}},{"value":"/ check(f32::NAN, 2.0, 2.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63347,"byte_end":63377,"line_start":580,"line_end":580,"column_start":5,"column_end":35}},{"value":"/ check(1.0f64, -2.0, -2.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63382,"byte_end":63412,"line_start":581,"line_end":581,"column_start":5,"column_end":35}},{"value":"/ check(1.0f64, f64::NAN, 1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63417,"byte_end":63450,"line_start":582,"line_end":582,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63455,"byte_end":63462,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63467,"byte_end":63476,"line_start":584,"line_end":584,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64284,"byte_end":64287,"line_start":619,"line_end":619,"column_start":8,"column_end":11},"name":"max","qualname":"::float::FloatCore::max","value":"pub fn max(Self, Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the maximum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the maximum of the two numbers.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63742,"byte_end":63785,"line_start":599,"line_end":599,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63790,"byte_end":63793,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ If one of the arguments is NaN, then the other argument is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63798,"byte_end":63870,"line_start":601,"line_end":601,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63875,"byte_end":63878,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63883,"byte_end":63897,"line_start":603,"line_end":603,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63902,"byte_end":63905,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63910,"byte_end":63917,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63922,"byte_end":63959,"line_start":606,"line_end":606,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63964,"byte_end":63988,"line_start":607,"line_end":607,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":63993,"byte_end":63996,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T, min: T) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64001,"byte_end":64049,"line_start":609,"line_end":609,"column_start":5,"column_end":53}},{"value":"/     assert!(x.max(y) == min);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64054,"byte_end":64087,"line_start":610,"line_end":610,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64092,"byte_end":64097,"line_start":611,"line_end":611,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64102,"byte_end":64105,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ check(1.0f32, 2.0, 2.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64110,"byte_end":64138,"line_start":613,"line_end":613,"column_start":5,"column_end":33}},{"value":"/ check(1.0f32, f32::NAN, 1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64143,"byte_end":64176,"line_start":614,"line_end":614,"column_start":5,"column_end":38}},{"value":"/ check(-1.0f64, 2.0, 2.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64181,"byte_end":64210,"line_start":615,"line_end":615,"column_start":5,"column_end":34}},{"value":"/ check(-1.0f64, f64::NAN, -1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64215,"byte_end":64250,"line_start":616,"line_end":616,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64255,"byte_end":64262,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64267,"byte_end":64276,"line_start":618,"line_end":618,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":65042,"byte_end":65047,"line_start":652,"line_end":652,"column_start":8,"column_end":13},"name":"recip","qualname":"::float::FloatCore::recip","value":"pub fn recip(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the reciprocal (multiplicative inverse) of the number.","sig":null,"attributes":[{"value":"/ Returns the reciprocal (multiplicative inverse) of the number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64542,"byte_end":64608,"line_start":633,"line_end":633,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64613,"byte_end":64616,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64621,"byte_end":64635,"line_start":635,"line_end":635,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64640,"byte_end":64643,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64648,"byte_end":64655,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64660,"byte_end":64697,"line_start":638,"line_end":638,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64702,"byte_end":64726,"line_start":639,"line_end":639,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64731,"byte_end":64734,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64739,"byte_end":64779,"line_start":641,"line_end":641,"column_start":5,"column_end":45}},{"value":"/     assert!(x.recip() == y);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64784,"byte_end":64816,"line_start":642,"line_end":642,"column_start":5,"column_end":37}},{"value":"/     assert!(y.recip() == x);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64821,"byte_end":64853,"line_start":643,"line_end":643,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64858,"byte_end":64863,"line_start":644,"line_end":644,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64868,"byte_end":64871,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, 0.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64876,"byte_end":64906,"line_start":646,"line_end":646,"column_start":5,"column_end":35}},{"value":"/ check(2.0f32, 0.5);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64911,"byte_end":64934,"line_start":647,"line_end":647,"column_start":5,"column_end":28}},{"value":"/ check(-0.25f64, -4.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64939,"byte_end":64965,"line_start":648,"line_end":648,"column_start":5,"column_end":31}},{"value":"/ check(-0.0f64, f64::NEG_INFINITY);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":64970,"byte_end":65008,"line_start":649,"line_end":649,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":65013,"byte_end":65020,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":65025,"byte_end":65034,"line_start":651,"line_end":651,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":65641,"byte_end":65645,"line_start":676,"line_end":676,"column_start":8,"column_end":12},"name":"powi","qualname":"::float::FloatCore::powi","value":"pub fn powi(Self, i32) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Raise a number to an integer power.","sig":null,"attributes":[{"value":"/ Raise a number to an integer power.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":65102,"byte_end":65141,"line_start":656,"line_end":656,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":65146,"byte_end":65149,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ Using this function is generally faster than using `powf`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":65154,"byte_end":65215,"line_start":658,"line_end":658,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":65220,"byte_end":65223,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":65228,"byte_end":65242,"line_start":660,"line_end":660,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":65247,"byte_end":65250,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":65255,"byte_end":65262,"line_start":662,"line_end":662,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":65267,"byte_end":65304,"line_start":663,"line_end":663,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":65309,"byte_end":65312,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, exp: i32, powi: T) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":65317,"byte_end":65370,"line_start":665,"line_end":665,"column_start":5,"column_end":58}},{"value":"/     assert!(x.powi(exp) == powi);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":65375,"byte_end":65412,"line_start":666,"line_end":666,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":65417,"byte_end":65422,"line_start":667,"line_end":667,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":65427,"byte_end":65430,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ check(9.0f32, 2, 81.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":65435,"byte_end":65462,"line_start":669,"line_end":669,"column_start":5,"column_end":32}},{"value":"/ check(1.0f32, -2, 1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":65467,"byte_end":65494,"line_start":670,"line_end":670,"column_start":5,"column_end":32}},{"value":"/ check(10.0f64, 20, 1e20);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":65499,"byte_end":65528,"line_start":671,"line_end":671,"column_start":5,"column_end":34}},{"value":"/ check(4.0f64, -2, 0.0625);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":65533,"byte_end":65563,"line_start":672,"line_end":672,"column_start":5,"column_end":35}},{"value":"/ check(-1.0f64, std::i32::MIN, 1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":65568,"byte_end":65607,"line_start":673,"line_end":673,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":65612,"byte_end":65619,"line_start":674,"line_end":674,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":65624,"byte_end":65633,"line_start":675,"line_end":675,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66562,"byte_end":66572,"line_start":704,"line_end":704,"column_start":8,"column_end":18},"name":"to_degrees","qualname":"::float::FloatCore::to_degrees","value":"pub fn to_degrees(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Converts to degrees, assuming the number is in radians.","sig":null,"attributes":[{"value":"/ Converts to degrees, assuming the number is in radians.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66087,"byte_end":66146,"line_start":687,"line_end":687,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66151,"byte_end":66154,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66159,"byte_end":66173,"line_start":689,"line_end":689,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66178,"byte_end":66181,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66186,"byte_end":66193,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66198,"byte_end":66235,"line_start":692,"line_end":692,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66240,"byte_end":66264,"line_start":693,"line_end":693,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66269,"byte_end":66272,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(rad: T, deg: T) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66277,"byte_end":66321,"line_start":695,"line_end":695,"column_start":5,"column_end":49}},{"value":"/     assert!(rad.to_degrees() == deg);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66326,"byte_end":66367,"line_start":696,"line_end":696,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66372,"byte_end":66377,"line_start":697,"line_end":697,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66382,"byte_end":66385,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ check(0.0f32, 0.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66390,"byte_end":66413,"line_start":699,"line_end":699,"column_start":5,"column_end":28}},{"value":"/ check(f32::consts::PI, 180.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66418,"byte_end":66452,"line_start":700,"line_end":700,"column_start":5,"column_end":39}},{"value":"/ check(f64::consts::FRAC_PI_4, 45.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66457,"byte_end":66497,"line_start":701,"line_end":701,"column_start":5,"column_end":45}},{"value":"/ check(f64::INFINITY, f64::INFINITY);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66502,"byte_end":66542,"line_start":702,"line_end":702,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66547,"byte_end":66554,"line_start":703,"line_end":703,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":67068,"byte_end":67078,"line_start":723,"line_end":723,"column_start":8,"column_end":18},"name":"to_radians","qualname":"::float::FloatCore::to_radians","value":"pub fn to_radians(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Converts to radians, assuming the number is in degrees.","sig":null,"attributes":[{"value":"/ Converts to radians, assuming the number is in degrees.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66593,"byte_end":66652,"line_start":706,"line_end":706,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66657,"byte_end":66660,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66665,"byte_end":66679,"line_start":708,"line_end":708,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66684,"byte_end":66687,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66692,"byte_end":66699,"line_start":710,"line_end":710,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66704,"byte_end":66741,"line_start":711,"line_end":711,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66746,"byte_end":66770,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66775,"byte_end":66778,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(deg: T, rad: T) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66783,"byte_end":66827,"line_start":714,"line_end":714,"column_start":5,"column_end":49}},{"value":"/     assert!(deg.to_radians() == rad);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66832,"byte_end":66873,"line_start":715,"line_end":715,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66878,"byte_end":66883,"line_start":716,"line_end":716,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66888,"byte_end":66891,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ check(0.0f32, 0.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66896,"byte_end":66919,"line_start":718,"line_end":718,"column_start":5,"column_end":28}},{"value":"/ check(180.0, f32::consts::PI);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66924,"byte_end":66958,"line_start":719,"line_end":719,"column_start":5,"column_end":39}},{"value":"/ check(45.0, f64::consts::FRAC_PI_4);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":66963,"byte_end":67003,"line_start":720,"line_end":720,"column_start":5,"column_end":45}},{"value":"/ check(f64::INFINITY, f64::INFINITY);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":67008,"byte_end":67048,"line_start":721,"line_end":721,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":67053,"byte_end":67060,"line_start":722,"line_end":722,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":67837,"byte_end":67851,"line_start":746,"line_end":746,"column_start":8,"column_end":22},"name":"integer_decode","qualname":"::float::FloatCore::integer_decode","value":"pub fn integer_decode(Self) -> (u64, i16, i8)","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the mantissa, base 2 exponent, and sign as integers, respectively.\n The original number can be recovered by `sign * mantissa * 2 ^ exponent`.","sig":null,"attributes":[{"value":"/ Returns the mantissa, base 2 exponent, and sign as integers, respectively.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":67099,"byte_end":67177,"line_start":725,"line_end":725,"column_start":5,"column_end":83}},{"value":"/ The original number can be recovered by `sign * mantissa * 2 ^ exponent`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":67182,"byte_end":67259,"line_start":726,"line_end":726,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":67264,"byte_end":67267,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":67272,"byte_end":67286,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":67291,"byte_end":67294,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":67299,"byte_end":67306,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":67311,"byte_end":67348,"line_start":731,"line_end":731,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":67353,"byte_end":67377,"line_start":732,"line_end":732,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":67382,"byte_end":67385,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, m: u64, e: i16, s:i8) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":67390,"byte_end":67446,"line_start":734,"line_end":734,"column_start":5,"column_end":61}},{"value":"/     let (mantissa, exponent, sign) = x.integer_decode();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":67451,"byte_end":67511,"line_start":735,"line_end":735,"column_start":5,"column_end":65}},{"value":"/     assert_eq!(mantissa, m);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":67516,"byte_end":67548,"line_start":736,"line_end":736,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(exponent, e);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":67553,"byte_end":67585,"line_start":737,"line_end":737,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(sign, s);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":67590,"byte_end":67618,"line_start":738,"line_end":738,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":67623,"byte_end":67628,"line_start":739,"line_end":739,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":67633,"byte_end":67636,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ check(2.0f32, 1 << 23, -22, 1);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":67641,"byte_end":67676,"line_start":741,"line_end":741,"column_start":5,"column_end":40}},{"value":"/ check(-2.0f32, 1 << 23, -22, -1);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":67681,"byte_end":67718,"line_start":742,"line_end":742,"column_start":5,"column_end":42}},{"value":"/ check(f32::INFINITY, 1 << 23, 105, 1);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":67723,"byte_end":67765,"line_start":743,"line_end":743,"column_start":5,"column_end":47}},{"value":"/ check(f64::NEG_INFINITY, 1 << 52, 972, -1);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":67770,"byte_end":67817,"line_start":744,"line_end":744,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":67822,"byte_end":67829,"line_start":745,"line_end":745,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":226},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":72914,"byte_end":72919,"line_start":905,"line_end":905,"column_start":11,"column_end":16},"name":"Float","qualname":"::float::Float","value":"Float: Num + Copy + NumCast + PartialOrd + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282}],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"/ Generic trait for floating point numbers","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":72713,"byte_end":72757,"line_start":901,"line_end":901,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":72758,"byte_end":72761,"line_start":902,"line_end":902,"column_start":1,"column_end":4}},{"value":"/ This trait is only available with the `std` feature, or with the `libm` feature otherwise.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":72762,"byte_end":72856,"line_start":903,"line_end":903,"column_start":1,"column_end":95}},{"value":"cfg(any(feature = \"std\", feature = \"libm\"))","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":72857,"byte_end":72903,"line_start":904,"line_end":904,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73165,"byte_end":73168,"line_start":915,"line_end":915,"column_start":8,"column_end":11},"name":"nan","qualname":"::float::Float::nan","value":"pub fn nan() -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the `NaN` value.","sig":null,"attributes":[{"value":"/ Returns the `NaN` value.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":72982,"byte_end":73010,"line_start":906,"line_end":906,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73015,"byte_end":73018,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73023,"byte_end":73030,"line_start":908,"line_end":908,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73035,"byte_end":73061,"line_start":909,"line_end":909,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73066,"byte_end":73069,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ let nan: f32 = Float::nan();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73074,"byte_end":73106,"line_start":911,"line_end":911,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73111,"byte_end":73114,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ assert!(nan.is_nan());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73119,"byte_end":73145,"line_start":913,"line_end":913,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73150,"byte_end":73157,"line_start":914,"line_end":914,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73490,"byte_end":73498,"line_start":928,"line_end":928,"column_start":8,"column_end":16},"name":"infinity","qualname":"::float::Float::infinity","value":"pub fn infinity() -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the infinite value.","sig":null,"attributes":[{"value":"/ Returns the infinite value.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73184,"byte_end":73215,"line_start":916,"line_end":916,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73220,"byte_end":73223,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73228,"byte_end":73235,"line_start":918,"line_end":918,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73240,"byte_end":73266,"line_start":919,"line_end":919,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73271,"byte_end":73288,"line_start":920,"line_end":920,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73293,"byte_end":73296,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ let infinity: f32 = Float::infinity();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73301,"byte_end":73343,"line_start":922,"line_end":922,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73348,"byte_end":73351,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ assert!(infinity.is_infinite());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73356,"byte_end":73392,"line_start":924,"line_end":924,"column_start":5,"column_end":41}},{"value":"/ assert!(!infinity.is_finite());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73397,"byte_end":73432,"line_start":925,"line_end":925,"column_start":5,"column_end":40}},{"value":"/ assert!(infinity > f32::MAX);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73437,"byte_end":73470,"line_start":926,"line_end":926,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73475,"byte_end":73482,"line_start":927,"line_end":927,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73849,"byte_end":73861,"line_start":941,"line_end":941,"column_start":8,"column_end":20},"name":"neg_infinity","qualname":"::float::Float::neg_infinity","value":"pub fn neg_infinity() -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the negative infinite value.","sig":null,"attributes":[{"value":"/ Returns the negative infinite value.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73514,"byte_end":73554,"line_start":929,"line_end":929,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73559,"byte_end":73562,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73567,"byte_end":73574,"line_start":931,"line_end":931,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73579,"byte_end":73605,"line_start":932,"line_end":932,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73610,"byte_end":73627,"line_start":933,"line_end":933,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73632,"byte_end":73635,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ let neg_infinity: f32 = Float::neg_infinity();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73640,"byte_end":73690,"line_start":935,"line_end":935,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73695,"byte_end":73698,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ assert!(neg_infinity.is_infinite());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73703,"byte_end":73743,"line_start":937,"line_end":937,"column_start":5,"column_end":45}},{"value":"/ assert!(!neg_infinity.is_finite());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73748,"byte_end":73787,"line_start":938,"line_end":938,"column_start":5,"column_end":44}},{"value":"/ assert!(neg_infinity < f32::MIN);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73792,"byte_end":73829,"line_start":939,"line_end":939,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73834,"byte_end":73841,"line_start":940,"line_end":940,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74231,"byte_end":74239,"line_start":955,"line_end":955,"column_start":8,"column_end":16},"name":"neg_zero","qualname":"::float::Float::neg_zero","value":"pub fn neg_zero() -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `-0.0`.","sig":null,"attributes":[{"value":"/ Returns `-0.0`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73877,"byte_end":73896,"line_start":942,"line_end":942,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73901,"byte_end":73904,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73909,"byte_end":73916,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ use num_traits::{Zero, Float};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73921,"byte_end":73955,"line_start":945,"line_end":945,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73960,"byte_end":73963,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ let inf: f32 = Float::infinity();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":73968,"byte_end":74005,"line_start":947,"line_end":947,"column_start":5,"column_end":42}},{"value":"/ let zero: f32 = Zero::zero();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74010,"byte_end":74043,"line_start":948,"line_end":948,"column_start":5,"column_end":38}},{"value":"/ let neg_zero: f32 = Float::neg_zero();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74048,"byte_end":74090,"line_start":949,"line_end":949,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74095,"byte_end":74098,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(zero, neg_zero);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74103,"byte_end":74134,"line_start":951,"line_end":951,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(7.0f32/inf, zero);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74139,"byte_end":74172,"line_start":952,"line_end":952,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(zero * 10.0, zero);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74177,"byte_end":74211,"line_start":953,"line_end":953,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74216,"byte_end":74223,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74506,"byte_end":74515,"line_start":967,"line_end":967,"column_start":8,"column_end":17},"name":"min_value","qualname":"::float::Float::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the smallest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest finite value that this type can represent.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74256,"byte_end":74323,"line_start":957,"line_end":957,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74328,"byte_end":74331,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74336,"byte_end":74343,"line_start":959,"line_end":959,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74348,"byte_end":74374,"line_start":960,"line_end":960,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74379,"byte_end":74396,"line_start":961,"line_end":961,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74401,"byte_end":74404,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Float::min_value();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74409,"byte_end":74445,"line_start":963,"line_end":963,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74450,"byte_end":74453,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::MIN);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74458,"byte_end":74486,"line_start":965,"line_end":965,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74491,"byte_end":74498,"line_start":966,"line_end":966,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74814,"byte_end":74832,"line_start":979,"line_end":979,"column_start":8,"column_end":26},"name":"min_positive_value","qualname":"::float::Float::min_positive_value","value":"pub fn min_positive_value() -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the smallest positive, normalized value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest positive, normalized value that this type can represent.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74532,"byte_end":74613,"line_start":969,"line_end":969,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74618,"byte_end":74621,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74626,"byte_end":74633,"line_start":971,"line_end":971,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74638,"byte_end":74664,"line_start":972,"line_end":972,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74669,"byte_end":74686,"line_start":973,"line_end":973,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74691,"byte_end":74694,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Float::min_positive_value();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74699,"byte_end":74744,"line_start":975,"line_end":975,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74749,"byte_end":74752,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::MIN_POSITIVE);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74757,"byte_end":74794,"line_start":977,"line_end":977,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74799,"byte_end":74806,"line_start":978,"line_end":978,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75209,"byte_end":75216,"line_start":996,"line_end":996,"column_start":8,"column_end":15},"name":"epsilon","qualname":"::float::Float::epsilon","value":"pub fn epsilon() -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns epsilon, a small positive value.","sig":null,"attributes":[{"value":"/ Returns epsilon, a small positive value.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74849,"byte_end":74893,"line_start":981,"line_end":981,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74898,"byte_end":74901,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74906,"byte_end":74913,"line_start":983,"line_end":983,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74918,"byte_end":74944,"line_start":984,"line_end":984,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74949,"byte_end":74966,"line_start":985,"line_end":985,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74971,"byte_end":74974,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Float::epsilon();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":74979,"byte_end":75013,"line_start":987,"line_end":987,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75018,"byte_end":75021,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::EPSILON);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75026,"byte_end":75058,"line_start":989,"line_end":989,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75063,"byte_end":75070,"line_start":990,"line_end":990,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75075,"byte_end":75078,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75083,"byte_end":75095,"line_start":992,"line_end":992,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75100,"byte_end":75103,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ The default implementation will panic if `f32::EPSILON` cannot","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75108,"byte_end":75174,"line_start":994,"line_end":994,"column_start":5,"column_end":71}},{"value":"/ be cast to `Self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75179,"byte_end":75201,"line_start":995,"line_end":995,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75557,"byte_end":75566,"line_start":1009,"line_end":1009,"column_start":8,"column_end":17},"name":"max_value","qualname":"::float::Float::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the largest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the largest finite value that this type can represent.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75316,"byte_end":75382,"line_start":1000,"line_end":1000,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75387,"byte_end":75390,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75395,"byte_end":75402,"line_start":1002,"line_end":1002,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75407,"byte_end":75433,"line_start":1003,"line_end":1003,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75438,"byte_end":75455,"line_start":1004,"line_end":1004,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75460,"byte_end":75463,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Float::max_value();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75468,"byte_end":75504,"line_start":1006,"line_end":1006,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(x, f64::MAX);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75509,"byte_end":75537,"line_start":1007,"line_end":1007,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75542,"byte_end":75549,"line_start":1008,"line_end":1008,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75864,"byte_end":75870,"line_start":1023,"line_end":1023,"column_start":8,"column_end":14},"name":"is_nan","qualname":"::float::Float::is_nan","value":"pub fn is_nan(Self) -> bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `true` if this value is `NaN` and false otherwise.","sig":null,"attributes":[{"value":"/ Returns `true` if this value is `NaN` and false otherwise.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75583,"byte_end":75645,"line_start":1011,"line_end":1011,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75650,"byte_end":75653,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75658,"byte_end":75665,"line_start":1013,"line_end":1013,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75670,"byte_end":75696,"line_start":1014,"line_end":1014,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75701,"byte_end":75718,"line_start":1015,"line_end":1015,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75723,"byte_end":75726,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ let nan = f64::NAN;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75731,"byte_end":75754,"line_start":1017,"line_end":1017,"column_start":5,"column_end":28}},{"value":"/ let f = 7.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75759,"byte_end":75775,"line_start":1018,"line_end":1018,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75780,"byte_end":75783,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ assert!(nan.is_nan());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75788,"byte_end":75814,"line_start":1020,"line_end":1020,"column_start":5,"column_end":31}},{"value":"/ assert!(!f.is_nan());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75819,"byte_end":75844,"line_start":1021,"line_end":1021,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75849,"byte_end":75856,"line_start":1022,"line_end":1022,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76408,"byte_end":76419,"line_start":1043,"line_end":1043,"column_start":8,"column_end":19},"name":"is_infinite","qualname":"::float::Float::is_infinite","value":"pub fn is_infinite(Self) -> bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `true` if this value is positive infinity or negative infinity and\n false otherwise.","sig":null,"attributes":[{"value":"/ Returns `true` if this value is positive infinity or negative infinity and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75891,"byte_end":75969,"line_start":1025,"line_end":1025,"column_start":5,"column_end":83}},{"value":"/ false otherwise.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75974,"byte_end":75994,"line_start":1026,"line_end":1026,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":75999,"byte_end":76002,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76007,"byte_end":76014,"line_start":1028,"line_end":1028,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76019,"byte_end":76045,"line_start":1029,"line_end":1029,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76050,"byte_end":76067,"line_start":1030,"line_end":1030,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76072,"byte_end":76075,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0f32;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76080,"byte_end":76099,"line_start":1032,"line_end":1032,"column_start":5,"column_end":24}},{"value":"/ let inf: f32 = Float::infinity();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76104,"byte_end":76141,"line_start":1033,"line_end":1033,"column_start":5,"column_end":42}},{"value":"/ let neg_inf: f32 = Float::neg_infinity();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76146,"byte_end":76191,"line_start":1034,"line_end":1034,"column_start":5,"column_end":50}},{"value":"/ let nan: f32 = f32::NAN;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76196,"byte_end":76224,"line_start":1035,"line_end":1035,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76229,"byte_end":76232,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ assert!(!f.is_infinite());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76237,"byte_end":76267,"line_start":1037,"line_end":1037,"column_start":5,"column_end":35}},{"value":"/ assert!(!nan.is_infinite());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76272,"byte_end":76304,"line_start":1038,"line_end":1038,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76309,"byte_end":76312,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ assert!(inf.is_infinite());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76317,"byte_end":76348,"line_start":1040,"line_end":1040,"column_start":5,"column_end":36}},{"value":"/ assert!(neg_inf.is_infinite());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76353,"byte_end":76388,"line_start":1041,"line_end":1041,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76393,"byte_end":76400,"line_start":1042,"line_end":1042,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76911,"byte_end":76920,"line_start":1062,"line_end":1062,"column_start":8,"column_end":17},"name":"is_finite","qualname":"::float::Float::is_finite","value":"pub fn is_finite(Self) -> bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `true` if this number is neither infinite nor `NaN`.","sig":null,"attributes":[{"value":"/ Returns `true` if this number is neither infinite nor `NaN`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76440,"byte_end":76504,"line_start":1045,"line_end":1045,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76509,"byte_end":76512,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76517,"byte_end":76524,"line_start":1047,"line_end":1047,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76529,"byte_end":76555,"line_start":1048,"line_end":1048,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76560,"byte_end":76577,"line_start":1049,"line_end":1049,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76582,"byte_end":76585,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0f32;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76590,"byte_end":76609,"line_start":1051,"line_end":1051,"column_start":5,"column_end":24}},{"value":"/ let inf: f32 = Float::infinity();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76614,"byte_end":76651,"line_start":1052,"line_end":1052,"column_start":5,"column_end":42}},{"value":"/ let neg_inf: f32 = Float::neg_infinity();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76656,"byte_end":76701,"line_start":1053,"line_end":1053,"column_start":5,"column_end":50}},{"value":"/ let nan: f32 = f32::NAN;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76706,"byte_end":76734,"line_start":1054,"line_end":1054,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76739,"byte_end":76742,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ assert!(f.is_finite());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76747,"byte_end":76774,"line_start":1056,"line_end":1056,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76779,"byte_end":76782,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ assert!(!nan.is_finite());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76787,"byte_end":76817,"line_start":1058,"line_end":1058,"column_start":5,"column_end":35}},{"value":"/ assert!(!inf.is_finite());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76822,"byte_end":76852,"line_start":1059,"line_end":1059,"column_start":5,"column_end":35}},{"value":"/ assert!(!neg_inf.is_finite());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76857,"byte_end":76891,"line_start":1060,"line_end":1060,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76896,"byte_end":76903,"line_start":1061,"line_end":1061,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77670,"byte_end":77679,"line_start":1086,"line_end":1086,"column_start":8,"column_end":17},"name":"is_normal","qualname":"::float::Float::is_normal","value":"pub fn is_normal(Self) -> bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `true` if the number is neither zero, infinite,\n [subnormal][subnormal], or `NaN`.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is neither zero, infinite,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":76941,"byte_end":77000,"line_start":1064,"line_end":1064,"column_start":5,"column_end":64}},{"value":"/ [subnormal][subnormal], or `NaN`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77005,"byte_end":77042,"line_start":1065,"line_end":1065,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77047,"byte_end":77050,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77055,"byte_end":77062,"line_start":1067,"line_end":1067,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77067,"byte_end":77093,"line_start":1068,"line_end":1068,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77098,"byte_end":77115,"line_start":1069,"line_end":1069,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77120,"byte_end":77123,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ let min = f32::MIN_POSITIVE; // 1.17549435e-38f32","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77128,"byte_end":77181,"line_start":1071,"line_end":1071,"column_start":5,"column_end":58}},{"value":"/ let max = f32::MAX;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77186,"byte_end":77209,"line_start":1072,"line_end":1072,"column_start":5,"column_end":28}},{"value":"/ let lower_than_min = 1.0e-40_f32;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77214,"byte_end":77251,"line_start":1073,"line_end":1073,"column_start":5,"column_end":42}},{"value":"/ let zero = 0.0f32;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77256,"byte_end":77278,"line_start":1074,"line_end":1074,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77283,"byte_end":77286,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ assert!(min.is_normal());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77291,"byte_end":77320,"line_start":1076,"line_end":1076,"column_start":5,"column_end":34}},{"value":"/ assert!(max.is_normal());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77325,"byte_end":77354,"line_start":1077,"line_end":1077,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77359,"byte_end":77362,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ assert!(!zero.is_normal());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77367,"byte_end":77398,"line_start":1079,"line_end":1079,"column_start":5,"column_end":36}},{"value":"/ assert!(!f32::NAN.is_normal());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77403,"byte_end":77438,"line_start":1080,"line_end":1080,"column_start":5,"column_end":40}},{"value":"/ assert!(!f32::INFINITY.is_normal());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77443,"byte_end":77483,"line_start":1081,"line_end":1081,"column_start":5,"column_end":45}},{"value":"/ // Values between `0` and `min` are Subnormal.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77488,"byte_end":77538,"line_start":1082,"line_end":1082,"column_start":5,"column_end":55}},{"value":"/ assert!(!lower_than_min.is_normal());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77543,"byte_end":77584,"line_start":1083,"line_end":1083,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77589,"byte_end":77596,"line_start":1084,"line_end":1084,"column_start":5,"column_end":12}},{"value":"/ [subnormal]: http://en.wikipedia.org/wiki/Denormal_number","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77601,"byte_end":77662,"line_start":1085,"line_end":1085,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78193,"byte_end":78201,"line_start":1103,"line_end":1103,"column_start":8,"column_end":16},"name":"classify","qualname":"::float::Float::classify","value":"pub fn classify(Self) -> FpCategory","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the floating point category of the number. If only one property\n is going to be tested, it is generally faster to use the specific\n predicate instead.","sig":null,"attributes":[{"value":"/ Returns the floating point category of the number. If only one property","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77700,"byte_end":77775,"line_start":1088,"line_end":1088,"column_start":5,"column_end":80}},{"value":"/ is going to be tested, it is generally faster to use the specific","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77780,"byte_end":77849,"line_start":1089,"line_end":1089,"column_start":5,"column_end":74}},{"value":"/ predicate instead.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77854,"byte_end":77876,"line_start":1090,"line_end":1090,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77881,"byte_end":77884,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77889,"byte_end":77896,"line_start":1092,"line_end":1092,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77901,"byte_end":77927,"line_start":1093,"line_end":1093,"column_start":5,"column_end":31}},{"value":"/ use std::num::FpCategory;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77932,"byte_end":77961,"line_start":1094,"line_end":1094,"column_start":5,"column_end":34}},{"value":"/ use std::f32;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77966,"byte_end":77983,"line_start":1095,"line_end":1095,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77988,"byte_end":77991,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ let num = 12.4f32;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":77996,"byte_end":78018,"line_start":1097,"line_end":1097,"column_start":5,"column_end":27}},{"value":"/ let inf = f32::INFINITY;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78023,"byte_end":78051,"line_start":1098,"line_end":1098,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78056,"byte_end":78059,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(num.classify(), FpCategory::Normal);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78064,"byte_end":78115,"line_start":1100,"line_end":1100,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(inf.classify(), FpCategory::Infinite);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78120,"byte_end":78173,"line_start":1101,"line_end":1101,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78178,"byte_end":78185,"line_start":1102,"line_end":1102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78493,"byte_end":78498,"line_start":1116,"line_end":1116,"column_start":8,"column_end":13},"name":"floor","qualname":"::float::Float::floor","value":"pub fn floor(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the largest integer less than or equal to a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78228,"byte_end":78291,"line_start":1105,"line_end":1105,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78296,"byte_end":78299,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78304,"byte_end":78311,"line_start":1107,"line_end":1107,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78316,"byte_end":78342,"line_start":1108,"line_end":1108,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78347,"byte_end":78350,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ let f = 3.99;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78355,"byte_end":78372,"line_start":1110,"line_end":1110,"column_start":5,"column_end":22}},{"value":"/ let g = 3.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78377,"byte_end":78393,"line_start":1111,"line_end":1111,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78398,"byte_end":78401,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.floor(), 3.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78406,"byte_end":78437,"line_start":1113,"line_end":1113,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.floor(), 3.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78442,"byte_end":78473,"line_start":1114,"line_end":1114,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78478,"byte_end":78485,"line_start":1115,"line_end":1115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78786,"byte_end":78790,"line_start":1129,"line_end":1129,"column_start":8,"column_end":12},"name":"ceil","qualname":"::float::Float::ceil","value":"pub fn ceil(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the smallest integer greater than or equal to a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78519,"byte_end":78586,"line_start":1118,"line_end":1118,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78591,"byte_end":78594,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78599,"byte_end":78606,"line_start":1120,"line_end":1120,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78611,"byte_end":78637,"line_start":1121,"line_end":1121,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78642,"byte_end":78645,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ let f = 3.01;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78650,"byte_end":78667,"line_start":1123,"line_end":1123,"column_start":5,"column_end":22}},{"value":"/ let g = 4.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78672,"byte_end":78688,"line_start":1124,"line_end":1124,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78693,"byte_end":78696,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.ceil(), 4.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78701,"byte_end":78731,"line_start":1126,"line_end":1126,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(g.ceil(), 4.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78736,"byte_end":78766,"line_start":1127,"line_end":1127,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78771,"byte_end":78778,"line_start":1128,"line_end":1128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79104,"byte_end":79109,"line_start":1143,"line_end":1143,"column_start":8,"column_end":13},"name":"round","qualname":"::float::Float::round","value":"pub fn round(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the nearest integer to a number. Round half-way cases away from\n `0.0`.","sig":null,"attributes":[{"value":"/ Returns the nearest integer to a number. Round half-way cases away from","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78811,"byte_end":78886,"line_start":1131,"line_end":1131,"column_start":5,"column_end":80}},{"value":"/ `0.0`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78891,"byte_end":78901,"line_start":1132,"line_end":1132,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78906,"byte_end":78909,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78914,"byte_end":78921,"line_start":1134,"line_end":1134,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78926,"byte_end":78952,"line_start":1135,"line_end":1135,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78957,"byte_end":78960,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ let f = 3.3;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78965,"byte_end":78981,"line_start":1137,"line_end":1137,"column_start":5,"column_end":21}},{"value":"/ let g = -3.3;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":78986,"byte_end":79003,"line_start":1138,"line_end":1138,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79008,"byte_end":79011,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.round(), 3.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79016,"byte_end":79047,"line_start":1140,"line_end":1140,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.round(), -3.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79052,"byte_end":79084,"line_start":1141,"line_end":1141,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79089,"byte_end":79096,"line_start":1142,"line_end":1142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79373,"byte_end":79378,"line_start":1156,"line_end":1156,"column_start":8,"column_end":13},"name":"trunc","qualname":"::float::Float::trunc","value":"pub fn trunc(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Return the integer part of a number.","sig":null,"attributes":[{"value":"/ Return the integer part of a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79130,"byte_end":79170,"line_start":1145,"line_end":1145,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79175,"byte_end":79178,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79183,"byte_end":79190,"line_start":1147,"line_end":1147,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79195,"byte_end":79221,"line_start":1148,"line_end":1148,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79226,"byte_end":79229,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ let f = 3.3;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79234,"byte_end":79250,"line_start":1150,"line_end":1150,"column_start":5,"column_end":21}},{"value":"/ let g = -3.7;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79255,"byte_end":79272,"line_start":1151,"line_end":1151,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79277,"byte_end":79280,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.trunc(), 3.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79285,"byte_end":79316,"line_start":1153,"line_end":1153,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.trunc(), -3.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79321,"byte_end":79353,"line_start":1154,"line_end":1154,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79358,"byte_end":79365,"line_start":1155,"line_end":1155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79774,"byte_end":79779,"line_start":1171,"line_end":1171,"column_start":8,"column_end":13},"name":"fract","qualname":"::float::Float::fract","value":"pub fn fract(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the fractional part of a number.","sig":null,"attributes":[{"value":"/ Returns the fractional part of a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79399,"byte_end":79443,"line_start":1158,"line_end":1158,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79448,"byte_end":79451,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79456,"byte_end":79463,"line_start":1160,"line_end":1160,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79468,"byte_end":79494,"line_start":1161,"line_end":1161,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79499,"byte_end":79502,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ let x = 3.5;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79507,"byte_end":79523,"line_start":1163,"line_end":1163,"column_start":5,"column_end":21}},{"value":"/ let y = -3.5;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79528,"byte_end":79545,"line_start":1164,"line_end":1164,"column_start":5,"column_end":22}},{"value":"/ let abs_difference_x = (x.fract() - 0.5).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79550,"byte_end":79601,"line_start":1165,"line_end":1165,"column_start":5,"column_end":56}},{"value":"/ let abs_difference_y = (y.fract() - (-0.5)).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79606,"byte_end":79660,"line_start":1166,"line_end":1166,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79665,"byte_end":79668,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79673,"byte_end":79711,"line_start":1168,"line_end":1168,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79716,"byte_end":79754,"line_start":1169,"line_end":1169,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79759,"byte_end":79766,"line_start":1170,"line_end":1170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80309,"byte_end":80312,"line_start":1191,"line_end":1191,"column_start":8,"column_end":11},"name":"abs","qualname":"::float::Float::abs","value":"pub fn abs(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Computes the absolute value of `self`. Returns `Float::nan()` if the\n number is `Float::nan()`.","sig":null,"attributes":[{"value":"/ Computes the absolute value of `self`. Returns `Float::nan()` if the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79800,"byte_end":79872,"line_start":1173,"line_end":1173,"column_start":5,"column_end":77}},{"value":"/ number is `Float::nan()`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79877,"byte_end":79906,"line_start":1174,"line_end":1174,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79911,"byte_end":79914,"line_start":1175,"line_end":1175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79919,"byte_end":79926,"line_start":1176,"line_end":1176,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79931,"byte_end":79957,"line_start":1177,"line_end":1177,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79962,"byte_end":79979,"line_start":1178,"line_end":1178,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79984,"byte_end":79987,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ let x = 3.5;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":79992,"byte_end":80008,"line_start":1180,"line_end":1180,"column_start":5,"column_end":21}},{"value":"/ let y = -3.5;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80013,"byte_end":80030,"line_start":1181,"line_end":1181,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80035,"byte_end":80038,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_x = (x.abs() - x).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80043,"byte_end":80090,"line_start":1183,"line_end":1183,"column_start":5,"column_end":52}},{"value":"/ let abs_difference_y = (y.abs() - (-y)).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80095,"byte_end":80145,"line_start":1184,"line_end":1184,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80150,"byte_end":80153,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80158,"byte_end":80196,"line_start":1186,"line_end":1186,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80201,"byte_end":80239,"line_start":1187,"line_end":1187,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80244,"byte_end":80247,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ assert!(f64::NAN.abs().is_nan());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80252,"byte_end":80289,"line_start":1189,"line_end":1189,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80294,"byte_end":80301,"line_start":1190,"line_end":1190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80879,"byte_end":80885,"line_start":1210,"line_end":1210,"column_start":8,"column_end":14},"name":"signum","qualname":"::float::Float::signum","value":"pub fn signum(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns a number that represents the sign of `self`.","sig":null,"attributes":[{"value":"/ Returns a number that represents the sign of `self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80333,"byte_end":80389,"line_start":1193,"line_end":1193,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80394,"byte_end":80397,"line_start":1194,"line_end":1194,"column_start":5,"column_end":8}},{"value":"/ - `1.0` if the number is positive, `+0.0` or `Float::infinity()`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80402,"byte_end":80470,"line_start":1195,"line_end":1195,"column_start":5,"column_end":73}},{"value":"/ - `-1.0` if the number is negative, `-0.0` or `Float::neg_infinity()`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80475,"byte_end":80548,"line_start":1196,"line_end":1196,"column_start":5,"column_end":78}},{"value":"/ - `Float::nan()` if the number is `Float::nan()`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80553,"byte_end":80605,"line_start":1197,"line_end":1197,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80610,"byte_end":80613,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80618,"byte_end":80625,"line_start":1199,"line_end":1199,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80630,"byte_end":80656,"line_start":1200,"line_end":1200,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80661,"byte_end":80678,"line_start":1201,"line_end":1201,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80683,"byte_end":80686,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ let f = 3.5;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80691,"byte_end":80707,"line_start":1203,"line_end":1203,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80712,"byte_end":80715,"line_start":1204,"line_end":1204,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.signum(), 1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80720,"byte_end":80752,"line_start":1205,"line_end":1205,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(f64::NEG_INFINITY.signum(), -1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80757,"byte_end":80806,"line_start":1206,"line_end":1206,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80811,"byte_end":80814,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ assert!(f64::NAN.signum().is_nan());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80819,"byte_end":80859,"line_start":1208,"line_end":1208,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80864,"byte_end":80871,"line_start":1209,"line_end":1209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81358,"byte_end":81374,"line_start":1228,"line_end":1228,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::float::Float::is_sign_positive","value":"pub fn is_sign_positive(Self) -> bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is positive, including `+0.0`,\n `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is positive, including `+0.0`,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80906,"byte_end":80965,"line_start":1212,"line_end":1212,"column_start":5,"column_end":64}},{"value":"/ `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":80970,"byte_end":81035,"line_start":1213,"line_end":1213,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81040,"byte_end":81043,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81048,"byte_end":81055,"line_start":1215,"line_end":1215,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81060,"byte_end":81086,"line_start":1216,"line_end":1216,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81091,"byte_end":81108,"line_start":1217,"line_end":1217,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81113,"byte_end":81116,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ let neg_nan: f64 = -f64::NAN;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81121,"byte_end":81154,"line_start":1219,"line_end":1219,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81159,"byte_end":81162,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81167,"byte_end":81183,"line_start":1221,"line_end":1221,"column_start":5,"column_end":21}},{"value":"/ let g = -7.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81188,"byte_end":81205,"line_start":1222,"line_end":1222,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81210,"byte_end":81213,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8}},{"value":"/ assert!(f.is_sign_positive());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81218,"byte_end":81252,"line_start":1224,"line_end":1224,"column_start":5,"column_end":39}},{"value":"/ assert!(!g.is_sign_positive());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81257,"byte_end":81292,"line_start":1225,"line_end":1225,"column_start":5,"column_end":40}},{"value":"/ assert!(!neg_nan.is_sign_positive());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81297,"byte_end":81338,"line_start":1226,"line_end":1226,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81343,"byte_end":81350,"line_start":1227,"line_end":1227,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81843,"byte_end":81859,"line_start":1246,"line_end":1246,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::float::Float::is_sign_negative","value":"pub fn is_sign_negative(Self) -> bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is negative, including `-0.0`,\n `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is negative, including `-0.0`,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81395,"byte_end":81454,"line_start":1230,"line_end":1230,"column_start":5,"column_end":64}},{"value":"/ `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81459,"byte_end":81529,"line_start":1231,"line_end":1231,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81534,"byte_end":81537,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81542,"byte_end":81549,"line_start":1233,"line_end":1233,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81554,"byte_end":81580,"line_start":1234,"line_end":1234,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81585,"byte_end":81602,"line_start":1235,"line_end":1235,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81607,"byte_end":81610,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ let nan: f64 = f64::NAN;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81615,"byte_end":81643,"line_start":1237,"line_end":1237,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81648,"byte_end":81651,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81656,"byte_end":81672,"line_start":1239,"line_end":1239,"column_start":5,"column_end":21}},{"value":"/ let g = -7.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81677,"byte_end":81694,"line_start":1240,"line_end":1240,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81699,"byte_end":81702,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ assert!(!f.is_sign_negative());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81707,"byte_end":81742,"line_start":1242,"line_end":1242,"column_start":5,"column_end":40}},{"value":"/ assert!(g.is_sign_negative());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81747,"byte_end":81781,"line_start":1243,"line_end":1243,"column_start":5,"column_end":39}},{"value":"/ assert!(!nan.is_sign_negative());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81786,"byte_end":81823,"line_start":1244,"line_end":1244,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81828,"byte_end":81835,"line_start":1245,"line_end":1245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82471,"byte_end":82478,"line_start":1266,"line_end":1266,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::float::Float::mul_add","value":"pub fn mul_add(Self, Self, Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Fused multiply-add. Computes `(self * a) + b` with only one rounding\n error, yielding a more accurate result than an unfused multiply-add.","sig":null,"attributes":[{"value":"/ Fused multiply-add. Computes `(self * a) + b` with only one rounding","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81880,"byte_end":81952,"line_start":1248,"line_end":1248,"column_start":5,"column_end":77}},{"value":"/ error, yielding a more accurate result than an unfused multiply-add.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":81957,"byte_end":82029,"line_start":1249,"line_end":1249,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82034,"byte_end":82037,"line_start":1250,"line_end":1250,"column_start":5,"column_end":8}},{"value":"/ Using `mul_add` can be more performant than an unfused multiply-add if","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82042,"byte_end":82116,"line_start":1251,"line_end":1251,"column_start":5,"column_end":79}},{"value":"/ the target architecture has a dedicated `fma` CPU instruction.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82121,"byte_end":82187,"line_start":1252,"line_end":1252,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82192,"byte_end":82195,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82200,"byte_end":82207,"line_start":1254,"line_end":1254,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82212,"byte_end":82238,"line_start":1255,"line_end":1255,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82243,"byte_end":82246,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ let m = 10.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82251,"byte_end":82268,"line_start":1257,"line_end":1257,"column_start":5,"column_end":22}},{"value":"/ let x = 4.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82273,"byte_end":82289,"line_start":1258,"line_end":1258,"column_start":5,"column_end":21}},{"value":"/ let b = 60.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82294,"byte_end":82311,"line_start":1259,"line_end":1259,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82316,"byte_end":82319,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ // 100.0","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82324,"byte_end":82336,"line_start":1261,"line_end":1261,"column_start":5,"column_end":17}},{"value":"/ let abs_difference = (m.mul_add(x, b) - (m*x + b)).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82341,"byte_end":82402,"line_start":1262,"line_end":1262,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82407,"byte_end":82410,"line_start":1263,"line_end":1263,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82415,"byte_end":82451,"line_start":1264,"line_end":1264,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82456,"byte_end":82463,"line_start":1265,"line_end":1265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82776,"byte_end":82781,"line_start":1277,"line_end":1277,"column_start":8,"column_end":13},"name":"recip","qualname":"::float::Float::recip","value":"pub fn recip(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Take the reciprocal (inverse) of a number, `1/x`.","sig":null,"attributes":[{"value":"/ Take the reciprocal (inverse) of a number, `1/x`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82516,"byte_end":82569,"line_start":1267,"line_end":1267,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82574,"byte_end":82577,"line_start":1268,"line_end":1268,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82582,"byte_end":82589,"line_start":1269,"line_end":1269,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82594,"byte_end":82620,"line_start":1270,"line_end":1270,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82625,"byte_end":82628,"line_start":1271,"line_end":1271,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82633,"byte_end":82649,"line_start":1272,"line_end":1272,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.recip() - (1.0/x)).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82654,"byte_end":82707,"line_start":1273,"line_end":1273,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82712,"byte_end":82715,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82720,"byte_end":82756,"line_start":1275,"line_end":1275,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82761,"byte_end":82768,"line_start":1276,"line_end":1276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83118,"byte_end":83122,"line_start":1291,"line_end":1291,"column_start":8,"column_end":12},"name":"powi","qualname":"::float::Float::powi","value":"pub fn powi(Self, i32) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Raise a number to an integer power.","sig":null,"attributes":[{"value":"/ Raise a number to an integer power.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82802,"byte_end":82841,"line_start":1279,"line_end":1279,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82846,"byte_end":82849,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ Using this function is generally faster than using `powf`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82854,"byte_end":82915,"line_start":1281,"line_end":1281,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82920,"byte_end":82923,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82928,"byte_end":82935,"line_start":1283,"line_end":1283,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82940,"byte_end":82966,"line_start":1284,"line_end":1284,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82971,"byte_end":82974,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":82979,"byte_end":82995,"line_start":1286,"line_end":1286,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.powi(2) - x*x).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83000,"byte_end":83049,"line_start":1287,"line_end":1287,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83054,"byte_end":83057,"line_start":1288,"line_end":1288,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83062,"byte_end":83098,"line_start":1289,"line_end":1289,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83103,"byte_end":83110,"line_start":1290,"line_end":1290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83401,"byte_end":83405,"line_start":1303,"line_end":1303,"column_start":8,"column_end":12},"name":"powf","qualname":"::float::Float::powf","value":"pub fn powf(Self, Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Raise a number to a floating point power.","sig":null,"attributes":[{"value":"/ Raise a number to a floating point power.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83151,"byte_end":83196,"line_start":1293,"line_end":1293,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83201,"byte_end":83204,"line_start":1294,"line_end":1294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83209,"byte_end":83216,"line_start":1295,"line_end":1295,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83221,"byte_end":83247,"line_start":1296,"line_end":1296,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83252,"byte_end":83255,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83260,"byte_end":83276,"line_start":1298,"line_end":1298,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.powf(2.0) - x*x).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83281,"byte_end":83332,"line_start":1299,"line_end":1299,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83337,"byte_end":83340,"line_start":1300,"line_end":1300,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83345,"byte_end":83381,"line_start":1301,"line_end":1301,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83386,"byte_end":83393,"line_start":1302,"line_end":1302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83828,"byte_end":83832,"line_start":1320,"line_end":1320,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::float::Float::sqrt","value":"pub fn sqrt(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Take the square root of a number.","sig":null,"attributes":[{"value":"/ Take the square root of a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83435,"byte_end":83472,"line_start":1305,"line_end":1305,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83477,"byte_end":83480,"line_start":1306,"line_end":1306,"column_start":5,"column_end":8}},{"value":"/ Returns NaN if `self` is a negative number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83485,"byte_end":83532,"line_start":1307,"line_end":1307,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83537,"byte_end":83540,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83545,"byte_end":83552,"line_start":1309,"line_end":1309,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83557,"byte_end":83583,"line_start":1310,"line_end":1310,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83588,"byte_end":83591,"line_start":1311,"line_end":1311,"column_start":5,"column_end":8}},{"value":"/ let positive = 4.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83596,"byte_end":83619,"line_start":1312,"line_end":1312,"column_start":5,"column_end":28}},{"value":"/ let negative = -4.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83624,"byte_end":83648,"line_start":1313,"line_end":1313,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83653,"byte_end":83656,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (positive.sqrt() - 2.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83661,"byte_end":83716,"line_start":1315,"line_end":1315,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83721,"byte_end":83724,"line_start":1316,"line_end":1316,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83729,"byte_end":83765,"line_start":1317,"line_end":1317,"column_start":5,"column_end":41}},{"value":"/ assert!(negative.sqrt().is_nan());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83770,"byte_end":83808,"line_start":1318,"line_end":1318,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83813,"byte_end":83820,"line_start":1319,"line_end":1319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84182,"byte_end":84185,"line_start":1336,"line_end":1336,"column_start":8,"column_end":11},"name":"exp","qualname":"::float::Float::exp","value":"pub fn exp(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `e^(self)`, (the exponential function).","sig":null,"attributes":[{"value":"/ Returns `e^(self)`, (the exponential function).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83853,"byte_end":83904,"line_start":1322,"line_end":1322,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83909,"byte_end":83912,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83917,"byte_end":83924,"line_start":1324,"line_end":1324,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83929,"byte_end":83955,"line_start":1325,"line_end":1325,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83960,"byte_end":83963,"line_start":1326,"line_end":1326,"column_start":5,"column_end":8}},{"value":"/ let one = 1.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83968,"byte_end":83986,"line_start":1327,"line_end":1327,"column_start":5,"column_end":23}},{"value":"/ // e^1","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":83991,"byte_end":84001,"line_start":1328,"line_end":1328,"column_start":5,"column_end":15}},{"value":"/ let e = one.exp();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84006,"byte_end":84028,"line_start":1329,"line_end":1329,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84033,"byte_end":84036,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ // ln(e) - 1 == 0","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84041,"byte_end":84062,"line_start":1331,"line_end":1331,"column_start":5,"column_end":26}},{"value":"/ let abs_difference = (e.ln() - 1.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84067,"byte_end":84113,"line_start":1332,"line_end":1332,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84118,"byte_end":84121,"line_start":1333,"line_end":1333,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84126,"byte_end":84162,"line_start":1334,"line_end":1334,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84167,"byte_end":84174,"line_start":1335,"line_end":1335,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84463,"byte_end":84467,"line_start":1350,"line_end":1350,"column_start":8,"column_end":12},"name":"exp2","qualname":"::float::Float::exp2","value":"pub fn exp2(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `2^(self)`.","sig":null,"attributes":[{"value":"/ Returns `2^(self)`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84206,"byte_end":84229,"line_start":1338,"line_end":1338,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84234,"byte_end":84237,"line_start":1339,"line_end":1339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84242,"byte_end":84249,"line_start":1340,"line_end":1340,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84254,"byte_end":84280,"line_start":1341,"line_end":1341,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84285,"byte_end":84288,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ let f = 2.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84293,"byte_end":84309,"line_start":1343,"line_end":1343,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84314,"byte_end":84317,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ // 2^2 - 4 == 0","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84322,"byte_end":84341,"line_start":1345,"line_end":1345,"column_start":5,"column_end":24}},{"value":"/ let abs_difference = (f.exp2() - 4.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84346,"byte_end":84394,"line_start":1346,"line_end":1346,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84399,"byte_end":84402,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84407,"byte_end":84443,"line_start":1348,"line_end":1348,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84448,"byte_end":84455,"line_start":1349,"line_end":1349,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84814,"byte_end":84816,"line_start":1366,"line_end":1366,"column_start":8,"column_end":10},"name":"ln","qualname":"::float::Float::ln","value":"pub fn ln(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the natural logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the natural logarithm of the number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84488,"byte_end":84536,"line_start":1352,"line_end":1352,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84541,"byte_end":84544,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84549,"byte_end":84556,"line_start":1354,"line_end":1354,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84561,"byte_end":84587,"line_start":1355,"line_end":1355,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84592,"byte_end":84595,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ let one = 1.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84600,"byte_end":84618,"line_start":1357,"line_end":1357,"column_start":5,"column_end":23}},{"value":"/ // e^1","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84623,"byte_end":84633,"line_start":1358,"line_end":1358,"column_start":5,"column_end":15}},{"value":"/ let e = one.exp();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84638,"byte_end":84660,"line_start":1359,"line_end":1359,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84665,"byte_end":84668,"line_start":1360,"line_end":1360,"column_start":5,"column_end":8}},{"value":"/ // ln(e) - 1 == 0","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84673,"byte_end":84694,"line_start":1361,"line_end":1361,"column_start":5,"column_end":26}},{"value":"/ let abs_difference = (e.ln() - 1.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84699,"byte_end":84745,"line_start":1362,"line_end":1362,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84750,"byte_end":84753,"line_start":1363,"line_end":1363,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84758,"byte_end":84794,"line_start":1364,"line_end":1364,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84799,"byte_end":84806,"line_start":1365,"line_end":1365,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85326,"byte_end":85329,"line_start":1385,"line_end":1385,"column_start":8,"column_end":11},"name":"log","qualname":"::float::Float::log","value":"pub fn log(Self, Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the logarithm of the number with respect to an arbitrary base.","sig":null,"attributes":[{"value":"/ Returns the logarithm of the number with respect to an arbitrary base.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84837,"byte_end":84911,"line_start":1368,"line_end":1368,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84916,"byte_end":84919,"line_start":1369,"line_end":1369,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84924,"byte_end":84931,"line_start":1370,"line_end":1370,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84936,"byte_end":84962,"line_start":1371,"line_end":1371,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84967,"byte_end":84970,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ let ten = 10.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84975,"byte_end":84994,"line_start":1373,"line_end":1373,"column_start":5,"column_end":24}},{"value":"/ let two = 2.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":84999,"byte_end":85017,"line_start":1374,"line_end":1374,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85022,"byte_end":85025,"line_start":1375,"line_end":1375,"column_start":5,"column_end":8}},{"value":"/ // log10(10) - 1 == 0","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85030,"byte_end":85055,"line_start":1376,"line_end":1376,"column_start":5,"column_end":30}},{"value":"/ let abs_difference_10 = (ten.log(10.0) - 1.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85060,"byte_end":85116,"line_start":1377,"line_end":1377,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85121,"byte_end":85124,"line_start":1378,"line_end":1378,"column_start":5,"column_end":8}},{"value":"/ // log2(2) - 1 == 0","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85129,"byte_end":85152,"line_start":1379,"line_end":1379,"column_start":5,"column_end":28}},{"value":"/ let abs_difference_2 = (two.log(2.0) - 1.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85157,"byte_end":85211,"line_start":1380,"line_end":1380,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85216,"byte_end":85219,"line_start":1381,"line_end":1381,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_10 < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85224,"byte_end":85263,"line_start":1382,"line_end":1382,"column_start":5,"column_end":44}},{"value":"/ assert!(abs_difference_2 < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85268,"byte_end":85306,"line_start":1383,"line_end":1383,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85311,"byte_end":85318,"line_start":1384,"line_end":1384,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85651,"byte_end":85655,"line_start":1399,"line_end":1399,"column_start":8,"column_end":12},"name":"log2","qualname":"::float::Float::log2","value":"pub fn log2(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the base 2 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 2 logarithm of the number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85362,"byte_end":85409,"line_start":1387,"line_end":1387,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85414,"byte_end":85417,"line_start":1388,"line_end":1388,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85422,"byte_end":85429,"line_start":1389,"line_end":1389,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85434,"byte_end":85460,"line_start":1390,"line_end":1390,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85465,"byte_end":85468,"line_start":1391,"line_end":1391,"column_start":5,"column_end":8}},{"value":"/ let two = 2.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85473,"byte_end":85491,"line_start":1392,"line_end":1392,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85496,"byte_end":85499,"line_start":1393,"line_end":1393,"column_start":5,"column_end":8}},{"value":"/ // log2(2) - 1 == 0","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85504,"byte_end":85527,"line_start":1394,"line_end":1394,"column_start":5,"column_end":28}},{"value":"/ let abs_difference = (two.log2() - 1.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85532,"byte_end":85582,"line_start":1395,"line_end":1395,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85587,"byte_end":85590,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85595,"byte_end":85631,"line_start":1397,"line_end":1397,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85636,"byte_end":85643,"line_start":1398,"line_end":1398,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85970,"byte_end":85975,"line_start":1413,"line_end":1413,"column_start":8,"column_end":13},"name":"log10","qualname":"::float::Float::log10","value":"pub fn log10(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the base 10 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 10 logarithm of the number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85676,"byte_end":85724,"line_start":1401,"line_end":1401,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85729,"byte_end":85732,"line_start":1402,"line_end":1402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85737,"byte_end":85744,"line_start":1403,"line_end":1403,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85749,"byte_end":85775,"line_start":1404,"line_end":1404,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85780,"byte_end":85783,"line_start":1405,"line_end":1405,"column_start":5,"column_end":8}},{"value":"/ let ten = 10.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85788,"byte_end":85807,"line_start":1406,"line_end":1406,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85812,"byte_end":85815,"line_start":1407,"line_end":1407,"column_start":5,"column_end":8}},{"value":"/ // log10(10) - 1 == 0","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85820,"byte_end":85845,"line_start":1408,"line_end":1408,"column_start":5,"column_end":30}},{"value":"/ let abs_difference = (ten.log10() - 1.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85850,"byte_end":85901,"line_start":1409,"line_end":1409,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85906,"byte_end":85909,"line_start":1410,"line_end":1410,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85914,"byte_end":85950,"line_start":1411,"line_end":1411,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85955,"byte_end":85962,"line_start":1412,"line_end":1412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86274,"byte_end":86284,"line_start":1427,"line_end":1427,"column_start":8,"column_end":18},"name":"to_degrees","qualname":"::float::Float::to_degrees","value":"pub fn to_degrees(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Converts radians to degrees.","sig":null,"attributes":[{"value":"/ Converts radians to degrees.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":85996,"byte_end":86028,"line_start":1415,"line_end":1415,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86033,"byte_end":86036,"line_start":1416,"line_end":1416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86041,"byte_end":86048,"line_start":1417,"line_end":1417,"column_start":5,"column_end":12}},{"value":"/ use std::f64::consts;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86053,"byte_end":86078,"line_start":1418,"line_end":1418,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86083,"byte_end":86086,"line_start":1419,"line_end":1419,"column_start":5,"column_end":8}},{"value":"/ let angle = consts::PI;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86091,"byte_end":86118,"line_start":1420,"line_end":1420,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86123,"byte_end":86126,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (angle.to_degrees() - 180.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86131,"byte_end":86191,"line_start":1422,"line_end":1422,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86196,"byte_end":86199,"line_start":1423,"line_end":1423,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86204,"byte_end":86240,"line_start":1424,"line_end":1424,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86245,"byte_end":86252,"line_start":1425,"line_end":1425,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86257,"byte_end":86266,"line_start":1426,"line_end":1426,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86715,"byte_end":86725,"line_start":1445,"line_end":1445,"column_start":8,"column_end":18},"name":"to_radians","qualname":"::float::Float::to_radians","value":"pub fn to_radians(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Converts degrees to radians.","sig":null,"attributes":[{"value":"/ Converts degrees to radians.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86433,"byte_end":86465,"line_start":1433,"line_end":1433,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86470,"byte_end":86473,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86478,"byte_end":86485,"line_start":1435,"line_end":1435,"column_start":5,"column_end":12}},{"value":"/ use std::f64::consts;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86490,"byte_end":86515,"line_start":1436,"line_end":1436,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86520,"byte_end":86523,"line_start":1437,"line_end":1437,"column_start":5,"column_end":8}},{"value":"/ let angle = 180.0_f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86528,"byte_end":86554,"line_start":1438,"line_end":1438,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86559,"byte_end":86562,"line_start":1439,"line_end":1439,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (angle.to_radians() - consts::PI).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86567,"byte_end":86632,"line_start":1440,"line_end":1440,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86637,"byte_end":86640,"line_start":1441,"line_end":1441,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86645,"byte_end":86681,"line_start":1442,"line_end":1442,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86686,"byte_end":86693,"line_start":1443,"line_end":1443,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86698,"byte_end":86707,"line_start":1444,"line_end":1444,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87079,"byte_end":87082,"line_start":1461,"line_end":1461,"column_start":8,"column_end":11},"name":"max","qualname":"::float::Float::max","value":"pub fn max(Self, Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the maximum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the maximum of the two numbers.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86874,"byte_end":86917,"line_start":1451,"line_end":1451,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86922,"byte_end":86925,"line_start":1452,"line_end":1452,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86930,"byte_end":86937,"line_start":1453,"line_end":1453,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86942,"byte_end":86968,"line_start":1454,"line_end":1454,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86973,"byte_end":86976,"line_start":1455,"line_end":1455,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":86981,"byte_end":86997,"line_start":1456,"line_end":1456,"column_start":5,"column_end":21}},{"value":"/ let y = 2.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87002,"byte_end":87018,"line_start":1457,"line_end":1457,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87023,"byte_end":87026,"line_start":1458,"line_end":1458,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x.max(y), y);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87031,"byte_end":87059,"line_start":1459,"line_end":1459,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87064,"byte_end":87071,"line_start":1460,"line_end":1460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87321,"byte_end":87324,"line_start":1473,"line_end":1473,"column_start":8,"column_end":11},"name":"min","qualname":"::float::Float::min","value":"pub fn min(Self, Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the minimum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the minimum of the two numbers.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87116,"byte_end":87159,"line_start":1463,"line_end":1463,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87164,"byte_end":87167,"line_start":1464,"line_end":1464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87172,"byte_end":87179,"line_start":1465,"line_end":1465,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87184,"byte_end":87210,"line_start":1466,"line_end":1466,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87215,"byte_end":87218,"line_start":1467,"line_end":1467,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87223,"byte_end":87239,"line_start":1468,"line_end":1468,"column_start":5,"column_end":21}},{"value":"/ let y = 2.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87244,"byte_end":87260,"line_start":1469,"line_end":1469,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87265,"byte_end":87268,"line_start":1470,"line_end":1470,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x.min(y), x);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87273,"byte_end":87301,"line_start":1471,"line_end":1471,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87306,"byte_end":87313,"line_start":1472,"line_end":1472,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88139,"byte_end":88143,"line_start":1506,"line_end":1506,"column_start":8,"column_end":12},"name":"cbrt","qualname":"::float::Float::cbrt","value":"pub fn cbrt(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87358,"byte_end":87401,"line_start":1475,"line_end":1475,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87406,"byte_end":87409,"line_start":1476,"line_end":1476,"column_start":5,"column_end":8}},{"value":"/ * If `self <= other`: `0:0`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87414,"byte_end":87445,"line_start":1477,"line_end":1477,"column_start":5,"column_end":36}},{"value":"/ * Else: `self - other`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87450,"byte_end":87476,"line_start":1478,"line_end":1478,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87481,"byte_end":87484,"line_start":1479,"line_end":1479,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87489,"byte_end":87496,"line_start":1480,"line_end":1480,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87501,"byte_end":87527,"line_start":1481,"line_end":1481,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87532,"byte_end":87535,"line_start":1482,"line_end":1482,"column_start":5,"column_end":8}},{"value":"/ let x = 3.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87540,"byte_end":87556,"line_start":1483,"line_end":1483,"column_start":5,"column_end":21}},{"value":"/ let y = -3.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87561,"byte_end":87578,"line_start":1484,"line_end":1484,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87583,"byte_end":87586,"line_start":1485,"line_end":1485,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_x = (x.abs_sub(1.0) - 2.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87591,"byte_end":87647,"line_start":1486,"line_end":1486,"column_start":5,"column_end":61}},{"value":"/ let abs_difference_y = (y.abs_sub(1.0) - 0.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87652,"byte_end":87708,"line_start":1487,"line_end":1487,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87713,"byte_end":87716,"line_start":1488,"line_end":1488,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87721,"byte_end":87759,"line_start":1489,"line_end":1489,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87764,"byte_end":87802,"line_start":1490,"line_end":1490,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87807,"byte_end":87814,"line_start":1491,"line_end":1491,"column_start":5,"column_end":12}},{"value":"/ Take the cubic root of a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87865,"byte_end":87901,"line_start":1494,"line_end":1494,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87906,"byte_end":87909,"line_start":1495,"line_end":1495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87914,"byte_end":87921,"line_start":1496,"line_end":1496,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87926,"byte_end":87952,"line_start":1497,"line_end":1497,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87957,"byte_end":87960,"line_start":1498,"line_end":1498,"column_start":5,"column_end":8}},{"value":"/ let x = 8.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87965,"byte_end":87981,"line_start":1499,"line_end":1499,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87986,"byte_end":87989,"line_start":1500,"line_end":1500,"column_start":5,"column_end":8}},{"value":"/ // x^(1/3) - 2 == 0","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":87994,"byte_end":88017,"line_start":1501,"line_end":1501,"column_start":5,"column_end":28}},{"value":"/ let abs_difference = (x.cbrt() - 2.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88022,"byte_end":88070,"line_start":1502,"line_end":1502,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88075,"byte_end":88078,"line_start":1503,"line_end":1503,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88083,"byte_end":88119,"line_start":1504,"line_end":1504,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88124,"byte_end":88131,"line_start":1505,"line_end":1505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88561,"byte_end":88566,"line_start":1522,"line_end":1522,"column_start":8,"column_end":13},"name":"hypot","qualname":"::float::Float::hypot","value":"pub fn hypot(Self, Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Calculate the length of the hypotenuse of a right-angle triangle given\n legs of length `x` and `y`.","sig":null,"attributes":[{"value":"/ Calculate the length of the hypotenuse of a right-angle triangle given","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88164,"byte_end":88238,"line_start":1508,"line_end":1508,"column_start":5,"column_end":79}},{"value":"/ legs of length `x` and `y`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88243,"byte_end":88274,"line_start":1509,"line_end":1509,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88279,"byte_end":88282,"line_start":1510,"line_end":1510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88287,"byte_end":88294,"line_start":1511,"line_end":1511,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88299,"byte_end":88325,"line_start":1512,"line_end":1512,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88330,"byte_end":88333,"line_start":1513,"line_end":1513,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88338,"byte_end":88354,"line_start":1514,"line_end":1514,"column_start":5,"column_end":21}},{"value":"/ let y = 3.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88359,"byte_end":88375,"line_start":1515,"line_end":1515,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88380,"byte_end":88383,"line_start":1516,"line_end":1516,"column_start":5,"column_end":8}},{"value":"/ // sqrt(x^2 + y^2)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88388,"byte_end":88410,"line_start":1517,"line_end":1517,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (x.hypot(y) - (x.powi(2) + y.powi(2)).sqrt()).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88415,"byte_end":88492,"line_start":1518,"line_end":1518,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88497,"byte_end":88500,"line_start":1519,"line_end":1519,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88505,"byte_end":88541,"line_start":1520,"line_end":1520,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88546,"byte_end":88553,"line_start":1521,"line_end":1521,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88894,"byte_end":88897,"line_start":1536,"line_end":1536,"column_start":8,"column_end":11},"name":"sin","qualname":"::float::Float::sin","value":"pub fn sin(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Computes the sine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the sine of a number (in radians).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88600,"byte_end":88647,"line_start":1524,"line_end":1524,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88652,"byte_end":88655,"line_start":1525,"line_end":1525,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88660,"byte_end":88667,"line_start":1526,"line_end":1526,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88672,"byte_end":88698,"line_start":1527,"line_end":1527,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88703,"byte_end":88720,"line_start":1528,"line_end":1528,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88725,"byte_end":88728,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/2.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88733,"byte_end":88765,"line_start":1530,"line_end":1530,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88770,"byte_end":88773,"line_start":1531,"line_end":1531,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (x.sin() - 1.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88778,"byte_end":88825,"line_start":1532,"line_end":1532,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88830,"byte_end":88833,"line_start":1533,"line_end":1533,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88838,"byte_end":88874,"line_start":1534,"line_end":1534,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88879,"byte_end":88886,"line_start":1535,"line_end":1535,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89214,"byte_end":89217,"line_start":1550,"line_end":1550,"column_start":8,"column_end":11},"name":"cos","qualname":"::float::Float::cos","value":"pub fn cos(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Computes the cosine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the cosine of a number (in radians).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88918,"byte_end":88967,"line_start":1538,"line_end":1538,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88972,"byte_end":88975,"line_start":1539,"line_end":1539,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88980,"byte_end":88987,"line_start":1540,"line_end":1540,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":88992,"byte_end":89018,"line_start":1541,"line_end":1541,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89023,"byte_end":89040,"line_start":1542,"line_end":1542,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89045,"byte_end":89048,"line_start":1543,"line_end":1543,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0*f64::consts::PI;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89053,"byte_end":89085,"line_start":1544,"line_end":1544,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89090,"byte_end":89093,"line_start":1545,"line_end":1545,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (x.cos() - 1.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89098,"byte_end":89145,"line_start":1546,"line_end":1546,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89150,"byte_end":89153,"line_start":1547,"line_end":1547,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89158,"byte_end":89194,"line_start":1548,"line_end":1548,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89199,"byte_end":89206,"line_start":1549,"line_end":1549,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89527,"byte_end":89530,"line_start":1563,"line_end":1563,"column_start":8,"column_end":11},"name":"tan","qualname":"::float::Float::tan","value":"pub fn tan(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Computes the tangent of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the tangent of a number (in radians).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89238,"byte_end":89288,"line_start":1552,"line_end":1552,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89293,"byte_end":89296,"line_start":1553,"line_end":1553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89301,"byte_end":89308,"line_start":1554,"line_end":1554,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89313,"byte_end":89339,"line_start":1555,"line_end":1555,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89344,"byte_end":89361,"line_start":1556,"line_end":1556,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89366,"byte_end":89369,"line_start":1557,"line_end":1557,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/4.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89374,"byte_end":89406,"line_start":1558,"line_end":1558,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (x.tan() - 1.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89411,"byte_end":89458,"line_start":1559,"line_end":1559,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89463,"byte_end":89466,"line_start":1560,"line_end":1560,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-14);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89471,"byte_end":89507,"line_start":1561,"line_end":1561,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89512,"byte_end":89519,"line_start":1562,"line_end":1562,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90010,"byte_end":90014,"line_start":1580,"line_end":1580,"column_start":8,"column_end":12},"name":"asin","qualname":"::float::Float::asin","value":"pub fn asin(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Computes the arcsine of a number. Return value is in radians in\n the range [-pi/2, pi/2] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arcsine of a number. Return value is in radians in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89551,"byte_end":89618,"line_start":1565,"line_end":1565,"column_start":5,"column_end":72}},{"value":"/ the range [-pi/2, pi/2] or NaN if the number is outside the range","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89623,"byte_end":89692,"line_start":1566,"line_end":1566,"column_start":5,"column_end":74}},{"value":"/ [-1, 1].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89697,"byte_end":89709,"line_start":1567,"line_end":1567,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89714,"byte_end":89717,"line_start":1568,"line_end":1568,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89722,"byte_end":89729,"line_start":1569,"line_end":1569,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89734,"byte_end":89760,"line_start":1570,"line_end":1570,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89765,"byte_end":89782,"line_start":1571,"line_end":1571,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89787,"byte_end":89790,"line_start":1572,"line_end":1572,"column_start":5,"column_end":8}},{"value":"/ let f = f64::consts::PI / 2.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89795,"byte_end":89829,"line_start":1573,"line_end":1573,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89834,"byte_end":89837,"line_start":1574,"line_end":1574,"column_start":5,"column_end":8}},{"value":"/ // asin(sin(pi/2))","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89842,"byte_end":89864,"line_start":1575,"line_end":1575,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (f.sin().asin() - f64::consts::PI / 2.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89869,"byte_end":89941,"line_start":1576,"line_end":1576,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89946,"byte_end":89949,"line_start":1577,"line_end":1577,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89954,"byte_end":89990,"line_start":1578,"line_end":1578,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":89995,"byte_end":90002,"line_start":1579,"line_end":1579,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90490,"byte_end":90494,"line_start":1597,"line_end":1597,"column_start":8,"column_end":12},"name":"acos","qualname":"::float::Float::acos","value":"pub fn acos(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Computes the arccosine of a number. Return value is in radians in\n the range [0, pi] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arccosine of a number. Return value is in radians in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90035,"byte_end":90104,"line_start":1582,"line_end":1582,"column_start":5,"column_end":74}},{"value":"/ the range [0, pi] or NaN if the number is outside the range","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90109,"byte_end":90172,"line_start":1583,"line_end":1583,"column_start":5,"column_end":68}},{"value":"/ [-1, 1].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90177,"byte_end":90189,"line_start":1584,"line_end":1584,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90194,"byte_end":90197,"line_start":1585,"line_end":1585,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90202,"byte_end":90209,"line_start":1586,"line_end":1586,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90214,"byte_end":90240,"line_start":1587,"line_end":1587,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90245,"byte_end":90262,"line_start":1588,"line_end":1588,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90267,"byte_end":90270,"line_start":1589,"line_end":1589,"column_start":5,"column_end":8}},{"value":"/ let f = f64::consts::PI / 4.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90275,"byte_end":90309,"line_start":1590,"line_end":1590,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90314,"byte_end":90317,"line_start":1591,"line_end":1591,"column_start":5,"column_end":8}},{"value":"/ // acos(cos(pi/4))","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90322,"byte_end":90344,"line_start":1592,"line_end":1592,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (f.cos().acos() - f64::consts::PI / 4.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90349,"byte_end":90421,"line_start":1593,"line_end":1593,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90426,"byte_end":90429,"line_start":1594,"line_end":1594,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90434,"byte_end":90470,"line_start":1595,"line_end":1595,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90475,"byte_end":90482,"line_start":1596,"line_end":1596,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90858,"byte_end":90862,"line_start":1612,"line_end":1612,"column_start":8,"column_end":12},"name":"atan","qualname":"::float::Float::atan","value":"pub fn atan(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Computes the arctangent of a number. Return value is in radians in the\n range [-pi/2, pi/2];","sig":null,"attributes":[{"value":"/ Computes the arctangent of a number. Return value is in radians in the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90515,"byte_end":90589,"line_start":1599,"line_end":1599,"column_start":5,"column_end":79}},{"value":"/ range [-pi/2, pi/2];","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90594,"byte_end":90618,"line_start":1600,"line_end":1600,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90623,"byte_end":90626,"line_start":1601,"line_end":1601,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90631,"byte_end":90638,"line_start":1602,"line_end":1602,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90643,"byte_end":90669,"line_start":1603,"line_end":1603,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90674,"byte_end":90677,"line_start":1604,"line_end":1604,"column_start":5,"column_end":8}},{"value":"/ let f = 1.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90682,"byte_end":90698,"line_start":1605,"line_end":1605,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90703,"byte_end":90706,"line_start":1606,"line_end":1606,"column_start":5,"column_end":8}},{"value":"/ // atan(tan(1))","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90711,"byte_end":90730,"line_start":1607,"line_end":1607,"column_start":5,"column_end":24}},{"value":"/ let abs_difference = (f.tan().atan() - 1.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90735,"byte_end":90789,"line_start":1608,"line_end":1608,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90794,"byte_end":90797,"line_start":1609,"line_end":1609,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90802,"byte_end":90838,"line_start":1610,"line_end":1610,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90843,"byte_end":90850,"line_start":1611,"line_end":1611,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91743,"byte_end":91748,"line_start":1641,"line_end":1641,"column_start":8,"column_end":13},"name":"atan2","qualname":"::float::Float::atan2","value":"pub fn atan2(Self, Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).","sig":null,"attributes":[{"value":"/ Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90883,"byte_end":90959,"line_start":1614,"line_end":1614,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90964,"byte_end":90967,"line_start":1615,"line_end":1615,"column_start":5,"column_end":8}},{"value":"/ * `x = 0`, `y = 0`: `0`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":90972,"byte_end":90999,"line_start":1616,"line_end":1616,"column_start":5,"column_end":32}},{"value":"/ * `x >= 0`: `arctan(y/x)` -> `[-pi/2, pi/2]`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91004,"byte_end":91052,"line_start":1617,"line_end":1617,"column_start":5,"column_end":53}},{"value":"/ * `y >= 0`: `arctan(y/x) + pi` -> `(pi/2, pi]`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91057,"byte_end":91107,"line_start":1618,"line_end":1618,"column_start":5,"column_end":55}},{"value":"/ * `y < 0`: `arctan(y/x) - pi` -> `(-pi, -pi/2)`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91112,"byte_end":91163,"line_start":1619,"line_end":1619,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91168,"byte_end":91171,"line_start":1620,"line_end":1620,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91176,"byte_end":91183,"line_start":1621,"line_end":1621,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91188,"byte_end":91214,"line_start":1622,"line_end":1622,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91219,"byte_end":91236,"line_start":1623,"line_end":1623,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91241,"byte_end":91244,"line_start":1624,"line_end":1624,"column_start":5,"column_end":8}},{"value":"/ let pi = f64::consts::PI;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91249,"byte_end":91278,"line_start":1625,"line_end":1625,"column_start":5,"column_end":34}},{"value":"/ // All angles from horizontal right (+x)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91283,"byte_end":91327,"line_start":1626,"line_end":1626,"column_start":5,"column_end":49}},{"value":"/ // 45 deg counter-clockwise","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91332,"byte_end":91363,"line_start":1627,"line_end":1627,"column_start":5,"column_end":36}},{"value":"/ let x1 = 3.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91368,"byte_end":91385,"line_start":1628,"line_end":1628,"column_start":5,"column_end":22}},{"value":"/ let y1 = -3.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91390,"byte_end":91408,"line_start":1629,"line_end":1629,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91413,"byte_end":91416,"line_start":1630,"line_end":1630,"column_start":5,"column_end":8}},{"value":"/ // 135 deg clockwise","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91421,"byte_end":91445,"line_start":1631,"line_end":1631,"column_start":5,"column_end":29}},{"value":"/ let x2 = -3.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91450,"byte_end":91468,"line_start":1632,"line_end":1632,"column_start":5,"column_end":23}},{"value":"/ let y2 = 3.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91473,"byte_end":91490,"line_start":1633,"line_end":1633,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91495,"byte_end":91498,"line_start":1634,"line_end":1634,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_1 = (y1.atan2(x1) - (-pi/4.0)).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91503,"byte_end":91563,"line_start":1635,"line_end":1635,"column_start":5,"column_end":65}},{"value":"/ let abs_difference_2 = (y2.atan2(x2) - 3.0*pi/4.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91568,"byte_end":91629,"line_start":1636,"line_end":1636,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91634,"byte_end":91637,"line_start":1637,"line_end":1637,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_1 < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91642,"byte_end":91680,"line_start":1638,"line_end":1638,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_2 < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91685,"byte_end":91723,"line_start":1639,"line_end":1639,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91728,"byte_end":91735,"line_start":1640,"line_end":1640,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92262,"byte_end":92269,"line_start":1659,"line_end":1659,"column_start":8,"column_end":15},"name":"sin_cos","qualname":"::float::Float::sin_cos","value":"pub fn sin_cos(Self) -> (Self, Self)","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Simultaneously computes the sine and cosine of the number, `x`. Returns\n `(sin(x), cos(x))`.","sig":null,"attributes":[{"value":"/ Simultaneously computes the sine and cosine of the number, `x`. Returns","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91782,"byte_end":91857,"line_start":1643,"line_end":1643,"column_start":5,"column_end":80}},{"value":"/ `(sin(x), cos(x))`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91862,"byte_end":91885,"line_start":1644,"line_end":1644,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91890,"byte_end":91893,"line_start":1645,"line_end":1645,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91898,"byte_end":91905,"line_start":1646,"line_end":1646,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91910,"byte_end":91936,"line_start":1647,"line_end":1647,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91941,"byte_end":91958,"line_start":1648,"line_end":1648,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91963,"byte_end":91966,"line_start":1649,"line_end":1649,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/4.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":91971,"byte_end":92003,"line_start":1650,"line_end":1650,"column_start":5,"column_end":37}},{"value":"/ let f = x.sin_cos();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92008,"byte_end":92032,"line_start":1651,"line_end":1651,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92037,"byte_end":92040,"line_start":1652,"line_end":1652,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_0 = (f.0 - x.sin()).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92045,"byte_end":92094,"line_start":1653,"line_end":1653,"column_start":5,"column_end":54}},{"value":"/ let abs_difference_1 = (f.1 - x.cos()).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92099,"byte_end":92148,"line_start":1654,"line_end":1654,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92153,"byte_end":92156,"line_start":1655,"line_end":1655,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_0 < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92161,"byte_end":92199,"line_start":1656,"line_end":1656,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_0 < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92204,"byte_end":92242,"line_start":1657,"line_end":1657,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92247,"byte_end":92254,"line_start":1658,"line_end":1658,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92637,"byte_end":92643,"line_start":1674,"line_end":1674,"column_start":8,"column_end":14},"name":"exp_m1","qualname":"::float::Float::exp_m1","value":"pub fn exp_m1(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `e^(self) - 1` in a way that is accurate even if the\n number is close to zero.","sig":null,"attributes":[{"value":"/ Returns `e^(self) - 1` in a way that is accurate even if the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92298,"byte_end":92362,"line_start":1661,"line_end":1661,"column_start":5,"column_end":69}},{"value":"/ number is close to zero.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92367,"byte_end":92395,"line_start":1662,"line_end":1662,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92400,"byte_end":92403,"line_start":1663,"line_end":1663,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92408,"byte_end":92415,"line_start":1664,"line_end":1664,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92420,"byte_end":92446,"line_start":1665,"line_end":1665,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92451,"byte_end":92454,"line_start":1666,"line_end":1666,"column_start":5,"column_end":8}},{"value":"/ let x = 7.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92459,"byte_end":92475,"line_start":1667,"line_end":1667,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92480,"byte_end":92483,"line_start":1668,"line_end":1668,"column_start":5,"column_end":8}},{"value":"/ // e^(ln(7)) - 1","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92488,"byte_end":92508,"line_start":1669,"line_end":1669,"column_start":5,"column_end":25}},{"value":"/ let abs_difference = (x.ln().exp_m1() - 6.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92513,"byte_end":92568,"line_start":1670,"line_end":1670,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92573,"byte_end":92576,"line_start":1671,"line_end":1671,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92581,"byte_end":92617,"line_start":1672,"line_end":1672,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92622,"byte_end":92629,"line_start":1673,"line_end":1673,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93070,"byte_end":93075,"line_start":1690,"line_end":1690,"column_start":8,"column_end":13},"name":"ln_1p","qualname":"::float::Float::ln_1p","value":"pub fn ln_1p(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `ln(1+n)` (natural logarithm) more accurately than if\n the operations were performed separately.","sig":null,"attributes":[{"value":"/ Returns `ln(1+n)` (natural logarithm) more accurately than if","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92664,"byte_end":92729,"line_start":1676,"line_end":1676,"column_start":5,"column_end":70}},{"value":"/ the operations were performed separately.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92734,"byte_end":92779,"line_start":1677,"line_end":1677,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92784,"byte_end":92787,"line_start":1678,"line_end":1678,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92792,"byte_end":92799,"line_start":1679,"line_end":1679,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92804,"byte_end":92830,"line_start":1680,"line_end":1680,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92835,"byte_end":92852,"line_start":1681,"line_end":1681,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92857,"byte_end":92860,"line_start":1682,"line_end":1682,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::E - 1.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92865,"byte_end":92898,"line_start":1683,"line_end":1683,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92903,"byte_end":92906,"line_start":1684,"line_end":1684,"column_start":5,"column_end":8}},{"value":"/ // ln(1 + (e - 1)) == ln(e) == 1","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92911,"byte_end":92947,"line_start":1685,"line_end":1685,"column_start":5,"column_end":41}},{"value":"/ let abs_difference = (x.ln_1p() - 1.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":92952,"byte_end":93001,"line_start":1686,"line_end":1686,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93006,"byte_end":93009,"line_start":1687,"line_end":1687,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93014,"byte_end":93050,"line_start":1688,"line_end":1688,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93055,"byte_end":93062,"line_start":1689,"line_end":1689,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93495,"byte_end":93499,"line_start":1708,"line_end":1708,"column_start":8,"column_end":12},"name":"sinh","qualname":"::float::Float::sinh","value":"pub fn sinh(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Hyperbolic sine function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93096,"byte_end":93125,"line_start":1692,"line_end":1692,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93130,"byte_end":93133,"line_start":1693,"line_end":1693,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93138,"byte_end":93145,"line_start":1694,"line_end":1694,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93150,"byte_end":93176,"line_start":1695,"line_end":1695,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93181,"byte_end":93198,"line_start":1696,"line_end":1696,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93203,"byte_end":93206,"line_start":1697,"line_end":1697,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93211,"byte_end":93238,"line_start":1698,"line_end":1698,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93243,"byte_end":93259,"line_start":1699,"line_end":1699,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93264,"byte_end":93267,"line_start":1700,"line_end":1700,"column_start":5,"column_end":8}},{"value":"/ let f = x.sinh();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93272,"byte_end":93293,"line_start":1701,"line_end":1701,"column_start":5,"column_end":26}},{"value":"/ // Solving sinh() at 1 gives `(e^2-1)/(2e)`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93298,"byte_end":93345,"line_start":1702,"line_end":1702,"column_start":5,"column_end":52}},{"value":"/ let g = (e*e - 1.0)/(2.0*e);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93350,"byte_end":93382,"line_start":1703,"line_end":1703,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93387,"byte_end":93426,"line_start":1704,"line_end":1704,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93431,"byte_end":93434,"line_start":1705,"line_end":1705,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93439,"byte_end":93475,"line_start":1706,"line_end":1706,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93480,"byte_end":93487,"line_start":1707,"line_end":1707,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93935,"byte_end":93939,"line_start":1726,"line_end":1726,"column_start":8,"column_end":12},"name":"cosh","qualname":"::float::Float::cosh","value":"pub fn cosh(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Hyperbolic cosine function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93520,"byte_end":93551,"line_start":1710,"line_end":1710,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93556,"byte_end":93559,"line_start":1711,"line_end":1711,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93564,"byte_end":93571,"line_start":1712,"line_end":1712,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93576,"byte_end":93602,"line_start":1713,"line_end":1713,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93607,"byte_end":93624,"line_start":1714,"line_end":1714,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93629,"byte_end":93632,"line_start":1715,"line_end":1715,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93637,"byte_end":93664,"line_start":1716,"line_end":1716,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93669,"byte_end":93685,"line_start":1717,"line_end":1717,"column_start":5,"column_end":21}},{"value":"/ let f = x.cosh();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93690,"byte_end":93711,"line_start":1718,"line_end":1718,"column_start":5,"column_end":26}},{"value":"/ // Solving cosh() at 1 gives this result","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93716,"byte_end":93760,"line_start":1719,"line_end":1719,"column_start":5,"column_end":49}},{"value":"/ let g = (e*e + 1.0)/(2.0*e);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93765,"byte_end":93797,"line_start":1720,"line_end":1720,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93802,"byte_end":93841,"line_start":1721,"line_end":1721,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93846,"byte_end":93849,"line_start":1722,"line_end":1722,"column_start":5,"column_end":8}},{"value":"/ // Same result","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93854,"byte_end":93872,"line_start":1723,"line_end":1723,"column_start":5,"column_end":23}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93877,"byte_end":93915,"line_start":1724,"line_end":1724,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93920,"byte_end":93927,"line_start":1725,"line_end":1725,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94395,"byte_end":94399,"line_start":1744,"line_end":1744,"column_start":8,"column_end":12},"name":"tanh","qualname":"::float::Float::tanh","value":"pub fn tanh(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Hyperbolic tangent function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93960,"byte_end":93992,"line_start":1728,"line_end":1728,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":93997,"byte_end":94000,"line_start":1729,"line_end":1729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94005,"byte_end":94012,"line_start":1730,"line_end":1730,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94017,"byte_end":94043,"line_start":1731,"line_end":1731,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94048,"byte_end":94065,"line_start":1732,"line_end":1732,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94070,"byte_end":94073,"line_start":1733,"line_end":1733,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94078,"byte_end":94105,"line_start":1734,"line_end":1734,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94110,"byte_end":94126,"line_start":1735,"line_end":1735,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94131,"byte_end":94134,"line_start":1736,"line_end":1736,"column_start":5,"column_end":8}},{"value":"/ let f = x.tanh();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94139,"byte_end":94160,"line_start":1737,"line_end":1737,"column_start":5,"column_end":26}},{"value":"/ // Solving tanh() at 1 gives `(1 - e^(-2))/(1 + e^(-2))`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94165,"byte_end":94225,"line_start":1738,"line_end":1738,"column_start":5,"column_end":65}},{"value":"/ let g = (1.0 - e.powi(-2))/(1.0 + e.powi(-2));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94230,"byte_end":94280,"line_start":1739,"line_end":1739,"column_start":5,"column_end":55}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94285,"byte_end":94324,"line_start":1740,"line_end":1740,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94329,"byte_end":94332,"line_start":1741,"line_end":1741,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94337,"byte_end":94375,"line_start":1742,"line_end":1742,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94380,"byte_end":94387,"line_start":1743,"line_end":1743,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94694,"byte_end":94699,"line_start":1758,"line_end":1758,"column_start":8,"column_end":13},"name":"asinh","qualname":"::float::Float::asinh","value":"pub fn asinh(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Inverse hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic sine function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94420,"byte_end":94457,"line_start":1746,"line_end":1746,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94462,"byte_end":94465,"line_start":1747,"line_end":1747,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94470,"byte_end":94477,"line_start":1748,"line_end":1748,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94482,"byte_end":94508,"line_start":1749,"line_end":1749,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94513,"byte_end":94516,"line_start":1750,"line_end":1750,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94521,"byte_end":94537,"line_start":1751,"line_end":1751,"column_start":5,"column_end":21}},{"value":"/ let f = x.sinh().asinh();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94542,"byte_end":94571,"line_start":1752,"line_end":1752,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94576,"byte_end":94579,"line_start":1753,"line_end":1753,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - x).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94584,"byte_end":94623,"line_start":1754,"line_end":1754,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94628,"byte_end":94631,"line_start":1755,"line_end":1755,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94636,"byte_end":94674,"line_start":1756,"line_end":1756,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94679,"byte_end":94686,"line_start":1757,"line_end":1757,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94996,"byte_end":95001,"line_start":1772,"line_end":1772,"column_start":8,"column_end":13},"name":"acosh","qualname":"::float::Float::acosh","value":"pub fn acosh(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Inverse hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic cosine function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94720,"byte_end":94759,"line_start":1760,"line_end":1760,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94764,"byte_end":94767,"line_start":1761,"line_end":1761,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94772,"byte_end":94779,"line_start":1762,"line_end":1762,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94784,"byte_end":94810,"line_start":1763,"line_end":1763,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94815,"byte_end":94818,"line_start":1764,"line_end":1764,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94823,"byte_end":94839,"line_start":1765,"line_end":1765,"column_start":5,"column_end":21}},{"value":"/ let f = x.cosh().acosh();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94844,"byte_end":94873,"line_start":1766,"line_end":1766,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94878,"byte_end":94881,"line_start":1767,"line_end":1767,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - x).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94886,"byte_end":94925,"line_start":1768,"line_end":1768,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94930,"byte_end":94933,"line_start":1769,"line_end":1769,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94938,"byte_end":94976,"line_start":1770,"line_end":1770,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":94981,"byte_end":94988,"line_start":1771,"line_end":1771,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95332,"byte_end":95337,"line_start":1787,"line_end":1787,"column_start":8,"column_end":13},"name":"atanh","qualname":"::float::Float::atanh","value":"pub fn atanh(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Inverse hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic tangent function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95022,"byte_end":95062,"line_start":1774,"line_end":1774,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95067,"byte_end":95070,"line_start":1775,"line_end":1775,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95075,"byte_end":95082,"line_start":1776,"line_end":1776,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95087,"byte_end":95113,"line_start":1777,"line_end":1777,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95118,"byte_end":95135,"line_start":1778,"line_end":1778,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95140,"byte_end":95143,"line_start":1779,"line_end":1779,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95148,"byte_end":95175,"line_start":1780,"line_end":1780,"column_start":5,"column_end":32}},{"value":"/ let f = e.tanh().atanh();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95180,"byte_end":95209,"line_start":1781,"line_end":1781,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95214,"byte_end":95217,"line_start":1782,"line_end":1782,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - e).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95222,"byte_end":95261,"line_start":1783,"line_end":1783,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95266,"byte_end":95269,"line_start":1784,"line_end":1784,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95274,"byte_end":95312,"line_start":1785,"line_end":1785,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95317,"byte_end":95324,"line_start":1786,"line_end":1786,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":96029,"byte_end":96043,"line_start":1808,"line_end":1808,"column_start":8,"column_end":22},"name":"integer_decode","qualname":"::float::Float::integer_decode","value":"pub fn integer_decode(Self) -> (u64, i16, i8)","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the mantissa, base 2 exponent, and sign as integers, respectively.\n The original number can be recovered by `sign * mantissa * 2 ^ exponent`.","sig":null,"attributes":[{"value":"/ Returns the mantissa, base 2 exponent, and sign as integers, respectively.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95358,"byte_end":95436,"line_start":1789,"line_end":1789,"column_start":5,"column_end":83}},{"value":"/ The original number can be recovered by `sign * mantissa * 2 ^ exponent`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95441,"byte_end":95518,"line_start":1790,"line_end":1790,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95523,"byte_end":95526,"line_start":1791,"line_end":1791,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95531,"byte_end":95538,"line_start":1792,"line_end":1792,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95543,"byte_end":95569,"line_start":1793,"line_end":1793,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95574,"byte_end":95577,"line_start":1794,"line_end":1794,"column_start":5,"column_end":8}},{"value":"/ let num = 2.0f32;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95582,"byte_end":95603,"line_start":1795,"line_end":1795,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95608,"byte_end":95611,"line_start":1796,"line_end":1796,"column_start":5,"column_end":8}},{"value":"/ // (8388608, -22, 1)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95616,"byte_end":95640,"line_start":1797,"line_end":1797,"column_start":5,"column_end":29}},{"value":"/ let (mantissa, exponent, sign) = Float::integer_decode(num);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95645,"byte_end":95709,"line_start":1798,"line_end":1798,"column_start":5,"column_end":69}},{"value":"/ let sign_f = sign as f32;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95714,"byte_end":95743,"line_start":1799,"line_end":1799,"column_start":5,"column_end":34}},{"value":"/ let mantissa_f = mantissa as f32;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95748,"byte_end":95785,"line_start":1800,"line_end":1800,"column_start":5,"column_end":42}},{"value":"/ let exponent_f = num.powf(exponent as f32);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95790,"byte_end":95837,"line_start":1801,"line_end":1801,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95842,"byte_end":95845,"line_start":1802,"line_end":1802,"column_start":5,"column_end":8}},{"value":"/ // 1 * 8388608 * 2^(-22) == 2","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95850,"byte_end":95883,"line_start":1803,"line_end":1803,"column_start":5,"column_end":38}},{"value":"/ let abs_difference = (sign_f * mantissa_f * exponent_f - num).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95888,"byte_end":95960,"line_start":1804,"line_end":1804,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95965,"byte_end":95968,"line_start":1805,"line_end":1805,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":95973,"byte_end":96009,"line_start":1806,"line_end":1806,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":96014,"byte_end":96021,"line_start":1807,"line_end":1807,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2101},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":107726,"byte_end":107727,"line_start":2265,"line_end":2265,"column_start":5,"column_end":6},"name":"E","qualname":"::float::FloatConst::E","value":"pub fn E() -> Self","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":"Return Euler’s number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2102},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":107767,"byte_end":107776,"line_start":2267,"line_end":2267,"column_start":5,"column_end":14},"name":"FRAC_1_PI","qualname":"::float::FloatConst::FRAC_1_PI","value":"pub fn FRAC_1_PI() -> Self","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":"Return `1.0 / π`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":107823,"byte_end":107836,"line_start":2269,"line_end":2269,"column_start":5,"column_end":18},"name":"FRAC_1_SQRT_2","qualname":"::float::FloatConst::FRAC_1_SQRT_2","value":"pub fn FRAC_1_SQRT_2() -> Self","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":"Return `1.0 / sqrt(2.0)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":107876,"byte_end":107885,"line_start":2271,"line_end":2271,"column_start":5,"column_end":14},"name":"FRAC_2_PI","qualname":"::float::FloatConst::FRAC_2_PI","value":"pub fn FRAC_2_PI() -> Self","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":"Return `2.0 / π`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2105},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":107931,"byte_end":107945,"line_start":2273,"line_end":2273,"column_start":5,"column_end":19},"name":"FRAC_2_SQRT_PI","qualname":"::float::FloatConst::FRAC_2_SQRT_PI","value":"pub fn FRAC_2_SQRT_PI() -> Self","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":"Return `2.0 / sqrt(π)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":107985,"byte_end":107994,"line_start":2275,"line_end":2275,"column_start":5,"column_end":14},"name":"FRAC_PI_2","qualname":"::float::FloatConst::FRAC_PI_2","value":"pub fn FRAC_PI_2() -> Self","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":"Return `π / 2.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2107},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":108034,"byte_end":108043,"line_start":2277,"line_end":2277,"column_start":5,"column_end":14},"name":"FRAC_PI_3","qualname":"::float::FloatConst::FRAC_PI_3","value":"pub fn FRAC_PI_3() -> Self","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":"Return `π / 3.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2108},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":108083,"byte_end":108092,"line_start":2279,"line_end":2279,"column_start":5,"column_end":14},"name":"FRAC_PI_4","qualname":"::float::FloatConst::FRAC_PI_4","value":"pub fn FRAC_PI_4() -> Self","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":"Return `π / 4.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2109},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":108132,"byte_end":108141,"line_start":2281,"line_end":2281,"column_start":5,"column_end":14},"name":"FRAC_PI_6","qualname":"::float::FloatConst::FRAC_PI_6","value":"pub fn FRAC_PI_6() -> Self","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":"Return `π / 6.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":108181,"byte_end":108190,"line_start":2283,"line_end":2283,"column_start":5,"column_end":14},"name":"FRAC_PI_8","qualname":"::float::FloatConst::FRAC_PI_8","value":"pub fn FRAC_PI_8() -> Self","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":"Return `π / 8.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":108230,"byte_end":108235,"line_start":2285,"line_end":2285,"column_start":5,"column_end":10},"name":"LN_10","qualname":"::float::FloatConst::LN_10","value":"pub fn LN_10() -> Self","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":"Return `ln(10.0)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":108274,"byte_end":108278,"line_start":2287,"line_end":2287,"column_start":5,"column_end":9},"name":"LN_2","qualname":"::float::FloatConst::LN_2","value":"pub fn LN_2() -> Self","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":"Return `ln(2.0)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2113},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":108318,"byte_end":108325,"line_start":2289,"line_end":2289,"column_start":5,"column_end":12},"name":"LOG10_E","qualname":"::float::FloatConst::LOG10_E","value":"pub fn LOG10_E() -> Self","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":"Return `log10(e)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":108364,"byte_end":108370,"line_start":2291,"line_end":2291,"column_start":5,"column_end":11},"name":"LOG2_E","qualname":"::float::FloatConst::LOG2_E","value":"pub fn LOG2_E() -> Self","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":"Return `log2(e)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":108422,"byte_end":108424,"line_start":2293,"line_end":2293,"column_start":5,"column_end":7},"name":"PI","qualname":"::float::FloatConst::PI","value":"pub fn PI() -> Self","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":"Return Archimedes’ constant.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2116},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":108465,"byte_end":108471,"line_start":2295,"line_end":2295,"column_start":5,"column_end":11},"name":"SQRT_2","qualname":"::float::FloatConst::SQRT_2","value":"pub fn SQRT_2() -> Self","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":"Return `sqrt(2.0)`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":287},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"identities","qualname":"::identities","value":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":4548},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":2151},{"krate":0,"index":2154},{"krate":0,"index":2157},{"krate":0,"index":2160},{"krate":0,"index":2163},{"krate":0,"index":2166},{"krate":0,"index":2169},{"krate":0,"index":2172},{"krate":0,"index":2175},{"krate":0,"index":2178},{"krate":0,"index":2181},{"krate":0,"index":2184},{"krate":0,"index":2187},{"krate":0,"index":2190},{"krate":0,"index":297},{"krate":0,"index":302},{"krate":0,"index":2193},{"krate":0,"index":2196},{"krate":0,"index":2199},{"krate":0,"index":2202},{"krate":0,"index":2205},{"krate":0,"index":2208},{"krate":0,"index":2211},{"krate":0,"index":2214},{"krate":0,"index":2217},{"krate":0,"index":2220},{"krate":0,"index":2223},{"krate":0,"index":2226},{"krate":0,"index":2229},{"krate":0,"index":2232},{"krate":0,"index":307},{"krate":0,"index":311},{"krate":0,"index":313}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":292},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":110378,"byte_end":110382,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"name":"Zero","qualname":"::identities::Zero","value":"Zero: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295}],"decl_id":null,"docs":" Defines an additive identity element for `Self`.","sig":null,"attributes":[{"value":"/ Defines an additive identity element for `Self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":110203,"byte_end":110255,"line_start":4,"line_end":4,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":110256,"byte_end":110259,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Laws","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":110260,"byte_end":110270,"line_start":6,"line_end":6,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":110271,"byte_end":110274,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```{.text}","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":110275,"byte_end":110289,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/ a + 0 = a       ∀ a ∈ Self","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":110290,"byte_end":110324,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/ 0 + a = a       ∀ a ∈ Self","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":110325,"byte_end":110359,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":110360,"byte_end":110367,"line_start":11,"line_end":11,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":110752,"byte_end":110756,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"zero","qualname":"::identities::Zero::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":" Returns the additive identity element of `Self`, `0`.\n # Purity","sig":null,"attributes":[{"value":"/ Returns the additive identity element of `Self`, `0`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":110423,"byte_end":110480,"line_start":13,"line_end":13,"column_start":5,"column_end":62}},{"value":"/ # Purity","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":110485,"byte_end":110497,"line_start":14,"line_end":14,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":110502,"byte_end":110505,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ This function should return the same result at all times regardless of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":110510,"byte_end":110584,"line_start":16,"line_end":16,"column_start":5,"column_end":79}},{"value":"/ external mutable state, for example values stored in TLS or in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":110589,"byte_end":110655,"line_start":17,"line_end":17,"column_start":5,"column_end":71}},{"value":"/ `static mut`s.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":110660,"byte_end":110678,"line_start":18,"line_end":18,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":110845,"byte_end":110853,"line_start":23,"line_end":23,"column_start":8,"column_end":16},"name":"set_zero","qualname":"::identities::Zero::set_zero","value":"pub fn set_zero(&mut Self)","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":" Sets `self` to the additive identity element of `Self`, `0`.\n","sig":null,"attributes":[{"value":"/ Sets `self` to the additive identity element of `Self`, `0`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":110773,"byte_end":110837,"line_start":22,"line_end":22,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":110979,"byte_end":110986,"line_start":28,"line_end":28,"column_start":8,"column_end":15},"name":"is_zero","qualname":"::identities::Zero::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is equal to the additive identity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is equal to the additive identity.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":110908,"byte_end":110971,"line_start":27,"line_end":27,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":302},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":112073,"byte_end":112076,"line_start":90,"line_end":90,"column_start":11,"column_end":14},"name":"One","qualname":"::identities::One","value":"One: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305}],"decl_id":null,"docs":" Defines a multiplicative identity element for `Self`.","sig":null,"attributes":[{"value":"/ Defines a multiplicative identity element for `Self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":111893,"byte_end":111950,"line_start":82,"line_end":82,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":111951,"byte_end":111954,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ # Laws","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":111955,"byte_end":111965,"line_start":84,"line_end":84,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":111966,"byte_end":111969,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ ```{.text}","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":111970,"byte_end":111984,"line_start":86,"line_end":86,"column_start":1,"column_end":15}},{"value":"/ a * 1 = a       ∀ a ∈ Self","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":111985,"byte_end":112019,"line_start":87,"line_end":87,"column_start":1,"column_end":31}},{"value":"/ 1 * a = a       ∀ a ∈ Self","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":112020,"byte_end":112054,"line_start":88,"line_end":88,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":112055,"byte_end":112062,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":112460,"byte_end":112463,"line_start":99,"line_end":99,"column_start":8,"column_end":11},"name":"one","qualname":"::identities::One::one","value":"pub fn one() -> Self","parent":{"krate":0,"index":302},"children":[],"decl_id":null,"docs":" Returns the multiplicative identity element of `Self`, `1`.","sig":null,"attributes":[{"value":"/ Returns the multiplicative identity element of `Self`, `1`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":112117,"byte_end":112180,"line_start":91,"line_end":91,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":112185,"byte_end":112188,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Purity","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":112193,"byte_end":112205,"line_start":93,"line_end":93,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":112210,"byte_end":112213,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This function should return the same result at all times regardless of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":112218,"byte_end":112292,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/ external mutable state, for example values stored in TLS or in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":112297,"byte_end":112363,"line_start":96,"line_end":96,"column_start":5,"column_end":71}},{"value":"/ `static mut`s.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":112368,"byte_end":112386,"line_start":97,"line_end":97,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":112558,"byte_end":112565,"line_start":102,"line_end":102,"column_start":8,"column_end":15},"name":"set_one","qualname":"::identities::One::set_one","value":"pub fn set_one(&mut Self)","parent":{"krate":0,"index":302},"children":[],"decl_id":null,"docs":" Sets `self` to the multiplicative identity element of `Self`, `1`.\n","sig":null,"attributes":[{"value":"/ Sets `self` to the multiplicative identity element of `Self`, `1`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":112480,"byte_end":112550,"line_start":101,"line_end":101,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":112910,"byte_end":112916,"line_start":112,"line_end":112,"column_start":8,"column_end":14},"name":"is_one","qualname":"::identities::One::is_one","value":"pub fn is_one(&Self) -> bool where Self: PartialEq","parent":{"krate":0,"index":302},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is equal to the multiplicative identity.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is equal to the multiplicative identity.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":112618,"byte_end":112687,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":112692,"byte_end":112695,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ For performance reasons, it's best to implement this manually.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":112700,"byte_end":112766,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/ After a semver bump, this method will be required, and the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":112771,"byte_end":112833,"line_start":109,"line_end":109,"column_start":5,"column_end":67}},{"value":"/ `where Self: PartialEq` bound will be removed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":112838,"byte_end":112888,"line_start":110,"line_end":110,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":112893,"byte_end":112902,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":311},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":113939,"byte_end":113943,"line_start":171,"line_end":171,"column_start":8,"column_end":12},"name":"zero","qualname":"::identities::zero","value":"pub fn zero<T: Zero>() -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the additive identity, `0`.\n","sig":null,"attributes":[{"value":"/ Returns the additive identity, `0`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":113874,"byte_end":113913,"line_start":169,"line_end":169,"column_start":1,"column_end":40}},{"value":"inline(always)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":113914,"byte_end":113931,"line_start":170,"line_end":170,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":313},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":114053,"byte_end":114056,"line_start":177,"line_end":177,"column_start":8,"column_end":11},"name":"one","qualname":"::identities::one","value":"pub fn one<T: One>() -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplicative identity, `1`.\n","sig":null,"attributes":[{"value":"/ Returns the multiplicative identity, `1`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":113982,"byte_end":114027,"line_start":175,"line_end":175,"column_start":1,"column_end":46}},{"value":"inline(always)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":114028,"byte_end":114045,"line_start":176,"line_end":176,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":315},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"int","qualname":"::int","value":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":2235},{"krate":0,"index":2252},{"krate":0,"index":2269},{"krate":0,"index":2286},{"krate":0,"index":2303},{"krate":0,"index":2320},{"krate":0,"index":2337},{"krate":0,"index":2354},{"krate":0,"index":2371},{"krate":0,"index":2388},{"krate":0,"index":2405},{"krate":0,"index":2422}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":329},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116628,"byte_end":116635,"line_start":34,"line_end":34,"column_start":11,"column_end":18},"name":"PrimInt","qualname":"::int::PrimInt","value":"PrimInt: Sized + Copy + Num + NumCast + Bounded + PartialOrd + Ord + Eq + Not<Output =\nSelf> + BitAnd<Output = Self> + BitOr<Output = Self> + BitXor<Output = Self> +\nShl<usize, Output = Self> + Shr<usize, Output = Self> + CheckedAdd<Output =\nSelf> + CheckedSub<Output = Self> + CheckedMul<Output = Self> +\nCheckedDiv<Output = Self> + Saturating","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345}],"decl_id":null,"docs":" Generic trait for primitive integers.","sig":null,"attributes":[{"value":"/ Generic trait for primitive integers.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":114972,"byte_end":115013,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":115014,"byte_end":115017,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The `PrimInt` trait is an abstraction over the builtin primitive integer types (e.g., `u8`,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":115018,"byte_end":115113,"line_start":10,"line_end":10,"column_start":1,"column_end":96}},{"value":"/ `u32`, `isize`, `i128`, ...). It inherits the basic numeric traits and extends them with","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":115114,"byte_end":115206,"line_start":11,"line_end":11,"column_start":1,"column_end":93}},{"value":"/ bitwise operators and non-wrapping arithmetic.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":115207,"byte_end":115257,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":115258,"byte_end":115261,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The trait explicitly inherits `Copy`, `Eq`, `Ord`, and `Sized`. The intention is that all","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":115262,"byte_end":115355,"line_start":14,"line_end":14,"column_start":1,"column_end":94}},{"value":"/ types implementing this trait behave like primitive types that are passed by value by default","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":115356,"byte_end":115453,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ and behave like builtin integers. Furthermore, the types are expected to expose the integer","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":115454,"byte_end":115549,"line_start":16,"line_end":16,"column_start":1,"column_end":96}},{"value":"/ value in binary representation and support bitwise operators. The standard bitwise operations","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":115550,"byte_end":115647,"line_start":17,"line_end":17,"column_start":1,"column_end":98}},{"value":"/ (e.g., bitwise-and, bitwise-or, right-shift, left-shift) are inherited and the trait extends","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":115648,"byte_end":115744,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ these with introspective queries (e.g., `PrimInt::count_ones()`, `PrimInt::leading_zeros()`),","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":115745,"byte_end":115842,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ bitwise combinators (e.g., `PrimInt::rotate_left()`), and endianness converters (e.g.,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":115843,"byte_end":115933,"line_start":20,"line_end":20,"column_start":1,"column_end":91}},{"value":"/ `PrimInt::to_be()`).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":115934,"byte_end":115958,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":115959,"byte_end":115962,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All `PrimInt` types are expected to be fixed-width binary integers. The width can be queried","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":115963,"byte_end":116059,"line_start":23,"line_end":23,"column_start":1,"column_end":97}},{"value":"/ via `T::zero().count_zeros()`. The trait currently lacks a way to query the width at","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116060,"byte_end":116148,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ compile-time.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116149,"byte_end":116166,"line_start":25,"line_end":25,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116167,"byte_end":116170,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ While a default implementation for all builtin primitive integers is provided, the trait is in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116171,"byte_end":116269,"line_start":27,"line_end":27,"column_start":1,"column_end":99}},{"value":"/ no way restricted to these. Other integer types that fulfil the requirements are free to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116270,"byte_end":116362,"line_start":28,"line_end":28,"column_start":1,"column_end":93}},{"value":"/ implement the trait was well.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116363,"byte_end":116396,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116397,"byte_end":116400,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This trait and many of the method names originate in the unstable `core::num::Int` trait from","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116401,"byte_end":116498,"line_start":31,"line_end":31,"column_start":1,"column_end":98}},{"value":"/ the rust standard library. The original trait was never stabilized and thus removed from the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116499,"byte_end":116595,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/ standard library.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116596,"byte_end":116617,"line_start":33,"line_end":33,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117310,"byte_end":117320,"line_start":66,"line_end":66,"column_start":8,"column_end":18},"name":"count_ones","qualname":"::int::PrimInt::count_ones","value":"pub fn count_ones(Self) -> u32","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Returns the number of ones in the binary representation of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of ones in the binary representation of `self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117055,"byte_end":117125,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117130,"byte_end":117133,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117138,"byte_end":117152,"line_start":57,"line_end":57,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117157,"byte_end":117160,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117165,"byte_end":117172,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117177,"byte_end":117205,"line_start":60,"line_end":60,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117210,"byte_end":117213,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let n = 0b01001100u8;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117218,"byte_end":117243,"line_start":62,"line_end":62,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117248,"byte_end":117251,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.count_ones(), 3);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117256,"byte_end":117290,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117295,"byte_end":117302,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117597,"byte_end":117608,"line_start":79,"line_end":79,"column_start":8,"column_end":19},"name":"count_zeros","qualname":"::int::PrimInt::count_zeros","value":"pub fn count_zeros(Self) -> u32","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Returns the number of zeros in the binary representation of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of zeros in the binary representation of `self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117340,"byte_end":117411,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117416,"byte_end":117419,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117424,"byte_end":117438,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117443,"byte_end":117446,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117451,"byte_end":117458,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117463,"byte_end":117491,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117496,"byte_end":117499,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let n = 0b01001100u8;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117504,"byte_end":117529,"line_start":75,"line_end":75,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117534,"byte_end":117537,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.count_zeros(), 5);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117542,"byte_end":117577,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117582,"byte_end":117589,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117904,"byte_end":117917,"line_start":93,"line_end":93,"column_start":8,"column_end":21},"name":"leading_zeros","qualname":"::int::PrimInt::leading_zeros","value":"pub fn leading_zeros(Self) -> u32","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Returns the number of leading zeros in the binary representation\n of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of leading zeros in the binary representation","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117628,"byte_end":117696,"line_start":81,"line_end":81,"column_start":5,"column_end":73}},{"value":"/ of `self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117701,"byte_end":117715,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117720,"byte_end":117723,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117728,"byte_end":117742,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117747,"byte_end":117750,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117755,"byte_end":117762,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117767,"byte_end":117795,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117800,"byte_end":117803,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let n = 0b0101000u16;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117808,"byte_end":117833,"line_start":89,"line_end":89,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117838,"byte_end":117841,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.leading_zeros(), 10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117846,"byte_end":117884,"line_start":91,"line_end":91,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117889,"byte_end":117896,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118214,"byte_end":118228,"line_start":107,"line_end":107,"column_start":8,"column_end":22},"name":"trailing_zeros","qualname":"::int::PrimInt::trailing_zeros","value":"pub fn trailing_zeros(Self) -> u32","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Returns the number of trailing zeros in the binary representation\n of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of trailing zeros in the binary representation","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117937,"byte_end":118006,"line_start":95,"line_end":95,"column_start":5,"column_end":74}},{"value":"/ of `self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118011,"byte_end":118025,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118030,"byte_end":118033,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118038,"byte_end":118052,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118057,"byte_end":118060,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118065,"byte_end":118072,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118077,"byte_end":118105,"line_start":101,"line_end":101,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118110,"byte_end":118113,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let n = 0b0101000u16;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118118,"byte_end":118143,"line_start":103,"line_end":103,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118148,"byte_end":118151,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.trailing_zeros(), 3);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118156,"byte_end":118194,"line_start":105,"line_end":105,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118199,"byte_end":118206,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118623,"byte_end":118634,"line_start":122,"line_end":122,"column_start":8,"column_end":19},"name":"rotate_left","qualname":"::int::PrimInt::rotate_left","value":"pub fn rotate_left(Self, u32) -> Self","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Shifts the bits to the left by a specified amount amount, `n`, wrapping\n the truncated bits to the end of the resulting integer.","sig":null,"attributes":[{"value":"/ Shifts the bits to the left by a specified amount amount, `n`, wrapping","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118248,"byte_end":118323,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/ the truncated bits to the end of the resulting integer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118328,"byte_end":118387,"line_start":110,"line_end":110,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118392,"byte_end":118395,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118400,"byte_end":118414,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118419,"byte_end":118422,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118427,"byte_end":118434,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118439,"byte_end":118467,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118472,"byte_end":118475,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118480,"byte_end":118514,"line_start":117,"line_end":117,"column_start":5,"column_end":39}},{"value":"/ let m = 0x3456789ABCDEF012u64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118519,"byte_end":118553,"line_start":118,"line_end":118,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118558,"byte_end":118561,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.rotate_left(12), m);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118566,"byte_end":118603,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118608,"byte_end":118615,"line_start":121,"line_end":121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119046,"byte_end":119058,"line_start":137,"line_end":137,"column_start":8,"column_end":20},"name":"rotate_right","qualname":"::int::PrimInt::rotate_right","value":"pub fn rotate_right(Self, u32) -> Self","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Shifts the bits to the right by a specified amount amount, `n`, wrapping\n the truncated bits to the beginning of the resulting integer.","sig":null,"attributes":[{"value":"/ Shifts the bits to the right by a specified amount amount, `n`, wrapping","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118663,"byte_end":118739,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/ the truncated bits to the beginning of the resulting integer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118744,"byte_end":118809,"line_start":125,"line_end":125,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118814,"byte_end":118817,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118822,"byte_end":118836,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118841,"byte_end":118844,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118849,"byte_end":118856,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118861,"byte_end":118889,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118894,"byte_end":118897,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118902,"byte_end":118936,"line_start":132,"line_end":132,"column_start":5,"column_end":39}},{"value":"/ let m = 0xDEF0123456789ABCu64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118941,"byte_end":118975,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118980,"byte_end":118983,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.rotate_right(12), m);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":118988,"byte_end":119026,"line_start":135,"line_end":135,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119031,"byte_end":119038,"line_start":136,"line_end":136,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119501,"byte_end":119511,"line_start":154,"line_end":154,"column_start":8,"column_end":18},"name":"signed_shl","qualname":"::int::PrimInt::signed_shl","value":"pub fn signed_shl(Self, u32) -> Self","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Shifts the bits to the left by a specified amount amount, `n`, filling\n zeros in the least significant bits.","sig":null,"attributes":[{"value":"/ Shifts the bits to the left by a specified amount amount, `n`, filling","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119087,"byte_end":119161,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"/ zeros in the least significant bits.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119166,"byte_end":119206,"line_start":140,"line_end":140,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119211,"byte_end":119214,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to signed `Shl`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119219,"byte_end":119266,"line_start":142,"line_end":142,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119271,"byte_end":119274,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119279,"byte_end":119293,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119298,"byte_end":119301,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119306,"byte_end":119313,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119318,"byte_end":119346,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119351,"byte_end":119354,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119359,"byte_end":119393,"line_start":149,"line_end":149,"column_start":5,"column_end":39}},{"value":"/ let m = 0x3456789ABCDEF000u64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119398,"byte_end":119432,"line_start":150,"line_end":150,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119437,"byte_end":119440,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.signed_shl(12), m);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119445,"byte_end":119481,"line_start":152,"line_end":152,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119486,"byte_end":119493,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119987,"byte_end":119997,"line_start":171,"line_end":171,"column_start":8,"column_end":18},"name":"signed_shr","qualname":"::int::PrimInt::signed_shr","value":"pub fn signed_shr(Self, u32) -> Self","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Shifts the bits to the right by a specified amount amount, `n`, copying\n the \"sign bit\" in the most significant bits even for unsigned types.","sig":null,"attributes":[{"value":"/ Shifts the bits to the right by a specified amount amount, `n`, copying","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119540,"byte_end":119615,"line_start":156,"line_end":156,"column_start":5,"column_end":80}},{"value":"/ the \"sign bit\" in the most significant bits even for unsigned types.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119620,"byte_end":119692,"line_start":157,"line_end":157,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119697,"byte_end":119700,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to signed `Shr`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119705,"byte_end":119752,"line_start":159,"line_end":159,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119757,"byte_end":119760,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119765,"byte_end":119779,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119784,"byte_end":119787,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119792,"byte_end":119799,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119804,"byte_end":119832,"line_start":164,"line_end":164,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119837,"byte_end":119840,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let n = 0xFEDCBA9876543210u64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119845,"byte_end":119879,"line_start":166,"line_end":166,"column_start":5,"column_end":39}},{"value":"/ let m = 0xFFFFEDCBA9876543u64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119884,"byte_end":119918,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119923,"byte_end":119926,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.signed_shr(12), m);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119931,"byte_end":119967,"line_start":169,"line_end":169,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":119972,"byte_end":119979,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120444,"byte_end":120456,"line_start":188,"line_end":188,"column_start":8,"column_end":20},"name":"unsigned_shl","qualname":"::int::PrimInt::unsigned_shl","value":"pub fn unsigned_shl(Self, u32) -> Self","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Shifts the bits to the left by a specified amount amount, `n`, filling\n zeros in the least significant bits.","sig":null,"attributes":[{"value":"/ Shifts the bits to the left by a specified amount amount, `n`, filling","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120026,"byte_end":120100,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ zeros in the least significant bits.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120105,"byte_end":120145,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120150,"byte_end":120153,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to unsigned `Shl`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120158,"byte_end":120207,"line_start":176,"line_end":176,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120212,"byte_end":120215,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120220,"byte_end":120234,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120239,"byte_end":120242,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120247,"byte_end":120254,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120259,"byte_end":120287,"line_start":181,"line_end":181,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120292,"byte_end":120295,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFi64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120300,"byte_end":120334,"line_start":183,"line_end":183,"column_start":5,"column_end":39}},{"value":"/ let m = 0x3456789ABCDEF000i64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120339,"byte_end":120373,"line_start":184,"line_end":184,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120378,"byte_end":120381,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.unsigned_shl(12), m);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120386,"byte_end":120424,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120429,"byte_end":120436,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120896,"byte_end":120908,"line_start":205,"line_end":205,"column_start":8,"column_end":20},"name":"unsigned_shr","qualname":"::int::PrimInt::unsigned_shr","value":"pub fn unsigned_shr(Self, u32) -> Self","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Shifts the bits to the right by a specified amount amount, `n`, filling\n zeros in the most significant bits.","sig":null,"attributes":[{"value":"/ Shifts the bits to the right by a specified amount amount, `n`, filling","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120485,"byte_end":120560,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ zeros in the most significant bits.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120565,"byte_end":120604,"line_start":191,"line_end":191,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120609,"byte_end":120612,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to unsigned `Shr`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120617,"byte_end":120666,"line_start":193,"line_end":193,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120671,"byte_end":120674,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120679,"byte_end":120693,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120698,"byte_end":120701,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120706,"byte_end":120713,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120718,"byte_end":120746,"line_start":198,"line_end":198,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120751,"byte_end":120754,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let n = -8i8; // 0b11111000","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120759,"byte_end":120790,"line_start":200,"line_end":200,"column_start":5,"column_end":36}},{"value":"/ let m = 62i8; // 0b00111110","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120795,"byte_end":120826,"line_start":201,"line_end":201,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120831,"byte_end":120834,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.unsigned_shr(2), m);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120839,"byte_end":120876,"line_start":203,"line_end":203,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120881,"byte_end":120888,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121213,"byte_end":121223,"line_start":219,"line_end":219,"column_start":8,"column_end":18},"name":"swap_bytes","qualname":"::int::PrimInt::swap_bytes","value":"pub fn swap_bytes(Self) -> Self","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Reverses the byte order of the integer.","sig":null,"attributes":[{"value":"/ Reverses the byte order of the integer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120937,"byte_end":120980,"line_start":207,"line_end":207,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120985,"byte_end":120988,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":120993,"byte_end":121007,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121012,"byte_end":121015,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121020,"byte_end":121027,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121032,"byte_end":121060,"line_start":212,"line_end":212,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121065,"byte_end":121068,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121073,"byte_end":121107,"line_start":214,"line_end":214,"column_start":5,"column_end":39}},{"value":"/ let m = 0xEFCDAB8967452301u64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121112,"byte_end":121146,"line_start":215,"line_end":215,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121151,"byte_end":121154,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.swap_bytes(), m);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121159,"byte_end":121193,"line_start":217,"line_end":217,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121198,"byte_end":121205,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121719,"byte_end":121726,"line_start":238,"line_end":238,"column_start":8,"column_end":15},"name":"from_be","qualname":"::int::PrimInt::from_be","value":"pub fn from_be(Self) -> Self","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Convert an integer from big endian to the target's endianness.","sig":null,"attributes":[{"value":"/ Convert an integer from big endian to the target's endianness.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121244,"byte_end":121310,"line_start":221,"line_end":221,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121315,"byte_end":121318,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ On big endian this is a no-op. On little endian the bytes are swapped.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121323,"byte_end":121397,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121402,"byte_end":121405,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121410,"byte_end":121424,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121429,"byte_end":121432,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121437,"byte_end":121444,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121449,"byte_end":121477,"line_start":228,"line_end":228,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121482,"byte_end":121485,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121490,"byte_end":121524,"line_start":230,"line_end":230,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121529,"byte_end":121532,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121537,"byte_end":121573,"line_start":232,"line_end":232,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(u64::from_be(n), n)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121578,"byte_end":121616,"line_start":233,"line_end":233,"column_start":5,"column_end":43}},{"value":"/ } else {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121621,"byte_end":121633,"line_start":234,"line_end":234,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(u64::from_be(n), n.swap_bytes())","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121638,"byte_end":121689,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121694,"byte_end":121699,"line_start":236,"line_end":236,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121704,"byte_end":121711,"line_start":237,"line_end":237,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122231,"byte_end":122238,"line_start":257,"line_end":257,"column_start":8,"column_end":15},"name":"from_le","qualname":"::int::PrimInt::from_le","value":"pub fn from_le(Self) -> Self","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Convert an integer from little endian to the target's endianness.","sig":null,"attributes":[{"value":"/ Convert an integer from little endian to the target's endianness.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121750,"byte_end":121819,"line_start":240,"line_end":240,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121824,"byte_end":121827,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ On little endian this is a no-op. On big endian the bytes are swapped.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121832,"byte_end":121906,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121911,"byte_end":121914,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121919,"byte_end":121933,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121938,"byte_end":121941,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121946,"byte_end":121953,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121958,"byte_end":121986,"line_start":247,"line_end":247,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121991,"byte_end":121994,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":121999,"byte_end":122033,"line_start":249,"line_end":249,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122038,"byte_end":122041,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"little\") {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122046,"byte_end":122085,"line_start":251,"line_end":251,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(u64::from_le(n), n)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122090,"byte_end":122128,"line_start":252,"line_end":252,"column_start":5,"column_end":43}},{"value":"/ } else {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122133,"byte_end":122145,"line_start":253,"line_end":253,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(u64::from_le(n), n.swap_bytes())","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122150,"byte_end":122201,"line_start":254,"line_end":254,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122206,"byte_end":122211,"line_start":255,"line_end":255,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122216,"byte_end":122223,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122721,"byte_end":122726,"line_start":276,"line_end":276,"column_start":8,"column_end":13},"name":"to_be","qualname":"::int::PrimInt::to_be","value":"pub fn to_be(Self) -> Self","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Convert `self` to big endian from the target's endianness.","sig":null,"attributes":[{"value":"/ Convert `self` to big endian from the target's endianness.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122262,"byte_end":122324,"line_start":259,"line_end":259,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122329,"byte_end":122332,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ On big endian this is a no-op. On little endian the bytes are swapped.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122337,"byte_end":122411,"line_start":261,"line_end":261,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122416,"byte_end":122419,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122424,"byte_end":122438,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122443,"byte_end":122446,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122451,"byte_end":122458,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122463,"byte_end":122491,"line_start":266,"line_end":266,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122496,"byte_end":122499,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122504,"byte_end":122538,"line_start":268,"line_end":268,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122543,"byte_end":122546,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122551,"byte_end":122587,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(n.to_be(), n)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122592,"byte_end":122624,"line_start":271,"line_end":271,"column_start":5,"column_end":37}},{"value":"/ } else {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122629,"byte_end":122641,"line_start":272,"line_end":272,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(n.to_be(), n.swap_bytes())","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122646,"byte_end":122691,"line_start":273,"line_end":273,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122696,"byte_end":122701,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122706,"byte_end":122713,"line_start":275,"line_end":275,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":123212,"byte_end":123217,"line_start":295,"line_end":295,"column_start":8,"column_end":13},"name":"to_le","qualname":"::int::PrimInt::to_le","value":"pub fn to_le(Self) -> Self","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Convert `self` to little endian from the target's endianness.","sig":null,"attributes":[{"value":"/ Convert `self` to little endian from the target's endianness.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122747,"byte_end":122812,"line_start":278,"line_end":278,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122817,"byte_end":122820,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ On little endian this is a no-op. On big endian the bytes are swapped.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122825,"byte_end":122899,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122904,"byte_end":122907,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122912,"byte_end":122926,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122931,"byte_end":122934,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122939,"byte_end":122946,"line_start":284,"line_end":284,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122951,"byte_end":122979,"line_start":285,"line_end":285,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122984,"byte_end":122987,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":122992,"byte_end":123026,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":123031,"byte_end":123034,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"little\") {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":123039,"byte_end":123078,"line_start":289,"line_end":289,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(n.to_le(), n)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":123083,"byte_end":123115,"line_start":290,"line_end":290,"column_start":5,"column_end":37}},{"value":"/ } else {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":123120,"byte_end":123132,"line_start":291,"line_end":291,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(n.to_le(), n.swap_bytes())","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":123137,"byte_end":123182,"line_start":292,"line_end":292,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":123187,"byte_end":123192,"line_start":293,"line_end":293,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":123197,"byte_end":123204,"line_start":294,"line_end":294,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":123455,"byte_end":123458,"line_start":306,"line_end":306,"column_start":8,"column_end":11},"name":"pow","qualname":"::int::PrimInt::pow","value":"pub fn pow(Self, u32) -> Self","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Raises self to the power of `exp`, using exponentiation by squaring.","sig":null,"attributes":[{"value":"/ Raises self to the power of `exp`, using exponentiation by squaring.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":123238,"byte_end":123310,"line_start":297,"line_end":297,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":123315,"byte_end":123318,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":123323,"byte_end":123337,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":123342,"byte_end":123345,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":123350,"byte_end":123357,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":123362,"byte_end":123390,"line_start":302,"line_end":302,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":123395,"byte_end":123398,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2i32.pow(4), 16);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":123403,"byte_end":123435,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":123440,"byte_end":123447,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":347},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ops","qualname":"::ops","value":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mod.rs","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":376},{"krate":0,"index":394},{"krate":0,"index":416},{"krate":0,"index":421}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":348},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"checked","qualname":"::ops::checked","value":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":2439},{"krate":0,"index":2441},{"krate":0,"index":2443},{"krate":0,"index":2445},{"krate":0,"index":2447},{"krate":0,"index":2449},{"krate":0,"index":2451},{"krate":0,"index":2453},{"krate":0,"index":2455},{"krate":0,"index":2457},{"krate":0,"index":2459},{"krate":0,"index":2461},{"krate":0,"index":360},{"krate":0,"index":2463},{"krate":0,"index":2465},{"krate":0,"index":2467},{"krate":0,"index":2469},{"krate":0,"index":2471},{"krate":0,"index":2473},{"krate":0,"index":2475},{"krate":0,"index":2477},{"krate":0,"index":2479},{"krate":0,"index":2481},{"krate":0,"index":2483},{"krate":0,"index":2485},{"krate":0,"index":362},{"krate":0,"index":2487},{"krate":0,"index":2489},{"krate":0,"index":2491},{"krate":0,"index":2493},{"krate":0,"index":2495},{"krate":0,"index":2497},{"krate":0,"index":2499},{"krate":0,"index":2501},{"krate":0,"index":2503},{"krate":0,"index":2505},{"krate":0,"index":2507},{"krate":0,"index":2509},{"krate":0,"index":364},{"krate":0,"index":2511},{"krate":0,"index":2513},{"krate":0,"index":2515},{"krate":0,"index":2517},{"krate":0,"index":2519},{"krate":0,"index":2521},{"krate":0,"index":2523},{"krate":0,"index":2525},{"krate":0,"index":2527},{"krate":0,"index":2529},{"krate":0,"index":2531},{"krate":0,"index":2533},{"krate":0,"index":366},{"krate":0,"index":2535},{"krate":0,"index":2537},{"krate":0,"index":2539},{"krate":0,"index":2541},{"krate":0,"index":2543},{"krate":0,"index":2545},{"krate":0,"index":2547},{"krate":0,"index":2549},{"krate":0,"index":2551},{"krate":0,"index":2553},{"krate":0,"index":2555},{"krate":0,"index":2557},{"krate":0,"index":369},{"krate":0,"index":2559},{"krate":0,"index":2561},{"krate":0,"index":2563},{"krate":0,"index":2565},{"krate":0,"index":2567},{"krate":0,"index":2569},{"krate":0,"index":2571},{"krate":0,"index":2573},{"krate":0,"index":2575},{"krate":0,"index":2577},{"krate":0,"index":2579},{"krate":0,"index":2581},{"krate":0,"index":371},{"krate":0,"index":2583},{"krate":0,"index":2585},{"krate":0,"index":2587},{"krate":0,"index":2589},{"krate":0,"index":2591},{"krate":0,"index":2593},{"krate":0,"index":2595},{"krate":0,"index":2597},{"krate":0,"index":2599},{"krate":0,"index":2601},{"krate":0,"index":2603},{"krate":0,"index":2605},{"krate":0,"index":374},{"krate":0,"index":2607},{"krate":0,"index":2609},{"krate":0,"index":2611},{"krate":0,"index":2613},{"krate":0,"index":2615},{"krate":0,"index":2617},{"krate":0,"index":2619},{"krate":0,"index":2621},{"krate":0,"index":2623},{"krate":0,"index":2625},{"krate":0,"index":2627},{"krate":0,"index":2629}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":357},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":126238,"byte_end":126248,"line_start":5,"line_end":5,"column_start":11,"column_end":21},"name":"CheckedAdd","qualname":"::ops::checked::CheckedAdd","value":"CheckedAdd: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":358}],"decl_id":null,"docs":" Performs addition that returns `None` instead of wrapping around on\n overflow.\n","sig":null,"attributes":[{"value":"/ Performs addition that returns `None` instead of wrapping around on","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":126142,"byte_end":126213,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/ overflow.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":126214,"byte_end":126227,"line_start":4,"line_end":4,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":126390,"byte_end":126401,"line_start":8,"line_end":8,"column_start":8,"column_end":19},"name":"checked_add","qualname":"::ops::checked::CheckedAdd::checked_add","value":"pub fn checked_add(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":357},"children":[],"decl_id":null,"docs":" Adds two numbers, checking for overflow. If overflow happens, `None` is\n returned.\n","sig":null,"attributes":[{"value":"/ Adds two numbers, checking for overflow. If overflow happens, `None` is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":126289,"byte_end":126364,"line_start":6,"line_end":6,"column_start":5,"column_end":80}},{"value":"/ returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":126369,"byte_end":126382,"line_start":7,"line_end":7,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":360},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":127379,"byte_end":127389,"line_start":39,"line_end":39,"column_start":11,"column_end":21},"name":"CheckedSub","qualname":"::ops::checked::CheckedSub","value":"CheckedSub: Sized + Sub<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":361}],"decl_id":null,"docs":" Performs subtraction that returns `None` instead of wrapping around on underflow.\n","sig":null,"attributes":[{"value":"/ Performs subtraction that returns `None` instead of wrapping around on underflow.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":127283,"byte_end":127368,"line_start":38,"line_end":38,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":127538,"byte_end":127549,"line_start":42,"line_end":42,"column_start":8,"column_end":19},"name":"checked_sub","qualname":"::ops::checked::CheckedSub::checked_sub","value":"pub fn checked_sub(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":360},"children":[],"decl_id":null,"docs":" Subtracts two numbers, checking for underflow. If underflow happens,\n `None` is returned.\n","sig":null,"attributes":[{"value":"/ Subtracts two numbers, checking for underflow. If underflow happens,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":127430,"byte_end":127502,"line_start":40,"line_end":40,"column_start":5,"column_end":77}},{"value":"/ `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":127507,"byte_end":127530,"line_start":41,"line_end":41,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":362},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":128282,"byte_end":128292,"line_start":63,"line_end":63,"column_start":11,"column_end":21},"name":"CheckedMul","qualname":"::ops::checked::CheckedMul","value":"CheckedMul: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":363}],"decl_id":null,"docs":" Performs multiplication that returns `None` instead of wrapping around on underflow or\n overflow.\n","sig":null,"attributes":[{"value":"/ Performs multiplication that returns `None` instead of wrapping around on underflow or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":128167,"byte_end":128257,"line_start":61,"line_end":61,"column_start":1,"column_end":91}},{"value":"/ overflow.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":128258,"byte_end":128271,"line_start":62,"line_end":62,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":128466,"byte_end":128477,"line_start":66,"line_end":66,"column_start":8,"column_end":19},"name":"checked_mul","qualname":"::ops::checked::CheckedMul::checked_mul","value":"pub fn checked_mul(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":362},"children":[],"decl_id":null,"docs":" Multiplies two numbers, checking for underflow or overflow. If underflow\n or overflow happens, `None` is returned.\n","sig":null,"attributes":[{"value":"/ Multiplies two numbers, checking for underflow or overflow. If underflow","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":128333,"byte_end":128409,"line_start":64,"line_end":64,"column_start":5,"column_end":81}},{"value":"/ or overflow happens, `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":128414,"byte_end":128458,"line_start":65,"line_end":65,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":364},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":129250,"byte_end":129260,"line_start":87,"line_end":87,"column_start":11,"column_end":21},"name":"CheckedDiv","qualname":"::ops::checked::CheckedDiv","value":"CheckedDiv: Sized + Div<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":365}],"decl_id":null,"docs":" Performs division that returns `None` instead of panicking on division by zero and instead of\n wrapping around on underflow and overflow.\n","sig":null,"attributes":[{"value":"/ Performs division that returns `None` instead of panicking on division by zero and instead of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":129095,"byte_end":129192,"line_start":85,"line_end":85,"column_start":1,"column_end":98}},{"value":"/ wrapping around on underflow and overflow.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":129193,"byte_end":129239,"line_start":86,"line_end":86,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":129440,"byte_end":129451,"line_start":90,"line_end":90,"column_start":8,"column_end":19},"name":"checked_div","qualname":"::ops::checked::CheckedDiv::checked_div","value":"pub fn checked_div(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":364},"children":[],"decl_id":null,"docs":" Divides two numbers, checking for underflow, overflow and division by\n zero. If any of that happens, `None` is returned.\n","sig":null,"attributes":[{"value":"/ Divides two numbers, checking for underflow, overflow and division by","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":129301,"byte_end":129374,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ zero. If any of that happens, `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":129379,"byte_end":129432,"line_start":89,"line_end":89,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":366},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":130237,"byte_end":130247,"line_start":111,"line_end":111,"column_start":11,"column_end":21},"name":"CheckedRem","qualname":"::ops::checked::CheckedRem","value":"CheckedRem: Sized + Rem<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":367}],"decl_id":null,"docs":" Performs an integral remainder that returns `None` instead of panicking on division by zero and\n instead of wrapping around on underflow and overflow.\n","sig":null,"attributes":[{"value":"/ Performs an integral remainder that returns `None` instead of panicking on division by zero and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":130069,"byte_end":130168,"line_start":109,"line_end":109,"column_start":1,"column_end":100}},{"value":"/ instead of wrapping around on underflow and overflow.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":130169,"byte_end":130226,"line_start":110,"line_end":110,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":131041,"byte_end":131052,"line_start":131,"line_end":131,"column_start":8,"column_end":19},"name":"checked_rem","qualname":"::ops::checked::CheckedRem::checked_rem","value":"pub fn checked_rem(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":366},"children":[],"decl_id":null,"docs":" Finds the remainder of dividing two numbers, checking for underflow, overflow and division\n by zero. If any of that happens, `None` is returned.","sig":null,"attributes":[{"value":"/ Finds the remainder of dividing two numbers, checking for underflow, overflow and division","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":130288,"byte_end":130382,"line_start":112,"line_end":112,"column_start":5,"column_end":99}},{"value":"/ by zero. If any of that happens, `None` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":130387,"byte_end":130443,"line_start":113,"line_end":113,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":130448,"byte_end":130451,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":130456,"byte_end":130470,"line_start":115,"line_end":115,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":130475,"byte_end":130478,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":130483,"byte_end":130490,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedRem;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":130495,"byte_end":130526,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/ use std::i32::MIN;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":130531,"byte_end":130553,"line_start":119,"line_end":119,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":130558,"byte_end":130561,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&10, &7), Some(3));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":130566,"byte_end":130624,"line_start":121,"line_end":121,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&10, &-7), Some(3));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":130629,"byte_end":130688,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&-10, &7), Some(-3));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":130693,"byte_end":130753,"line_start":123,"line_end":123,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&-10, &-7), Some(-3));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":130758,"byte_end":130819,"line_start":124,"line_end":124,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":130824,"byte_end":130827,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&10, &0), None);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":130832,"byte_end":130887,"line_start":126,"line_end":126,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":130892,"byte_end":130895,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&MIN, &1), Some(0));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":130900,"byte_end":130959,"line_start":128,"line_end":128,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&MIN, &-1), None);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":130964,"byte_end":131021,"line_start":129,"line_end":129,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":131026,"byte_end":131033,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":369},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":132016,"byte_end":132026,"line_start":162,"line_end":162,"column_start":11,"column_end":21},"name":"CheckedNeg","qualname":"::ops::checked::CheckedNeg","value":"CheckedNeg: Sized","parent":null,"children":[{"krate":0,"index":370}],"decl_id":null,"docs":" Performs negation that returns `None` if the result can't be represented.\n","sig":null,"attributes":[{"value":"/ Performs negation that returns `None` if the result can't be represented.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":131928,"byte_end":132005,"line_start":161,"line_end":161,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":132676,"byte_end":132687,"line_start":179,"line_end":179,"column_start":8,"column_end":19},"name":"checked_neg","qualname":"::ops::checked::CheckedNeg::checked_neg","value":"pub fn checked_neg(&Self) -> Option<Self>","parent":{"krate":0,"index":369},"children":[],"decl_id":null,"docs":" Negates a number, returning `None` for results that can't be represented, like signed `MIN`\n values that can't be positive, or non-zero unsigned values that can't be negative.","sig":null,"attributes":[{"value":"/ Negates a number, returning `None` for results that can't be represented, like signed `MIN`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":132040,"byte_end":132135,"line_start":163,"line_end":163,"column_start":5,"column_end":100}},{"value":"/ values that can't be positive, or non-zero unsigned values that can't be negative.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":132140,"byte_end":132226,"line_start":164,"line_end":164,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":132231,"byte_end":132234,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":132239,"byte_end":132253,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":132258,"byte_end":132261,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":132266,"byte_end":132273,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedNeg;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":132278,"byte_end":132309,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/ use std::i32::MIN;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":132314,"byte_end":132336,"line_start":170,"line_end":170,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":132341,"byte_end":132344,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&1_i32), Some(-1));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":132349,"byte_end":132407,"line_start":172,"line_end":172,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&-1_i32), Some(1));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":132412,"byte_end":132470,"line_start":173,"line_end":173,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&MIN), None);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":132475,"byte_end":132527,"line_start":174,"line_end":174,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":132532,"byte_end":132535,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&0_u32), Some(0));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":132540,"byte_end":132597,"line_start":176,"line_end":176,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&1_u32), None);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":132602,"byte_end":132656,"line_start":177,"line_end":177,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":132661,"byte_end":132668,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":371},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":133465,"byte_end":133475,"line_start":200,"line_end":200,"column_start":11,"column_end":21},"name":"CheckedShl","qualname":"::ops::checked::CheckedShl","value":"CheckedShl: Sized + Shl<u32, Output = Self>","parent":null,"children":[{"krate":0,"index":372}],"decl_id":null,"docs":" Performs a left shift that returns `None` on shifts larger than\n the type width.\n","sig":null,"attributes":[{"value":"/ Performs a left shift that returns `None` on shifts larger than","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":133367,"byte_end":133434,"line_start":198,"line_end":198,"column_start":1,"column_end":68}},{"value":"/ the type width.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":133435,"byte_end":133454,"line_start":199,"line_end":199,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":134034,"byte_end":134045,"line_start":214,"line_end":214,"column_start":8,"column_end":19},"name":"checked_shl","qualname":"::ops::checked::CheckedShl::checked_shl","value":"pub fn checked_shl(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":371},"children":[],"decl_id":null,"docs":" Checked shift left. Computes `self << rhs`, returning `None`\n if `rhs` is larger than or equal to the number of bits in `self`.","sig":null,"attributes":[{"value":"/ Checked shift left. Computes `self << rhs`, returning `None`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":133515,"byte_end":133579,"line_start":201,"line_end":201,"column_start":5,"column_end":69}},{"value":"/ if `rhs` is larger than or equal to the number of bits in `self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":133584,"byte_end":133653,"line_start":202,"line_end":202,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":133658,"byte_end":133661,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":133666,"byte_end":133673,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedShl;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":133678,"byte_end":133709,"line_start":205,"line_end":205,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":133714,"byte_end":133717,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ let x: u16 = 0x0001;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":133722,"byte_end":133746,"line_start":207,"line_end":207,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":133751,"byte_end":133754,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 0),  Some(0x0001));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":133759,"byte_end":133821,"line_start":209,"line_end":209,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 1),  Some(0x0002));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":133826,"byte_end":133888,"line_start":210,"line_end":210,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 15), Some(0x8000));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":133893,"byte_end":133955,"line_start":211,"line_end":211,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 16), None);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":133960,"byte_end":134014,"line_start":212,"line_end":212,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":134019,"byte_end":134026,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":374},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":135107,"byte_end":135117,"line_start":246,"line_end":246,"column_start":11,"column_end":21},"name":"CheckedShr","qualname":"::ops::checked::CheckedShr","value":"CheckedShr: Sized + Shr<u32, Output = Self>","parent":null,"children":[{"krate":0,"index":375}],"decl_id":null,"docs":" Performs a right shift that returns `None` on shifts larger than\n the type width.\n","sig":null,"attributes":[{"value":"/ Performs a right shift that returns `None` on shifts larger than","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":135008,"byte_end":135076,"line_start":244,"line_end":244,"column_start":1,"column_end":69}},{"value":"/ the type width.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":135077,"byte_end":135096,"line_start":245,"line_end":245,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":135677,"byte_end":135688,"line_start":260,"line_end":260,"column_start":8,"column_end":19},"name":"checked_shr","qualname":"::ops::checked::CheckedShr::checked_shr","value":"pub fn checked_shr(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":374},"children":[],"decl_id":null,"docs":" Checked shift right. Computes `self >> rhs`, returning `None`\n if `rhs` is larger than or equal to the number of bits in `self`.","sig":null,"attributes":[{"value":"/ Checked shift right. Computes `self >> rhs`, returning `None`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":135157,"byte_end":135222,"line_start":247,"line_end":247,"column_start":5,"column_end":70}},{"value":"/ if `rhs` is larger than or equal to the number of bits in `self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":135227,"byte_end":135296,"line_start":248,"line_end":248,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":135301,"byte_end":135304,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":135309,"byte_end":135316,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedShr;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":135321,"byte_end":135352,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":135357,"byte_end":135360,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let x: u16 = 0x8000;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":135365,"byte_end":135389,"line_start":253,"line_end":253,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":135394,"byte_end":135397,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 0),  Some(0x8000));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":135402,"byte_end":135464,"line_start":255,"line_end":255,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 1),  Some(0x4000));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":135469,"byte_end":135531,"line_start":256,"line_end":256,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 15), Some(0x0001));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":135536,"byte_end":135598,"line_start":257,"line_end":257,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 16), None);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":135603,"byte_end":135657,"line_start":258,"line_end":258,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":135662,"byte_end":135669,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":376},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/inv.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"inv","qualname":"::ops::inv","value":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/inv.rs","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":390}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":377},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/inv.rs","byte_start":136477,"byte_end":136480,"line_start":2,"line_end":2,"column_start":11,"column_end":14},"name":"Inv","qualname":"::ops::inv::Inv","value":"Inv","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379}],"decl_id":null,"docs":" Unary operator for retrieving the multiplicative inverse, or reciprocal, of a value.\n","sig":null,"attributes":[{"value":"/ Unary operator for retrieving the multiplicative inverse, or reciprocal, of a value.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/inv.rs","byte_start":136378,"byte_end":136466,"line_start":1,"line_end":1,"column_start":1,"column_end":89}}]},{"kind":"Type","id":{"krate":0,"index":378},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/inv.rs","byte_start":136540,"byte_end":136546,"line_start":4,"line_end":4,"column_start":10,"column_end":16},"name":"Output","qualname":"::ops::inv::Inv::Output","value":"type Output;","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" The result after applying the operator.\n","sig":null,"attributes":[{"value":"/ The result after applying the operator.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/inv.rs","byte_start":136487,"byte_end":136530,"line_start":3,"line_end":3,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/inv.rs","byte_start":136825,"byte_end":136828,"line_start":17,"line_end":17,"column_start":8,"column_end":11},"name":"inv","qualname":"::ops::inv::Inv::inv","value":"pub fn inv(Self) -> Self::Output","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Returns the multiplicative inverse of `self`.","sig":null,"attributes":[{"value":"/ Returns the multiplicative inverse of `self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/inv.rs","byte_start":136553,"byte_end":136602,"line_start":6,"line_end":6,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/inv.rs","byte_start":136607,"byte_end":136610,"line_start":7,"line_end":7,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/inv.rs","byte_start":136615,"byte_end":136629,"line_start":8,"line_end":8,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/inv.rs","byte_start":136634,"byte_end":136637,"line_start":9,"line_end":9,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/inv.rs","byte_start":136642,"byte_end":136649,"line_start":10,"line_end":10,"column_start":5,"column_end":12}},{"value":"/ use std::f64::INFINITY;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/inv.rs","byte_start":136654,"byte_end":136681,"line_start":11,"line_end":11,"column_start":5,"column_end":32}},{"value":"/ use num_traits::Inv;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/inv.rs","byte_start":136686,"byte_end":136710,"line_start":12,"line_end":12,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/inv.rs","byte_start":136715,"byte_end":136718,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(7.0.inv() * 7.0, 1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/inv.rs","byte_start":136723,"byte_end":136760,"line_start":14,"line_end":14,"column_start":5,"column_end":42}},{"value":"/ assert_eq!((-0.0).inv(), -INFINITY);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/inv.rs","byte_start":136765,"byte_end":136805,"line_start":15,"line_end":15,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/inv.rs","byte_start":136810,"byte_end":136817,"line_start":16,"line_end":16,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":394},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mul_add","qualname":"::ops::mul_add","value":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":400},{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":2631},{"krate":0,"index":2634},{"krate":0,"index":2637},{"krate":0,"index":2640},{"krate":0,"index":2643},{"krate":0,"index":2646},{"krate":0,"index":2649},{"krate":0,"index":2652},{"krate":0,"index":2655},{"krate":0,"index":2658},{"krate":0,"index":2661},{"krate":0,"index":2664},{"krate":0,"index":411},{"krate":0,"index":413},{"krate":0,"index":2667},{"krate":0,"index":2669},{"krate":0,"index":2671},{"krate":0,"index":2673},{"krate":0,"index":2675},{"krate":0,"index":2677},{"krate":0,"index":2679},{"krate":0,"index":2681},{"krate":0,"index":2683},{"krate":0,"index":2685},{"krate":0,"index":2687},{"krate":0,"index":2689}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":395},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":137953,"byte_end":137959,"line_start":23,"line_end":23,"column_start":11,"column_end":17},"name":"MulAdd","qualname":"::ops::mul_add::MulAdd","value":"MulAdd<A = Self, B = Self>","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399}],"decl_id":null,"docs":" Fused multiply-add. Computes `(self * a) + b` with only one rounding\n error, yielding a more accurate result than an unfused multiply-add.","sig":null,"attributes":[{"value":"/ Fused multiply-add. Computes `(self * a) + b` with only one rounding","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":137310,"byte_end":137382,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/ error, yielding a more accurate result than an unfused multiply-add.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":137383,"byte_end":137455,"line_start":2,"line_end":2,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":137456,"byte_end":137459,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Using `mul_add` can be more performant than an unfused multiply-add if","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":137460,"byte_end":137534,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ the target architecture has a dedicated `fma` CPU instruction.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":137535,"byte_end":137601,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":137602,"byte_end":137605,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Note that `A` and `B` are `Self` by default, but this is not mandatory.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":137606,"byte_end":137681,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":137682,"byte_end":137685,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":137686,"byte_end":137699,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":137700,"byte_end":137703,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":137704,"byte_end":137711,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use std::f32;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":137712,"byte_end":137729,"line_start":12,"line_end":12,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":137730,"byte_end":137733,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let m = 10.0_f32;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":137734,"byte_end":137755,"line_start":14,"line_end":14,"column_start":1,"column_end":22}},{"value":"/ let x = 4.0_f32;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":137756,"byte_end":137776,"line_start":15,"line_end":15,"column_start":1,"column_end":21}},{"value":"/ let b = 60.0_f32;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":137777,"byte_end":137798,"line_start":16,"line_end":16,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":137799,"byte_end":137802,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ // 100.0","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":137803,"byte_end":137815,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/ let abs_difference = (m.mul_add(x, b) - (m*x + b)).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":137816,"byte_end":137877,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":137878,"byte_end":137881,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ assert!(abs_difference <= 100.0 * f32::EPSILON);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":137882,"byte_end":137934,"line_start":21,"line_end":21,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":137935,"byte_end":137942,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":398},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":138057,"byte_end":138063,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Output","qualname":"::ops::mul_add::MulAdd::Output","value":"type Output;","parent":{"krate":0,"index":395},"children":[],"decl_id":null,"docs":" The resulting type after applying the fused multiply-add.\n","sig":null,"attributes":[{"value":"/ The resulting type after applying the fused multiply-add.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":137986,"byte_end":138047,"line_start":24,"line_end":24,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":138124,"byte_end":138131,"line_start":28,"line_end":28,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::ops::mul_add::MulAdd::mul_add","value":"pub fn mul_add(Self, A, B) -> Self::Output","parent":{"krate":0,"index":395},"children":[],"decl_id":null,"docs":" Performs the fused multiply-add operation.\n","sig":null,"attributes":[{"value":"/ Performs the fused multiply-add operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":138070,"byte_end":138116,"line_start":27,"line_end":27,"column_start":5,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":400},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":138229,"byte_end":138241,"line_start":32,"line_end":32,"column_start":11,"column_end":23},"name":"MulAddAssign","qualname":"::ops::mul_add::MulAddAssign","value":"MulAddAssign<A = Self, B = Self>","parent":null,"children":[{"krate":0,"index":403}],"decl_id":null,"docs":" The fused multiply-add assignment operation.\n","sig":null,"attributes":[{"value":"/ The fused multiply-add assignment operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":138170,"byte_end":138218,"line_start":31,"line_end":31,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":138322,"byte_end":138336,"line_start":34,"line_end":34,"column_start":8,"column_end":22},"name":"mul_add_assign","qualname":"::ops::mul_add::MulAddAssign::mul_add_assign","value":"pub fn mul_add_assign(&mut Self, A, B)","parent":{"krate":0,"index":400},"children":[],"decl_id":null,"docs":" Performs the fused multiply-add operation.\n","sig":null,"attributes":[{"value":"/ Performs the fused multiply-add operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mul_add.rs","byte_start":138268,"byte_end":138314,"line_start":33,"line_end":33,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":416},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/saturating.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"saturating","qualname":"::ops::saturating","value":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/saturating.rs","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":2691},{"krate":0,"index":2694},{"krate":0,"index":2697},{"krate":0,"index":2700},{"krate":0,"index":2703},{"krate":0,"index":2706},{"krate":0,"index":2709},{"krate":0,"index":2712},{"krate":0,"index":2715},{"krate":0,"index":2718},{"krate":0,"index":2721},{"krate":0,"index":2724}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":417},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/saturating.rs","byte_start":141272,"byte_end":141282,"line_start":2,"line_end":2,"column_start":11,"column_end":21},"name":"Saturating","qualname":"::ops::saturating::Saturating","value":"Saturating","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"decl_id":null,"docs":" Saturating math operations\n","sig":null,"attributes":[{"value":"/ Saturating math operations","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/saturating.rs","byte_start":141231,"byte_end":141261,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/saturating.rs","byte_start":141408,"byte_end":141422,"line_start":5,"line_end":5,"column_start":8,"column_end":22},"name":"saturating_add","qualname":"::ops::saturating::Saturating::saturating_add","value":"pub fn saturating_add(Self, Self) -> Self","parent":{"krate":0,"index":417},"children":[],"decl_id":null,"docs":" Saturating addition operator.\n Returns a+b, saturating at the numeric bounds instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating addition operator.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/saturating.rs","byte_start":141289,"byte_end":141322,"line_start":3,"line_end":3,"column_start":5,"column_end":38}},{"value":"/ Returns a+b, saturating at the numeric bounds instead of overflowing.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/saturating.rs","byte_start":141327,"byte_end":141400,"line_start":4,"line_end":4,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/saturating.rs","byte_start":141574,"byte_end":141588,"line_start":9,"line_end":9,"column_start":8,"column_end":22},"name":"saturating_sub","qualname":"::ops::saturating::Saturating::saturating_sub","value":"pub fn saturating_sub(Self, Self) -> Self","parent":{"krate":0,"index":417},"children":[],"decl_id":null,"docs":" Saturating subtraction operator.\n Returns a-b, saturating at the numeric bounds instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating subtraction operator.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/saturating.rs","byte_start":141452,"byte_end":141488,"line_start":7,"line_end":7,"column_start":5,"column_end":41}},{"value":"/ Returns a-b, saturating at the numeric bounds instead of overflowing.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/saturating.rs","byte_start":141493,"byte_end":141566,"line_start":8,"line_end":8,"column_start":5,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":421},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"wrapping","qualname":"::ops::wrapping","value":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":4588},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":2727},{"krate":0,"index":2729},{"krate":0,"index":2731},{"krate":0,"index":2733},{"krate":0,"index":2735},{"krate":0,"index":2737},{"krate":0,"index":2739},{"krate":0,"index":2741},{"krate":0,"index":2743},{"krate":0,"index":2745},{"krate":0,"index":2747},{"krate":0,"index":2749},{"krate":0,"index":432},{"krate":0,"index":2751},{"krate":0,"index":2753},{"krate":0,"index":2755},{"krate":0,"index":2757},{"krate":0,"index":2759},{"krate":0,"index":2761},{"krate":0,"index":2763},{"krate":0,"index":2765},{"krate":0,"index":2767},{"krate":0,"index":2769},{"krate":0,"index":2771},{"krate":0,"index":2773},{"krate":0,"index":434},{"krate":0,"index":2775},{"krate":0,"index":2777},{"krate":0,"index":2779},{"krate":0,"index":2781},{"krate":0,"index":2783},{"krate":0,"index":2785},{"krate":0,"index":2787},{"krate":0,"index":2789},{"krate":0,"index":2791},{"krate":0,"index":2793},{"krate":0,"index":2795},{"krate":0,"index":2797},{"krate":0,"index":437},{"krate":0,"index":2799},{"krate":0,"index":2801},{"krate":0,"index":2803},{"krate":0,"index":2805},{"krate":0,"index":2807},{"krate":0,"index":2809},{"krate":0,"index":2811},{"krate":0,"index":2813},{"krate":0,"index":2815},{"krate":0,"index":2817},{"krate":0,"index":2819},{"krate":0,"index":2821},{"krate":0,"index":439},{"krate":0,"index":2823},{"krate":0,"index":2825},{"krate":0,"index":2827},{"krate":0,"index":2829},{"krate":0,"index":2831},{"krate":0,"index":2833},{"krate":0,"index":2835},{"krate":0,"index":2837},{"krate":0,"index":2839},{"krate":0,"index":2841},{"krate":0,"index":2843},{"krate":0,"index":2845},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":453}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":430},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":142796,"byte_end":142807,"line_start":24,"line_end":24,"column_start":11,"column_end":22},"name":"WrappingAdd","qualname":"::ops::wrapping::WrappingAdd","value":"WrappingAdd: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":431}],"decl_id":null,"docs":" Performs addition that wraps around on overflow.\n","sig":null,"attributes":[{"value":"/ Performs addition that wraps around on overflow.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":142733,"byte_end":142785,"line_start":23,"line_end":23,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":142966,"byte_end":142978,"line_start":27,"line_end":27,"column_start":8,"column_end":20},"name":"wrapping_add","qualname":"::ops::wrapping::WrappingAdd::wrapping_add","value":"pub fn wrapping_add(&Self, &Self) -> Self","parent":{"krate":0,"index":430},"children":[],"decl_id":null,"docs":" Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of\n the type.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":142848,"byte_end":142940,"line_start":25,"line_end":25,"column_start":5,"column_end":97}},{"value":"/ the type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":142945,"byte_end":142958,"line_start":26,"line_end":26,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":432},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":143690,"byte_end":143701,"line_start":47,"line_end":47,"column_start":11,"column_end":22},"name":"WrappingSub","qualname":"::ops::wrapping::WrappingSub","value":"WrappingSub: Sized + Sub<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":433}],"decl_id":null,"docs":" Performs subtraction that wraps around on overflow.\n","sig":null,"attributes":[{"value":"/ Performs subtraction that wraps around on overflow.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":143624,"byte_end":143679,"line_start":46,"line_end":46,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":143863,"byte_end":143875,"line_start":50,"line_end":50,"column_start":8,"column_end":20},"name":"wrapping_sub","qualname":"::ops::wrapping::WrappingSub::wrapping_sub","value":"pub fn wrapping_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":432},"children":[],"decl_id":null,"docs":" Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary\n of the type.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":143742,"byte_end":143834,"line_start":48,"line_end":48,"column_start":5,"column_end":97}},{"value":"/ of the type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":143839,"byte_end":143855,"line_start":49,"line_end":49,"column_start":5,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":434},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":144590,"byte_end":144601,"line_start":70,"line_end":70,"column_start":11,"column_end":22},"name":"WrappingMul","qualname":"::ops::wrapping::WrappingMul","value":"WrappingMul: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":435}],"decl_id":null,"docs":" Performs multiplication that wraps around on overflow.\n","sig":null,"attributes":[{"value":"/ Performs multiplication that wraps around on overflow.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":144521,"byte_end":144579,"line_start":69,"line_end":69,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":144766,"byte_end":144778,"line_start":73,"line_end":73,"column_start":8,"column_end":20},"name":"wrapping_mul","qualname":"::ops::wrapping::WrappingMul::wrapping_mul","value":"pub fn wrapping_mul(&Self, &Self) -> Self","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary\n of the type.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":144642,"byte_end":144737,"line_start":71,"line_end":71,"column_start":5,"column_end":100}},{"value":"/ of the type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":144742,"byte_end":144758,"line_start":72,"line_end":72,"column_start":5,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":437},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":145747,"byte_end":145758,"line_start":104,"line_end":104,"column_start":11,"column_end":22},"name":"WrappingShl","qualname":"::ops::wrapping::WrappingShl","value":"WrappingShl: Sized + Shl<usize, Output = Self>","parent":null,"children":[{"krate":0,"index":438}],"decl_id":null,"docs":" Performs a left shift that does not panic.\n","sig":null,"attributes":[{"value":"/ Performs a left shift that does not panic.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":145690,"byte_end":145736,"line_start":103,"line_end":103,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":146365,"byte_end":146377,"line_start":119,"line_end":119,"column_start":8,"column_end":20},"name":"wrapping_shl","qualname":"::ops::wrapping::WrappingShl::wrapping_shl","value":"pub fn wrapping_shl(&Self, u32) -> Self","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Panic-free bitwise shift-left; yields `self << mask(rhs)`,\n where `mask` removes any high order bits of `rhs` that would\n cause the shift to exceed the bitwidth of the type.","sig":null,"attributes":[{"value":"/ Panic-free bitwise shift-left; yields `self << mask(rhs)`,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":145800,"byte_end":145862,"line_start":105,"line_end":105,"column_start":5,"column_end":67}},{"value":"/ where `mask` removes any high order bits of `rhs` that would","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":145867,"byte_end":145931,"line_start":106,"line_end":106,"column_start":5,"column_end":69}},{"value":"/ cause the shift to exceed the bitwidth of the type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":145936,"byte_end":145991,"line_start":107,"line_end":107,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":145996,"byte_end":145999,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":146004,"byte_end":146011,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ use num_traits::WrappingShl;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":146016,"byte_end":146048,"line_start":110,"line_end":110,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":146053,"byte_end":146056,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ let x: u16 = 0x0001;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":146061,"byte_end":146085,"line_start":112,"line_end":112,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":146090,"byte_end":146093,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(WrappingShl::wrapping_shl(&x, 0),  0x0001);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":146098,"byte_end":146156,"line_start":114,"line_end":114,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShl::wrapping_shl(&x, 1),  0x0002);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":146161,"byte_end":146219,"line_start":115,"line_end":115,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShl::wrapping_shl(&x, 15), 0x8000);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":146224,"byte_end":146282,"line_start":116,"line_end":116,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShl::wrapping_shl(&x, 16), 0x0001);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":146287,"byte_end":146345,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":146350,"byte_end":146357,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":439},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":147153,"byte_end":147164,"line_start":139,"line_end":139,"column_start":11,"column_end":22},"name":"WrappingShr","qualname":"::ops::wrapping::WrappingShr","value":"WrappingShr: Sized + Shr<usize, Output = Self>","parent":null,"children":[{"krate":0,"index":440}],"decl_id":null,"docs":" Performs a right shift that does not panic.\n","sig":null,"attributes":[{"value":"/ Performs a right shift that does not panic.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":147095,"byte_end":147142,"line_start":138,"line_end":138,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":147772,"byte_end":147784,"line_start":154,"line_end":154,"column_start":8,"column_end":20},"name":"wrapping_shr","qualname":"::ops::wrapping::WrappingShr::wrapping_shr","value":"pub fn wrapping_shr(&Self, u32) -> Self","parent":{"krate":0,"index":439},"children":[],"decl_id":null,"docs":" Panic-free bitwise shift-right; yields `self >> mask(rhs)`,\n where `mask` removes any high order bits of `rhs` that would\n cause the shift to exceed the bitwidth of the type.","sig":null,"attributes":[{"value":"/ Panic-free bitwise shift-right; yields `self >> mask(rhs)`,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":147206,"byte_end":147269,"line_start":140,"line_end":140,"column_start":5,"column_end":68}},{"value":"/ where `mask` removes any high order bits of `rhs` that would","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":147274,"byte_end":147338,"line_start":141,"line_end":141,"column_start":5,"column_end":69}},{"value":"/ cause the shift to exceed the bitwidth of the type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":147343,"byte_end":147398,"line_start":142,"line_end":142,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":147403,"byte_end":147406,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":147411,"byte_end":147418,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ use num_traits::WrappingShr;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":147423,"byte_end":147455,"line_start":145,"line_end":145,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":147460,"byte_end":147463,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ let x: u16 = 0x8000;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":147468,"byte_end":147492,"line_start":147,"line_end":147,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":147497,"byte_end":147500,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(WrappingShr::wrapping_shr(&x, 0),  0x8000);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":147505,"byte_end":147563,"line_start":149,"line_end":149,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShr::wrapping_shr(&x, 1),  0x4000);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":147568,"byte_end":147626,"line_start":150,"line_end":150,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShr::wrapping_shr(&x, 15), 0x0001);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":147631,"byte_end":147689,"line_start":151,"line_end":151,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShr::wrapping_shr(&x, 16), 0x8000);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":147694,"byte_end":147752,"line_start":152,"line_end":152,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":147757,"byte_end":147764,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":456},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pow","qualname":"::pow","value":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":4600},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":2847},{"krate":0,"index":2850},{"krate":0,"index":2854},{"krate":0,"index":2858},{"krate":0,"index":2863},{"krate":0,"index":2866},{"krate":0,"index":2870},{"krate":0,"index":2874},{"krate":0,"index":2879},{"krate":0,"index":2882},{"krate":0,"index":2886},{"krate":0,"index":2890},{"krate":0,"index":2895},{"krate":0,"index":2898},{"krate":0,"index":2902},{"krate":0,"index":2906},{"krate":0,"index":2911},{"krate":0,"index":2914},{"krate":0,"index":2918},{"krate":0,"index":2922},{"krate":0,"index":2927},{"krate":0,"index":2930},{"krate":0,"index":2934},{"krate":0,"index":2938},{"krate":0,"index":2943},{"krate":0,"index":2946},{"krate":0,"index":2950},{"krate":0,"index":2954},{"krate":0,"index":2959},{"krate":0,"index":2962},{"krate":0,"index":2966},{"krate":0,"index":2970},{"krate":0,"index":2975},{"krate":0,"index":2978},{"krate":0,"index":2982},{"krate":0,"index":2986},{"krate":0,"index":2991},{"krate":0,"index":2994},{"krate":0,"index":2998},{"krate":0,"index":3002},{"krate":0,"index":3007},{"krate":0,"index":3010},{"krate":0,"index":3014},{"krate":0,"index":3018},{"krate":0,"index":3023},{"krate":0,"index":3026},{"krate":0,"index":3030},{"krate":0,"index":3034},{"krate":0,"index":3039},{"krate":0,"index":3042},{"krate":0,"index":3046},{"krate":0,"index":3050},{"krate":0,"index":3055},{"krate":0,"index":3058},{"krate":0,"index":3062},{"krate":0,"index":3066},{"krate":0,"index":3071},{"krate":0,"index":3074},{"krate":0,"index":3078},{"krate":0,"index":3082},{"krate":0,"index":3087},{"krate":0,"index":3090},{"krate":0,"index":3094},{"krate":0,"index":3098},{"krate":0,"index":3103},{"krate":0,"index":3106},{"krate":0,"index":3110},{"krate":0,"index":3114},{"krate":0,"index":3119},{"krate":0,"index":3122},{"krate":0,"index":3126},{"krate":0,"index":3130},{"krate":0,"index":3135},{"krate":0,"index":3138},{"krate":0,"index":3142},{"krate":0,"index":3146},{"krate":0,"index":3151},{"krate":0,"index":3154},{"krate":0,"index":3158},{"krate":0,"index":3162},{"krate":0,"index":3167},{"krate":0,"index":3170},{"krate":0,"index":3174},{"krate":0,"index":3178},{"krate":0,"index":3183},{"krate":0,"index":3186},{"krate":0,"index":3190},{"krate":0,"index":3194},{"krate":0,"index":3199},{"krate":0,"index":3202},{"krate":0,"index":3206},{"krate":0,"index":3210},{"krate":0,"index":3215},{"krate":0,"index":3218},{"krate":0,"index":3222},{"krate":0,"index":3226},{"krate":0,"index":3231},{"krate":0,"index":3234},{"krate":0,"index":3238},{"krate":0,"index":3242},{"krate":0,"index":3247},{"krate":0,"index":3250},{"krate":0,"index":3254},{"krate":0,"index":3258},{"krate":0,"index":3263},{"krate":0,"index":3266},{"krate":0,"index":3270},{"krate":0,"index":3274},{"krate":0,"index":3279},{"krate":0,"index":3282},{"krate":0,"index":3286},{"krate":0,"index":3290},{"krate":0,"index":3295},{"krate":0,"index":3298},{"krate":0,"index":3302},{"krate":0,"index":3306},{"krate":0,"index":3311},{"krate":0,"index":3314},{"krate":0,"index":3318},{"krate":0,"index":3322},{"krate":0,"index":3327},{"krate":0,"index":3330},{"krate":0,"index":3334},{"krate":0,"index":3338},{"krate":0,"index":3343},{"krate":0,"index":3346},{"krate":0,"index":3350},{"krate":0,"index":3354},{"krate":0,"index":3359},{"krate":0,"index":3362},{"krate":0,"index":3366},{"krate":0,"index":3370},{"krate":0,"index":3375},{"krate":0,"index":3378},{"krate":0,"index":3382},{"krate":0,"index":3386},{"krate":0,"index":3391},{"krate":0,"index":3394},{"krate":0,"index":3398},{"krate":0,"index":3402},{"krate":0,"index":3407},{"krate":0,"index":3410},{"krate":0,"index":3414},{"krate":0,"index":3418},{"krate":0,"index":3423},{"krate":0,"index":3426},{"krate":0,"index":3430},{"krate":0,"index":3434},{"krate":0,"index":3439},{"krate":0,"index":3442},{"krate":0,"index":3446},{"krate":0,"index":3450},{"krate":0,"index":3455},{"krate":0,"index":3458},{"krate":0,"index":3462},{"krate":0,"index":3466},{"krate":0,"index":3471},{"krate":0,"index":3474},{"krate":0,"index":3478},{"krate":0,"index":3482},{"krate":0,"index":3487},{"krate":0,"index":3490},{"krate":0,"index":3494},{"krate":0,"index":3498},{"krate":0,"index":3503},{"krate":0,"index":3506},{"krate":0,"index":3510},{"krate":0,"index":3514},{"krate":0,"index":3519},{"krate":0,"index":3522},{"krate":0,"index":3526},{"krate":0,"index":3530},{"krate":0,"index":3535},{"krate":0,"index":3538},{"krate":0,"index":3542},{"krate":0,"index":3546},{"krate":0,"index":3551},{"krate":0,"index":3554},{"krate":0,"index":3558},{"krate":0,"index":3562},{"krate":0,"index":3567},{"krate":0,"index":3570},{"krate":0,"index":3574},{"krate":0,"index":3578},{"krate":0,"index":3583},{"krate":0,"index":3586},{"krate":0,"index":3590},{"krate":0,"index":3594},{"krate":0,"index":3599},{"krate":0,"index":3602},{"krate":0,"index":3606},{"krate":0,"index":3610},{"krate":0,"index":3615},{"krate":0,"index":3618},{"krate":0,"index":3622},{"krate":0,"index":3626},{"krate":0,"index":3631},{"krate":0,"index":3634},{"krate":0,"index":3638},{"krate":0,"index":3642},{"krate":0,"index":3647},{"krate":0,"index":3650},{"krate":0,"index":3654},{"krate":0,"index":3658},{"krate":0,"index":3663},{"krate":0,"index":3666},{"krate":0,"index":3670},{"krate":0,"index":3674},{"krate":0,"index":3679},{"krate":0,"index":3682},{"krate":0,"index":3686},{"krate":0,"index":3690},{"krate":0,"index":3695},{"krate":0,"index":3698},{"krate":0,"index":3702},{"krate":0,"index":3706},{"krate":0,"index":3711},{"krate":0,"index":3714},{"krate":0,"index":3718},{"krate":0,"index":3722},{"krate":0,"index":3727},{"krate":0,"index":3730},{"krate":0,"index":3734},{"krate":0,"index":3738},{"krate":0,"index":3743},{"krate":0,"index":3746},{"krate":0,"index":3750},{"krate":0,"index":3754},{"krate":0,"index":3759},{"krate":0,"index":3762},{"krate":0,"index":3766},{"krate":0,"index":3770},{"krate":0,"index":3775},{"krate":0,"index":3778},{"krate":0,"index":3782},{"krate":0,"index":3786},{"krate":0,"index":3791},{"krate":0,"index":3794},{"krate":0,"index":3798},{"krate":0,"index":3802},{"krate":0,"index":3807},{"krate":0,"index":3810},{"krate":0,"index":3814},{"krate":0,"index":3818},{"krate":0,"index":3823},{"krate":0,"index":3826},{"krate":0,"index":3830},{"krate":0,"index":3834},{"krate":0,"index":3839},{"krate":0,"index":3842},{"krate":0,"index":3846},{"krate":0,"index":3850},{"krate":0,"index":3855},{"krate":0,"index":3858},{"krate":0,"index":3862},{"krate":0,"index":3866},{"krate":0,"index":3871},{"krate":0,"index":3874},{"krate":0,"index":3878},{"krate":0,"index":3882},{"krate":0,"index":3887},{"krate":0,"index":3890},{"krate":0,"index":3894},{"krate":0,"index":3898},{"krate":0,"index":3903},{"krate":0,"index":3906},{"krate":0,"index":3910},{"krate":0,"index":3914},{"krate":0,"index":3919},{"krate":0,"index":3922},{"krate":0,"index":3926},{"krate":0,"index":3930},{"krate":0,"index":3935},{"krate":0,"index":3938},{"krate":0,"index":3942},{"krate":0,"index":3946},{"krate":0,"index":3951},{"krate":0,"index":3954},{"krate":0,"index":3958},{"krate":0,"index":3962},{"krate":0,"index":3967},{"krate":0,"index":3970},{"krate":0,"index":3974},{"krate":0,"index":3978},{"krate":0,"index":3983},{"krate":0,"index":3986},{"krate":0,"index":3990},{"krate":0,"index":3994},{"krate":0,"index":467},{"krate":0,"index":470},{"krate":0,"index":472}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":462},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":151431,"byte_end":151434,"line_start":6,"line_end":6,"column_start":11,"column_end":14},"name":"Pow","qualname":"::pow::Pow","value":"Pow<RHS>","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465}],"decl_id":null,"docs":" Binary operator for raising a value to a power.\n","sig":null,"attributes":[{"value":"/ Binary operator for raising a value to a power.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":151369,"byte_end":151420,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":464},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":151499,"byte_end":151505,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"Output","qualname":"::pow::Pow::Output","value":"type Output;","parent":{"krate":0,"index":462},"children":[],"decl_id":null,"docs":" The result after applying the operator.\n","sig":null,"attributes":[{"value":"/ The result after applying the operator.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":151446,"byte_end":151489,"line_start":7,"line_end":7,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":151694,"byte_end":151697,"line_start":18,"line_end":18,"column_start":8,"column_end":11},"name":"pow","qualname":"::pow::Pow::pow","value":"pub fn pow(Self, RHS) -> Self::Output","parent":{"krate":0,"index":462},"children":[],"decl_id":null,"docs":" Returns `self` to the power `rhs`.","sig":null,"attributes":[{"value":"/ Returns `self` to the power `rhs`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":151512,"byte_end":151550,"line_start":10,"line_end":10,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":151555,"byte_end":151558,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":151563,"byte_end":151577,"line_start":12,"line_end":12,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":151582,"byte_end":151585,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":151590,"byte_end":151597,"line_start":14,"line_end":14,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Pow;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":151602,"byte_end":151626,"line_start":15,"line_end":15,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Pow::pow(10u32, 2u32), 100);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":151631,"byte_end":151674,"line_start":16,"line_end":16,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":151679,"byte_end":151686,"line_start":17,"line_end":17,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":470},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":156524,"byte_end":156527,"line_start":189,"line_end":189,"column_start":8,"column_end":11},"name":"pow","qualname":"::pow::pow","value":"pub fn pow<T: Clone + One + Mul<T, Output = T>>(T, usize) -> T","parent":null,"children":[],"decl_id":null,"docs":" Raises a value to the power of exp, using exponentiation by squaring.","sig":null,"attributes":[{"value":"/ Raises a value to the power of exp, using exponentiation by squaring.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":156140,"byte_end":156213,"line_start":175,"line_end":175,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":156214,"byte_end":156217,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ Note that `0⁰` (`pow(0, 0)`) returns `1`. Mathematically this is undefined.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":156218,"byte_end":156299,"line_start":177,"line_end":177,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":156300,"byte_end":156303,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":156304,"byte_end":156317,"line_start":179,"line_end":179,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":156318,"byte_end":156321,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":156322,"byte_end":156333,"line_start":181,"line_end":181,"column_start":1,"column_end":12}},{"value":"/ use num_traits::pow;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":156334,"byte_end":156358,"line_start":182,"line_end":182,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":156359,"byte_end":156362,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pow(2i8, 4), 16);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":156363,"byte_end":156395,"line_start":184,"line_end":184,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(pow(6u8, 3), 216);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":156396,"byte_end":156429,"line_start":185,"line_end":185,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(pow(0u8, 0), 1); // Be aware if this case affects you","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":156430,"byte_end":156498,"line_start":186,"line_end":186,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":156499,"byte_end":156506,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":156507,"byte_end":156516,"line_start":188,"line_end":188,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":472},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":157533,"byte_end":157544,"line_start":230,"line_end":230,"column_start":8,"column_end":19},"name":"checked_pow","qualname":"::pow::checked_pow","value":"pub fn checked_pow<T: Clone + One + CheckedMul>(T, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Raises a value to the power of exp, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Raises a value to the power of exp, returning `None` if an overflow occurred.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":156981,"byte_end":157062,"line_start":213,"line_end":213,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":157063,"byte_end":157066,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ Note that `0⁰` (`checked_pow(0, 0)`) returns `Some(1)`. Mathematically this is undefined.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":157067,"byte_end":157162,"line_start":215,"line_end":215,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":157163,"byte_end":157166,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ Otherwise same as the `pow` function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":157167,"byte_end":157208,"line_start":217,"line_end":217,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":157209,"byte_end":157212,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":157213,"byte_end":157226,"line_start":219,"line_end":219,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":157227,"byte_end":157230,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":157231,"byte_end":157242,"line_start":221,"line_end":221,"column_start":1,"column_end":12}},{"value":"/ use num_traits::checked_pow;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":157243,"byte_end":157275,"line_start":222,"line_end":222,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":157276,"byte_end":157279,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(checked_pow(2i8, 4), Some(16));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":157280,"byte_end":157326,"line_start":224,"line_end":224,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(checked_pow(7i8, 8), None);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":157327,"byte_end":157369,"line_start":225,"line_end":225,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(checked_pow(7u32, 8), Some(5_764_801));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":157370,"byte_end":157424,"line_start":226,"line_end":226,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(checked_pow(0u32, 0), Some(1)); // Be aware if this case affect you","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":157425,"byte_end":157507,"line_start":227,"line_end":227,"column_start":1,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":157508,"byte_end":157515,"line_start":228,"line_end":228,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/pow.rs","byte_start":157516,"byte_end":157525,"line_start":229,"line_end":229,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":475},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"real","qualname":"::real","value":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":528}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"std\", feature = \"libm\"))","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":158244,"byte_end":158291,"line_start":1,"line_end":1,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":481},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":158888,"byte_end":158892,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"name":"Real","qualname":"::real::Real","value":"Real: Num + Copy + NumCast + PartialOrd + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527}],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[{"value":"/ A trait for real number types that do not necessarily have","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":158488,"byte_end":158550,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/ floating-point-specific characteristics such as NaN and infinity.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":158551,"byte_end":158620,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":158621,"byte_end":158624,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See [this Wikipedia article](https://en.wikipedia.org/wiki/Real_data_type)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":158625,"byte_end":158703,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ for a list of data types that could meaningfully implement this trait.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":158704,"byte_end":158778,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":158779,"byte_end":158782,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This trait is only available with the `std` feature, or with the `libm` feature otherwise.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":158783,"byte_end":158877,"line_start":16,"line_end":16,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159209,"byte_end":159218,"line_start":28,"line_end":28,"column_start":8,"column_end":17},"name":"min_value","qualname":"::real::Real::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns the smallest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest finite value that this type can represent.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":158955,"byte_end":159022,"line_start":18,"line_end":18,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159027,"byte_end":159030,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159035,"byte_end":159042,"line_start":20,"line_end":20,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159047,"byte_end":159078,"line_start":21,"line_end":21,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159083,"byte_end":159100,"line_start":22,"line_end":22,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159105,"byte_end":159108,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Real::min_value();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159113,"byte_end":159148,"line_start":24,"line_end":24,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159153,"byte_end":159156,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::MIN);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159161,"byte_end":159189,"line_start":26,"line_end":26,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159194,"byte_end":159201,"line_start":27,"line_end":27,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159521,"byte_end":159539,"line_start":40,"line_end":40,"column_start":8,"column_end":26},"name":"min_positive_value","qualname":"::real::Real::min_positive_value","value":"pub fn min_positive_value() -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns the smallest positive, normalized value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest positive, normalized value that this type can represent.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159235,"byte_end":159316,"line_start":30,"line_end":30,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159321,"byte_end":159324,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159329,"byte_end":159336,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159341,"byte_end":159372,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159377,"byte_end":159394,"line_start":34,"line_end":34,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159399,"byte_end":159402,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Real::min_positive_value();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159407,"byte_end":159451,"line_start":36,"line_end":36,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159456,"byte_end":159459,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::MIN_POSITIVE);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159464,"byte_end":159501,"line_start":38,"line_end":38,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159506,"byte_end":159513,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159920,"byte_end":159927,"line_start":57,"line_end":57,"column_start":8,"column_end":15},"name":"epsilon","qualname":"::real::Real::epsilon","value":"pub fn epsilon() -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns epsilon, a small positive value.","sig":null,"attributes":[{"value":"/ Returns epsilon, a small positive value.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159556,"byte_end":159600,"line_start":42,"line_end":42,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159605,"byte_end":159608,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159613,"byte_end":159620,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159625,"byte_end":159656,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159661,"byte_end":159678,"line_start":46,"line_end":46,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159683,"byte_end":159686,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Real::epsilon();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159691,"byte_end":159724,"line_start":48,"line_end":48,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159729,"byte_end":159732,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::EPSILON);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159737,"byte_end":159769,"line_start":50,"line_end":50,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159774,"byte_end":159781,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159786,"byte_end":159789,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159794,"byte_end":159806,"line_start":53,"line_end":53,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159811,"byte_end":159814,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The default implementation will panic if `f32::EPSILON` cannot","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159819,"byte_end":159885,"line_start":55,"line_end":55,"column_start":5,"column_end":71}},{"value":"/ be cast to `Self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159890,"byte_end":159912,"line_start":56,"line_end":56,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160189,"byte_end":160198,"line_start":68,"line_end":68,"column_start":8,"column_end":17},"name":"max_value","qualname":"::real::Real::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns the largest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the largest finite value that this type can represent.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":159944,"byte_end":160010,"line_start":59,"line_end":59,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160015,"byte_end":160018,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160023,"byte_end":160030,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160035,"byte_end":160066,"line_start":62,"line_end":62,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160071,"byte_end":160088,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160093,"byte_end":160096,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Real::max_value();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160101,"byte_end":160136,"line_start":65,"line_end":65,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(x, f64::MAX);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160141,"byte_end":160169,"line_start":66,"line_end":66,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160174,"byte_end":160181,"line_start":67,"line_end":67,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160485,"byte_end":160490,"line_start":81,"line_end":81,"column_start":8,"column_end":13},"name":"floor","qualname":"::real::Real::floor","value":"pub fn floor(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the largest integer less than or equal to a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160215,"byte_end":160278,"line_start":70,"line_end":70,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160283,"byte_end":160286,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160291,"byte_end":160298,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160303,"byte_end":160334,"line_start":73,"line_end":73,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160339,"byte_end":160342,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let f = 3.99;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160347,"byte_end":160364,"line_start":75,"line_end":75,"column_start":5,"column_end":22}},{"value":"/ let g = 3.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160369,"byte_end":160385,"line_start":76,"line_end":76,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160390,"byte_end":160393,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.floor(), 3.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160398,"byte_end":160429,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.floor(), 3.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160434,"byte_end":160465,"line_start":79,"line_end":79,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160470,"byte_end":160477,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160783,"byte_end":160787,"line_start":94,"line_end":94,"column_start":8,"column_end":12},"name":"ceil","qualname":"::real::Real::ceil","value":"pub fn ceil(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the smallest integer greater than or equal to a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160511,"byte_end":160578,"line_start":83,"line_end":83,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160583,"byte_end":160586,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160591,"byte_end":160598,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160603,"byte_end":160634,"line_start":86,"line_end":86,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160639,"byte_end":160642,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let f = 3.01;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160647,"byte_end":160664,"line_start":88,"line_end":88,"column_start":5,"column_end":22}},{"value":"/ let g = 4.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160669,"byte_end":160685,"line_start":89,"line_end":89,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160690,"byte_end":160693,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.ceil(), 4.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160698,"byte_end":160728,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(g.ceil(), 4.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160733,"byte_end":160763,"line_start":92,"line_end":92,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160768,"byte_end":160775,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161106,"byte_end":161111,"line_start":108,"line_end":108,"column_start":8,"column_end":13},"name":"round","qualname":"::real::Real::round","value":"pub fn round(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns the nearest integer to a number. Round half-way cases away from\n `0.0`.","sig":null,"attributes":[{"value":"/ Returns the nearest integer to a number. Round half-way cases away from","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160808,"byte_end":160883,"line_start":96,"line_end":96,"column_start":5,"column_end":80}},{"value":"/ `0.0`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160888,"byte_end":160898,"line_start":97,"line_end":97,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160903,"byte_end":160906,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160911,"byte_end":160918,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160923,"byte_end":160954,"line_start":100,"line_end":100,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160959,"byte_end":160962,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let f = 3.3;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160967,"byte_end":160983,"line_start":102,"line_end":102,"column_start":5,"column_end":21}},{"value":"/ let g = -3.3;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":160988,"byte_end":161005,"line_start":103,"line_end":103,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161010,"byte_end":161013,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.round(), 3.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161018,"byte_end":161049,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.round(), -3.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161054,"byte_end":161086,"line_start":106,"line_end":106,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161091,"byte_end":161098,"line_start":107,"line_end":107,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161380,"byte_end":161385,"line_start":121,"line_end":121,"column_start":8,"column_end":13},"name":"trunc","qualname":"::real::Real::trunc","value":"pub fn trunc(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Return the integer part of a number.","sig":null,"attributes":[{"value":"/ Return the integer part of a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161132,"byte_end":161172,"line_start":110,"line_end":110,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161177,"byte_end":161180,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161185,"byte_end":161192,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161197,"byte_end":161228,"line_start":113,"line_end":113,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161233,"byte_end":161236,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let f = 3.3;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161241,"byte_end":161257,"line_start":115,"line_end":115,"column_start":5,"column_end":21}},{"value":"/ let g = -3.7;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161262,"byte_end":161279,"line_start":116,"line_end":116,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161284,"byte_end":161287,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.trunc(), 3.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161292,"byte_end":161323,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.trunc(), -3.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161328,"byte_end":161360,"line_start":119,"line_end":119,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161365,"byte_end":161372,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161786,"byte_end":161791,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"fract","qualname":"::real::Real::fract","value":"pub fn fract(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns the fractional part of a number.","sig":null,"attributes":[{"value":"/ Returns the fractional part of a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161406,"byte_end":161450,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161455,"byte_end":161458,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161463,"byte_end":161470,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161475,"byte_end":161506,"line_start":126,"line_end":126,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161511,"byte_end":161514,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ let x = 3.5;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161519,"byte_end":161535,"line_start":128,"line_end":128,"column_start":5,"column_end":21}},{"value":"/ let y = -3.5;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161540,"byte_end":161557,"line_start":129,"line_end":129,"column_start":5,"column_end":22}},{"value":"/ let abs_difference_x = (x.fract() - 0.5).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161562,"byte_end":161613,"line_start":130,"line_end":130,"column_start":5,"column_end":56}},{"value":"/ let abs_difference_y = (y.fract() - (-0.5)).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161618,"byte_end":161672,"line_start":131,"line_end":131,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161677,"byte_end":161680,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161685,"byte_end":161723,"line_start":133,"line_end":133,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161728,"byte_end":161766,"line_start":134,"line_end":134,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161771,"byte_end":161778,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162346,"byte_end":162349,"line_start":156,"line_end":156,"column_start":8,"column_end":11},"name":"abs","qualname":"::real::Real::abs","value":"pub fn abs(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Computes the absolute value of `self`. Returns `Float::nan()` if the\n number is `Float::nan()`.","sig":null,"attributes":[{"value":"/ Computes the absolute value of `self`. Returns `Float::nan()` if the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161812,"byte_end":161884,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ number is `Float::nan()`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161889,"byte_end":161918,"line_start":139,"line_end":139,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161923,"byte_end":161926,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161931,"byte_end":161938,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161943,"byte_end":161974,"line_start":142,"line_end":142,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":161979,"byte_end":161996,"line_start":143,"line_end":143,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162001,"byte_end":162004,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let x = 3.5;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162009,"byte_end":162025,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/ let y = -3.5;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162030,"byte_end":162047,"line_start":146,"line_end":146,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162052,"byte_end":162055,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_x = (x.abs() - x).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162060,"byte_end":162107,"line_start":148,"line_end":148,"column_start":5,"column_end":52}},{"value":"/ let abs_difference_y = (y.abs() - (-y)).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162112,"byte_end":162162,"line_start":149,"line_end":149,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162167,"byte_end":162170,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162175,"byte_end":162213,"line_start":151,"line_end":151,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162218,"byte_end":162256,"line_start":152,"line_end":152,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162261,"byte_end":162264,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ assert!(::num_traits::Float::is_nan(f64::NAN.abs()));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162269,"byte_end":162326,"line_start":154,"line_end":154,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162331,"byte_end":162338,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162921,"byte_end":162927,"line_start":175,"line_end":175,"column_start":8,"column_end":14},"name":"signum","qualname":"::real::Real::signum","value":"pub fn signum(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns a number that represents the sign of `self`.","sig":null,"attributes":[{"value":"/ Returns a number that represents the sign of `self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162370,"byte_end":162426,"line_start":158,"line_end":158,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162431,"byte_end":162434,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ - `1.0` if the number is positive, `+0.0` or `Float::infinity()`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162439,"byte_end":162507,"line_start":160,"line_end":160,"column_start":5,"column_end":73}},{"value":"/ - `-1.0` if the number is negative, `-0.0` or `Float::neg_infinity()`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162512,"byte_end":162585,"line_start":161,"line_end":161,"column_start":5,"column_end":78}},{"value":"/ - `Float::nan()` if the number is `Float::nan()`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162590,"byte_end":162642,"line_start":162,"line_end":162,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162647,"byte_end":162650,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162655,"byte_end":162662,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162667,"byte_end":162698,"line_start":165,"line_end":165,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162703,"byte_end":162720,"line_start":166,"line_end":166,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162725,"byte_end":162728,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let f = 3.5;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162733,"byte_end":162749,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162754,"byte_end":162757,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.signum(), 1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162762,"byte_end":162794,"line_start":170,"line_end":170,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(f64::NEG_INFINITY.signum(), -1.0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162799,"byte_end":162848,"line_start":171,"line_end":171,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162853,"byte_end":162856,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ assert!(f64::NAN.signum().is_nan());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162861,"byte_end":162901,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162906,"byte_end":162913,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163408,"byte_end":163424,"line_start":193,"line_end":193,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::real::Real::is_sign_positive","value":"pub fn is_sign_positive(Self) -> bool","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is positive, including `+0.0`,\n `Float::infinity()`, and with newer versions of Rust `f64::NAN`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is positive, including `+0.0`,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":162948,"byte_end":163007,"line_start":177,"line_end":177,"column_start":5,"column_end":64}},{"value":"/ `Float::infinity()`, and with newer versions of Rust `f64::NAN`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163012,"byte_end":163080,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163085,"byte_end":163088,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163093,"byte_end":163100,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163105,"byte_end":163136,"line_start":181,"line_end":181,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163141,"byte_end":163158,"line_start":182,"line_end":182,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163163,"byte_end":163166,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ let neg_nan: f64 = -f64::NAN;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163171,"byte_end":163204,"line_start":184,"line_end":184,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163209,"byte_end":163212,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163217,"byte_end":163233,"line_start":186,"line_end":186,"column_start":5,"column_end":21}},{"value":"/ let g = -7.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163238,"byte_end":163255,"line_start":187,"line_end":187,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163260,"byte_end":163263,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ assert!(f.is_sign_positive());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163268,"byte_end":163302,"line_start":189,"line_end":189,"column_start":5,"column_end":39}},{"value":"/ assert!(!g.is_sign_positive());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163307,"byte_end":163342,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/ assert!(!neg_nan.is_sign_positive());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163347,"byte_end":163388,"line_start":191,"line_end":191,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163393,"byte_end":163400,"line_start":192,"line_end":192,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163901,"byte_end":163917,"line_start":211,"line_end":211,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::real::Real::is_sign_negative","value":"pub fn is_sign_negative(Self) -> bool","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is negative, including `-0.0`,\n `Float::neg_infinity()`, and with newer versions of Rust `-f64::NAN`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is negative, including `-0.0`,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163445,"byte_end":163504,"line_start":195,"line_end":195,"column_start":5,"column_end":64}},{"value":"/ `Float::neg_infinity()`, and with newer versions of Rust `-f64::NAN`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163509,"byte_end":163582,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163587,"byte_end":163590,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163595,"byte_end":163602,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163607,"byte_end":163638,"line_start":199,"line_end":199,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163643,"byte_end":163660,"line_start":200,"line_end":200,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163665,"byte_end":163668,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ let nan: f64 = f64::NAN;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163673,"byte_end":163701,"line_start":202,"line_end":202,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163706,"byte_end":163709,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163714,"byte_end":163730,"line_start":204,"line_end":204,"column_start":5,"column_end":21}},{"value":"/ let g = -7.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163735,"byte_end":163752,"line_start":205,"line_end":205,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163757,"byte_end":163760,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ assert!(!f.is_sign_negative());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163765,"byte_end":163800,"line_start":207,"line_end":207,"column_start":5,"column_end":40}},{"value":"/ assert!(g.is_sign_negative());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163805,"byte_end":163839,"line_start":208,"line_end":208,"column_start":5,"column_end":39}},{"value":"/ assert!(!nan.is_sign_negative());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163844,"byte_end":163881,"line_start":209,"line_end":209,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163886,"byte_end":163893,"line_start":210,"line_end":210,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164534,"byte_end":164541,"line_start":231,"line_end":231,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::real::Real::mul_add","value":"pub fn mul_add(Self, Self, Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Fused multiply-add. Computes `(self * a) + b` with only one rounding\n error, yielding a more accurate result than an unfused multiply-add.","sig":null,"attributes":[{"value":"/ Fused multiply-add. Computes `(self * a) + b` with only one rounding","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":163938,"byte_end":164010,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/ error, yielding a more accurate result than an unfused multiply-add.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164015,"byte_end":164087,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164092,"byte_end":164095,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Using `mul_add` can be more performant than an unfused multiply-add if","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164100,"byte_end":164174,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/ the target architecture has a dedicated `fma` CPU instruction.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164179,"byte_end":164245,"line_start":217,"line_end":217,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164250,"byte_end":164253,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164258,"byte_end":164265,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164270,"byte_end":164301,"line_start":220,"line_end":220,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164306,"byte_end":164309,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ let m = 10.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164314,"byte_end":164331,"line_start":222,"line_end":222,"column_start":5,"column_end":22}},{"value":"/ let x = 4.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164336,"byte_end":164352,"line_start":223,"line_end":223,"column_start":5,"column_end":21}},{"value":"/ let b = 60.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164357,"byte_end":164374,"line_start":224,"line_end":224,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164379,"byte_end":164382,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ // 100.0","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164387,"byte_end":164399,"line_start":226,"line_end":226,"column_start":5,"column_end":17}},{"value":"/ let abs_difference = (m.mul_add(x, b) - (m*x + b)).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164404,"byte_end":164465,"line_start":227,"line_end":227,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164470,"byte_end":164473,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164478,"byte_end":164514,"line_start":229,"line_end":229,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164519,"byte_end":164526,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164845,"byte_end":164850,"line_start":243,"line_end":243,"column_start":8,"column_end":13},"name":"recip","qualname":"::real::Real::recip","value":"pub fn recip(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Take the reciprocal (inverse) of a number, `1/x`.","sig":null,"attributes":[{"value":"/ Take the reciprocal (inverse) of a number, `1/x`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164580,"byte_end":164633,"line_start":233,"line_end":233,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164638,"byte_end":164641,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164646,"byte_end":164653,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164658,"byte_end":164689,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164694,"byte_end":164697,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164702,"byte_end":164718,"line_start":238,"line_end":238,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.recip() - (1.0/x)).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164723,"byte_end":164776,"line_start":239,"line_end":239,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164781,"byte_end":164784,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164789,"byte_end":164825,"line_start":241,"line_end":241,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164830,"byte_end":164837,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165192,"byte_end":165196,"line_start":257,"line_end":257,"column_start":8,"column_end":12},"name":"powi","qualname":"::real::Real::powi","value":"pub fn powi(Self, i32) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Raise a number to an integer power.","sig":null,"attributes":[{"value":"/ Raise a number to an integer power.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164871,"byte_end":164910,"line_start":245,"line_end":245,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164915,"byte_end":164918,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Using this function is generally faster than using `powf`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164923,"byte_end":164984,"line_start":247,"line_end":247,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164989,"byte_end":164992,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":164997,"byte_end":165004,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165009,"byte_end":165040,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165045,"byte_end":165048,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165053,"byte_end":165069,"line_start":252,"line_end":252,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.powi(2) - x*x).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165074,"byte_end":165123,"line_start":253,"line_end":253,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165128,"byte_end":165131,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165136,"byte_end":165172,"line_start":255,"line_end":255,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165177,"byte_end":165184,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165477,"byte_end":165481,"line_start":269,"line_end":269,"column_start":8,"column_end":12},"name":"powf","qualname":"::real::Real::powf","value":"pub fn powf(Self, Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Raise a number to a real number power.","sig":null,"attributes":[{"value":"/ Raise a number to a real number power.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165225,"byte_end":165267,"line_start":259,"line_end":259,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165272,"byte_end":165275,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165280,"byte_end":165287,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165292,"byte_end":165323,"line_start":262,"line_end":262,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165328,"byte_end":165331,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165336,"byte_end":165352,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.powf(2.0) - x*x).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165357,"byte_end":165408,"line_start":265,"line_end":265,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165413,"byte_end":165416,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165421,"byte_end":165457,"line_start":267,"line_end":267,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165462,"byte_end":165469,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166073,"byte_end":166077,"line_start":290,"line_end":290,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::real::Real::sqrt","value":"pub fn sqrt(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Take the square root of a number.","sig":null,"attributes":[{"value":"/ Take the square root of a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165511,"byte_end":165548,"line_start":271,"line_end":271,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165553,"byte_end":165556,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ Returns NaN if `self` is a negative floating-point number.  ","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165561,"byte_end":165625,"line_start":273,"line_end":273,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165630,"byte_end":165633,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165638,"byte_end":165650,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165655,"byte_end":165658,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ If the implementing type doesn't support NaN, this method should panic if `self < 0`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165663,"byte_end":165752,"line_start":277,"line_end":277,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165757,"byte_end":165760,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165765,"byte_end":165772,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165777,"byte_end":165808,"line_start":280,"line_end":280,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165813,"byte_end":165816,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ let positive = 4.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165821,"byte_end":165844,"line_start":282,"line_end":282,"column_start":5,"column_end":28}},{"value":"/ let negative = -4.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165849,"byte_end":165873,"line_start":283,"line_end":283,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165878,"byte_end":165881,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (positive.sqrt() - 2.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165886,"byte_end":165941,"line_start":285,"line_end":285,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165946,"byte_end":165949,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165954,"byte_end":165990,"line_start":287,"line_end":287,"column_start":5,"column_end":41}},{"value":"/ assert!(::num_traits::Float::is_nan(negative.sqrt()));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":165995,"byte_end":166053,"line_start":288,"line_end":288,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166058,"byte_end":166065,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166432,"byte_end":166435,"line_start":306,"line_end":306,"column_start":8,"column_end":11},"name":"exp","qualname":"::real::Real::exp","value":"pub fn exp(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns `e^(self)`, (the exponential function).","sig":null,"attributes":[{"value":"/ Returns `e^(self)`, (the exponential function).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166098,"byte_end":166149,"line_start":292,"line_end":292,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166154,"byte_end":166157,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166162,"byte_end":166169,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166174,"byte_end":166205,"line_start":295,"line_end":295,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166210,"byte_end":166213,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ let one = 1.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166218,"byte_end":166236,"line_start":297,"line_end":297,"column_start":5,"column_end":23}},{"value":"/ // e^1","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166241,"byte_end":166251,"line_start":298,"line_end":298,"column_start":5,"column_end":15}},{"value":"/ let e = one.exp();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166256,"byte_end":166278,"line_start":299,"line_end":299,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166283,"byte_end":166286,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ // ln(e) - 1 == 0","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166291,"byte_end":166312,"line_start":301,"line_end":301,"column_start":5,"column_end":26}},{"value":"/ let abs_difference = (e.ln() - 1.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166317,"byte_end":166363,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166368,"byte_end":166371,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166376,"byte_end":166412,"line_start":304,"line_end":304,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166417,"byte_end":166424,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166718,"byte_end":166722,"line_start":320,"line_end":320,"column_start":8,"column_end":12},"name":"exp2","qualname":"::real::Real::exp2","value":"pub fn exp2(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns `2^(self)`.","sig":null,"attributes":[{"value":"/ Returns `2^(self)`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166456,"byte_end":166479,"line_start":308,"line_end":308,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166484,"byte_end":166487,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166492,"byte_end":166499,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166504,"byte_end":166535,"line_start":311,"line_end":311,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166540,"byte_end":166543,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ let f = 2.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166548,"byte_end":166564,"line_start":313,"line_end":313,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166569,"byte_end":166572,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ // 2^2 - 4 == 0","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166577,"byte_end":166596,"line_start":315,"line_end":315,"column_start":5,"column_end":24}},{"value":"/ let abs_difference = (f.exp2() - 4.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166601,"byte_end":166649,"line_start":316,"line_end":316,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166654,"byte_end":166657,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166662,"byte_end":166698,"line_start":318,"line_end":318,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166703,"byte_end":166710,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167211,"byte_end":167213,"line_start":340,"line_end":340,"column_start":8,"column_end":10},"name":"ln","qualname":"::real::Real::ln","value":"pub fn ln(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns the natural logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the natural logarithm of the number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166743,"byte_end":166791,"line_start":322,"line_end":322,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166796,"byte_end":166799,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166804,"byte_end":166816,"line_start":324,"line_end":324,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166821,"byte_end":166824,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ If `self <= 0` and this type does not support a NaN representation, this function should panic.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166829,"byte_end":166928,"line_start":326,"line_end":326,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166933,"byte_end":166936,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166941,"byte_end":166948,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166953,"byte_end":166984,"line_start":329,"line_end":329,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166989,"byte_end":166992,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let one = 1.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":166997,"byte_end":167015,"line_start":331,"line_end":331,"column_start":5,"column_end":23}},{"value":"/ // e^1","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167020,"byte_end":167030,"line_start":332,"line_end":332,"column_start":5,"column_end":15}},{"value":"/ let e = one.exp();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167035,"byte_end":167057,"line_start":333,"line_end":333,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167062,"byte_end":167065,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ // ln(e) - 1 == 0","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167070,"byte_end":167091,"line_start":335,"line_end":335,"column_start":5,"column_end":26}},{"value":"/ let abs_difference = (e.ln() - 1.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167096,"byte_end":167142,"line_start":336,"line_end":336,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167147,"byte_end":167150,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167155,"byte_end":167191,"line_start":338,"line_end":338,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167196,"byte_end":167203,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167865,"byte_end":167868,"line_start":363,"line_end":363,"column_start":8,"column_end":11},"name":"log","qualname":"::real::Real::log","value":"pub fn log(Self, Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns the logarithm of the number with respect to an arbitrary base.","sig":null,"attributes":[{"value":"/ Returns the logarithm of the number with respect to an arbitrary base.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167234,"byte_end":167308,"line_start":342,"line_end":342,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167313,"byte_end":167316,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167321,"byte_end":167333,"line_start":344,"line_end":344,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167338,"byte_end":167341,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ If `self <= 0` and this type does not support a NaN representation, this function should panic.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167346,"byte_end":167445,"line_start":346,"line_end":346,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167450,"byte_end":167453,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167458,"byte_end":167465,"line_start":348,"line_end":348,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167470,"byte_end":167501,"line_start":349,"line_end":349,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167506,"byte_end":167509,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ let ten = 10.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167514,"byte_end":167533,"line_start":351,"line_end":351,"column_start":5,"column_end":24}},{"value":"/ let two = 2.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167538,"byte_end":167556,"line_start":352,"line_end":352,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167561,"byte_end":167564,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ // log10(10) - 1 == 0","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167569,"byte_end":167594,"line_start":354,"line_end":354,"column_start":5,"column_end":30}},{"value":"/ let abs_difference_10 = (ten.log(10.0) - 1.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167599,"byte_end":167655,"line_start":355,"line_end":355,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167660,"byte_end":167663,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ // log2(2) - 1 == 0","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167668,"byte_end":167691,"line_start":357,"line_end":357,"column_start":5,"column_end":28}},{"value":"/ let abs_difference_2 = (two.log(2.0) - 1.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167696,"byte_end":167750,"line_start":358,"line_end":358,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167755,"byte_end":167758,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_10 < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167763,"byte_end":167802,"line_start":360,"line_end":360,"column_start":5,"column_end":44}},{"value":"/ assert!(abs_difference_2 < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167807,"byte_end":167845,"line_start":361,"line_end":361,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167850,"byte_end":167857,"line_start":362,"line_end":362,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168332,"byte_end":168336,"line_start":381,"line_end":381,"column_start":8,"column_end":12},"name":"log2","qualname":"::real::Real::log2","value":"pub fn log2(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns the base 2 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 2 logarithm of the number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167901,"byte_end":167948,"line_start":365,"line_end":365,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167953,"byte_end":167956,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167961,"byte_end":167973,"line_start":367,"line_end":367,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167978,"byte_end":167981,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ If `self <= 0` and this type does not support a NaN representation, this function should panic.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":167986,"byte_end":168085,"line_start":369,"line_end":369,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168090,"byte_end":168093,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168098,"byte_end":168105,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168110,"byte_end":168141,"line_start":372,"line_end":372,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168146,"byte_end":168149,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let two = 2.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168154,"byte_end":168172,"line_start":374,"line_end":374,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168177,"byte_end":168180,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ // log2(2) - 1 == 0","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168185,"byte_end":168208,"line_start":376,"line_end":376,"column_start":5,"column_end":28}},{"value":"/ let abs_difference = (two.log2() - 1.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168213,"byte_end":168263,"line_start":377,"line_end":377,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168268,"byte_end":168271,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168276,"byte_end":168312,"line_start":379,"line_end":379,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168317,"byte_end":168324,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168801,"byte_end":168806,"line_start":400,"line_end":400,"column_start":8,"column_end":13},"name":"log10","qualname":"::real::Real::log10","value":"pub fn log10(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns the base 10 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 10 logarithm of the number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168357,"byte_end":168405,"line_start":383,"line_end":383,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168410,"byte_end":168413,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168418,"byte_end":168430,"line_start":385,"line_end":385,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168435,"byte_end":168438,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If `self <= 0` and this type does not support a NaN representation, this function should panic.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168443,"byte_end":168542,"line_start":387,"line_end":387,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168547,"byte_end":168550,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168555,"byte_end":168558,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168563,"byte_end":168570,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168575,"byte_end":168606,"line_start":391,"line_end":391,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168611,"byte_end":168614,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ let ten = 10.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168619,"byte_end":168638,"line_start":393,"line_end":393,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168643,"byte_end":168646,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ // log10(10) - 1 == 0","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168651,"byte_end":168676,"line_start":395,"line_end":395,"column_start":5,"column_end":30}},{"value":"/ let abs_difference = (ten.log10() - 1.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168681,"byte_end":168732,"line_start":396,"line_end":396,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168737,"byte_end":168740,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168745,"byte_end":168781,"line_start":398,"line_end":398,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168786,"byte_end":168793,"line_start":399,"line_end":399,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169091,"byte_end":169101,"line_start":413,"line_end":413,"column_start":8,"column_end":18},"name":"to_degrees","qualname":"::real::Real::to_degrees","value":"pub fn to_degrees(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Converts radians to degrees.","sig":null,"attributes":[{"value":"/ Converts radians to degrees.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168827,"byte_end":168859,"line_start":402,"line_end":402,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168864,"byte_end":168867,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168872,"byte_end":168879,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/ use std::f64::consts;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168884,"byte_end":168909,"line_start":405,"line_end":405,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168914,"byte_end":168917,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ let angle = consts::PI;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168922,"byte_end":168949,"line_start":407,"line_end":407,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168954,"byte_end":168957,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (angle.to_degrees() - 180.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":168962,"byte_end":169022,"line_start":409,"line_end":409,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169027,"byte_end":169030,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169035,"byte_end":169071,"line_start":411,"line_end":411,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169076,"byte_end":169083,"line_start":412,"line_end":412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169390,"byte_end":169400,"line_start":426,"line_end":426,"column_start":8,"column_end":18},"name":"to_radians","qualname":"::real::Real::to_radians","value":"pub fn to_radians(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Converts degrees to radians.","sig":null,"attributes":[{"value":"/ Converts degrees to radians.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169122,"byte_end":169154,"line_start":415,"line_end":415,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169159,"byte_end":169162,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169167,"byte_end":169174,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ use std::f64::consts;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169179,"byte_end":169204,"line_start":418,"line_end":418,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169209,"byte_end":169212,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let angle = 180.0_f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169217,"byte_end":169243,"line_start":420,"line_end":420,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169248,"byte_end":169251,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (angle.to_radians() - consts::PI).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169256,"byte_end":169321,"line_start":422,"line_end":422,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169326,"byte_end":169329,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169334,"byte_end":169370,"line_start":424,"line_end":424,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169375,"byte_end":169382,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169631,"byte_end":169634,"line_start":438,"line_end":438,"column_start":8,"column_end":11},"name":"max","qualname":"::real::Real::max","value":"pub fn max(Self, Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns the maximum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the maximum of the two numbers.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169421,"byte_end":169464,"line_start":428,"line_end":428,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169469,"byte_end":169472,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169477,"byte_end":169484,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169489,"byte_end":169520,"line_start":431,"line_end":431,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169525,"byte_end":169528,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169533,"byte_end":169549,"line_start":433,"line_end":433,"column_start":5,"column_end":21}},{"value":"/ let y = 2.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169554,"byte_end":169570,"line_start":434,"line_end":434,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169575,"byte_end":169578,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x.max(y), y);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169583,"byte_end":169611,"line_start":436,"line_end":436,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169616,"byte_end":169623,"line_start":437,"line_end":437,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169878,"byte_end":169881,"line_start":450,"line_end":450,"column_start":8,"column_end":11},"name":"min","qualname":"::real::Real::min","value":"pub fn min(Self, Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns the minimum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the minimum of the two numbers.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169668,"byte_end":169711,"line_start":440,"line_end":440,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169716,"byte_end":169719,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169724,"byte_end":169731,"line_start":442,"line_end":442,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169736,"byte_end":169767,"line_start":443,"line_end":443,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169772,"byte_end":169775,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169780,"byte_end":169796,"line_start":445,"line_end":445,"column_start":5,"column_end":21}},{"value":"/ let y = 2.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169801,"byte_end":169817,"line_start":446,"line_end":446,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169822,"byte_end":169825,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x.min(y), x);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169830,"byte_end":169858,"line_start":448,"line_end":448,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169863,"byte_end":169870,"line_start":449,"line_end":449,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170706,"byte_end":170710,"line_start":483,"line_end":483,"column_start":8,"column_end":12},"name":"cbrt","qualname":"::real::Real::cbrt","value":"pub fn cbrt(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169915,"byte_end":169958,"line_start":452,"line_end":452,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169963,"byte_end":169966,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ * If `self <= other`: `0:0`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":169971,"byte_end":170002,"line_start":454,"line_end":454,"column_start":5,"column_end":36}},{"value":"/ * Else: `self - other`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170007,"byte_end":170033,"line_start":455,"line_end":455,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170038,"byte_end":170041,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170046,"byte_end":170053,"line_start":457,"line_end":457,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170058,"byte_end":170089,"line_start":458,"line_end":458,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170094,"byte_end":170097,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ let x = 3.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170102,"byte_end":170118,"line_start":460,"line_end":460,"column_start":5,"column_end":21}},{"value":"/ let y = -3.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170123,"byte_end":170140,"line_start":461,"line_end":461,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170145,"byte_end":170148,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_x = (x.abs_sub(1.0) - 2.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170153,"byte_end":170209,"line_start":463,"line_end":463,"column_start":5,"column_end":61}},{"value":"/ let abs_difference_y = (y.abs_sub(1.0) - 0.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170214,"byte_end":170270,"line_start":464,"line_end":464,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170275,"byte_end":170278,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170283,"byte_end":170321,"line_start":466,"line_end":466,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170326,"byte_end":170364,"line_start":467,"line_end":467,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170369,"byte_end":170376,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ Take the cubic root of a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170427,"byte_end":170463,"line_start":471,"line_end":471,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170468,"byte_end":170471,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170476,"byte_end":170483,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170488,"byte_end":170519,"line_start":474,"line_end":474,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170524,"byte_end":170527,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ let x = 8.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170532,"byte_end":170548,"line_start":476,"line_end":476,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170553,"byte_end":170556,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ // x^(1/3) - 2 == 0","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170561,"byte_end":170584,"line_start":478,"line_end":478,"column_start":5,"column_end":28}},{"value":"/ let abs_difference = (x.cbrt() - 2.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170589,"byte_end":170637,"line_start":479,"line_end":479,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170642,"byte_end":170645,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170650,"byte_end":170686,"line_start":481,"line_end":481,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170691,"byte_end":170698,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171133,"byte_end":171138,"line_start":499,"line_end":499,"column_start":8,"column_end":13},"name":"hypot","qualname":"::real::Real::hypot","value":"pub fn hypot(Self, Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Calculate the length of the hypotenuse of a right-angle triangle given\n legs of length `x` and `y`.","sig":null,"attributes":[{"value":"/ Calculate the length of the hypotenuse of a right-angle triangle given","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170731,"byte_end":170805,"line_start":485,"line_end":485,"column_start":5,"column_end":79}},{"value":"/ legs of length `x` and `y`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170810,"byte_end":170841,"line_start":486,"line_end":486,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170846,"byte_end":170849,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170854,"byte_end":170861,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170866,"byte_end":170897,"line_start":489,"line_end":489,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170902,"byte_end":170905,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170910,"byte_end":170926,"line_start":491,"line_end":491,"column_start":5,"column_end":21}},{"value":"/ let y = 3.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170931,"byte_end":170947,"line_start":492,"line_end":492,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170952,"byte_end":170955,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ // sqrt(x^2 + y^2)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170960,"byte_end":170982,"line_start":494,"line_end":494,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (x.hypot(y) - (x.powi(2) + y.powi(2)).sqrt()).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":170987,"byte_end":171064,"line_start":495,"line_end":495,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171069,"byte_end":171072,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171077,"byte_end":171113,"line_start":497,"line_end":497,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171118,"byte_end":171125,"line_start":498,"line_end":498,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171471,"byte_end":171474,"line_start":513,"line_end":513,"column_start":8,"column_end":11},"name":"sin","qualname":"::real::Real::sin","value":"pub fn sin(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Computes the sine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the sine of a number (in radians).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171172,"byte_end":171219,"line_start":501,"line_end":501,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171224,"byte_end":171227,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171232,"byte_end":171239,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171244,"byte_end":171275,"line_start":504,"line_end":504,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171280,"byte_end":171297,"line_start":505,"line_end":505,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171302,"byte_end":171305,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/2.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171310,"byte_end":171342,"line_start":507,"line_end":507,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171347,"byte_end":171350,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (x.sin() - 1.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171355,"byte_end":171402,"line_start":509,"line_end":509,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171407,"byte_end":171410,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171415,"byte_end":171451,"line_start":511,"line_end":511,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171456,"byte_end":171463,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171796,"byte_end":171799,"line_start":527,"line_end":527,"column_start":8,"column_end":11},"name":"cos","qualname":"::real::Real::cos","value":"pub fn cos(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Computes the cosine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the cosine of a number (in radians).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171495,"byte_end":171544,"line_start":515,"line_end":515,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171549,"byte_end":171552,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171557,"byte_end":171564,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171569,"byte_end":171600,"line_start":518,"line_end":518,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171605,"byte_end":171622,"line_start":519,"line_end":519,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171627,"byte_end":171630,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0*f64::consts::PI;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171635,"byte_end":171667,"line_start":521,"line_end":521,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171672,"byte_end":171675,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (x.cos() - 1.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171680,"byte_end":171727,"line_start":523,"line_end":523,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171732,"byte_end":171735,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171740,"byte_end":171776,"line_start":525,"line_end":525,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171781,"byte_end":171788,"line_start":526,"line_end":526,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172114,"byte_end":172117,"line_start":540,"line_end":540,"column_start":8,"column_end":11},"name":"tan","qualname":"::real::Real::tan","value":"pub fn tan(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Computes the tangent of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the tangent of a number (in radians).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171820,"byte_end":171870,"line_start":529,"line_end":529,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171875,"byte_end":171878,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171883,"byte_end":171890,"line_start":531,"line_end":531,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171895,"byte_end":171926,"line_start":532,"line_end":532,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171931,"byte_end":171948,"line_start":533,"line_end":533,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171953,"byte_end":171956,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/4.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171961,"byte_end":171993,"line_start":535,"line_end":535,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (x.tan() - 1.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":171998,"byte_end":172045,"line_start":536,"line_end":536,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172050,"byte_end":172053,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-14);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172058,"byte_end":172094,"line_start":538,"line_end":538,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172099,"byte_end":172106,"line_start":539,"line_end":539,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172774,"byte_end":172778,"line_start":562,"line_end":562,"column_start":8,"column_end":12},"name":"asin","qualname":"::real::Real::asin","value":"pub fn asin(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Computes the arcsine of a number. Return value is in radians in\n the range [-pi/2, pi/2] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arcsine of a number. Return value is in radians in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172138,"byte_end":172205,"line_start":542,"line_end":542,"column_start":5,"column_end":72}},{"value":"/ the range [-pi/2, pi/2] or NaN if the number is outside the range","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172210,"byte_end":172279,"line_start":543,"line_end":543,"column_start":5,"column_end":74}},{"value":"/ [-1, 1].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172284,"byte_end":172296,"line_start":544,"line_end":544,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172301,"byte_end":172304,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172309,"byte_end":172321,"line_start":546,"line_end":546,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172326,"byte_end":172329,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ If this type does not support a NaN representation, this function should panic","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172334,"byte_end":172416,"line_start":548,"line_end":548,"column_start":5,"column_end":87}},{"value":"/ if the number is outside the range [-1, 1].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172421,"byte_end":172468,"line_start":549,"line_end":549,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172473,"byte_end":172476,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172481,"byte_end":172488,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172493,"byte_end":172524,"line_start":552,"line_end":552,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172529,"byte_end":172546,"line_start":553,"line_end":553,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172551,"byte_end":172554,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ let f = f64::consts::PI / 2.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172559,"byte_end":172593,"line_start":555,"line_end":555,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172598,"byte_end":172601,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ // asin(sin(pi/2))","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172606,"byte_end":172628,"line_start":557,"line_end":557,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (f.sin().asin() - f64::consts::PI / 2.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172633,"byte_end":172705,"line_start":558,"line_end":558,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172710,"byte_end":172713,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172718,"byte_end":172754,"line_start":560,"line_end":560,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172759,"byte_end":172766,"line_start":561,"line_end":561,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173431,"byte_end":173435,"line_start":584,"line_end":584,"column_start":8,"column_end":12},"name":"acos","qualname":"::real::Real::acos","value":"pub fn acos(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Computes the arccosine of a number. Return value is in radians in\n the range [0, pi] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arccosine of a number. Return value is in radians in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172799,"byte_end":172868,"line_start":564,"line_end":564,"column_start":5,"column_end":74}},{"value":"/ the range [0, pi] or NaN if the number is outside the range","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172873,"byte_end":172936,"line_start":565,"line_end":565,"column_start":5,"column_end":68}},{"value":"/ [-1, 1].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172941,"byte_end":172953,"line_start":566,"line_end":566,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172958,"byte_end":172961,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172966,"byte_end":172978,"line_start":568,"line_end":568,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172983,"byte_end":172986,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ If this type does not support a NaN representation, this function should panic","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":172991,"byte_end":173073,"line_start":570,"line_end":570,"column_start":5,"column_end":87}},{"value":"/ if the number is outside the range [-1, 1].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173078,"byte_end":173125,"line_start":571,"line_end":571,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173130,"byte_end":173133,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173138,"byte_end":173145,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173150,"byte_end":173181,"line_start":574,"line_end":574,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173186,"byte_end":173203,"line_start":575,"line_end":575,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173208,"byte_end":173211,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ let f = f64::consts::PI / 4.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173216,"byte_end":173250,"line_start":577,"line_end":577,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173255,"byte_end":173258,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ // acos(cos(pi/4))","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173263,"byte_end":173285,"line_start":579,"line_end":579,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (f.cos().acos() - f64::consts::PI / 4.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173290,"byte_end":173362,"line_start":580,"line_end":580,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173367,"byte_end":173370,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173375,"byte_end":173411,"line_start":582,"line_end":582,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173416,"byte_end":173423,"line_start":583,"line_end":583,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173804,"byte_end":173808,"line_start":599,"line_end":599,"column_start":8,"column_end":12},"name":"atan","qualname":"::real::Real::atan","value":"pub fn atan(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Computes the arctangent of a number. Return value is in radians in the\n range [-pi/2, pi/2];","sig":null,"attributes":[{"value":"/ Computes the arctangent of a number. Return value is in radians in the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173456,"byte_end":173530,"line_start":586,"line_end":586,"column_start":5,"column_end":79}},{"value":"/ range [-pi/2, pi/2];","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173535,"byte_end":173559,"line_start":587,"line_end":587,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173564,"byte_end":173567,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173572,"byte_end":173579,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173584,"byte_end":173615,"line_start":590,"line_end":590,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173620,"byte_end":173623,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ let f = 1.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173628,"byte_end":173644,"line_start":592,"line_end":592,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173649,"byte_end":173652,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ // atan(tan(1))","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173657,"byte_end":173676,"line_start":594,"line_end":594,"column_start":5,"column_end":24}},{"value":"/ let abs_difference = (f.tan().atan() - 1.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173681,"byte_end":173735,"line_start":595,"line_end":595,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173740,"byte_end":173743,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173748,"byte_end":173784,"line_start":597,"line_end":597,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173789,"byte_end":173796,"line_start":598,"line_end":598,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174694,"byte_end":174699,"line_start":628,"line_end":628,"column_start":8,"column_end":13},"name":"atan2","qualname":"::real::Real::atan2","value":"pub fn atan2(Self, Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).","sig":null,"attributes":[{"value":"/ Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173829,"byte_end":173905,"line_start":601,"line_end":601,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173910,"byte_end":173913,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ * `x = 0`, `y = 0`: `0`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173918,"byte_end":173945,"line_start":603,"line_end":603,"column_start":5,"column_end":32}},{"value":"/ * `x >= 0`: `arctan(y/x)` -> `[-pi/2, pi/2]`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":173950,"byte_end":173998,"line_start":604,"line_end":604,"column_start":5,"column_end":53}},{"value":"/ * `y >= 0`: `arctan(y/x) + pi` -> `(pi/2, pi]`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174003,"byte_end":174053,"line_start":605,"line_end":605,"column_start":5,"column_end":55}},{"value":"/ * `y < 0`: `arctan(y/x) - pi` -> `(-pi, -pi/2)`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174058,"byte_end":174109,"line_start":606,"line_end":606,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174114,"byte_end":174117,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174122,"byte_end":174129,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174134,"byte_end":174165,"line_start":609,"line_end":609,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174170,"byte_end":174187,"line_start":610,"line_end":610,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174192,"byte_end":174195,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let pi = f64::consts::PI;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174200,"byte_end":174229,"line_start":612,"line_end":612,"column_start":5,"column_end":34}},{"value":"/ // All angles from horizontal right (+x)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174234,"byte_end":174278,"line_start":613,"line_end":613,"column_start":5,"column_end":49}},{"value":"/ // 45 deg counter-clockwise","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174283,"byte_end":174314,"line_start":614,"line_end":614,"column_start":5,"column_end":36}},{"value":"/ let x1 = 3.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174319,"byte_end":174336,"line_start":615,"line_end":615,"column_start":5,"column_end":22}},{"value":"/ let y1 = -3.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174341,"byte_end":174359,"line_start":616,"line_end":616,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174364,"byte_end":174367,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ // 135 deg clockwise","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174372,"byte_end":174396,"line_start":618,"line_end":618,"column_start":5,"column_end":29}},{"value":"/ let x2 = -3.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174401,"byte_end":174419,"line_start":619,"line_end":619,"column_start":5,"column_end":23}},{"value":"/ let y2 = 3.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174424,"byte_end":174441,"line_start":620,"line_end":620,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174446,"byte_end":174449,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_1 = (y1.atan2(x1) - (-pi/4.0)).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174454,"byte_end":174514,"line_start":622,"line_end":622,"column_start":5,"column_end":65}},{"value":"/ let abs_difference_2 = (y2.atan2(x2) - 3.0*pi/4.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174519,"byte_end":174580,"line_start":623,"line_end":623,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174585,"byte_end":174588,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_1 < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174593,"byte_end":174631,"line_start":625,"line_end":625,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_2 < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174636,"byte_end":174674,"line_start":626,"line_end":626,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174679,"byte_end":174686,"line_start":627,"line_end":627,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175218,"byte_end":175225,"line_start":646,"line_end":646,"column_start":8,"column_end":15},"name":"sin_cos","qualname":"::real::Real::sin_cos","value":"pub fn sin_cos(Self) -> (Self, Self)","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Simultaneously computes the sine and cosine of the number, `x`. Returns\n `(sin(x), cos(x))`.","sig":null,"attributes":[{"value":"/ Simultaneously computes the sine and cosine of the number, `x`. Returns","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174733,"byte_end":174808,"line_start":630,"line_end":630,"column_start":5,"column_end":80}},{"value":"/ `(sin(x), cos(x))`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174813,"byte_end":174836,"line_start":631,"line_end":631,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174841,"byte_end":174844,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174849,"byte_end":174856,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174861,"byte_end":174892,"line_start":634,"line_end":634,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174897,"byte_end":174914,"line_start":635,"line_end":635,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174919,"byte_end":174922,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/4.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174927,"byte_end":174959,"line_start":637,"line_end":637,"column_start":5,"column_end":37}},{"value":"/ let f = x.sin_cos();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174964,"byte_end":174988,"line_start":638,"line_end":638,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":174993,"byte_end":174996,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_0 = (f.0 - x.sin()).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175001,"byte_end":175050,"line_start":640,"line_end":640,"column_start":5,"column_end":54}},{"value":"/ let abs_difference_1 = (f.1 - x.cos()).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175055,"byte_end":175104,"line_start":641,"line_end":641,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175109,"byte_end":175112,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_0 < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175117,"byte_end":175155,"line_start":643,"line_end":643,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_0 < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175160,"byte_end":175198,"line_start":644,"line_end":644,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175203,"byte_end":175210,"line_start":645,"line_end":645,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175598,"byte_end":175604,"line_start":661,"line_end":661,"column_start":8,"column_end":14},"name":"exp_m1","qualname":"::real::Real::exp_m1","value":"pub fn exp_m1(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns `e^(self) - 1` in a way that is accurate even if the\n number is close to zero.","sig":null,"attributes":[{"value":"/ Returns `e^(self) - 1` in a way that is accurate even if the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175254,"byte_end":175318,"line_start":648,"line_end":648,"column_start":5,"column_end":69}},{"value":"/ number is close to zero.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175323,"byte_end":175351,"line_start":649,"line_end":649,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175356,"byte_end":175359,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175364,"byte_end":175371,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175376,"byte_end":175407,"line_start":652,"line_end":652,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175412,"byte_end":175415,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ let x = 7.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175420,"byte_end":175436,"line_start":654,"line_end":654,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175441,"byte_end":175444,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ // e^(ln(7)) - 1","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175449,"byte_end":175469,"line_start":656,"line_end":656,"column_start":5,"column_end":25}},{"value":"/ let abs_difference = (x.ln().exp_m1() - 6.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175474,"byte_end":175529,"line_start":657,"line_end":657,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175534,"byte_end":175537,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175542,"byte_end":175578,"line_start":659,"line_end":659,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175583,"byte_end":175590,"line_start":660,"line_end":660,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176182,"byte_end":176187,"line_start":682,"line_end":682,"column_start":8,"column_end":13},"name":"ln_1p","qualname":"::real::Real::ln_1p","value":"pub fn ln_1p(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns `ln(1+n)` (natural logarithm) more accurately than if\n the operations were performed separately.","sig":null,"attributes":[{"value":"/ Returns `ln(1+n)` (natural logarithm) more accurately than if","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175625,"byte_end":175690,"line_start":663,"line_end":663,"column_start":5,"column_end":70}},{"value":"/ the operations were performed separately.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175695,"byte_end":175740,"line_start":664,"line_end":664,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175745,"byte_end":175748,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175753,"byte_end":175765,"line_start":666,"line_end":666,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175770,"byte_end":175773,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ If this type does not support a NaN representation, this function should panic","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175778,"byte_end":175860,"line_start":668,"line_end":668,"column_start":5,"column_end":87}},{"value":"/ if `self-1 <= 0`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175865,"byte_end":175886,"line_start":669,"line_end":669,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175891,"byte_end":175894,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175899,"byte_end":175906,"line_start":671,"line_end":671,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175911,"byte_end":175942,"line_start":672,"line_end":672,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175947,"byte_end":175964,"line_start":673,"line_end":673,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175969,"byte_end":175972,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::E - 1.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":175977,"byte_end":176010,"line_start":675,"line_end":675,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176015,"byte_end":176018,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ // ln(1 + (e - 1)) == ln(e) == 1","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176023,"byte_end":176059,"line_start":677,"line_end":677,"column_start":5,"column_end":41}},{"value":"/ let abs_difference = (x.ln_1p() - 1.0).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176064,"byte_end":176113,"line_start":678,"line_end":678,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176118,"byte_end":176121,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176126,"byte_end":176162,"line_start":680,"line_end":680,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176167,"byte_end":176174,"line_start":681,"line_end":681,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176612,"byte_end":176616,"line_start":700,"line_end":700,"column_start":8,"column_end":12},"name":"sinh","qualname":"::real::Real::sinh","value":"pub fn sinh(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Hyperbolic sine function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176208,"byte_end":176237,"line_start":684,"line_end":684,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176242,"byte_end":176245,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176250,"byte_end":176257,"line_start":686,"line_end":686,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176262,"byte_end":176293,"line_start":687,"line_end":687,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176298,"byte_end":176315,"line_start":688,"line_end":688,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176320,"byte_end":176323,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176328,"byte_end":176355,"line_start":690,"line_end":690,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176360,"byte_end":176376,"line_start":691,"line_end":691,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176381,"byte_end":176384,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ let f = x.sinh();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176389,"byte_end":176410,"line_start":693,"line_end":693,"column_start":5,"column_end":26}},{"value":"/ // Solving sinh() at 1 gives `(e^2-1)/(2e)`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176415,"byte_end":176462,"line_start":694,"line_end":694,"column_start":5,"column_end":52}},{"value":"/ let g = (e*e - 1.0)/(2.0*e);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176467,"byte_end":176499,"line_start":695,"line_end":695,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176504,"byte_end":176543,"line_start":696,"line_end":696,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176548,"byte_end":176551,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176556,"byte_end":176592,"line_start":698,"line_end":698,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176597,"byte_end":176604,"line_start":699,"line_end":699,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177057,"byte_end":177061,"line_start":718,"line_end":718,"column_start":8,"column_end":12},"name":"cosh","qualname":"::real::Real::cosh","value":"pub fn cosh(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Hyperbolic cosine function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176637,"byte_end":176668,"line_start":702,"line_end":702,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176673,"byte_end":176676,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176681,"byte_end":176688,"line_start":704,"line_end":704,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176693,"byte_end":176724,"line_start":705,"line_end":705,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176729,"byte_end":176746,"line_start":706,"line_end":706,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176751,"byte_end":176754,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176759,"byte_end":176786,"line_start":708,"line_end":708,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176791,"byte_end":176807,"line_start":709,"line_end":709,"column_start":5,"column_end":21}},{"value":"/ let f = x.cosh();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176812,"byte_end":176833,"line_start":710,"line_end":710,"column_start":5,"column_end":26}},{"value":"/ // Solving cosh() at 1 gives this result","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176838,"byte_end":176882,"line_start":711,"line_end":711,"column_start":5,"column_end":49}},{"value":"/ let g = (e*e + 1.0)/(2.0*e);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176887,"byte_end":176919,"line_start":712,"line_end":712,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176924,"byte_end":176963,"line_start":713,"line_end":713,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176968,"byte_end":176971,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ // Same result","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176976,"byte_end":176994,"line_start":715,"line_end":715,"column_start":5,"column_end":23}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":176999,"byte_end":177037,"line_start":716,"line_end":716,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177042,"byte_end":177049,"line_start":717,"line_end":717,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177522,"byte_end":177526,"line_start":736,"line_end":736,"column_start":8,"column_end":12},"name":"tanh","qualname":"::real::Real::tanh","value":"pub fn tanh(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Hyperbolic tangent function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177082,"byte_end":177114,"line_start":720,"line_end":720,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177119,"byte_end":177122,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177127,"byte_end":177134,"line_start":722,"line_end":722,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177139,"byte_end":177170,"line_start":723,"line_end":723,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177175,"byte_end":177192,"line_start":724,"line_end":724,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177197,"byte_end":177200,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177205,"byte_end":177232,"line_start":726,"line_end":726,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177237,"byte_end":177253,"line_start":727,"line_end":727,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177258,"byte_end":177261,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let f = x.tanh();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177266,"byte_end":177287,"line_start":729,"line_end":729,"column_start":5,"column_end":26}},{"value":"/ // Solving tanh() at 1 gives `(1 - e^(-2))/(1 + e^(-2))`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177292,"byte_end":177352,"line_start":730,"line_end":730,"column_start":5,"column_end":65}},{"value":"/ let g = (1.0 - e.powi(-2))/(1.0 + e.powi(-2));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177357,"byte_end":177407,"line_start":731,"line_end":731,"column_start":5,"column_end":55}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177412,"byte_end":177451,"line_start":732,"line_end":732,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177456,"byte_end":177459,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177464,"byte_end":177502,"line_start":734,"line_end":734,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177507,"byte_end":177514,"line_start":735,"line_end":735,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177826,"byte_end":177831,"line_start":750,"line_end":750,"column_start":8,"column_end":13},"name":"asinh","qualname":"::real::Real::asinh","value":"pub fn asinh(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Inverse hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic sine function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177547,"byte_end":177584,"line_start":738,"line_end":738,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177589,"byte_end":177592,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177597,"byte_end":177604,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177609,"byte_end":177640,"line_start":741,"line_end":741,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177645,"byte_end":177648,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177653,"byte_end":177669,"line_start":743,"line_end":743,"column_start":5,"column_end":21}},{"value":"/ let f = x.sinh().asinh();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177674,"byte_end":177703,"line_start":744,"line_end":744,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177708,"byte_end":177711,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - x).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177716,"byte_end":177755,"line_start":746,"line_end":746,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177760,"byte_end":177763,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177768,"byte_end":177806,"line_start":748,"line_end":748,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177811,"byte_end":177818,"line_start":749,"line_end":749,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":178133,"byte_end":178138,"line_start":764,"line_end":764,"column_start":8,"column_end":13},"name":"acosh","qualname":"::real::Real::acosh","value":"pub fn acosh(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Inverse hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic cosine function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177852,"byte_end":177891,"line_start":752,"line_end":752,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177896,"byte_end":177899,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177904,"byte_end":177911,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177916,"byte_end":177947,"line_start":755,"line_end":755,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177952,"byte_end":177955,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177960,"byte_end":177976,"line_start":757,"line_end":757,"column_start":5,"column_end":21}},{"value":"/ let f = x.cosh().acosh();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":177981,"byte_end":178010,"line_start":758,"line_end":758,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":178015,"byte_end":178018,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - x).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":178023,"byte_end":178062,"line_start":760,"line_end":760,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":178067,"byte_end":178070,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":178075,"byte_end":178113,"line_start":762,"line_end":762,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":178118,"byte_end":178125,"line_start":763,"line_end":763,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":178474,"byte_end":178479,"line_start":779,"line_end":779,"column_start":8,"column_end":13},"name":"atanh","qualname":"::real::Real::atanh","value":"pub fn atanh(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Inverse hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic tangent function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":178159,"byte_end":178199,"line_start":766,"line_end":766,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":178204,"byte_end":178207,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":178212,"byte_end":178219,"line_start":768,"line_end":768,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":178224,"byte_end":178255,"line_start":769,"line_end":769,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":178260,"byte_end":178277,"line_start":770,"line_end":770,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":178282,"byte_end":178285,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":178290,"byte_end":178317,"line_start":772,"line_end":772,"column_start":5,"column_end":32}},{"value":"/ let f = e.tanh().atanh();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":178322,"byte_end":178351,"line_start":773,"line_end":773,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":178356,"byte_end":178359,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - e).abs();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":178364,"byte_end":178403,"line_start":775,"line_end":775,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":178408,"byte_end":178411,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":178416,"byte_end":178454,"line_start":777,"line_end":777,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":178459,"byte_end":178466,"line_start":778,"line_end":778,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":530},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sign","qualname":"::sign","value":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":4620},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":4253},{"krate":0,"index":4259},{"krate":0,"index":4265},{"krate":0,"index":4271},{"krate":0,"index":4277},{"krate":0,"index":4283},{"krate":0,"index":542},{"krate":0,"index":4289},{"krate":0,"index":4295},{"krate":0,"index":550},{"krate":0,"index":552},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":4301},{"krate":0,"index":4302},{"krate":0,"index":4303},{"krate":0,"index":4304},{"krate":0,"index":4305},{"krate":0,"index":4306},{"krate":0,"index":558}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":535},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":180565,"byte_end":180571,"line_start":8,"line_end":8,"column_start":11,"column_end":17},"name":"Signed","qualname":"::sign::Signed","value":"Signed: Sized + Num + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540}],"decl_id":null,"docs":" Useful functions for signed numbers (i.e. numbers that can be negative).\n","sig":null,"attributes":[{"value":"/ Useful functions for signed numbers (i.e. numbers that can be negative).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":180478,"byte_end":180554,"line_start":7,"line_end":7,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":180824,"byte_end":180827,"line_start":14,"line_end":14,"column_start":8,"column_end":11},"name":"abs","qualname":"::sign::Signed::abs","value":"pub fn abs(&Self) -> Self","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Computes the absolute value.","sig":null,"attributes":[{"value":"/ Computes the absolute value.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":180612,"byte_end":180644,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":180649,"byte_end":180652,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ For `f32` and `f64`, `NaN` will be returned if the number is `NaN`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":180657,"byte_end":180728,"line_start":11,"line_end":11,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":180733,"byte_end":180736,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ For signed integers, `::MIN` will be returned if the number is `::MIN`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":180741,"byte_end":180816,"line_start":13,"line_end":13,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":181052,"byte_end":181059,"line_start":20,"line_end":20,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::sign::Signed::abs_sub","value":"pub fn abs_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":180849,"byte_end":180892,"line_start":16,"line_end":16,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":180897,"byte_end":180900,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ Returns `zero` if the number is less than or equal to `other`, otherwise the difference","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":180905,"byte_end":180996,"line_start":18,"line_end":18,"column_start":5,"column_end":96}},{"value":"/ between `self` and `other` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":181001,"byte_end":181044,"line_start":19,"line_end":19,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":181517,"byte_end":181523,"line_start":35,"line_end":35,"column_start":8,"column_end":14},"name":"signum","qualname":"::sign::Signed::signum","value":"pub fn signum(&Self) -> Self","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Returns the sign of the number.","sig":null,"attributes":[{"value":"/ Returns the sign of the number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":181095,"byte_end":181130,"line_start":22,"line_end":22,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":181135,"byte_end":181138,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ For `f32` and `f64`:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":181143,"byte_end":181167,"line_start":24,"line_end":24,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":181172,"byte_end":181175,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ * `1.0` if the number is positive, `+0.0` or `INFINITY`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":181180,"byte_end":181239,"line_start":26,"line_end":26,"column_start":5,"column_end":64}},{"value":"/ * `-1.0` if the number is negative, `-0.0` or `NEG_INFINITY`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":181244,"byte_end":181308,"line_start":27,"line_end":27,"column_start":5,"column_end":69}},{"value":"/ * `NaN` if the number is `NaN`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":181313,"byte_end":181347,"line_start":28,"line_end":28,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":181352,"byte_end":181355,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ For signed integers:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":181360,"byte_end":181384,"line_start":30,"line_end":30,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":181389,"byte_end":181392,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ * `0` if the number is zero","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":181397,"byte_end":181428,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/ * `1` if the number is positive","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":181433,"byte_end":181468,"line_start":33,"line_end":33,"column_start":5,"column_end":40}},{"value":"/ * `-1` if the number is negative","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":181473,"byte_end":181509,"line_start":34,"line_end":34,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":181640,"byte_end":181651,"line_start":38,"line_end":38,"column_start":8,"column_end":19},"name":"is_positive","qualname":"::sign::Signed::is_positive","value":"pub fn is_positive(&Self) -> bool","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Returns true if the number is positive and false if the number is zero or negative.\n","sig":null,"attributes":[{"value":"/ Returns true if the number is positive and false if the number is zero or negative.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":181545,"byte_end":181632,"line_start":37,"line_end":37,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":181768,"byte_end":181779,"line_start":41,"line_end":41,"column_start":8,"column_end":19},"name":"is_negative","qualname":"::sign::Signed::is_negative","value":"pub fn is_negative(&Self) -> bool","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Returns true if the number is negative and false if the number is zero or positive.\n","sig":null,"attributes":[{"value":"/ Returns true if the number is negative and false if the number is zero or positive.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":181673,"byte_end":181760,"line_start":40,"line_end":40,"column_start":5,"column_end":92}}]},{"kind":"Function","id":{"krate":0,"index":550},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":184973,"byte_end":184976,"line_start":165,"line_end":165,"column_start":8,"column_end":11},"name":"abs","qualname":"::sign::abs","value":"pub fn abs<T: Signed>(T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value.","sig":null,"attributes":[{"value":"/ Computes the absolute value.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":184760,"byte_end":184792,"line_start":159,"line_end":159,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":184793,"byte_end":184796,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ For `f32` and `f64`, `NaN` will be returned if the number is `NaN`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":184797,"byte_end":184867,"line_start":161,"line_end":161,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":184868,"byte_end":184871,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ For signed integers, `::MIN` will be returned if the number is `::MIN`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":184872,"byte_end":184947,"line_start":163,"line_end":163,"column_start":1,"column_end":76}},{"value":"inline(always)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":184948,"byte_end":184965,"line_start":164,"line_end":164,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":552},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":185213,"byte_end":185220,"line_start":174,"line_end":174,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::sign::abs_sub","value":"pub fn abs_sub<T: Signed>(T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":185024,"byte_end":185067,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":185068,"byte_end":185071,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Returns zero if `x` is less than or equal to `y`, otherwise the difference","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":185072,"byte_end":185150,"line_start":171,"line_end":171,"column_start":1,"column_end":79}},{"value":"/ between `x` and `y` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":185151,"byte_end":185187,"line_start":172,"line_end":172,"column_start":1,"column_end":37}},{"value":"inline(always)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":185188,"byte_end":185205,"line_start":173,"line_end":173,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":554},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":185664,"byte_end":185670,"line_start":192,"line_end":192,"column_start":8,"column_end":14},"name":"signum","qualname":"::sign::signum","value":"pub fn signum<T: Signed>(T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the sign of the number.","sig":null,"attributes":[{"value":"/ Returns the sign of the number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":185272,"byte_end":185307,"line_start":178,"line_end":178,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":185308,"byte_end":185311,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ For `f32` and `f64`:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":185312,"byte_end":185336,"line_start":180,"line_end":180,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":185337,"byte_end":185340,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ * `1.0` if the number is positive, `+0.0` or `INFINITY`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":185341,"byte_end":185400,"line_start":182,"line_end":182,"column_start":1,"column_end":60}},{"value":"/ * `-1.0` if the number is negative, `-0.0` or `NEG_INFINITY`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":185401,"byte_end":185465,"line_start":183,"line_end":183,"column_start":1,"column_end":65}},{"value":"/ * `NaN` if the number is `NaN`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":185466,"byte_end":185500,"line_start":184,"line_end":184,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":185501,"byte_end":185504,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ For signed integers:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":185505,"byte_end":185529,"line_start":186,"line_end":186,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":185530,"byte_end":185533,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ * `0` if the number is zero","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":185534,"byte_end":185565,"line_start":188,"line_end":188,"column_start":1,"column_end":32}},{"value":"/ * `1` if the number is positive","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":185566,"byte_end":185601,"line_start":189,"line_end":189,"column_start":1,"column_end":36}},{"value":"/ * `-1` if the number is negative","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":185602,"byte_end":185638,"line_start":190,"line_end":190,"column_start":1,"column_end":37}},{"value":"inline(always)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":185639,"byte_end":185656,"line_start":191,"line_end":191,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":556},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":185779,"byte_end":185787,"line_start":197,"line_end":197,"column_start":11,"column_end":19},"name":"Unsigned","qualname":"::sign::Unsigned","value":"Unsigned: Num","parent":null,"children":[],"decl_id":null,"docs":" A trait for values which cannot be negative\n","sig":null,"attributes":[{"value":"/ A trait for values which cannot be negative","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":185721,"byte_end":185768,"line_start":196,"line_end":196,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":560},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2363,"byte_end":2366,"line_start":70,"line_end":70,"column_start":11,"column_end":14},"name":"Num","qualname":"::Num","value":"Num: PartialEq + Zero + One + NumOps","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":562}],"decl_id":null,"docs":" The base trait for numeric types, covering `0` and `1` values,\n comparisons, basic numeric operations, and string conversion.\n","sig":null,"attributes":[{"value":"/ The base trait for numeric types, covering `0` and `1` values,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2220,"byte_end":2286,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/ comparisons, basic numeric operations, and string conversion.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2287,"byte_end":2352,"line_start":69,"line_end":69,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":561},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2411,"byte_end":2426,"line_start":71,"line_end":71,"column_start":10,"column_end":25},"name":"FromStrRadixErr","qualname":"::Num::FromStrRadixErr","value":"type FromStrRadixErr;","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2784,"byte_end":2798,"line_start":86,"line_end":86,"column_start":8,"column_end":22},"name":"from_str_radix","qualname":"::Num::from_str_radix","value":"pub fn from_str_radix(&str, u32) -> Result<Self, Self::FromStrRadixErr>","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" Convert from a string and radix <= 36.","sig":null,"attributes":[{"value":"/ Convert from a string and radix <= 36.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2433,"byte_end":2475,"line_start":73,"line_end":73,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2480,"byte_end":2483,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2488,"byte_end":2502,"line_start":75,"line_end":75,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2507,"byte_end":2510,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2515,"byte_end":2526,"line_start":77,"line_end":77,"column_start":5,"column_end":16}},{"value":"/ use num_traits::Num;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2531,"byte_end":2555,"line_start":78,"line_end":78,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2560,"byte_end":2563,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ let result = <i32 as Num>::from_str_radix(\"27\", 10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2568,"byte_end":2624,"line_start":80,"line_end":80,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(result, Ok(27));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2629,"byte_end":2660,"line_start":81,"line_end":81,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2665,"byte_end":2668,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let result = <i32 as Num>::from_str_radix(\"foo\", 10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2673,"byte_end":2730,"line_start":83,"line_end":83,"column_start":5,"column_end":62}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2735,"byte_end":2764,"line_start":84,"line_end":84,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2769,"byte_end":2776,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":563},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":3020,"byte_end":3026,"line_start":92,"line_end":92,"column_start":11,"column_end":17},"name":"NumOps","qualname":"::NumOps","value":"NumOps<Rhs = Self, Output = Self>: Add<Rhs, Output = Output> + Sub<Rhs, Output = Output> + Mul<Rhs, Output =\nOutput> + Div<Rhs, Output = Output> + Rem<Rhs, Output = Output>","parent":null,"children":[],"decl_id":null,"docs":" The trait for types implementing basic numeric operations","sig":null,"attributes":[{"value":"/ The trait for types implementing basic numeric operations","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2865,"byte_end":2926,"line_start":89,"line_end":89,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2927,"byte_end":2930,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2931,"byte_end":3009,"line_start":91,"line_end":91,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":570},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":3660,"byte_end":3666,"line_start":114,"line_end":114,"column_start":11,"column_end":17},"name":"NumRef","qualname":"::NumRef","value":"NumRef: Num + for<'r> NumOps<&'r Self>","parent":null,"children":[],"decl_id":null,"docs":" The trait for `Num` types which also implement numeric operations taking\n the second operand by reference.","sig":null,"attributes":[{"value":"/ The trait for `Num` types which also implement numeric operations taking","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":3453,"byte_end":3529,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ the second operand by reference.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":3530,"byte_end":3566,"line_start":111,"line_end":111,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":3567,"byte_end":3570,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":3571,"byte_end":3649,"line_start":113,"line_end":113,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":575},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":3985,"byte_end":3991,"line_start":121,"line_end":121,"column_start":11,"column_end":17},"name":"RefNum","qualname":"::RefNum","value":"RefNum<Base>: NumOps<Base, Base> + for<'r> NumOps<&'r Base, Base>","parent":null,"children":[],"decl_id":null,"docs":" The trait for references which implement numeric operations, taking the\n second operand either by value or by reference.","sig":null,"attributes":[{"value":"/ The trait for references which implement numeric operations, taking the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":3764,"byte_end":3839,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/ second operand either by value or by reference.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":3840,"byte_end":3891,"line_start":118,"line_end":118,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":3892,"byte_end":3895,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":3896,"byte_end":3974,"line_start":120,"line_end":120,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":582},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":4324,"byte_end":4336,"line_start":127,"line_end":127,"column_start":11,"column_end":23},"name":"NumAssignOps","qualname":"::NumAssignOps","value":"NumAssignOps<Rhs = Self>: AddAssign<Rhs> + SubAssign<Rhs> + MulAssign<Rhs> + DivAssign<Rhs> +\nRemAssign<Rhs>","parent":null,"children":[],"decl_id":null,"docs":" The trait for types implementing numeric assignment operators (like `+=`).","sig":null,"attributes":[{"value":"/ The trait for types implementing numeric assignment operators (like `+=`).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":4152,"byte_end":4230,"line_start":124,"line_end":124,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":4231,"byte_end":4234,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":4235,"byte_end":4313,"line_start":126,"line_end":126,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":587},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":4746,"byte_end":4755,"line_start":140,"line_end":140,"column_start":11,"column_end":20},"name":"NumAssign","qualname":"::NumAssign","value":"NumAssign: Num + NumAssignOps","parent":null,"children":[],"decl_id":null,"docs":" The trait for `Num` types which also implement assignment operators.","sig":null,"attributes":[{"value":"/ The trait for `Num` types which also implement assignment operators.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":4580,"byte_end":4652,"line_start":137,"line_end":137,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":4653,"byte_end":4656,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":4657,"byte_end":4735,"line_start":139,"line_end":139,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":590},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":5051,"byte_end":5063,"line_start":147,"line_end":147,"column_start":11,"column_end":23},"name":"NumAssignRef","qualname":"::NumAssignRef","value":"NumAssignRef: NumAssign + for<'r> NumAssignOps<&'r Self>","parent":null,"children":[],"decl_id":null,"docs":" The trait for `NumAssign` types which also implement assignment operations\n taking the second operand by reference.","sig":null,"attributes":[{"value":"/ The trait for `NumAssign` types which also implement assignment operations","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":4835,"byte_end":4913,"line_start":143,"line_end":143,"column_start":1,"column_end":79}},{"value":"/ taking the second operand by reference.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":4914,"byte_end":4957,"line_start":144,"line_end":144,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":4958,"byte_end":4961,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":4962,"byte_end":5040,"line_start":146,"line_end":146,"column_start":1,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4344},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":6185,"byte_end":6190,"line_start":183,"line_end":183,"column_start":5,"column_end":10},"name":"Empty","qualname":"::FloatErrorKind::Empty","value":"FloatErrorKind::Empty","parent":{"krate":0,"index":4343},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4346},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":6196,"byte_end":6203,"line_start":184,"line_end":184,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::FloatErrorKind::Invalid","value":"FloatErrorKind::Invalid","parent":{"krate":0,"index":4343},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4343},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":6164,"byte_end":6178,"line_start":182,"line_end":182,"column_start":10,"column_end":24},"name":"FloatErrorKind","qualname":"::FloatErrorKind","value":"pub enum FloatErrorKind { Empty, Invalid, }","parent":null,"children":[{"krate":0,"index":4344},{"krate":0,"index":4346}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4350},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":6361,"byte_end":6376,"line_start":189,"line_end":189,"column_start":12,"column_end":27},"name":"ParseFloatError","qualname":"::ParseFloatError","value":"ParseFloatError { kind }","parent":null,"children":[{"krate":0,"index":4351}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4351},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":6387,"byte_end":6391,"line_start":190,"line_end":190,"column_start":9,"column_end":13},"name":"kind","qualname":"::ParseFloatError::kind","value":"FloatErrorKind","parent":{"krate":0,"index":4350},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":603},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":14663,"byte_end":14668,"line_start":378,"line_end":378,"column_start":8,"column_end":13},"name":"clamp","qualname":"::clamp","value":"pub fn clamp<T: PartialOrd>(T, T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" A value bounded by a minimum and a maximum","sig":null,"attributes":[{"value":"/ A value bounded by a minimum and a maximum","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":14396,"byte_end":14442,"line_start":370,"line_end":370,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":14443,"byte_end":14446,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/  If input is less than min then this returns min.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":14447,"byte_end":14500,"line_start":372,"line_end":372,"column_start":1,"column_end":54}},{"value":"/  If input is greater than max then this returns max.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":14501,"byte_end":14557,"line_start":373,"line_end":373,"column_start":1,"column_end":57}},{"value":"/  Otherwise this returns input.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":14558,"byte_end":14592,"line_start":374,"line_end":374,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":14593,"byte_end":14596,"line_start":375,"line_end":375,"column_start":1,"column_end":4}},{"value":"/ **Panics** in debug mode if `!(min <= max)`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":14597,"byte_end":14645,"line_start":376,"line_end":376,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":14646,"byte_end":14655,"line_start":377,"line_end":377,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":605},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":15233,"byte_end":15242,"line_start":397,"line_end":397,"column_start":8,"column_end":17},"name":"clamp_min","qualname":"::clamp_min","value":"pub fn clamp_min<T: PartialOrd>(T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" A value bounded by a minimum value","sig":null,"attributes":[{"value":"/ A value bounded by a minimum value","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":14898,"byte_end":14936,"line_start":389,"line_end":389,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":14937,"byte_end":14940,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/  If input is less than min then this returns min.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":14941,"byte_end":14994,"line_start":391,"line_end":391,"column_start":1,"column_end":54}},{"value":"/  Otherwise this returns input.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":14995,"byte_end":15029,"line_start":392,"line_end":392,"column_start":1,"column_end":35}},{"value":"/  `clamp_min(std::f32::NAN, 1.0)` preserves `NAN` different from `f32::min(std::f32::NAN, 1.0)`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":15030,"byte_end":15129,"line_start":393,"line_end":393,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":15130,"byte_end":15133,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ **Panics** in debug mode if `!(min == min)`. (This occurs if `min` is `NAN`.)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":15134,"byte_end":15215,"line_start":395,"line_end":395,"column_start":1,"column_end":82}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":15216,"byte_end":15225,"line_start":396,"line_end":396,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":607},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":15744,"byte_end":15753,"line_start":414,"line_end":414,"column_start":8,"column_end":17},"name":"clamp_max","qualname":"::clamp_max","value":"pub fn clamp_max<T: PartialOrd>(T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" A value bounded by a maximum value","sig":null,"attributes":[{"value":"/ A value bounded by a maximum value","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":15406,"byte_end":15444,"line_start":406,"line_end":406,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":15445,"byte_end":15448,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/  If input is greater than max then this returns max.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":15449,"byte_end":15505,"line_start":408,"line_end":408,"column_start":1,"column_end":57}},{"value":"/  Otherwise this returns input.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":15506,"byte_end":15540,"line_start":409,"line_end":409,"column_start":1,"column_end":35}},{"value":"/  `clamp_max(std::f32::NAN, 1.0)` preserves `NAN` different from `f32::max(std::f32::NAN, 1.0)`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":15541,"byte_end":15640,"line_start":410,"line_end":410,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":15641,"byte_end":15644,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ **Panics** in debug mode if `!(max == max)`. (This occurs if `max` is `NAN`.)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":15645,"byte_end":15726,"line_start":412,"line_end":412,"column_start":1,"column_end":82}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":15727,"byte_end":15736,"line_start":413,"line_end":413,"column_start":1,"column_end":10}}]}],"impls":[{"id":12,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/bounds.rs","byte_start":22014,"byte_end":22022,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":43376,"byte_end":43384,"line_start":583,"line_end":583,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":44152,"byte_end":44160,"line_start":616,"line_end":616,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1443}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":46163,"byte_end":46171,"line_start":693,"line_end":693,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":111641,"byte_end":111649,"line_start":65,"line_end":65,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":113626,"byte_end":113634,"line_start":154,"line_end":154,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":148598,"byte_end":148606,"line_start":174,"line_end":174,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":148798,"byte_end":148806,"line_start":182,"line_end":182,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":148998,"byte_end":149006,"line_start":190,"line_end":190,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":149198,"byte_end":149206,"line_start":198,"line_end":198,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":149404,"byte_end":149412,"line_start":206,"line_end":206,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":178522,"byte_end":178523,"line_start":782,"line_end":782,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4207},{"krate":0,"index":4208},{"krate":0,"index":4209},{"krate":0,"index":4210},{"krate":0,"index":4211},{"krate":0,"index":4212},{"krate":0,"index":4213},{"krate":0,"index":4214},{"krate":0,"index":4215},{"krate":0,"index":4216},{"krate":0,"index":4217},{"krate":0,"index":4218},{"krate":0,"index":4219},{"krate":0,"index":4220},{"krate":0,"index":4221},{"krate":0,"index":4222},{"krate":0,"index":4223},{"krate":0,"index":4224},{"krate":0,"index":4225},{"krate":0,"index":4226},{"krate":0,"index":4227},{"krate":0,"index":4228},{"krate":0,"index":4229},{"krate":0,"index":4230},{"krate":0,"index":4231},{"krate":0,"index":4232},{"krate":0,"index":4233},{"krate":0,"index":4234},{"krate":0,"index":4235},{"krate":0,"index":4236},{"krate":0,"index":4237},{"krate":0,"index":4238},{"krate":0,"index":4239},{"krate":0,"index":4240},{"krate":0,"index":4241},{"krate":0,"index":4242},{"krate":0,"index":4243},{"krate":0,"index":4244},{"krate":0,"index":4245},{"krate":0,"index":4246},{"krate":0,"index":4247},{"krate":0,"index":4248},{"krate":0,"index":4249},{"krate":0,"index":4250},{"krate":0,"index":4251},{"krate":0,"index":4252}],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":182661,"byte_end":182669,"line_start":80,"line_end":80,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":186049,"byte_end":186057,"line_start":209,"line_end":209,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":3263,"byte_end":3264,"line_start":101,"line_end":101,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":3721,"byte_end":3722,"line_start":115,"line_end":115,"column_start":20,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":4085,"byte_end":4086,"line_start":122,"line_end":122,"column_start":32,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":4477,"byte_end":4478,"line_start":132,"line_end":132,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":4801,"byte_end":4802,"line_start":141,"line_end":141,"column_start":23,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":5136,"byte_end":5137,"line_start":148,"line_end":148,"column_start":26,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":5736,"byte_end":5744,"line_start":167,"line_end":167,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":6434,"byte_end":6449,"line_start":193,"line_end":193,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2095,"byte_end":2101,"line_start":58,"line_end":58,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":67}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2111,"byte_end":2115,"line_start":59,"line_end":59,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":98}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2125,"byte_end":2130,"line_start":60,"line_end":60,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":182}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2140,"byte_end":2150,"line_start":61,"line_end":61,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":287}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2160,"byte_end":2163,"line_start":62,"line_end":62,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":315}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2173,"byte_end":2176,"line_start":63,"line_end":63,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":347}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mod.rs","byte_start":126011,"byte_end":126018,"line_start":1,"line_end":1,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":348}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mod.rs","byte_start":126028,"byte_end":126031,"line_start":2,"line_end":2,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":376}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mod.rs","byte_start":126041,"byte_end":126048,"line_start":3,"line_end":3,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":394}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mod.rs","byte_start":126058,"byte_end":126068,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":416}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/mod.rs","byte_start":126078,"byte_end":126086,"line_start":5,"line_end":5,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":421}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2186,"byte_end":2189,"line_start":64,"line_end":64,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":456}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2199,"byte_end":2203,"line_start":65,"line_end":65,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":475}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2213,"byte_end":2217,"line_start":66,"line_end":66,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":530}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/bounds.rs","byte_start":22014,"byte_end":22022,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"kind":{"Impl":{"id":12}},"from":{"krate":1,"index":14210},"to":{"krate":0,"index":87}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":36556,"byte_end":36561,"line_start":379,"line_end":379,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":2049},"to":{"krate":0,"index":145}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":43376,"byte_end":43384,"line_start":583,"line_end":583,"column_start":38,"column_end":46},"kind":{"Impl":{"id":29}},"from":{"krate":1,"index":14210},"to":{"krate":0,"index":120}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":44152,"byte_end":44160,"line_start":616,"line_end":616,"column_start":42,"column_end":50},"kind":{"Impl":{"id":30}},"from":{"krate":1,"index":14210},"to":{"krate":0,"index":145}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":44995,"byte_end":45000,"line_start":655,"line_end":655,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":2049},"to":{"krate":0,"index":170}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":45003,"byte_end":45014,"line_start":655,"line_end":655,"column_start":28,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":120},"to":{"krate":0,"index":170}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":46163,"byte_end":46171,"line_start":693,"line_end":693,"column_start":30,"column_end":38},"kind":{"Impl":{"id":45}},"from":{"krate":1,"index":14210},"to":{"krate":0,"index":170}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/cast.rs","byte_start":47405,"byte_end":47409,"line_start":734,"line_end":734,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":2054},"to":{"krate":0,"index":178}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49237,"byte_end":49240,"line_start":16,"line_end":16,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":560},"to":{"krate":0,"index":192}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49243,"byte_end":49250,"line_start":16,"line_end":16,"column_start":28,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":170},"to":{"krate":0,"index":192}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49253,"byte_end":49256,"line_start":16,"line_end":16,"column_start":38,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":2136},"to":{"krate":0,"index":192}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49274,"byte_end":49284,"line_start":16,"line_end":16,"column_start":59,"column_end":69},"kind":"SuperTrait","from":{"krate":1,"index":1806},"to":{"krate":0,"index":192}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":49287,"byte_end":49291,"line_start":16,"line_end":16,"column_start":72,"column_end":76},"kind":"SuperTrait","from":{"krate":1,"index":2054},"to":{"krate":0,"index":192}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":72921,"byte_end":72924,"line_start":905,"line_end":905,"column_start":18,"column_end":21},"kind":"SuperTrait","from":{"krate":0,"index":560},"to":{"krate":0,"index":226}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":72927,"byte_end":72931,"line_start":905,"line_end":905,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2054},"to":{"krate":0,"index":226}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":72934,"byte_end":72941,"line_start":905,"line_end":905,"column_start":31,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":170},"to":{"krate":0,"index":226}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":72944,"byte_end":72954,"line_start":905,"line_end":905,"column_start":41,"column_end":51},"kind":"SuperTrait","from":{"krate":1,"index":1806},"to":{"krate":0,"index":226}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/float.rs","byte_start":72957,"byte_end":72960,"line_start":905,"line_end":905,"column_start":54,"column_end":57},"kind":"SuperTrait","from":{"krate":1,"index":2136},"to":{"krate":0,"index":226}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":110384,"byte_end":110389,"line_start":12,"line_end":12,"column_start":17,"column_end":22},"kind":"SuperTrait","from":{"krate":1,"index":2049},"to":{"krate":0,"index":292}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":110392,"byte_end":110395,"line_start":12,"line_end":12,"column_start":25,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2109},"to":{"krate":0,"index":292}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":111641,"byte_end":111649,"line_start":65,"line_end":65,"column_start":24,"column_end":32},"kind":{"Impl":{"id":284}},"from":{"krate":1,"index":14210},"to":{"krate":0,"index":292}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":112078,"byte_end":112083,"line_start":90,"line_end":90,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2049},"to":{"krate":0,"index":302}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":112086,"byte_end":112089,"line_start":90,"line_end":90,"column_start":24,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":2119},"to":{"krate":0,"index":302}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/identities.rs","byte_start":113626,"byte_end":113634,"line_start":154,"line_end":154,"column_start":22,"column_end":30},"kind":{"Impl":{"id":299}},"from":{"krate":1,"index":14210},"to":{"krate":0,"index":302}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116641,"byte_end":116646,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2049},"to":{"krate":0,"index":329}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116653,"byte_end":116657,"line_start":36,"line_end":36,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":2054},"to":{"krate":0,"index":329}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116664,"byte_end":116667,"line_start":37,"line_end":37,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":0,"index":560},"to":{"krate":0,"index":329}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116674,"byte_end":116681,"line_start":38,"line_end":38,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":170},"to":{"krate":0,"index":329}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116688,"byte_end":116695,"line_start":39,"line_end":39,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":87},"to":{"krate":0,"index":329}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116702,"byte_end":116712,"line_start":40,"line_end":40,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":1806},"to":{"krate":0,"index":329}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116719,"byte_end":116722,"line_start":41,"line_end":41,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":1795},"to":{"krate":0,"index":329}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116729,"byte_end":116731,"line_start":42,"line_end":42,"column_start":7,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":1774},"to":{"krate":0,"index":329}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116738,"byte_end":116741,"line_start":43,"line_end":43,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2161},"to":{"krate":0,"index":329}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116763,"byte_end":116769,"line_start":44,"line_end":44,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2165},"to":{"krate":0,"index":329}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116791,"byte_end":116796,"line_start":45,"line_end":45,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":2170},"to":{"krate":0,"index":329}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116818,"byte_end":116824,"line_start":46,"line_end":46,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2175},"to":{"krate":0,"index":329}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116846,"byte_end":116849,"line_start":47,"line_end":47,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2180},"to":{"krate":0,"index":329}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116878,"byte_end":116881,"line_start":48,"line_end":48,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2186},"to":{"krate":0,"index":329}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116910,"byte_end":116920,"line_start":49,"line_end":49,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":357},"to":{"krate":0,"index":329}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116942,"byte_end":116952,"line_start":50,"line_end":50,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":360},"to":{"krate":0,"index":329}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":116974,"byte_end":116984,"line_start":51,"line_end":51,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":362},"to":{"krate":0,"index":329}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117006,"byte_end":117016,"line_start":52,"line_end":52,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":364},"to":{"krate":0,"index":329}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/int.rs","byte_start":117038,"byte_end":117048,"line_start":53,"line_end":53,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":417},"to":{"krate":0,"index":329}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":126250,"byte_end":126255,"line_start":5,"line_end":5,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2049},"to":{"krate":0,"index":357}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":126258,"byte_end":126261,"line_start":5,"line_end":5,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2109},"to":{"krate":0,"index":357}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":127391,"byte_end":127396,"line_start":39,"line_end":39,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2049},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":127399,"byte_end":127402,"line_start":39,"line_end":39,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2114},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":128294,"byte_end":128299,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2049},"to":{"krate":0,"index":362}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":128302,"byte_end":128305,"line_start":63,"line_end":63,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2119},"to":{"krate":0,"index":362}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":129262,"byte_end":129267,"line_start":87,"line_end":87,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2049},"to":{"krate":0,"index":364}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":129270,"byte_end":129273,"line_start":87,"line_end":87,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2124},"to":{"krate":0,"index":364}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":130249,"byte_end":130254,"line_start":111,"line_end":111,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2049},"to":{"krate":0,"index":366}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":130257,"byte_end":130260,"line_start":111,"line_end":111,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2130},"to":{"krate":0,"index":366}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":132028,"byte_end":132033,"line_start":162,"line_end":162,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2049},"to":{"krate":0,"index":369}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":133477,"byte_end":133482,"line_start":200,"line_end":200,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2049},"to":{"krate":0,"index":371}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":133485,"byte_end":133488,"line_start":200,"line_end":200,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2180},"to":{"krate":0,"index":371}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":135119,"byte_end":135124,"line_start":246,"line_end":246,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2049},"to":{"krate":0,"index":374}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/checked.rs","byte_start":135127,"byte_end":135130,"line_start":246,"line_end":246,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2186},"to":{"krate":0,"index":374}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":142809,"byte_end":142814,"line_start":24,"line_end":24,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2049},"to":{"krate":0,"index":430}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":142817,"byte_end":142820,"line_start":24,"line_end":24,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":2109},"to":{"krate":0,"index":430}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":143703,"byte_end":143708,"line_start":47,"line_end":47,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2049},"to":{"krate":0,"index":432}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":143711,"byte_end":143714,"line_start":47,"line_end":47,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":2114},"to":{"krate":0,"index":432}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":144603,"byte_end":144608,"line_start":70,"line_end":70,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2049},"to":{"krate":0,"index":434}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":144611,"byte_end":144614,"line_start":70,"line_end":70,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":2119},"to":{"krate":0,"index":434}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":145760,"byte_end":145765,"line_start":104,"line_end":104,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2049},"to":{"krate":0,"index":437}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":145768,"byte_end":145771,"line_start":104,"line_end":104,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":2180},"to":{"krate":0,"index":437}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":147166,"byte_end":147171,"line_start":139,"line_end":139,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2049},"to":{"krate":0,"index":439}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":147174,"byte_end":147177,"line_start":139,"line_end":139,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":2186},"to":{"krate":0,"index":439}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":148598,"byte_end":148606,"line_start":174,"line_end":174,"column_start":38,"column_end":46},"kind":{"Impl":{"id":510}},"from":{"krate":1,"index":14210},"to":{"krate":0,"index":430}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":148798,"byte_end":148806,"line_start":182,"line_end":182,"column_start":38,"column_end":46},"kind":{"Impl":{"id":511}},"from":{"krate":1,"index":14210},"to":{"krate":0,"index":432}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":148998,"byte_end":149006,"line_start":190,"line_end":190,"column_start":38,"column_end":46},"kind":{"Impl":{"id":512}},"from":{"krate":1,"index":14210},"to":{"krate":0,"index":434}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":149198,"byte_end":149206,"line_start":198,"line_end":198,"column_start":38,"column_end":46},"kind":{"Impl":{"id":513}},"from":{"krate":1,"index":14210},"to":{"krate":0,"index":437}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/ops/wrapping.rs","byte_start":149404,"byte_end":149412,"line_start":206,"line_end":206,"column_start":38,"column_end":46},"kind":{"Impl":{"id":514}},"from":{"krate":1,"index":14210},"to":{"krate":0,"index":439}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":158894,"byte_end":158897,"line_start":17,"line_end":17,"column_start":17,"column_end":20},"kind":"SuperTrait","from":{"krate":0,"index":560},"to":{"krate":0,"index":481}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":158900,"byte_end":158904,"line_start":17,"line_end":17,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":2054},"to":{"krate":0,"index":481}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":158907,"byte_end":158914,"line_start":17,"line_end":17,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":170},"to":{"krate":0,"index":481}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":158917,"byte_end":158927,"line_start":17,"line_end":17,"column_start":40,"column_end":50},"kind":"SuperTrait","from":{"krate":1,"index":1806},"to":{"krate":0,"index":481}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":158930,"byte_end":158933,"line_start":17,"line_end":17,"column_start":53,"column_end":56},"kind":"SuperTrait","from":{"krate":1,"index":2136},"to":{"krate":0,"index":481}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/real.rs","byte_start":178522,"byte_end":178523,"line_start":782,"line_end":782,"column_start":25,"column_end":26},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":529},"to":{"krate":0,"index":481}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":180573,"byte_end":180578,"line_start":8,"line_end":8,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":2049},"to":{"krate":0,"index":535}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":180581,"byte_end":180584,"line_start":8,"line_end":8,"column_start":27,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":560},"to":{"krate":0,"index":535}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":180587,"byte_end":180590,"line_start":8,"line_end":8,"column_start":33,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":2136},"to":{"krate":0,"index":535}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":182661,"byte_end":182669,"line_start":80,"line_end":80,"column_start":28,"column_end":36},"kind":{"Impl":{"id":692}},"from":{"krate":1,"index":14210},"to":{"krate":0,"index":535}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":185789,"byte_end":185792,"line_start":197,"line_end":197,"column_start":21,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":560},"to":{"krate":0,"index":556}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/sign.rs","byte_start":186049,"byte_end":186057,"line_start":209,"line_end":209,"column_start":32,"column_end":40},"kind":{"Impl":{"id":701}},"from":{"krate":1,"index":14210},"to":{"krate":0,"index":556}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2368,"byte_end":2377,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":1769},"to":{"krate":0,"index":560}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2380,"byte_end":2384,"line_start":70,"line_end":70,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":292},"to":{"krate":0,"index":560}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2387,"byte_end":2390,"line_start":70,"line_end":70,"column_start":35,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":302},"to":{"krate":0,"index":560}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":2393,"byte_end":2399,"line_start":70,"line_end":70,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":563},"to":{"krate":0,"index":560}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":3059,"byte_end":3062,"line_start":93,"line_end":93,"column_start":5,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":2109},"to":{"krate":0,"index":563}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":3091,"byte_end":3094,"line_start":94,"line_end":94,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2114},"to":{"krate":0,"index":563}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":3123,"byte_end":3126,"line_start":95,"line_end":95,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2119},"to":{"krate":0,"index":563}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":3155,"byte_end":3158,"line_start":96,"line_end":96,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2124},"to":{"krate":0,"index":563}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":3187,"byte_end":3190,"line_start":97,"line_end":97,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2130},"to":{"krate":0,"index":563}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":3263,"byte_end":3264,"line_start":101,"line_end":101,"column_start":46,"column_end":47},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":567},"to":{"krate":0,"index":563}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":3668,"byte_end":3671,"line_start":114,"line_end":114,"column_start":19,"column_end":22},"kind":"SuperTrait","from":{"krate":0,"index":560},"to":{"krate":0,"index":570}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":3682,"byte_end":3688,"line_start":114,"line_end":114,"column_start":33,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":563},"to":{"krate":0,"index":570}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":3721,"byte_end":3722,"line_start":115,"line_end":115,"column_start":20,"column_end":21},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":573},"to":{"krate":0,"index":570}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":3999,"byte_end":4005,"line_start":121,"line_end":121,"column_start":25,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":563},"to":{"krate":0,"index":575}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":4028,"byte_end":4034,"line_start":121,"line_end":121,"column_start":54,"column_end":60},"kind":"SuperTrait","from":{"krate":0,"index":563},"to":{"krate":0,"index":575}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":4085,"byte_end":4086,"line_start":122,"line_end":122,"column_start":32,"column_end":33},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":579},"to":{"krate":0,"index":575}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":4354,"byte_end":4363,"line_start":128,"line_end":128,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":1,"index":2140},"to":{"krate":0,"index":582}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":4371,"byte_end":4380,"line_start":128,"line_end":128,"column_start":22,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":2144},"to":{"krate":0,"index":582}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":4388,"byte_end":4397,"line_start":128,"line_end":128,"column_start":39,"column_end":48},"kind":"SuperTrait","from":{"krate":1,"index":2148},"to":{"krate":0,"index":582}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":4405,"byte_end":4414,"line_start":128,"line_end":128,"column_start":56,"column_end":65},"kind":"SuperTrait","from":{"krate":1,"index":2152},"to":{"krate":0,"index":582}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":4422,"byte_end":4431,"line_start":128,"line_end":128,"column_start":73,"column_end":82},"kind":"SuperTrait","from":{"krate":1,"index":2156},"to":{"krate":0,"index":582}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":4477,"byte_end":4478,"line_start":132,"line_end":132,"column_start":36,"column_end":37},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":585},"to":{"krate":0,"index":582}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":4757,"byte_end":4760,"line_start":140,"line_end":140,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":560},"to":{"krate":0,"index":587}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":4763,"byte_end":4775,"line_start":140,"line_end":140,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":582},"to":{"krate":0,"index":587}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":4801,"byte_end":4802,"line_start":141,"line_end":141,"column_start":23,"column_end":24},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":589},"to":{"krate":0,"index":587}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":5065,"byte_end":5074,"line_start":147,"line_end":147,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":587},"to":{"krate":0,"index":590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":5085,"byte_end":5097,"line_start":147,"line_end":147,"column_start":45,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":582},"to":{"krate":0,"index":590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":5136,"byte_end":5137,"line_start":148,"line_end":148,"column_start":26,"column_end":27},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":593},"to":{"krate":0,"index":590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":5736,"byte_end":5744,"line_start":167,"line_end":167,"column_start":22,"column_end":30},"kind":{"Impl":{"id":720}},"from":{"krate":1,"index":14210},"to":{"krate":0,"index":560}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/num-traits-sgx-ed3df9461e4b5d10/af046e0/src/lib.rs","byte_start":6434,"byte_end":6449,"line_start":193,"line_end":193,"column_start":23,"column_end":38},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":4350},"to":{"krate":1,"index":6595}}]}