{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1","program":"/home/chenge/.rustup/toolchains/nightly-2020-10-25-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","smallvec","--edition=2018","/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"mesalock_sgx\"","--cfg","feature=\"sgx_tstd\"","-C","metadata=a2d5c8c5774a1ea7","-C","extra-filename=-a2d5c8c5774a1ea7","--out-dir","/home/chenge/workplace/rust-sgx-samples/channel_establishment/rpc/target/rls/debug/deps","-L","dependency=/home/chenge/workplace/rust-sgx-samples/channel_establishment/rpc/target/rls/debug/deps","--extern","sgx_tstd=/home/chenge/workplace/rust-sgx-samples/channel_establishment/rpc/target/rls/debug/deps/libsgx_tstd-a15e1fab340c3762.rmeta","--cap-lints","allow","-L","native=/opt/intel/sgxsdk/lib64","-L","native=/home/chenge/workplace/rust-sgx-samples/channel_establishment/rpc/target/rls/debug/build/sgx_backtrace_sys-b1d6dfbd2989c145/out/libbacktrace/","-L","native=/home/chenge/workplace/rust-sgx-samples/channel_establishment/rpc/target/rls/debug/build/sgx_backtrace_sys-b1d6dfbd2989c145/out/libbacktrace","-L","native=/home/chenge/workplace/rust-sgx-samples/channel_establishment/rpc/target/rls/debug/build/sgx_unwind-18c500f13d2b4158/out/libunwind/src/.libs","--error-format=json","--sysroot","/home/chenge/.rustup/toolchains/nightly-2020-10-25-x86_64-unknown-linux-gnu"],"output":"/home/chenge/workplace/rust-sgx-samples/channel_establishment/rpc/target/rls/debug/deps/libsmallvec-a2d5c8c5774a1ea7.rmeta"},"prelude":{"crate_id":{"name":"smallvec","disambiguator":[6421389318980697479,7187798791368015229]},"crate_root":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src","external_crates":[{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}}],"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":301,"byte_end":61062,"line_start":7,"line_end":1988,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":301,"byte_end":61062,"line_start":7,"line_end":1988,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":624},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":636},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":346},{"krate":0,"index":351},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":64},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":81},{"krate":0,"index":86},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":97},{"krate":0,"index":105},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":122},{"krate":0,"index":189},{"krate":0,"index":194},{"krate":0,"index":198},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":232},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":243},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":275},{"krate":0,"index":277},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":303},{"krate":0,"index":307},{"krate":0,"index":312},{"krate":0,"index":318},{"krate":0,"index":324},{"krate":0,"index":327},{"krate":0,"index":331},{"krate":0,"index":336},{"krate":0,"index":353},{"krate":0,"index":358},{"krate":0,"index":363},{"krate":0,"index":368},{"krate":0,"index":373},{"krate":0,"index":378},{"krate":0,"index":383},{"krate":0,"index":388},{"krate":0,"index":393},{"krate":0,"index":398},{"krate":0,"index":403},{"krate":0,"index":408},{"krate":0,"index":413},{"krate":0,"index":418},{"krate":0,"index":423},{"krate":0,"index":428},{"krate":0,"index":433},{"krate":0,"index":438},{"krate":0,"index":443},{"krate":0,"index":448},{"krate":0,"index":453},{"krate":0,"index":458},{"krate":0,"index":463},{"krate":0,"index":468},{"krate":0,"index":473},{"krate":0,"index":478},{"krate":0,"index":483},{"krate":0,"index":488},{"krate":0,"index":493},{"krate":0,"index":498},{"krate":0,"index":503},{"krate":0,"index":508},{"krate":0,"index":513},{"krate":0,"index":518},{"krate":0,"index":523},{"krate":0,"index":528},{"krate":0,"index":533},{"krate":0,"index":538},{"krate":0,"index":543},{"krate":0,"index":548},{"krate":0,"index":553},{"krate":0,"index":558},{"krate":0,"index":563},{"krate":0,"index":568},{"krate":0,"index":573},{"krate":0,"index":578},{"krate":0,"index":583},{"krate":0,"index":588},{"krate":0,"index":593},{"krate":0,"index":598},{"krate":0,"index":603},{"krate":0,"index":608},{"krate":0,"index":613},{"krate":0,"index":340},{"krate":0,"index":343}],"decl_id":null,"docs":" Small vectors in various sizes. These store a certain number of elements inline, and fall back\n to the heap for larger allocations.  This can be a useful optimization for improving cache\n locality and reducing allocator traffic for workloads that fit within the inline buffer.","sig":null,"attributes":[{"value":"/ Small vectors in various sizes. These store a certain number of elements inline, and fall back","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":301,"byte_end":399,"line_start":7,"line_end":7,"column_start":1,"column_end":99}},{"value":"/ to the heap for larger allocations.  This can be a useful optimization for improving cache","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":400,"byte_end":494,"line_start":8,"line_end":8,"column_start":1,"column_end":95}},{"value":"/ locality and reducing allocator traffic for workloads that fit within the inline buffer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":495,"byte_end":587,"line_start":9,"line_end":9,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":588,"byte_end":591,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## `no_std` support","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":592,"byte_end":615,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":616,"byte_end":619,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ By default, `smallvec` does not depend on `std`.  However, the optional","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":620,"byte_end":695,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ `write` feature implements the `std::io::Write` trait for vectors of `u8`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":696,"byte_end":774,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ When this feature is enabled, `smallvec` depends on `std`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":775,"byte_end":837,"line_start":15,"line_end":15,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":838,"byte_end":841,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## Optional features","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":842,"byte_end":866,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":867,"byte_end":870,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ### `serde`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":871,"byte_end":886,"line_start":19,"line_end":19,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":887,"byte_end":890,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ When this optional dependency is enabled, `SmallVec` implements the `serde::Serialize` and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":891,"byte_end":985,"line_start":21,"line_end":21,"column_start":1,"column_end":95}},{"value":"/ `serde::Deserialize` traits.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":986,"byte_end":1018,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":1019,"byte_end":1022,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ### `write`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":1023,"byte_end":1038,"line_start":24,"line_end":24,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":1039,"byte_end":1042,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ When this feature is enabled, `SmallVec<[u8; _]>` implements the `std::io::Write` trait.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":1043,"byte_end":1135,"line_start":26,"line_end":26,"column_start":1,"column_end":93}},{"value":"/ This feature is not compatible with `#![no_std]` programs.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":1136,"byte_end":1198,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":1199,"byte_end":1202,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ### `union`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":1203,"byte_end":1218,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":1219,"byte_end":1222,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ **This feature requires Rust 1.49.**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":1223,"byte_end":1263,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":1264,"byte_end":1267,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ When the `union` feature is enabled `smallvec` will track its state (inline or spilled)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":1268,"byte_end":1359,"line_start":33,"line_end":33,"column_start":1,"column_end":92}},{"value":"/ without the use of an enum tag, reducing the size of the `smallvec` by one machine word.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":1360,"byte_end":1452,"line_start":34,"line_end":34,"column_start":1,"column_end":93}},{"value":"/ This means that there is potentially no space overhead compared to `Vec`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":1453,"byte_end":1530,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ Note that `smallvec` can still be larger than `Vec` if the inline buffer is larger than two","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":1531,"byte_end":1626,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/ machine words.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":1627,"byte_end":1645,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":1646,"byte_end":1649,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ To use this feature add `features = [\"union\"]` in the `smallvec` section of Cargo.toml.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":1650,"byte_end":1741,"line_start":39,"line_end":39,"column_start":1,"column_end":92}},{"value":"/ Note that this feature requires Rust 1.49.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":1742,"byte_end":1788,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":1789,"byte_end":1792,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Tracking issue: [rust-lang/rust#55149](https://github.com/rust-lang/rust/issues/55149)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":1793,"byte_end":1883,"line_start":42,"line_end":42,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":1884,"byte_end":1887,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ### `const_generics`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":1888,"byte_end":1912,"line_start":44,"line_end":44,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":1913,"byte_end":1916,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ **This feature is unstable and requires a nightly build of the Rust toolchain.**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":1917,"byte_end":2001,"line_start":46,"line_end":46,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":2002,"byte_end":2005,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ When this feature is enabled, `SmallVec` works with any arrays of any size, not just a fixed","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":2006,"byte_end":2102,"line_start":48,"line_end":48,"column_start":1,"column_end":97}},{"value":"/ list of sizes.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":2103,"byte_end":2121,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":2122,"byte_end":2125,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Tracking issue: [rust-lang/rust#44580](https://github.com/rust-lang/rust/issues/44580)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":2126,"byte_end":2216,"line_start":51,"line_end":51,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":2217,"byte_end":2220,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ### `specialization`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":2221,"byte_end":2245,"line_start":53,"line_end":53,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":2246,"byte_end":2249,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ **This feature is unstable and requires a nightly build of the Rust toolchain.**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":2250,"byte_end":2334,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":2335,"byte_end":2338,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ When this feature is enabled, `SmallVec::from(slice)` has improved performance for slices","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":2339,"byte_end":2432,"line_start":57,"line_end":57,"column_start":1,"column_end":94}},{"value":"/ of `Copy` types.  (Without this feature, you can use `SmallVec::from_slice` to get optimal","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":2433,"byte_end":2527,"line_start":58,"line_end":58,"column_start":1,"column_end":95}},{"value":"/ performance for `Copy` types.)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":2528,"byte_end":2562,"line_start":59,"line_end":59,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":2563,"byte_end":2566,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Tracking issue: [rust-lang/rust#31844](https://github.com/rust-lang/rust/issues/31844)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":2567,"byte_end":2657,"line_start":61,"line_end":61,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":2658,"byte_end":2661,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ### `may_dangle`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":2662,"byte_end":2682,"line_start":63,"line_end":63,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":2683,"byte_end":2686,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ **This feature is unstable and requires a nightly build of the Rust toolchain.**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":2687,"byte_end":2771,"line_start":65,"line_end":65,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":2772,"byte_end":2775,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ This feature makes the Rust compiler less strict about use of vectors that contain borrowed","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":2776,"byte_end":2871,"line_start":67,"line_end":67,"column_start":1,"column_end":96}},{"value":"/ references. For details, see the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":2872,"byte_end":2908,"line_start":68,"line_end":68,"column_start":1,"column_end":37}},{"value":"/ [Rustonomicon](https://doc.rust-lang.org/1.42.0/nomicon/dropck.html#an-escape-hatch).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":2909,"byte_end":2998,"line_start":69,"line_end":69,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":2999,"byte_end":3002,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Tracking issue: [rust-lang/rust#34761](https://github.com/rust-lang/rust/issues/34761)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":3003,"byte_end":3093,"line_start":71,"line_end":71,"column_start":1,"column_end":91}},{"value":"no_std","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":3095,"byte_end":3105,"line_start":73,"line_end":73,"column_start":1,"column_end":11}},{"value":"deny(missing_docs)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":3304,"byte_end":3326,"line_start":77,"line_end":77,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":40},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":7252,"byte_end":7267,"line_start":218,"line_end":218,"column_start":11,"column_end":26},"name":"ExtendFromSlice","qualname":"::ExtendFromSlice","value":"ExtendFromSlice<T>","parent":null,"children":[{"krate":0,"index":42}],"decl_id":null,"docs":" Trait to be implemented by a collection that can be extended from a slice","sig":null,"attributes":[{"value":"/ Trait to be implemented by a collection that can be extended from a slice","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":6715,"byte_end":6792,"line_start":197,"line_end":197,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":6793,"byte_end":6796,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":6797,"byte_end":6811,"line_start":199,"line_end":199,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":6812,"byte_end":6815,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":6816,"byte_end":6827,"line_start":201,"line_end":201,"column_start":1,"column_end":12}},{"value":"/ use smallvec::{ExtendFromSlice, SmallVec};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":6828,"byte_end":6874,"line_start":202,"line_end":202,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":6875,"byte_end":6878,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ fn initialize<V: ExtendFromSlice<u8>>(v: &mut V) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":6879,"byte_end":6933,"line_start":204,"line_end":204,"column_start":1,"column_end":55}},{"value":"/     v.extend_from_slice(b\"Test!\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":6934,"byte_end":6972,"line_start":205,"line_end":205,"column_start":1,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":6973,"byte_end":6978,"line_start":206,"line_end":206,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":6979,"byte_end":6982,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ let mut vec = Vec::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":6983,"byte_end":7012,"line_start":208,"line_end":208,"column_start":1,"column_end":30}},{"value":"/ initialize(&mut vec);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":7013,"byte_end":7038,"line_start":209,"line_end":209,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(&vec, b\"Test!\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":7039,"byte_end":7070,"line_start":210,"line_end":210,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":7071,"byte_end":7074,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ let mut small_vec = SmallVec::<[u8; 8]>::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":7075,"byte_end":7126,"line_start":212,"line_end":212,"column_start":1,"column_end":52}},{"value":"/ initialize(&mut small_vec);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":7127,"byte_end":7158,"line_start":213,"line_end":213,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(&small_vec as &[_], b\"Test!\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":7159,"byte_end":7204,"line_start":214,"line_end":214,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":7205,"byte_end":7212,"line_start":215,"line_end":215,"column_start":1,"column_end":8}},{"value":"deprecated","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":7228,"byte_end":7241,"line_start":217,"line_end":217,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":7342,"byte_end":7359,"line_start":220,"line_end":220,"column_start":8,"column_end":25},"name":"extend_from_slice","qualname":"::ExtendFromSlice::extend_from_slice","value":"pub fn extend_from_slice(&mut Self, &[T])","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Extends a collection from a slice of its element type\n","sig":null,"attributes":[{"value":"/ Extends a collection from a slice of its element type","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":7277,"byte_end":7334,"line_start":219,"line_end":219,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":347},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":7734,"byte_end":7750,"line_start":234,"line_end":234,"column_start":5,"column_end":21},"name":"CapacityOverflow","qualname":"::CollectionAllocErr::CapacityOverflow","value":"CollectionAllocErr::CapacityOverflow","parent":{"krate":0,"index":346},"children":[],"decl_id":null,"docs":" Overflow `usize::MAX` or other error during size computation\n","sig":null,"attributes":[{"value":"/ Overflow `usize::MAX` or other error during size computation","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":7665,"byte_end":7729,"line_start":233,"line_end":233,"column_start":5,"column_end":69}}]},{"kind":"StructVariant","id":{"krate":0,"index":349},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":7794,"byte_end":7802,"line_start":236,"line_end":236,"column_start":5,"column_end":13},"name":"AllocErr","qualname":"::CollectionAllocErr::AllocErr","value":"CollectionAllocErr::AllocErr { layout }","parent":{"krate":0,"index":346},"children":[],"decl_id":null,"docs":" The allocator return an error\n","sig":null,"attributes":[{"value":"/ The allocator return an error","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":7756,"byte_end":7789,"line_start":235,"line_end":235,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":346},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":7640,"byte_end":7658,"line_start":232,"line_end":232,"column_start":10,"column_end":28},"name":"CollectionAllocErr","qualname":"::CollectionAllocErr","value":"pub enum CollectionAllocErr {\n\n    /// Overflow `usize::MAX` or other error during size computation\n    CapacityOverflow,\n\n    /// The allocator return an error\n    AllocErr {\n        /// The layout that was passed to the allocator\n        layout: Layout,\n    },\n}","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":349}],"decl_id":null,"docs":" Error type for APIs with fallible heap allocation\n","sig":null,"attributes":[{"value":"/ Error type for APIs with fallible heap allocation","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":7560,"byte_end":7613,"line_start":230,"line_end":230,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":57},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":9377,"byte_end":9382,"line_start":284,"line_end":284,"column_start":12,"column_end":17},"name":"Drain","qualname":"::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63}],"decl_id":null,"docs":" An iterator that removes the items from a `SmallVec` and yields them by value.","sig":null,"attributes":[{"value":"/ An iterator that removes the items from a `SmallVec` and yields them by value.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":9190,"byte_end":9272,"line_start":279,"line_end":279,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":9273,"byte_end":9276,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ Returned from [`SmallVec::drain`][1].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":9277,"byte_end":9318,"line_start":281,"line_end":281,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":9319,"byte_end":9322,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ [1]: struct.SmallVec.html#method.drain","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":9323,"byte_end":9365,"line_start":283,"line_end":283,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":118},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":15058,"byte_end":15066,"line_start":481,"line_end":481,"column_start":12,"column_end":20},"name":"SmallVec","qualname":"::SmallVec","value":"SmallVec {  }","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121}],"decl_id":null,"docs":" A `Vec`-like container that can store a small number of elements inline.","sig":null,"attributes":[{"value":"/ A `Vec`-like container that can store a small number of elements inline.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":13965,"byte_end":14041,"line_start":455,"line_end":455,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":14042,"byte_end":14045,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ `SmallVec` acts like a vector, but can store a limited amount of data inline within the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":14046,"byte_end":14137,"line_start":457,"line_end":457,"column_start":1,"column_end":92}},{"value":"/ `SmallVec` struct rather than in a separate allocation.  If the data exceeds this limit, the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":14138,"byte_end":14234,"line_start":458,"line_end":458,"column_start":1,"column_end":97}},{"value":"/ `SmallVec` will \"spill\" its data onto the heap, allocating a new buffer to hold it.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":14235,"byte_end":14322,"line_start":459,"line_end":459,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":14323,"byte_end":14326,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ The amount of data that a `SmallVec` can store inline depends on its backing store. The backing","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":14327,"byte_end":14426,"line_start":461,"line_end":461,"column_start":1,"column_end":100}},{"value":"/ store can be any type that implements the `Array` trait; usually it is a small fixed-sized","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":14427,"byte_end":14521,"line_start":462,"line_end":462,"column_start":1,"column_end":95}},{"value":"/ array.  For example a `SmallVec<[u64; 8]>` can hold up to eight 64-bit integers inline.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":14522,"byte_end":14613,"line_start":463,"line_end":463,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":14614,"byte_end":14617,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":14618,"byte_end":14632,"line_start":465,"line_end":465,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":14633,"byte_end":14636,"line_start":466,"line_end":466,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":14637,"byte_end":14648,"line_start":467,"line_end":467,"column_start":1,"column_end":12}},{"value":"/ use smallvec::SmallVec;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":14649,"byte_end":14676,"line_start":468,"line_end":468,"column_start":1,"column_end":28}},{"value":"/ let mut v = SmallVec::<[u8; 4]>::new(); // initialize an empty vector","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":14677,"byte_end":14750,"line_start":469,"line_end":469,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":14751,"byte_end":14754,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ // The vector can hold up to 4 items without spilling onto the heap.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":14755,"byte_end":14827,"line_start":471,"line_end":471,"column_start":1,"column_end":73}},{"value":"/ v.extend(0..4);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":14828,"byte_end":14847,"line_start":472,"line_end":472,"column_start":1,"column_end":20}},{"value":"/ assert_eq!(v.len(), 4);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":14848,"byte_end":14875,"line_start":473,"line_end":473,"column_start":1,"column_end":28}},{"value":"/ assert!(!v.spilled());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":14876,"byte_end":14902,"line_start":474,"line_end":474,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":14903,"byte_end":14906,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ // Pushing another element will force the buffer to spill:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":14907,"byte_end":14969,"line_start":476,"line_end":476,"column_start":1,"column_end":63}},{"value":"/ v.push(4);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":14970,"byte_end":14984,"line_start":477,"line_end":477,"column_start":1,"column_end":15}},{"value":"/ assert_eq!(v.len(), 5);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":14985,"byte_end":15012,"line_start":478,"line_end":478,"column_start":1,"column_end":28}},{"value":"/ assert!(v.spilled());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":15013,"byte_end":15038,"line_start":479,"line_end":479,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":15039,"byte_end":15046,"line_start":480,"line_end":480,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":15603,"byte_end":15606,"line_start":492,"line_end":492,"column_start":12,"column_end":15},"name":"new","qualname":"<SmallVec<A>>::new","value":"pub fn new() -> SmallVec<A>","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty vector\n","sig":null,"attributes":[{"value":"/ Construct an empty vector","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":15548,"byte_end":15577,"line_start":490,"line_end":490,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":15582,"byte_end":15591,"line_start":491,"line_end":491,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":16520,"byte_end":16533,"line_start":519,"line_end":519,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<SmallVec<A>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty vector with enough capacity pre-allocated to store at least `n`\n elements.","sig":null,"attributes":[{"value":"/ Construct an empty vector with enough capacity pre-allocated to store at least `n`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":16080,"byte_end":16166,"line_start":505,"line_end":505,"column_start":5,"column_end":91}},{"value":"/ elements.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":16171,"byte_end":16184,"line_start":506,"line_end":506,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":16189,"byte_end":16192,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ Will create a heap allocation only if `n` is larger than the inline capacity.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":16197,"byte_end":16278,"line_start":508,"line_end":508,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":16283,"byte_end":16286,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":16291,"byte_end":16298,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/ # use smallvec::SmallVec;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":16303,"byte_end":16332,"line_start":511,"line_end":511,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":16337,"byte_end":16340,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ let v: SmallVec<[u8; 3]> = SmallVec::with_capacity(100);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":16345,"byte_end":16405,"line_start":513,"line_end":513,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":16410,"byte_end":16413,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":16418,"byte_end":16444,"line_start":515,"line_end":515,"column_start":5,"column_end":31}},{"value":"/ assert!(v.capacity() >= 100);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":16449,"byte_end":16482,"line_start":516,"line_end":516,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":16487,"byte_end":16494,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":16499,"byte_end":16508,"line_start":518,"line_end":518,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":17067,"byte_end":17075,"line_start":538,"line_end":538,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<SmallVec<A>>::from_vec","value":"pub fn from_vec(Vec<A::Item>) -> SmallVec<A>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `SmallVec` from a `Vec<A::Item>`.","sig":null,"attributes":[{"value":"/ Construct a new `SmallVec` from a `Vec<A::Item>`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":16640,"byte_end":16693,"line_start":525,"line_end":525,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":16698,"byte_end":16701,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ Elements will be copied to the inline buffer if vec.capacity() <= Self::inline_capacity().","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":16706,"byte_end":16800,"line_start":527,"line_end":527,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":16805,"byte_end":16808,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":16813,"byte_end":16824,"line_start":529,"line_end":529,"column_start":5,"column_end":16}},{"value":"/ use smallvec::SmallVec;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":16829,"byte_end":16856,"line_start":530,"line_end":530,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":16861,"byte_end":16864,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ let vec = vec![1, 2, 3, 4, 5];","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":16869,"byte_end":16903,"line_start":532,"line_end":532,"column_start":5,"column_end":39}},{"value":"/ let small_vec: SmallVec<[_; 3]> = SmallVec::from_vec(vec);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":16908,"byte_end":16970,"line_start":533,"line_end":533,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":16975,"byte_end":16978,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&*small_vec, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":16983,"byte_end":17029,"line_start":535,"line_end":535,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":17034,"byte_end":17041,"line_start":536,"line_end":536,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":17046,"byte_end":17055,"line_start":537,"line_end":537,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":18171,"byte_end":18179,"line_start":574,"line_end":574,"column_start":12,"column_end":20},"name":"from_buf","qualname":"<SmallVec<A>>::from_buf","value":"pub fn from_buf(A) -> SmallVec<A>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `SmallVec` on the stack from an `A` without\n copying elements.","sig":null,"attributes":[{"value":"/ Constructs a new `SmallVec` on the stack from an `A` without","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":17823,"byte_end":17887,"line_start":562,"line_end":562,"column_start":5,"column_end":69}},{"value":"/ copying elements.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":17892,"byte_end":17913,"line_start":563,"line_end":563,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":17918,"byte_end":17921,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":17926,"byte_end":17937,"line_start":565,"line_end":565,"column_start":5,"column_end":16}},{"value":"/ use smallvec::SmallVec;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":17942,"byte_end":17969,"line_start":566,"line_end":566,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":17974,"byte_end":17977,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ let buf = [1, 2, 3, 4, 5];","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":17982,"byte_end":18012,"line_start":568,"line_end":568,"column_start":5,"column_end":35}},{"value":"/ let small_vec: SmallVec<_> = SmallVec::from_buf(buf);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":18017,"byte_end":18074,"line_start":569,"line_end":569,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":18079,"byte_end":18082,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&*small_vec, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":18087,"byte_end":18133,"line_start":571,"line_end":571,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":18138,"byte_end":18145,"line_start":572,"line_end":572,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":18150,"byte_end":18159,"line_start":573,"line_end":573,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":18794,"byte_end":18810,"line_start":594,"line_end":594,"column_start":12,"column_end":28},"name":"from_buf_and_len","qualname":"<SmallVec<A>>::from_buf_and_len","value":"pub fn from_buf_and_len(A, usize) -> SmallVec<A>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `SmallVec` on the stack from an `A` without\n copying elements. Also sets the length, which must be less or\n equal to the size of `buf`.","sig":null,"attributes":[{"value":"/ Constructs a new `SmallVec` on the stack from an `A` without","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":18346,"byte_end":18410,"line_start":581,"line_end":581,"column_start":5,"column_end":69}},{"value":"/ copying elements. Also sets the length, which must be less or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":18415,"byte_end":18480,"line_start":582,"line_end":582,"column_start":5,"column_end":70}},{"value":"/ equal to the size of `buf`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":18485,"byte_end":18516,"line_start":583,"line_end":583,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":18521,"byte_end":18524,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":18529,"byte_end":18540,"line_start":585,"line_end":585,"column_start":5,"column_end":16}},{"value":"/ use smallvec::SmallVec;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":18545,"byte_end":18572,"line_start":586,"line_end":586,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":18577,"byte_end":18580,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ let buf = [1, 2, 3, 4, 5, 0, 0, 0];","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":18585,"byte_end":18624,"line_start":588,"line_end":588,"column_start":5,"column_end":44}},{"value":"/ let small_vec: SmallVec<_> = SmallVec::from_buf_and_len(buf, 5);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":18629,"byte_end":18697,"line_start":589,"line_end":589,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":18702,"byte_end":18705,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&*small_vec, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":18710,"byte_end":18756,"line_start":591,"line_end":591,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":18761,"byte_end":18768,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":18773,"byte_end":18782,"line_start":593,"line_end":593,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":19539,"byte_end":19565,"line_start":615,"line_end":615,"column_start":19,"column_end":45},"name":"from_buf_and_len_unchecked","qualname":"<SmallVec<A>>::from_buf_and_len_unchecked","value":"pub unsafe fn from_buf_and_len_unchecked(MaybeUninit<A>, usize) -> SmallVec<A>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `SmallVec` on the stack from an `A` without\n copying elements. Also sets the length. The user is responsible\n for ensuring that `len <= A::size()`.","sig":null,"attributes":[{"value":"/ Constructs a new `SmallVec` on the stack from an `A` without","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":18978,"byte_end":19042,"line_start":599,"line_end":599,"column_start":5,"column_end":69}},{"value":"/ copying elements. Also sets the length. The user is responsible","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":19047,"byte_end":19114,"line_start":600,"line_end":600,"column_start":5,"column_end":72}},{"value":"/ for ensuring that `len <= A::size()`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":19119,"byte_end":19160,"line_start":601,"line_end":601,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":19165,"byte_end":19168,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":19173,"byte_end":19184,"line_start":603,"line_end":603,"column_start":5,"column_end":16}},{"value":"/ use smallvec::SmallVec;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":19189,"byte_end":19216,"line_start":604,"line_end":604,"column_start":5,"column_end":32}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":19221,"byte_end":19251,"line_start":605,"line_end":605,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":19256,"byte_end":19259,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ let buf = [1, 2, 3, 4, 5, 0, 0, 0];","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":19264,"byte_end":19303,"line_start":607,"line_end":607,"column_start":5,"column_end":44}},{"value":"/ let small_vec: SmallVec<_> = unsafe {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":19308,"byte_end":19349,"line_start":608,"line_end":608,"column_start":5,"column_end":46}},{"value":"/     SmallVec::from_buf_and_len_unchecked(MaybeUninit::new(buf), 5)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":19354,"byte_end":19424,"line_start":609,"line_end":609,"column_start":5,"column_end":75}},{"value":"/ };","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":19429,"byte_end":19435,"line_start":610,"line_end":610,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":19440,"byte_end":19443,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&*small_vec, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":19448,"byte_end":19494,"line_start":612,"line_end":612,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":19499,"byte_end":19506,"line_start":613,"line_end":613,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":19511,"byte_end":19520,"line_start":614,"line_end":614,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":19989,"byte_end":19996,"line_start":627,"line_end":627,"column_start":19,"column_end":26},"name":"set_len","qualname":"<SmallVec<A>>::set_len","value":"pub unsafe fn set_len(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the length of a vector.","sig":null,"attributes":[{"value":"/ Sets the length of a vector.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":19733,"byte_end":19765,"line_start":622,"line_end":622,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":19770,"byte_end":19773,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ This will explicitly set the size of the vector, without actually","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":19778,"byte_end":19847,"line_start":624,"line_end":624,"column_start":5,"column_end":74}},{"value":"/ modifying its buffers, so it is up to the caller to ensure that the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":19852,"byte_end":19923,"line_start":625,"line_end":625,"column_start":5,"column_end":76}},{"value":"/ vector is actually the specified size.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":19928,"byte_end":19970,"line_start":626,"line_end":626,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":21098,"byte_end":21109,"line_start":654,"line_end":654,"column_start":12,"column_end":23},"name":"inline_size","qualname":"<SmallVec<A>>::inline_size","value":"pub fn inline_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum number of elements this vector can hold inline\n","sig":null,"attributes":[{"value":"/ The maximum number of elements this vector can hold inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":21010,"byte_end":21072,"line_start":652,"line_end":652,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":21077,"byte_end":21086,"line_start":653,"line_end":653,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":21244,"byte_end":21247,"line_start":660,"line_end":660,"column_start":12,"column_end":15},"name":"len","qualname":"<SmallVec<A>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of elements stored in the vector\n","sig":null,"attributes":[{"value":"/ The number of elements stored in the vector","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":21171,"byte_end":21218,"line_start":658,"line_end":658,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":21223,"byte_end":21232,"line_start":659,"line_end":659,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":21368,"byte_end":21376,"line_start":666,"line_end":666,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SmallVec<A>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the vector is empty\n","sig":null,"attributes":[{"value":"/ Returns `true` if the vector is empty","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":21301,"byte_end":21342,"line_start":664,"line_end":664,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":21347,"byte_end":21356,"line_start":665,"line_end":665,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":21519,"byte_end":21527,"line_start":672,"line_end":672,"column_start":12,"column_end":20},"name":"capacity","qualname":"<SmallVec<A>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of items the vector can hold without reallocating\n","sig":null,"attributes":[{"value":"/ The number of items the vector can hold without reallocating","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":21429,"byte_end":21493,"line_start":670,"line_end":670,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":21498,"byte_end":21507,"line_start":671,"line_end":671,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":22708,"byte_end":22715,"line_start":709,"line_end":709,"column_start":12,"column_end":19},"name":"spilled","qualname":"<SmallVec<A>>::spilled","value":"pub fn spilled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the data has spilled into a separate heap-allocated buffer.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the data has spilled into a separate heap-allocated buffer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":22601,"byte_end":22682,"line_start":707,"line_end":707,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":22687,"byte_end":22696,"line_start":708,"line_end":708,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":23351,"byte_end":23356,"line_start":726,"line_end":726,"column_start":12,"column_end":17},"name":"drain","qualname":"<SmallVec<A>>::drain","value":"pub fn drain<R>(&mut Self, R) -> Drain<, A> where R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Creates a draining iterator that removes the specified range in the vector\n and yields the removed items.","sig":null,"attributes":[{"value":"/ Creates a draining iterator that removes the specified range in the vector","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":22792,"byte_end":22870,"line_start":713,"line_end":713,"column_start":5,"column_end":83}},{"value":"/ and yields the removed items.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":22875,"byte_end":22908,"line_start":714,"line_end":714,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":22913,"byte_end":22916,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ Note 1: The element range is removed even if the iterator is only","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":22921,"byte_end":22990,"line_start":716,"line_end":716,"column_start":5,"column_end":74}},{"value":"/ partially consumed or not consumed at all.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":22995,"byte_end":23041,"line_start":717,"line_end":717,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":23046,"byte_end":23049,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ Note 2: It is unspecified how many elements are removed from the vector","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":23054,"byte_end":23129,"line_start":719,"line_end":719,"column_start":5,"column_end":80}},{"value":"/ if the `Drain` value is leaked.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":23134,"byte_end":23169,"line_start":720,"line_end":720,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":23174,"byte_end":23177,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":23182,"byte_end":23194,"line_start":722,"line_end":722,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":23199,"byte_end":23202,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ Panics if the starting point is greater than the end point or if","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":23207,"byte_end":23275,"line_start":724,"line_end":724,"column_start":5,"column_end":73}},{"value":"/ the end point is greater than the length of the vector.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":23280,"byte_end":23339,"line_start":725,"line_end":725,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":24294,"byte_end":24298,"line_start":763,"line_end":763,"column_start":12,"column_end":16},"name":"push","qualname":"<SmallVec<A>>::push","value":"pub fn push(&mut Self, A::Item)","parent":null,"children":[],"decl_id":null,"docs":" Append an item to the vector.\n","sig":null,"attributes":[{"value":"/ Append an item to the vector.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":24235,"byte_end":24268,"line_start":761,"line_end":761,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":24273,"byte_end":24282,"line_start":762,"line_end":762,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":24818,"byte_end":24821,"line_start":779,"line_end":779,"column_start":12,"column_end":15},"name":"pop","qualname":"<SmallVec<A>>::pop","value":"pub fn pop(&mut Self) -> Option<A::Item>","parent":null,"children":[],"decl_id":null,"docs":" Remove an item from the end of the vector and return it, or None if empty.\n","sig":null,"attributes":[{"value":"/ Remove an item from the end of the vector and return it, or None if empty.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":24714,"byte_end":24792,"line_start":777,"line_end":777,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":24797,"byte_end":24806,"line_start":778,"line_end":778,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":25561,"byte_end":25567,"line_start":803,"line_end":803,"column_start":12,"column_end":18},"name":"append","qualname":"<SmallVec<A>>::append","value":"pub fn append<B>(&mut Self, &mut SmallVec<B>) where B: Array<Item = A::Item>","parent":null,"children":[],"decl_id":null,"docs":" Moves all the elements of `other` into `self`, leaving `other` empty.","sig":null,"attributes":[{"value":"/ Moves all the elements of `other` into `self`, leaving `other` empty.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":25148,"byte_end":25221,"line_start":791,"line_end":791,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":25226,"byte_end":25229,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":25234,"byte_end":25247,"line_start":793,"line_end":793,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":25252,"byte_end":25255,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":25260,"byte_end":25267,"line_start":795,"line_end":795,"column_start":5,"column_end":12}},{"value":"/ # use smallvec::{SmallVec, smallvec};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":25272,"byte_end":25313,"line_start":796,"line_end":796,"column_start":5,"column_end":46}},{"value":"/ let mut v0: SmallVec<[u8; 16]> = smallvec![1, 2, 3];","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":25318,"byte_end":25374,"line_start":797,"line_end":797,"column_start":5,"column_end":61}},{"value":"/ let mut v1: SmallVec<[u8; 32]> = smallvec![4, 5, 6];","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":25379,"byte_end":25435,"line_start":798,"line_end":798,"column_start":5,"column_end":61}},{"value":"/ v0.append(&mut v1);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":25440,"byte_end":25463,"line_start":799,"line_end":799,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(*v0, [1, 2, 3, 4, 5, 6]);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":25468,"byte_end":25508,"line_start":800,"line_end":800,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*v1, []);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":25513,"byte_end":25537,"line_start":801,"line_end":801,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":25542,"byte_end":25549,"line_start":802,"line_end":802,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":25913,"byte_end":25917,"line_start":814,"line_end":814,"column_start":12,"column_end":16},"name":"grow","qualname":"<SmallVec<A>>::grow","value":"pub fn grow(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Re-allocate to set the capacity to `max(new_cap, inline_size())`.","sig":null,"attributes":[{"value":"/ Re-allocate to set the capacity to `max(new_cap, inline_size())`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":25705,"byte_end":25774,"line_start":810,"line_end":810,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":25779,"byte_end":25782,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ Panics if `new_cap` is less than the vector's length","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":25787,"byte_end":25843,"line_start":812,"line_end":812,"column_start":5,"column_end":61}},{"value":"/ or if the capacity computation overflows `usize`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":25848,"byte_end":25901,"line_start":813,"line_end":813,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":26151,"byte_end":26159,"line_start":821,"line_end":821,"column_start":12,"column_end":20},"name":"try_grow","qualname":"<SmallVec<A>>::try_grow","value":"pub fn try_grow(&mut Self, usize) -> Result<(), CollectionAllocErr>","parent":null,"children":[],"decl_id":null,"docs":" Re-allocate to set the capacity to `max(new_cap, inline_size())`.","sig":null,"attributes":[{"value":"/ Re-allocate to set the capacity to `max(new_cap, inline_size())`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":26001,"byte_end":26070,"line_start":818,"line_end":818,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":26075,"byte_end":26078,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ Panics if `new_cap` is less than the vector's length","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":26083,"byte_end":26139,"line_start":820,"line_end":820,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":28169,"byte_end":28176,"line_start":868,"line_end":868,"column_start":12,"column_end":19},"name":"reserve","qualname":"<SmallVec<A>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for `additional` more elements to be inserted.","sig":null,"attributes":[{"value":"/ Reserve capacity for `additional` more elements to be inserted.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":27934,"byte_end":28001,"line_start":862,"line_end":862,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":28006,"byte_end":28009,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ May reserve more space to avoid frequent reallocations.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":28014,"byte_end":28073,"line_start":864,"line_end":864,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":28078,"byte_end":28081,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ Panics if the capacity computation overflows `usize`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":28086,"byte_end":28143,"line_start":866,"line_end":866,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":28148,"byte_end":28157,"line_start":867,"line_end":867,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":28420,"byte_end":28431,"line_start":875,"line_end":875,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<SmallVec<A>>::try_reserve","value":"pub fn try_reserve(&mut Self, usize) -> Result<(), CollectionAllocErr>","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for `additional` more elements to be inserted.","sig":null,"attributes":[{"value":"/ Reserve capacity for `additional` more elements to be inserted.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":28269,"byte_end":28336,"line_start":872,"line_end":872,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":28341,"byte_end":28344,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ May reserve more space to avoid frequent reallocations.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":28349,"byte_end":28408,"line_start":874,"line_end":874,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":29158,"byte_end":29171,"line_start":893,"line_end":893,"column_start":12,"column_end":25},"name":"reserve_exact","qualname":"<SmallVec<A>>::reserve_exact","value":"pub fn reserve_exact(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserve the minimum capacity for `additional` more elements to be inserted.","sig":null,"attributes":[{"value":"/ Reserve the minimum capacity for `additional` more elements to be inserted.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":29005,"byte_end":29084,"line_start":890,"line_end":890,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":29089,"byte_end":29092,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity overflows `usize`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":29097,"byte_end":29146,"line_start":892,"line_end":892,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":29361,"byte_end":29378,"line_start":898,"line_end":898,"column_start":12,"column_end":29},"name":"try_reserve_exact","qualname":"<SmallVec<A>>::try_reserve_exact","value":"pub fn try_reserve_exact(&mut Self, usize) -> Result<(), CollectionAllocErr>","parent":null,"children":[],"decl_id":null,"docs":" Reserve the minimum capacity for `additional` more elements to be inserted.\n","sig":null,"attributes":[{"value":"/ Reserve the minimum capacity for `additional` more elements to be inserted.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":29270,"byte_end":29349,"line_start":897,"line_end":897,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":29925,"byte_end":29938,"line_start":913,"line_end":913,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<SmallVec<A>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the capacity of the vector as much as possible.","sig":null,"attributes":[{"value":"/ Shrink the capacity of the vector as much as possible.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":29735,"byte_end":29793,"line_start":909,"line_end":909,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":29798,"byte_end":29801,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ When possible, this will move data from an external heap buffer to the vector's inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":29806,"byte_end":29896,"line_start":911,"line_end":911,"column_start":5,"column_end":95}},{"value":"/ storage.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":29901,"byte_end":29913,"line_start":912,"line_end":912,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":30833,"byte_end":30841,"line_start":938,"line_end":938,"column_start":12,"column_end":20},"name":"truncate","qualname":"<SmallVec<A>>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shorten the vector, keeping the first `len` elements and dropping the rest.","sig":null,"attributes":[{"value":"/ Shorten the vector, keeping the first `len` elements and dropping the rest.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":30496,"byte_end":30575,"line_start":931,"line_end":931,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":30580,"byte_end":30583,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than or equal to the vector's current length, this has no","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":30588,"byte_end":30669,"line_start":933,"line_end":933,"column_start":5,"column_end":86}},{"value":"/ effect.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":30674,"byte_end":30685,"line_start":934,"line_end":934,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":30690,"byte_end":30693,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ This does not re-allocate.  If you want the vector's capacity to shrink, call","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":30698,"byte_end":30779,"line_start":936,"line_end":936,"column_start":5,"column_end":86}},{"value":"/ `shrink_to_fit` after truncating.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":30784,"byte_end":30821,"line_start":937,"line_end":937,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":31254,"byte_end":31262,"line_start":952,"line_end":952,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<SmallVec<A>>::as_slice","value":"pub fn as_slice(&Self) -> &[A::Item]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice containing the entire vector.","sig":null,"attributes":[{"value":"/ Extracts a slice containing the entire vector.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":31152,"byte_end":31202,"line_start":949,"line_end":949,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":31207,"byte_end":31210,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `&s[..]`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":31215,"byte_end":31242,"line_start":951,"line_end":951,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":31416,"byte_end":31428,"line_start":959,"line_end":959,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<SmallVec<A>>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [A::Item]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a mutable slice of the entire vector.","sig":null,"attributes":[{"value":"/ Extracts a mutable slice of the entire vector.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":31310,"byte_end":31360,"line_start":956,"line_end":956,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":31365,"byte_end":31368,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `&mut s[..]`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":31373,"byte_end":31404,"line_start":958,"line_end":958,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":31703,"byte_end":31714,"line_start":969,"line_end":969,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<SmallVec<A>>::swap_remove","value":"pub fn swap_remove(&mut Self, usize) -> A::Item","parent":null,"children":[],"decl_id":null,"docs":" Remove the element at position `index`, replacing it with the last element.","sig":null,"attributes":[{"value":"/ Remove the element at position `index`, replacing it with the last element.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":31484,"byte_end":31563,"line_start":963,"line_end":963,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":31568,"byte_end":31571,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ This does not preserve ordering, but is O(1).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":31576,"byte_end":31625,"line_start":965,"line_end":965,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":31630,"byte_end":31633,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ Panics if `index` is out of bounds.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":31638,"byte_end":31677,"line_start":967,"line_end":967,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":31682,"byte_end":31691,"line_start":968,"line_end":968,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":31981,"byte_end":31986,"line_start":978,"line_end":978,"column_start":12,"column_end":17},"name":"clear","qualname":"<SmallVec<A>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all elements from the vector.\n","sig":null,"attributes":[{"value":"/ Remove all elements from the vector.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":31915,"byte_end":31955,"line_start":976,"line_end":976,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":31960,"byte_end":31969,"line_start":977,"line_end":977,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":32207,"byte_end":32213,"line_start":986,"line_end":986,"column_start":12,"column_end":18},"name":"remove","qualname":"<SmallVec<A>>::remove","value":"pub fn remove(&mut Self, usize) -> A::Item","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the element at position `index`, shifting all elements after it to the\n left.","sig":null,"attributes":[{"value":"/ Remove and return the element at position `index`, shifting all elements after it to the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":32037,"byte_end":32129,"line_start":982,"line_end":982,"column_start":5,"column_end":97}},{"value":"/ left.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":32134,"byte_end":32143,"line_start":983,"line_end":983,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":32148,"byte_end":32151,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ Panics if `index` is out of bounds.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":32156,"byte_end":32195,"line_start":985,"line_end":985,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":32745,"byte_end":32751,"line_start":1002,"line_end":1002,"column_start":12,"column_end":18},"name":"insert","qualname":"<SmallVec<A>>::insert","value":"pub fn insert(&mut Self, usize, A::Item)","parent":null,"children":[],"decl_id":null,"docs":" Insert an element at position `index`, shifting all elements after it to the right.","sig":null,"attributes":[{"value":"/ Insert an element at position `index`, shifting all elements after it to the right.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":32594,"byte_end":32681,"line_start":999,"line_end":999,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":32686,"byte_end":32689,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ Panics if `index` is out of bounds.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":32694,"byte_end":32733,"line_start":1001,"line_end":1001,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":33262,"byte_end":33273,"line_start":1018,"line_end":1018,"column_start":12,"column_end":23},"name":"insert_many","qualname":"<SmallVec<A>>::insert_many","value":"pub fn insert_many<I: IntoIterator<Item = A::Item>>(&mut Self, usize, I)","parent":null,"children":[],"decl_id":null,"docs":" Insert multiple elements at position `index`, shifting all following elements toward the\n back.\n","sig":null,"attributes":[{"value":"/ Insert multiple elements at position `index`, shifting all following elements toward the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":33144,"byte_end":33236,"line_start":1016,"line_end":1016,"column_start":5,"column_end":97}},{"value":"/ back.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":33241,"byte_end":33250,"line_start":1017,"line_end":1017,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":36148,"byte_end":36156,"line_start":1100,"line_end":1100,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<SmallVec<A>>::into_vec","value":"pub fn into_vec(Self) -> Vec<A::Item>","parent":null,"children":[],"decl_id":null,"docs":" Convert a SmallVec to a Vec, without reallocating if the SmallVec has already spilled onto\n the heap.\n","sig":null,"attributes":[{"value":"/ Convert a SmallVec to a Vec, without reallocating if the SmallVec has already spilled onto","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":36024,"byte_end":36118,"line_start":1098,"line_end":1098,"column_start":5,"column_end":99}},{"value":"/ the heap.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":36123,"byte_end":36136,"line_start":1099,"line_end":1099,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":36694,"byte_end":36710,"line_start":1117,"line_end":1117,"column_start":12,"column_end":28},"name":"into_boxed_slice","qualname":"<SmallVec<A>>::into_boxed_slice","value":"pub fn into_boxed_slice(Self) -> Box<[A::Item]>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `SmallVec` into a `Box<[T]>` without reallocating if the `SmallVec` has already spilled\n onto the heap.","sig":null,"attributes":[{"value":"/ Converts a `SmallVec` into a `Box<[T]>` without reallocating if the `SmallVec` has already spilled","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":36495,"byte_end":36597,"line_start":1113,"line_end":1113,"column_start":5,"column_end":107}},{"value":"/ onto the heap.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":36602,"byte_end":36620,"line_start":1114,"line_end":1114,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":36625,"byte_end":36628,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ Note that this will drop any excess capacity.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":36633,"byte_end":36682,"line_start":1116,"line_end":1116,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":37094,"byte_end":37104,"line_start":1125,"line_end":1125,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SmallVec<A>>::into_inner","value":"pub fn into_inner(Self) -> Result<A, Self>","parent":null,"children":[],"decl_id":null,"docs":" Convert the SmallVec into an `A` if possible. Otherwise return `Err(Self)`.","sig":null,"attributes":[{"value":"/ Convert the SmallVec into an `A` if possible. Otherwise return `Err(Self)`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":36791,"byte_end":36870,"line_start":1121,"line_end":1121,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":36875,"byte_end":36878,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ This method returns `Err(Self)` if the SmallVec is too short (and the `A` contains uninitialized elements),","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":36883,"byte_end":36994,"line_start":1123,"line_end":1123,"column_start":5,"column_end":116}},{"value":"/ or if the SmallVec is too long (and all the elements were spilled to the heap).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":36999,"byte_end":37082,"line_start":1124,"line_end":1124,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":37732,"byte_end":37738,"line_start":1143,"line_end":1143,"column_start":12,"column_end":18},"name":"retain","qualname":"<SmallVec<A>>::retain","value":"pub fn retain<F: FnMut(&mut A::Item) -> bool>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[{"value":"/ Retains only the elements specified by the predicate.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":37476,"byte_end":37533,"line_start":1138,"line_end":1138,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":37538,"byte_end":37541,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ In other words, remove all elements `e` such that `f(&e)` returns `false`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":37546,"byte_end":37624,"line_start":1140,"line_end":1140,"column_start":5,"column_end":83}},{"value":"/ This method operates in place and preserves the order of the retained","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":37629,"byte_end":37702,"line_start":1141,"line_end":1141,"column_start":5,"column_end":78}},{"value":"/ elements.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":37707,"byte_end":37720,"line_start":1142,"line_end":1142,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":38130,"byte_end":38135,"line_start":1157,"line_end":1157,"column_start":12,"column_end":17},"name":"dedup","qualname":"<SmallVec<A>>::dedup","value":"pub fn dedup(&mut Self) where A::Item: PartialEq<A::Item>","parent":null,"children":[],"decl_id":null,"docs":" Removes consecutive duplicate elements.\n","sig":null,"attributes":[{"value":"/ Removes consecutive duplicate elements.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":38075,"byte_end":38118,"line_start":1156,"line_end":1156,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":38338,"byte_end":38346,"line_start":1165,"line_end":1165,"column_start":12,"column_end":20},"name":"dedup_by","qualname":"<SmallVec<A>>::dedup_by","value":"pub fn dedup_by<F>(&mut Self, F) where F: FnMut(&mut A::Item, &mut A::Item) ->\nbool","parent":null,"children":[],"decl_id":null,"docs":" Removes consecutive duplicate elements using the given equality relation.\n","sig":null,"attributes":[{"value":"/ Removes consecutive duplicate elements using the given equality relation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":38249,"byte_end":38326,"line_start":1164,"line_end":1164,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":39250,"byte_end":39262,"line_start":1197,"line_end":1197,"column_start":12,"column_end":24},"name":"dedup_by_key","qualname":"<SmallVec<A>>::dedup_by_key","value":"pub fn dedup_by_key<F, K>(&mut Self, F) where F: FnMut(&mut A::Item) -> K,\nK: PartialEq<K>","parent":null,"children":[],"decl_id":null,"docs":" Removes consecutive elements that map to the same key.\n","sig":null,"attributes":[{"value":"/ Removes consecutive elements that map to the same key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":39180,"byte_end":39238,"line_start":1196,"line_end":1196,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":40632,"byte_end":40643,"line_start":1230,"line_end":1230,"column_start":12,"column_end":23},"name":"resize_with","qualname":"<SmallVec<A>>::resize_with","value":"pub fn resize_with<F>(&mut Self, usize, F) where F: FnMut() -> A::Item","parent":null,"children":[],"decl_id":null,"docs":" Resizes the `SmallVec` in-place so that `len` is equal to `new_len`.","sig":null,"attributes":[{"value":"/ Resizes the `SmallVec` in-place so that `len` is equal to `new_len`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":39429,"byte_end":39501,"line_start":1205,"line_end":1205,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":39506,"byte_end":39509,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ If `new_len` is greater than `len`, the `SmallVec` is extended by the difference, with each","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":39514,"byte_end":39609,"line_start":1207,"line_end":1207,"column_start":5,"column_end":100}},{"value":"/ additional slot filled with the result of calling the closure `f`. The return values from `f`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":39614,"byte_end":39711,"line_start":1208,"line_end":1208,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":39794,"byte_end":39797,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ If `new_len` is less than `len`, the `SmallVec` is simply truncated.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":39802,"byte_end":39874,"line_start":1211,"line_end":1211,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":39879,"byte_end":39882,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/ This method uses a closure to create new values on every push. If you'd rather `Clone` a given","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":39887,"byte_end":39985,"line_start":1213,"line_end":1213,"column_start":5,"column_end":103}},{"value":"/ value, use `resize`. If you want to use the `Default` trait to generate values, you can pass","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":39990,"byte_end":40086,"line_start":1214,"line_end":1214,"column_start":5,"column_end":101}},{"value":"/ `Default::default()` as the second argument.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":40091,"byte_end":40139,"line_start":1215,"line_end":1215,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":40144,"byte_end":40147,"line_start":1216,"line_end":1216,"column_start":5,"column_end":8}},{"value":"/ Added for std::vec::Vec compatibility (added in Rust 1.33.0)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":40152,"byte_end":40216,"line_start":1217,"line_end":1217,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":40221,"byte_end":40224,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":40229,"byte_end":40236,"line_start":1219,"line_end":1219,"column_start":5,"column_end":12}},{"value":"/ # use smallvec::{smallvec, SmallVec};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":40241,"byte_end":40282,"line_start":1220,"line_end":1220,"column_start":5,"column_end":46}},{"value":"/ let mut vec : SmallVec<[_; 4]> = smallvec![1, 2, 3];","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":40287,"byte_end":40343,"line_start":1221,"line_end":1221,"column_start":5,"column_end":61}},{"value":"/ vec.resize_with(5, Default::default);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":40348,"byte_end":40389,"line_start":1222,"line_end":1222,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(&*vec, &[1, 2, 3, 0, 0]);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":40394,"byte_end":40434,"line_start":1223,"line_end":1223,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":40439,"byte_end":40442,"line_start":1224,"line_end":1224,"column_start":5,"column_end":8}},{"value":"/ let mut vec : SmallVec<[_; 4]> = smallvec![];","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":40447,"byte_end":40496,"line_start":1225,"line_end":1225,"column_start":5,"column_end":54}},{"value":"/ let mut p = 1;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":40501,"byte_end":40519,"line_start":1226,"line_end":1226,"column_start":5,"column_end":23}},{"value":"/ vec.resize_with(4, || { p *= 2; p });","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":40524,"byte_end":40565,"line_start":1227,"line_end":1227,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(&*vec, &[2, 4, 8, 16]);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":40570,"byte_end":40608,"line_start":1228,"line_end":1228,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":40613,"byte_end":40620,"line_start":1229,"line_end":1229,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":43795,"byte_end":43809,"line_start":1316,"line_end":1316,"column_start":19,"column_end":33},"name":"from_raw_parts","qualname":"<SmallVec<A>>::from_raw_parts","value":"pub unsafe fn from_raw_parts(*mut A::Item, usize, usize) -> SmallVec<A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `SmallVec` directly from the raw components of another\n `SmallVec`.","sig":null,"attributes":[{"value":"/ Creates a `SmallVec` directly from the raw components of another","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":41083,"byte_end":41151,"line_start":1247,"line_end":1247,"column_start":5,"column_end":73}},{"value":"/ `SmallVec`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":41156,"byte_end":41171,"line_start":1248,"line_end":1248,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":41176,"byte_end":41179,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":41184,"byte_end":41196,"line_start":1250,"line_end":1250,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":41201,"byte_end":41204,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ This is highly unsafe, due to the number of invariants that aren't","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":41209,"byte_end":41279,"line_start":1252,"line_end":1252,"column_start":5,"column_end":75}},{"value":"/ checked:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":41284,"byte_end":41296,"line_start":1253,"line_end":1253,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":41301,"byte_end":41304,"line_start":1254,"line_end":1254,"column_start":5,"column_end":8}},{"value":"/ * `ptr` needs to have been previously allocated via `SmallVec` for its","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":41309,"byte_end":41383,"line_start":1255,"line_end":1255,"column_start":5,"column_end":79}},{"value":"/   spilled storage (at least, it's highly likely to be incorrect if it","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":41388,"byte_end":41461,"line_start":1256,"line_end":1256,"column_start":5,"column_end":78}},{"value":"/   wasn't).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":41466,"byte_end":41480,"line_start":1257,"line_end":1257,"column_start":5,"column_end":19}},{"value":"/ * `ptr`'s `A::Item` type needs to be the same size and alignment that","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":41485,"byte_end":41558,"line_start":1258,"line_end":1258,"column_start":5,"column_end":78}},{"value":"/   it was allocated with","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":41563,"byte_end":41590,"line_start":1259,"line_end":1259,"column_start":5,"column_end":32}},{"value":"/ * `length` needs to be less than or equal to `capacity`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":41595,"byte_end":41655,"line_start":1260,"line_end":1260,"column_start":5,"column_end":65}},{"value":"/ * `capacity` needs to be the capacity that the pointer was allocated","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":41660,"byte_end":41732,"line_start":1261,"line_end":1261,"column_start":5,"column_end":77}},{"value":"/   with.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":41737,"byte_end":41748,"line_start":1262,"line_end":1262,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":41753,"byte_end":41756,"line_start":1263,"line_end":1263,"column_start":5,"column_end":8}},{"value":"/ Violating these may cause problems like corrupting the allocator's","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":41761,"byte_end":41831,"line_start":1264,"line_end":1264,"column_start":5,"column_end":75}},{"value":"/ internal data structures.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":41836,"byte_end":41865,"line_start":1265,"line_end":1265,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":41870,"byte_end":41873,"line_start":1266,"line_end":1266,"column_start":5,"column_end":8}},{"value":"/ Additionally, `capacity` must be greater than the amount of inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":41878,"byte_end":41948,"line_start":1267,"line_end":1267,"column_start":5,"column_end":75}},{"value":"/ storage `A` has; that is, the new `SmallVec` must need to spill over","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":41953,"byte_end":42025,"line_start":1268,"line_end":1268,"column_start":5,"column_end":77}},{"value":"/ into heap allocated storage. This condition is asserted against.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42030,"byte_end":42098,"line_start":1269,"line_end":1269,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42103,"byte_end":42106,"line_start":1270,"line_end":1270,"column_start":5,"column_end":8}},{"value":"/ The ownership of `ptr` is effectively transferred to the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42111,"byte_end":42171,"line_start":1271,"line_end":1271,"column_start":5,"column_end":65}},{"value":"/ `SmallVec` which may then deallocate, reallocate or change the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42176,"byte_end":42242,"line_start":1272,"line_end":1272,"column_start":5,"column_end":71}},{"value":"/ contents of memory pointed to by the pointer at will. Ensure","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42247,"byte_end":42311,"line_start":1273,"line_end":1273,"column_start":5,"column_end":69}},{"value":"/ that nothing else uses the pointer after calling this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42316,"byte_end":42373,"line_start":1274,"line_end":1274,"column_start":5,"column_end":62}},{"value":"/ function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42378,"byte_end":42391,"line_start":1275,"line_end":1275,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42396,"byte_end":42399,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42404,"byte_end":42418,"line_start":1277,"line_end":1277,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42423,"byte_end":42426,"line_start":1278,"line_end":1278,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42431,"byte_end":42438,"line_start":1279,"line_end":1279,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate smallvec;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42443,"byte_end":42484,"line_start":1280,"line_end":1280,"column_start":5,"column_end":46}},{"value":"/ # use smallvec::SmallVec;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42489,"byte_end":42518,"line_start":1281,"line_end":1281,"column_start":5,"column_end":34}},{"value":"/ use std::mem;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42523,"byte_end":42540,"line_start":1282,"line_end":1282,"column_start":5,"column_end":22}},{"value":"/ use std::ptr;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42545,"byte_end":42562,"line_start":1283,"line_end":1283,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42567,"byte_end":42570,"line_start":1284,"line_end":1284,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42575,"byte_end":42590,"line_start":1285,"line_end":1285,"column_start":5,"column_end":20}},{"value":"/     let mut v: SmallVec<[_; 1]> = smallvec![1, 2, 3];","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42595,"byte_end":42652,"line_start":1286,"line_end":1286,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42657,"byte_end":42660,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/     // Pull out the important parts of `v`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42665,"byte_end":42712,"line_start":1288,"line_end":1288,"column_start":5,"column_end":52}},{"value":"/     let p = v.as_mut_ptr();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42717,"byte_end":42748,"line_start":1289,"line_end":1289,"column_start":5,"column_end":36}},{"value":"/     let len = v.len();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42753,"byte_end":42779,"line_start":1290,"line_end":1290,"column_start":5,"column_end":31}},{"value":"/     let cap = v.capacity();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42784,"byte_end":42815,"line_start":1291,"line_end":1291,"column_start":5,"column_end":36}},{"value":"/     let spilled = v.spilled();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42820,"byte_end":42854,"line_start":1292,"line_end":1292,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42859,"byte_end":42862,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/     unsafe {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42867,"byte_end":42883,"line_start":1294,"line_end":1294,"column_start":5,"column_end":21}},{"value":"/         // Forget all about `v`. The heap allocation that stored the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42888,"byte_end":42960,"line_start":1295,"line_end":1295,"column_start":5,"column_end":77}},{"value":"/         // three values won't be deallocated.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":42965,"byte_end":43014,"line_start":1296,"line_end":1296,"column_start":5,"column_end":54}},{"value":"/         mem::forget(v);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":43019,"byte_end":43046,"line_start":1297,"line_end":1297,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":43051,"byte_end":43054,"line_start":1298,"line_end":1298,"column_start":5,"column_end":8}},{"value":"/         // Overwrite memory with [4, 5, 6].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":43059,"byte_end":43106,"line_start":1299,"line_end":1299,"column_start":5,"column_end":52}},{"value":"/         //","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":43111,"byte_end":43125,"line_start":1300,"line_end":1300,"column_start":5,"column_end":19}},{"value":"/         // This is only safe if `spilled` is true! Otherwise, we are","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":43130,"byte_end":43202,"line_start":1301,"line_end":1301,"column_start":5,"column_end":77}},{"value":"/         // writing into the old `SmallVec`'s inline storage on the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":43207,"byte_end":43277,"line_start":1302,"line_end":1302,"column_start":5,"column_end":75}},{"value":"/         // stack.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":43282,"byte_end":43303,"line_start":1303,"line_end":1303,"column_start":5,"column_end":26}},{"value":"/         assert!(spilled);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":43308,"byte_end":43337,"line_start":1304,"line_end":1304,"column_start":5,"column_end":34}},{"value":"/         for i in 0..len {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":43342,"byte_end":43371,"line_start":1305,"line_end":1305,"column_start":5,"column_end":34}},{"value":"/             ptr::write(p.add(i), 4 + i);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":43376,"byte_end":43420,"line_start":1306,"line_end":1306,"column_start":5,"column_end":49}},{"value":"/         }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":43425,"byte_end":43438,"line_start":1307,"line_end":1307,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":43443,"byte_end":43446,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/         // Put everything back together into a SmallVec with a different","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":43451,"byte_end":43527,"line_start":1309,"line_end":1309,"column_start":5,"column_end":81}},{"value":"/         // amount of inline storage, but which is still less than `cap`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":43532,"byte_end":43608,"line_start":1310,"line_end":1310,"column_start":5,"column_end":81}},{"value":"/         let rebuilt = SmallVec::<[_; 2]>::from_raw_parts(p, len, cap);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":43613,"byte_end":43687,"line_start":1311,"line_end":1311,"column_start":5,"column_end":79}},{"value":"/         assert_eq!(&*rebuilt, &[4, 5, 6]);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":43692,"byte_end":43738,"line_start":1312,"line_end":1312,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":43743,"byte_end":43752,"line_start":1313,"line_end":1313,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":43757,"byte_end":43762,"line_start":1314,"line_end":1314,"column_start":5,"column_end":10}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":43767,"byte_end":43776,"line_start":1315,"line_end":1315,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":44110,"byte_end":44116,"line_start":1325,"line_end":1325,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<SmallVec<A>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const A::Item","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the vector's buffer.\n","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the vector's buffer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":44049,"byte_end":44098,"line_start":1324,"line_end":1324,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":44472,"byte_end":44482,"line_start":1333,"line_end":1333,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<SmallVec<A>>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut A::Item","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw mutable pointer to the vector's buffer.\n","sig":null,"attributes":[{"value":"/ Returns a raw mutable pointer to the vector's buffer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":44403,"byte_end":44460,"line_start":1332,"line_end":1332,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":45001,"byte_end":45011,"line_start":1348,"line_end":1348,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<SmallVec<A>>::from_slice","value":"pub fn from_slice(&[A::Item]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Copy the elements from a slice into a new `SmallVec`.","sig":null,"attributes":[{"value":"/ Copy the elements from a slice into a new `SmallVec`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":44835,"byte_end":44892,"line_start":1345,"line_end":1345,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":44897,"byte_end":44900,"line_start":1346,"line_end":1346,"column_start":5,"column_end":8}},{"value":"/ For slices of `Copy` types, this is more efficient than `SmallVec::from(slice)`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":44905,"byte_end":44989,"line_start":1347,"line_end":1347,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":46067,"byte_end":46084,"line_start":1378,"line_end":1378,"column_start":12,"column_end":29},"name":"insert_from_slice","qualname":"<SmallVec<A>>::insert_from_slice","value":"pub fn insert_from_slice(&mut Self, usize, &[A::Item])","parent":null,"children":[],"decl_id":null,"docs":" Copy elements from a slice into the vector at position `index`, shifting any following\n elements toward the back.","sig":null,"attributes":[{"value":"/ Copy elements from a slice into the vector at position `index`, shifting any following","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":45849,"byte_end":45939,"line_start":1374,"line_end":1374,"column_start":5,"column_end":95}},{"value":"/ elements toward the back.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":45944,"byte_end":45973,"line_start":1375,"line_end":1375,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":45978,"byte_end":45981,"line_start":1376,"line_end":1376,"column_start":5,"column_end":8}},{"value":"/ For slices of `Copy` types, this is more efficient than `insert`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":45986,"byte_end":46055,"line_start":1377,"line_end":1377,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":46707,"byte_end":46724,"line_start":1397,"line_end":1397,"column_start":12,"column_end":29},"name":"extend_from_slice","qualname":"<SmallVec<A>>::extend_from_slice","value":"pub fn extend_from_slice(&mut Self, &[A::Item])","parent":null,"children":[],"decl_id":null,"docs":" Copy elements from a slice and append them to the vector.","sig":null,"attributes":[{"value":"/ Copy elements from a slice and append them to the vector.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":46538,"byte_end":46599,"line_start":1393,"line_end":1393,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":46604,"byte_end":46607,"line_start":1394,"line_end":1394,"column_start":5,"column_end":8}},{"value":"/ For slices of `Copy` types, this is more efficient than `extend`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":46612,"byte_end":46681,"line_start":1395,"line_end":1395,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":46686,"byte_end":46695,"line_start":1396,"line_end":1396,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":47192,"byte_end":47198,"line_start":1413,"line_end":1413,"column_start":12,"column_end":18},"name":"resize","qualname":"<SmallVec<A>>::resize","value":"pub fn resize(&mut Self, usize, A::Item)","parent":null,"children":[],"decl_id":null,"docs":" Resizes the vector so that its length is equal to `len`.","sig":null,"attributes":[{"value":"/ Resizes the vector so that its length is equal to `len`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":46899,"byte_end":46959,"line_start":1407,"line_end":1407,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":46964,"byte_end":46967,"line_start":1408,"line_end":1408,"column_start":5,"column_end":8}},{"value":"/ If `len` is less than the current length, the vector simply truncated.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":46972,"byte_end":47046,"line_start":1409,"line_end":1409,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":47051,"byte_end":47054,"line_start":1410,"line_end":1410,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the current length, `value` is appended to the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":47059,"byte_end":47134,"line_start":1411,"line_end":1411,"column_start":5,"column_end":80}},{"value":"/ vector until its length equals `len`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":47139,"byte_end":47180,"line_start":1412,"line_end":1412,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":47674,"byte_end":47683,"line_start":1430,"line_end":1430,"column_start":12,"column_end":21},"name":"from_elem","qualname":"<SmallVec<A>>::from_elem","value":"pub fn from_elem(A::Item, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `SmallVec` with `n` copies of `elem`.\n ```\n use smallvec::SmallVec;","sig":null,"attributes":[{"value":"/ Creates a `SmallVec` with `n` copies of `elem`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":47432,"byte_end":47483,"line_start":1423,"line_end":1423,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":47488,"byte_end":47495,"line_start":1424,"line_end":1424,"column_start":5,"column_end":12}},{"value":"/ use smallvec::SmallVec;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":47500,"byte_end":47527,"line_start":1425,"line_end":1425,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":47532,"byte_end":47535,"line_start":1426,"line_end":1426,"column_start":5,"column_end":8}},{"value":"/ let v = SmallVec::<[char; 128]>::from_elem('d', 2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":47540,"byte_end":47595,"line_start":1427,"line_end":1427,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(v, SmallVec::from_buf(['d', 'd']));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":47600,"byte_end":47650,"line_start":1428,"line_end":1428,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":47655,"byte_end":47662,"line_start":1429,"line_end":1429,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":277},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":56059,"byte_end":56067,"line_start":1787,"line_end":1787,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281}],"decl_id":null,"docs":" An iterator that consumes a `SmallVec` and yields its items by value.","sig":null,"attributes":[{"value":"/ An iterator that consumes a `SmallVec` and yields its items by value.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":55873,"byte_end":55946,"line_start":1782,"line_end":1782,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":55947,"byte_end":55950,"line_start":1783,"line_end":1783,"column_start":1,"column_end":4}},{"value":"/ Returned from [`SmallVec::into_iter`][1].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":55951,"byte_end":55996,"line_start":1784,"line_end":1784,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":55997,"byte_end":56000,"line_start":1785,"line_end":1785,"column_start":1,"column_end":4}},{"value":"/ [1]: struct.SmallVec.html#method.into_iter","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":56001,"byte_end":56047,"line_start":1786,"line_end":1786,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":57709,"byte_end":57717,"line_start":1859,"line_end":1859,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<IntoIter<A>>::as_slice","value":"pub fn as_slice(&Self) -> &[A::Item]","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining items of this iterator as a slice.\n","sig":null,"attributes":[{"value":"/ Returns the remaining items of this iterator as a slice.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":57637,"byte_end":57697,"line_start":1858,"line_end":1858,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":57965,"byte_end":57977,"line_start":1865,"line_end":1865,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<IntoIter<A>>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [A::Item]","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining items of this iterator as a mutable slice.\n","sig":null,"attributes":[{"value":"/ Returns the remaining items of this iterator as a mutable slice.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":57885,"byte_end":57953,"line_start":1864,"line_end":1864,"column_start":5,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":324},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":59117,"byte_end":59122,"line_start":1905,"line_end":1905,"column_start":18,"column_end":23},"name":"Array","qualname":"::Array","value":"Array","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326}],"decl_id":null,"docs":" Types that can be used as the backing store for a SmallVec\n","sig":null,"attributes":[{"value":"/ Types that can be used as the backing store for a SmallVec","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":59037,"byte_end":59099,"line_start":1904,"line_end":1904,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":325},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":59176,"byte_end":59180,"line_start":1907,"line_end":1907,"column_start":10,"column_end":14},"name":"Item","qualname":"::Array::Item","value":"type Item;","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":" The type of the array's elements.\n","sig":null,"attributes":[{"value":"/ The type of the array's elements.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":59129,"byte_end":59166,"line_start":1906,"line_end":1906,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":59245,"byte_end":59249,"line_start":1909,"line_end":1909,"column_start":8,"column_end":12},"name":"size","qualname":"::Array::size","value":"pub fn size() -> usize","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":" Returns the number of items the array can hold.\n","sig":null,"attributes":[{"value":"/ Returns the number of items the array can hold.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":59186,"byte_end":59237,"line_start":1908,"line_end":1908,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":340},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":60776,"byte_end":60786,"line_start":1975,"line_end":1975,"column_start":11,"column_end":21},"name":"ToSmallVec","qualname":"::ToSmallVec","value":"ToSmallVec<A: Array>","parent":null,"children":[{"krate":0,"index":342}],"decl_id":null,"docs":" Convenience trait for constructing a `SmallVec`\n","sig":null,"attributes":[{"value":"/ Convenience trait for constructing a `SmallVec`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":60714,"byte_end":60765,"line_start":1974,"line_end":1974,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":60855,"byte_end":60866,"line_start":1977,"line_end":1977,"column_start":8,"column_end":19},"name":"to_smallvec","qualname":"::ToSmallVec::to_smallvec","value":"pub fn to_smallvec(&Self) -> SmallVec<A>","parent":{"krate":0,"index":340},"children":[],"decl_id":null,"docs":" Construct a new `SmallVec` from a slice.\n","sig":null,"attributes":[{"value":"/ Construct a new `SmallVec` from a slice.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":60803,"byte_end":60847,"line_start":1976,"line_end":1976,"column_start":5,"column_end":49}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":7447,"byte_end":7450,"line_start":224,"line_end":224,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":7917,"byte_end":7935,"line_start":242,"line_end":242,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":8106,"byte_end":8124,"line_start":249,"line_end":249,"column_start":26,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":9557,"byte_end":9562,"line_start":291,"line_end":291,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":9786,"byte_end":9791,"line_start":300,"line_end":300,"column_start":43,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":9844,"byte_end":9849,"line_start":301,"line_end":301,"column_start":43,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":9898,"byte_end":9903,"line_start":303,"line_end":303,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":10257,"byte_end":10262,"line_start":319,"line_end":319,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":10490,"byte_end":10495,"line_start":328,"line_end":328,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":10618,"byte_end":10623,"line_start":335,"line_end":335,"column_start":38,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":10668,"byte_end":10673,"line_start":337,"line_end":337,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":12582,"byte_end":12594,"line_start":406,"line_end":406,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":13888,"byte_end":13900,"line_start":452,"line_end":452,"column_start":39,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":13945,"byte_end":13957,"line_start":453,"line_end":453,"column_start":39,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":15530,"byte_end":15538,"line_start":489,"line_end":489,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":35685,"byte_end":35696,"line_start":1085,"line_end":1085,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":44792,"byte_end":44800,"line_start":1341,"line_end":1341,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":46855,"byte_end":46863,"line_start":1403,"line_end":1403,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":48239,"byte_end":48247,"line_start":1449,"line_end":1449,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":48492,"byte_end":48500,"line_start":1460,"line_end":1460,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":48744,"byte_end":48752,"line_start":1470,"line_end":1470,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":48867,"byte_end":48875,"line_start":1477,"line_end":1477,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":48999,"byte_end":49007,"line_start":1484,"line_end":1484,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":49126,"byte_end":49134,"line_start":1491,"line_end":1491,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":51567,"byte_end":51575,"line_start":1596,"line_end":1596,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":51949,"byte_end":51957,"line_start":1613,"line_end":1613,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":52093,"byte_end":52101,"line_start":1620,"line_end":1620,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":52262,"byte_end":52270,"line_start":1627,"line_end":1627,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":52448,"byte_end":52456,"line_start":1635,"line_end":1635,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":52628,"byte_end":52636,"line_start":1642,"line_end":1642,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":52823,"byte_end":52831,"line_start":1651,"line_end":1651,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":53050,"byte_end":53058,"line_start":1660,"line_end":1660,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":53790,"byte_end":53798,"line_start":1685,"line_end":1685,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":53987,"byte_end":53995,"line_start":1694,"line_end":1694,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":54524,"byte_end":54532,"line_start":1716,"line_end":1716,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":54855,"byte_end":54863,"line_start":1729,"line_end":1729,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":55047,"byte_end":55055,"line_start":1739,"line_end":1739,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":55223,"byte_end":55231,"line_start":1749,"line_end":1749,"column_start":23,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":55287,"byte_end":55295,"line_start":1751,"line_end":1751,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":55503,"byte_end":55511,"line_start":1761,"line_end":1761,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":55682,"byte_end":55690,"line_start":1771,"line_end":1771,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":55837,"byte_end":55845,"line_start":1780,"line_end":1780,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":56172,"byte_end":56180,"line_start":1793,"line_end":1793,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":56389,"byte_end":56397,"line_start":1802,"line_end":1802,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":56551,"byte_end":56559,"line_start":1811,"line_end":1811,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":56652,"byte_end":56660,"line_start":1817,"line_end":1817,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":57203,"byte_end":57211,"line_start":1840,"line_end":1840,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":57540,"byte_end":57548,"line_start":1854,"line_end":1854,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":57588,"byte_end":57596,"line_start":1855,"line_end":1855,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":57619,"byte_end":57627,"line_start":1857,"line_end":1857,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":58191,"byte_end":58199,"line_start":1871,"line_end":1871,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":59493,"byte_end":59505,"line_start":1920,"line_end":1920,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":59856,"byte_end":59868,"line_start":1940,"line_end":1940,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":7447,"byte_end":7450,"line_start":224,"line_end":224,"column_start":39,"column_end":42},"kind":{"Impl":{"id":0}},"from":{"krate":4,"index":4617},"to":{"krate":0,"index":40}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":7917,"byte_end":7935,"line_start":242,"line_end":242,"column_start":23,"column_end":41},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":346},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":8106,"byte_end":8124,"line_start":249,"line_end":249,"column_start":26,"column_end":44},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":346},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":9557,"byte_end":9562,"line_start":291,"line_end":291,"column_start":40,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":57},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":9786,"byte_end":9791,"line_start":300,"line_end":300,"column_start":43,"column_end":48},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":57},"to":{"krate":1,"index":2056}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":9844,"byte_end":9849,"line_start":301,"line_end":301,"column_start":43,"column_end":48},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":57},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":9898,"byte_end":9903,"line_start":303,"line_end":303,"column_start":38,"column_end":43},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":57},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":10257,"byte_end":10262,"line_start":319,"line_end":319,"column_start":49,"column_end":54},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":57},"to":{"krate":1,"index":5232}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":10490,"byte_end":10495,"line_start":328,"line_end":328,"column_start":42,"column_end":47},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":57},"to":{"krate":1,"index":5257}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":10618,"byte_end":10623,"line_start":335,"line_end":335,"column_start":38,"column_end":43},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":57},"to":{"krate":1,"index":5566}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":10668,"byte_end":10673,"line_start":337,"line_end":337,"column_start":34,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":57},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":12582,"byte_end":12594,"line_start":406,"line_end":406,"column_start":16,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":97},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":13888,"byte_end":13900,"line_start":452,"line_end":452,"column_start":39,"column_end":51},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":97},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":13945,"byte_end":13957,"line_start":453,"line_end":453,"column_start":39,"column_end":51},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":97},"to":{"krate":1,"index":2056}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":15530,"byte_end":15538,"line_start":489,"line_end":489,"column_start":16,"column_end":24},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":35685,"byte_end":35696,"line_start":1085,"line_end":1085,"column_start":26,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":163},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":44792,"byte_end":44800,"line_start":1341,"line_end":1341,"column_start":16,"column_end":24},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":46855,"byte_end":46863,"line_start":1403,"line_end":1403,"column_start":16,"column_end":24},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":48239,"byte_end":48247,"line_start":1449,"line_end":1449,"column_start":31,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":2241}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":48492,"byte_end":48500,"line_start":1460,"line_end":1460,"column_start":34,"column_end":42},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":2254}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":48744,"byte_end":48752,"line_start":1470,"line_end":1470,"column_start":37,"column_end":45},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":1953}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":48867,"byte_end":48875,"line_start":1477,"line_end":1477,"column_start":37,"column_end":45},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":1956}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":48999,"byte_end":49007,"line_start":1484,"line_end":1484,"column_start":38,"column_end":46},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":1719}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":49126,"byte_end":49134,"line_start":1491,"line_end":1491,"column_start":41,"column_end":49},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":1722}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":51567,"byte_end":51575,"line_start":1596,"line_end":1596,"column_start":44,"column_end":52},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":51949,"byte_end":51957,"line_start":1613,"line_end":1613,"column_start":39,"column_end":47},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":52093,"byte_end":52101,"line_start":1620,"line_end":1620,"column_start":28,"column_end":36},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":52262,"byte_end":52270,"line_start":1627,"line_end":1627,"column_start":60,"column_end":68},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":2322}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":52448,"byte_end":52456,"line_start":1635,"line_end":1635,"column_start":63,"column_end":71},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":52628,"byte_end":52636,"line_start":1642,"line_end":1642,"column_start":45,"column_end":53},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":118},"to":{"krate":0,"index":40}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":52823,"byte_end":52831,"line_start":1651,"line_end":1651,"column_start":42,"column_end":50},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":5205}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":53050,"byte_end":53058,"line_start":1660,"line_end":1660,"column_start":36,"column_end":44},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":5218}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":53790,"byte_end":53798,"line_start":1685,"line_end":1685,"column_start":31,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":53987,"byte_end":53995,"line_start":1694,"line_end":1694,"column_start":28,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":2032}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":54524,"byte_end":54532,"line_start":1716,"line_end":1716,"column_start":25,"column_end":33},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":54855,"byte_end":54863,"line_start":1729,"line_end":1729,"column_start":26,"column_end":34},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":1741}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":55047,"byte_end":55055,"line_start":1739,"line_end":1739,"column_start":53,"column_end":61},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":1769}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":55223,"byte_end":55231,"line_start":1749,"line_end":1749,"column_start":23,"column_end":31},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":1774}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":55287,"byte_end":55295,"line_start":1751,"line_end":1751,"column_start":31,"column_end":39},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":1806}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":55503,"byte_end":55511,"line_start":1761,"line_end":1761,"column_start":24,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":1795}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":55682,"byte_end":55690,"line_start":1771,"line_end":1771,"column_start":25,"column_end":33},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":6778}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":55837,"byte_end":55845,"line_start":1780,"line_end":1780,"column_start":32,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":56172,"byte_end":56180,"line_start":1793,"line_end":1793,"column_start":31,"column_end":39},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":277},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":56389,"byte_end":56397,"line_start":1802,"line_end":1802,"column_start":34,"column_end":42},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":277},"to":{"krate":1,"index":1741}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":56551,"byte_end":56559,"line_start":1811,"line_end":1811,"column_start":25,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":277},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":56652,"byte_end":56660,"line_start":1817,"line_end":1817,"column_start":29,"column_end":37},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":277},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":57203,"byte_end":57211,"line_start":1840,"line_end":1840,"column_start":40,"column_end":48},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":277},"to":{"krate":1,"index":5232}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":57540,"byte_end":57548,"line_start":1854,"line_end":1854,"column_start":38,"column_end":46},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":277},"to":{"krate":1,"index":5257}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":57588,"byte_end":57596,"line_start":1855,"line_end":1855,"column_start":34,"column_end":42},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":277},"to":{"krate":1,"index":5566}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":57619,"byte_end":57627,"line_start":1857,"line_end":1857,"column_start":16,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":58191,"byte_end":58199,"line_start":1871,"line_end":1871,"column_start":33,"column_end":41},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":5209}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":59493,"byte_end":59505,"line_start":1920,"line_end":1920,"column_start":10,"column_end":22},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/rust-smallvec-sgx-42567c7f6f8fe238/b5925f1/src/lib.rs","byte_start":59856,"byte_end":59868,"line_start":1940,"line_end":1940,"column_start":19,"column_end":31},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":327},"to":{"krate":1,"index":2265}}]}