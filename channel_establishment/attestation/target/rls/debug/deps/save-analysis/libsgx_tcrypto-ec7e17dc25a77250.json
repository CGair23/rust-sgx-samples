{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto","program":"/home/chenge/.rustup/toolchains/nightly-2020-10-25-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","sgx_tcrypto","--edition=2018","/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","rlib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=ec7e17dc25a77250","-C","extra-filename=-ec7e17dc25a77250","--out-dir","/home/chenge/workplace/rust-sgx-samples/channel_establishment/attestation/target/rls/debug/deps","-L","dependency=/home/chenge/workplace/rust-sgx-samples/channel_establishment/attestation/target/rls/debug/deps","--extern","sgx_types=/home/chenge/workplace/rust-sgx-samples/channel_establishment/attestation/target/rls/debug/deps/libsgx_types-61d5a9603996ee61.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/chenge/.rustup/toolchains/nightly-2020-10-25-x86_64-unknown-linux-gnu"],"output":"/home/chenge/workplace/rust-sgx-samples/channel_establishment/attestation/target/rls/debug/deps/libsgx_tcrypto-ec7e17dc25a77250.rmeta"},"prelude":{"crate_id":{"name":"sgx_tcrypto","disambiguator":[7735688842590018092,6560294069256464630]},"crate_root":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src","external_crates":[{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/lib.rs","num":4,"id":{"name":"sgx_types","disambiguator":[15093814546649415990,6106876177477605172]}}],"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/lib.rs","byte_start":803,"byte_end":1267,"line_start":18,"line_end":33,"column_start":1,"column_end":25}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/lib.rs","byte_start":1265,"byte_end":1266,"line_start":33,"line_end":33,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/lib.rs","byte_start":803,"byte_end":1267,"line_start":18,"line_end":33,"column_start":1,"column_end":25},"name":"","qualname":"::","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":248}],"decl_id":null,"docs":" # Cryptography Library","sig":null,"attributes":[{"value":"/ # Cryptography Library","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/lib.rs","byte_start":803,"byte_end":829,"line_start":18,"line_end":18,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/lib.rs","byte_start":830,"byte_end":833,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The Intel(R) Software Guard Extensions SDK includes a trusted cryptography library named sgx_tcrypto.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/lib.rs","byte_start":834,"byte_end":939,"line_start":20,"line_end":20,"column_start":1,"column_end":106}},{"value":"/ It includes the cryptographic functions used by other trusted libraries included in the SDK","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/lib.rs","byte_start":940,"byte_end":1035,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/lib.rs","byte_start":1036,"byte_end":1039,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"no_std","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/lib.rs","byte_start":1041,"byte_end":1051,"line_start":24,"line_end":24,"column_start":1,"column_end":11}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/lib.rs","byte_start":1109,"byte_end":1140,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/lib.rs","byte_start":1141,"byte_end":1166,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"allow(clippy :: too_many_arguments)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/lib.rs","byte_start":1167,"byte_end":1204,"line_start":28,"line_end":28,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":16},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":3366,"byte_end":3381,"line_start":69,"line_end":69,"column_start":8,"column_end":23},"name":"rsgx_sha256_msg","qualname":"::crypto::rsgx_sha256_msg","value":"pub fn rsgx_sha256_msg<T>(&T) -> SgxResult<sgx_sha256_hash_t> where T: Copy +\nContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"\n The rsgx_sha256_msg function performs a standard SHA256 hash over the input data buffer.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":2264,"byte_end":2267,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The rsgx_sha256_msg function performs a standard SHA256 hash over the input data buffer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":2268,"byte_end":2360,"line_start":29,"line_end":29,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":2361,"byte_end":2364,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":2365,"byte_end":2382,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":2383,"byte_end":2386,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The rsgx_sha256_msg function performs a standard SHA256 hash over the input data buffer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":2387,"byte_end":2479,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ Only a 256-bit version of the SHA hash is supported. (Other sizes, for example 512, are","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":2480,"byte_end":2571,"line_start":34,"line_end":34,"column_start":1,"column_end":92}},{"value":"/ not supported in this minimal cryptography library).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":2572,"byte_end":2628,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":2629,"byte_end":2632,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ The function should be used if the complete input data stream is available.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":2633,"byte_end":2712,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ Otherwise, the Init, Updateâ€¦ Update, Final procedure should be used to compute","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":2713,"byte_end":2797,"line_start":38,"line_end":38,"column_start":1,"column_end":83}},{"value":"/ a SHA256 bit hash over multiple input data sets.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":2798,"byte_end":2850,"line_start":39,"line_end":39,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":2851,"byte_end":2854,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Parameters","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":2855,"byte_end":2871,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":2872,"byte_end":2875,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ **src**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":2876,"byte_end":2887,"line_start":43,"line_end":43,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":2888,"byte_end":2891,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ A pointer to the input data stream to be hashed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":2892,"byte_end":2944,"line_start":45,"line_end":45,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":2945,"byte_end":2948,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":2949,"byte_end":2967,"line_start":47,"line_end":47,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":2968,"byte_end":2971,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Library: libsgx_tcrypto.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":2972,"byte_end":3001,"line_start":49,"line_end":49,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":3002,"byte_end":3005,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Return value","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":3006,"byte_end":3024,"line_start":51,"line_end":51,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":3025,"byte_end":3028,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The 256-bit hash that has been SHA256 calculated","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":3029,"byte_end":3081,"line_start":53,"line_end":53,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":3082,"byte_end":3085,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":3086,"byte_end":3098,"line_start":55,"line_end":55,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":3099,"byte_end":3102,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_INVALID_PARAMETER**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":3103,"byte_end":3138,"line_start":57,"line_end":57,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":3139,"byte_end":3142,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Input pointers are invalid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":3143,"byte_end":3174,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":3175,"byte_end":3178,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_OUT_OF_MEMORY**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":3179,"byte_end":3210,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":3211,"byte_end":3214,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Not enough memory is available to complete this operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":3215,"byte_end":3277,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":3278,"byte_end":3281,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_UNEXPECTED**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":3282,"byte_end":3310,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":3311,"byte_end":3314,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The SHA256 hash calculation failed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":3315,"byte_end":3354,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":3355,"byte_end":3358,"line_start":68,"line_end":68,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":18},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":4128,"byte_end":4145,"line_start":98,"line_end":98,"column_start":8,"column_end":25},"name":"rsgx_sha256_slice","qualname":"::crypto::rsgx_sha256_slice","value":"pub fn rsgx_sha256_slice<T>(&[T]) -> SgxResult<sgx_sha256_hash_t> where\nT: Copy + ContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"\n The rsgx_sha256_slice function performs a standard SHA256 hash over the input data buffer.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":4018,"byte_end":4021,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ The rsgx_sha256_slice function performs a standard SHA256 hash over the input data buffer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":4022,"byte_end":4116,"line_start":96,"line_end":96,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":4117,"byte_end":4120,"line_start":97,"line_end":97,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":27},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":6149,"byte_end":6162,"line_start":168,"line_end":168,"column_start":8,"column_end":21},"name":"rsgx_sha1_msg","qualname":"::crypto::rsgx_sha1_msg","value":"pub fn rsgx_sha1_msg<T>(&T) -> SgxResult<sgx_sha1_hash_t> where T: Copy +\nContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":29},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":6798,"byte_end":6813,"line_start":194,"line_end":194,"column_start":8,"column_end":23},"name":"rsgx_sha1_slice","qualname":"::crypto::rsgx_sha1_slice","value":"pub fn rsgx_sha1_slice<T>(&[T]) -> SgxResult<sgx_sha1_hash_t> where T: Copy +\nContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":38},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":9047,"byte_end":9059,"line_start":270,"line_end":270,"column_start":12,"column_end":24},"name":"SgxShaHandle","qualname":"::crypto::SgxShaHandle","value":"SgxShaHandle {  }","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"decl_id":null,"docs":"\n SHA algorithm context state.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":8778,"byte_end":8781,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ SHA algorithm context state.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":8782,"byte_end":8814,"line_start":265,"line_end":265,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":8815,"byte_end":8818,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ This is a handle to the context state used by the cryptography library to perform an iterative SHA256 hash.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":8819,"byte_end":8930,"line_start":267,"line_end":267,"column_start":1,"column_end":112}},{"value":"/ The algorithm stores the intermediate results of performing the hash calculation over data sets.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":8931,"byte_end":9031,"line_start":268,"line_end":268,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":9032,"byte_end":9035,"line_start":269,"line_end":269,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":9229,"byte_end":9232,"line_start":279,"line_end":279,"column_start":12,"column_end":15},"name":"new","qualname":"<SgxShaHandle>::new","value":"pub fn new() -> SgxShaHandle","parent":null,"children":[],"decl_id":null,"docs":"\n Constructs a new, empty SgxShaHandle.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":9160,"byte_end":9163,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Constructs a new, empty SgxShaHandle.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":9168,"byte_end":9209,"line_start":277,"line_end":277,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":9214,"byte_end":9217,"line_start":278,"line_end":278,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":10806,"byte_end":10810,"line_start":319,"line_end":319,"column_start":12,"column_end":16},"name":"init","qualname":"<SgxShaHandle>::init","value":"pub fn init(&Self) -> SgxError","parent":null,"children":[],"decl_id":null,"docs":"\n init returns an allocated and initialized SHA algorithm context state.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":9414,"byte_end":9417,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ init returns an allocated and initialized SHA algorithm context state.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":9422,"byte_end":9496,"line_start":287,"line_end":287,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":9501,"byte_end":9504,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ This should be part of the Init, Update â€¦ Update, Final process when the SHA hash is to be performed","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":9509,"byte_end":9615,"line_start":289,"line_end":289,"column_start":5,"column_end":109}},{"value":"/ over multiple datasets. If a complete dataset is available, the recommend call is rsgx_sha256_msg to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":9620,"byte_end":9724,"line_start":290,"line_end":290,"column_start":5,"column_end":109}},{"value":"/ perform the hash in a single call.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":9729,"byte_end":9767,"line_start":291,"line_end":291,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":9772,"byte_end":9775,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":9780,"byte_end":9797,"line_start":293,"line_end":293,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":9802,"byte_end":9805,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Calling init is the first set in performing a SHA256 hash over multiple datasets. The caller does not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":9810,"byte_end":9915,"line_start":295,"line_end":295,"column_start":5,"column_end":110}},{"value":"/ allocate memory for the SHA256 state that this function returns. The state is specific to the implementation","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":9920,"byte_end":10032,"line_start":296,"line_end":296,"column_start":5,"column_end":117}},{"value":"/ of the cryptography library; thus the allocation is performed by the library itself. If the hash over the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":10037,"byte_end":10146,"line_start":297,"line_end":297,"column_start":5,"column_end":114}},{"value":"/ desired datasets is completed or any error occurs during the hash calculation process, sgx_sha256_close should","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":10151,"byte_end":10265,"line_start":298,"line_end":298,"column_start":5,"column_end":119}},{"value":"/ be called to free the state allocated by this algorithm.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":10270,"byte_end":10330,"line_start":299,"line_end":299,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":10335,"byte_end":10338,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":10343,"byte_end":10361,"line_start":301,"line_end":301,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":10366,"byte_end":10369,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Library: libsgx_tcrypto.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":10374,"byte_end":10403,"line_start":303,"line_end":303,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":10408,"byte_end":10411,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":10416,"byte_end":10428,"line_start":305,"line_end":305,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":10433,"byte_end":10436,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_INVALID_PARAMETER**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":10441,"byte_end":10476,"line_start":307,"line_end":307,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":10481,"byte_end":10484,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ The pointer is invalid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":10489,"byte_end":10516,"line_start":309,"line_end":309,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":10521,"byte_end":10524,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_OUT_OF_MEMORY**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":10529,"byte_end":10560,"line_start":311,"line_end":311,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":10565,"byte_end":10568,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Not enough memory is available to complete this operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":10573,"byte_end":10635,"line_start":313,"line_end":313,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":10640,"byte_end":10643,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_UNEXPECTED**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":10648,"byte_end":10676,"line_start":315,"line_end":315,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":10681,"byte_end":10684,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ The SHA256 state is not initialized properly due to an internal cryptography library failure.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":10689,"byte_end":10786,"line_start":317,"line_end":317,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":10791,"byte_end":10794,"line_start":318,"line_end":318,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12627,"byte_end":12637,"line_start":373,"line_end":373,"column_start":12,"column_end":22},"name":"update_msg","qualname":"<SgxShaHandle>::update_msg","value":"pub fn update_msg<T>(&Self, &T) -> SgxError where T: Copy + ContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"\n update_msg performs a SHA256 hash over the input dataset provided.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":11166,"byte_end":11169,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ update_msg performs a SHA256 hash over the input dataset provided.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":11174,"byte_end":11244,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":11249,"byte_end":11252,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ This function supports an iterative calculation of the hash over multiple datasets where the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":11257,"byte_end":11353,"line_start":337,"line_end":337,"column_start":5,"column_end":101}},{"value":"/ sha_handle contains the intermediate results of the hash calculation over previous datasets.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":11358,"byte_end":11454,"line_start":338,"line_end":338,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":11459,"byte_end":11462,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":11467,"byte_end":11484,"line_start":340,"line_end":340,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":11489,"byte_end":11492,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ This function should be used as part of a SHA256 calculation over multiple datasets.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":11497,"byte_end":11585,"line_start":342,"line_end":342,"column_start":5,"column_end":93}},{"value":"/ If a SHA256 hash is needed over a single data set, function rsgx_sha256_msg should be used instead.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":11590,"byte_end":11693,"line_start":343,"line_end":343,"column_start":5,"column_end":108}},{"value":"/ Prior to calling this function on the first dataset, the init function must be called first to allocate","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":11698,"byte_end":11805,"line_start":344,"line_end":344,"column_start":5,"column_end":112}},{"value":"/ and initialize the SHA256 state structure which will hold intermediate hash results over earlier datasets.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":11810,"byte_end":11920,"line_start":345,"line_end":345,"column_start":5,"column_end":115}},{"value":"/ The function get_hash should be used to obtain the hash after the final dataset has been processed","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":11925,"byte_end":12027,"line_start":346,"line_end":346,"column_start":5,"column_end":107}},{"value":"/ by this function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12032,"byte_end":12053,"line_start":347,"line_end":347,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12058,"byte_end":12061,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12066,"byte_end":12082,"line_start":349,"line_end":349,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12087,"byte_end":12090,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ **src**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12095,"byte_end":12106,"line_start":351,"line_end":351,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12111,"byte_end":12114,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ A pointer to the input data stream to be hashed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12119,"byte_end":12171,"line_start":353,"line_end":353,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12176,"byte_end":12179,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12184,"byte_end":12202,"line_start":355,"line_end":355,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12207,"byte_end":12210,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Library: libsgx_tcrypto.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12215,"byte_end":12244,"line_start":357,"line_end":357,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12249,"byte_end":12252,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12257,"byte_end":12269,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12274,"byte_end":12277,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_INVALID_PARAMETER**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12282,"byte_end":12317,"line_start":361,"line_end":361,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12322,"byte_end":12325,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ The pointer is invalid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12330,"byte_end":12357,"line_start":363,"line_end":363,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12362,"byte_end":12365,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_INVALID_STATE**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12370,"byte_end":12401,"line_start":365,"line_end":365,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12406,"byte_end":12409,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ The SHA256 state is not initialized.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12414,"byte_end":12454,"line_start":367,"line_end":367,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12459,"byte_end":12462,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_UNEXPECTED**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12467,"byte_end":12495,"line_start":369,"line_end":369,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12500,"byte_end":12503,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ An internal cryptography library failure occurred while performing the SHA256 hash calculation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12508,"byte_end":12607,"line_start":371,"line_end":371,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":12612,"byte_end":12615,"line_start":372,"line_end":372,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":13116,"byte_end":13128,"line_start":391,"line_end":391,"column_start":12,"column_end":24},"name":"update_slice","qualname":"<SgxShaHandle>::update_slice","value":"pub fn update_slice<T>(&Self, &[T]) -> SgxError where T: Copy +\nContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"\n update_slice performs a SHA256 hash over the input dataset provided.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":13016,"byte_end":13019,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ update_slice performs a SHA256 hash over the input dataset provided.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":13024,"byte_end":13096,"line_start":389,"line_end":389,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":13101,"byte_end":13104,"line_start":390,"line_end":390,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":14332,"byte_end":14340,"line_start":436,"line_end":436,"column_start":12,"column_end":20},"name":"get_hash","qualname":"<SgxShaHandle>::get_hash","value":"pub fn get_hash(&Self) -> SgxResult<sgx_sha256_hash_t>","parent":null,"children":[],"decl_id":null,"docs":"\n get_hash obtains the SHA256 hash after the final dataset has been processed.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":13511,"byte_end":13514,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ get_hash obtains the SHA256 hash after the final dataset has been processed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":13519,"byte_end":13599,"line_start":407,"line_end":407,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":13604,"byte_end":13607,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":13612,"byte_end":13629,"line_start":409,"line_end":409,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":13634,"byte_end":13637,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ This function returns the hash after performing the SHA256 calculation over one or more datasets","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":13642,"byte_end":13742,"line_start":411,"line_end":411,"column_start":5,"column_end":105}},{"value":"/ using the update function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":13747,"byte_end":13777,"line_start":412,"line_end":412,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":13782,"byte_end":13785,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":13790,"byte_end":13808,"line_start":414,"line_end":414,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":13813,"byte_end":13816,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ Library: libsgx_tcrypto.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":13821,"byte_end":13850,"line_start":416,"line_end":416,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":13855,"byte_end":13858,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":13863,"byte_end":13881,"line_start":418,"line_end":418,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":13886,"byte_end":13889,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ The 256-bit hash that has been SHA256 calculated","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":13894,"byte_end":13946,"line_start":420,"line_end":420,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":13951,"byte_end":13954,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":13959,"byte_end":13971,"line_start":422,"line_end":422,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":13976,"byte_end":13979,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_INVALID_PARAMETER**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":13984,"byte_end":14019,"line_start":424,"line_end":424,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":14024,"byte_end":14027,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ The pointer is invalid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":14032,"byte_end":14059,"line_start":426,"line_end":426,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":14064,"byte_end":14067,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_INVALID_STATE**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":14072,"byte_end":14103,"line_start":428,"line_end":428,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":14108,"byte_end":14111,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ The SHA256 state is not initialized.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":14116,"byte_end":14156,"line_start":430,"line_end":430,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":14161,"byte_end":14164,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_UNEXPECTED**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":14169,"byte_end":14197,"line_start":432,"line_end":432,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":14202,"byte_end":14205,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ The SHA256 state passed in is likely problematic causing an internal cryptography library failure.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":14210,"byte_end":14312,"line_start":434,"line_end":434,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":14317,"byte_end":14320,"line_start":435,"line_end":435,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":15279,"byte_end":15284,"line_start":467,"line_end":467,"column_start":12,"column_end":17},"name":"close","qualname":"<SgxShaHandle>::close","value":"pub fn close(&Self) -> SgxError","parent":null,"children":[],"decl_id":null,"docs":"\n close cleans up and deallocates the SHA256 state that was allocated in function init.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":14736,"byte_end":14739,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ close cleans up and deallocates the SHA256 state that was allocated in function init.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":14744,"byte_end":14833,"line_start":450,"line_end":450,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":14838,"byte_end":14841,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":14846,"byte_end":14863,"line_start":452,"line_end":452,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":14868,"byte_end":14871,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Calling close is the last step after performing a SHA256 hash over multiple datasets.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":14876,"byte_end":14965,"line_start":454,"line_end":454,"column_start":5,"column_end":94}},{"value":"/ The caller uses this function to deallocate memory used to store the SHA256 calculation state.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":14970,"byte_end":15068,"line_start":455,"line_end":455,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":15073,"byte_end":15076,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":15081,"byte_end":15099,"line_start":457,"line_end":457,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":15104,"byte_end":15107,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ Library: libsgx_tcrypto.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":15112,"byte_end":15141,"line_start":459,"line_end":459,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":15146,"byte_end":15149,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":15154,"byte_end":15166,"line_start":461,"line_end":461,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":15171,"byte_end":15174,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_INVALID_PARAMETER**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":15179,"byte_end":15214,"line_start":463,"line_end":463,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":15219,"byte_end":15222,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ The input handle is invalid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":15227,"byte_end":15259,"line_start":465,"line_end":465,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":15264,"byte_end":15267,"line_start":466,"line_end":466,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":54},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":16161,"byte_end":16174,"line_start":507,"line_end":507,"column_start":12,"column_end":25},"name":"SgxSha1Handle","qualname":"::crypto::SgxSha1Handle","value":"SgxSha1Handle {  }","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":16283,"byte_end":16286,"line_start":513,"line_end":513,"column_start":12,"column_end":15},"name":"new","qualname":"<SgxSha1Handle>::new","value":"pub fn new() -> SgxSha1Handle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":16477,"byte_end":16481,"line_start":520,"line_end":520,"column_start":12,"column_end":16},"name":"init","qualname":"<SgxSha1Handle>::init","value":"pub fn init(&Self) -> SgxError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":16842,"byte_end":16852,"line_start":535,"line_end":535,"column_start":12,"column_end":22},"name":"update_msg","qualname":"<SgxSha1Handle>::update_msg","value":"pub fn update_msg<T>(&Self, &T) -> SgxError where T: Copy + ContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":17236,"byte_end":17248,"line_start":550,"line_end":550,"column_start":12,"column_end":24},"name":"update_slice","qualname":"<SgxSha1Handle>::update_slice","value":"pub fn update_slice<T>(&Self, &[T]) -> SgxError where T: Copy +\nContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":17636,"byte_end":17644,"line_start":565,"line_end":565,"column_start":12,"column_end":20},"name":"get_hash","qualname":"<SgxSha1Handle>::get_hash","value":"pub fn get_hash(&Self) -> SgxResult<sgx_sha1_hash_t>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":18041,"byte_end":18046,"line_start":578,"line_end":578,"column_start":12,"column_end":17},"name":"close","qualname":"<SgxSha1Handle>::close","value":"pub fn close(&Self) -> SgxError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":70},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":21605,"byte_end":21632,"line_start":691,"line_end":691,"column_start":8,"column_end":35},"name":"rsgx_rijndael128GCM_encrypt","qualname":"::crypto::rsgx_rijndael128GCM_encrypt","value":"pub fn rsgx_rijndael128GCM_encrypt(&sgx_aes_gcm_128bit_key_t, &[u8], &[u8],\n                                   &[u8], &mut [u8],\n                                   &mut sgx_aes_gcm_128bit_tag_t) -> SgxError","parent":null,"children":[],"decl_id":null,"docs":"\n rsgx_rijndael128GCM_encrypt performs a Rijndael AES-GCM encryption operation.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":18912,"byte_end":18915,"line_start":618,"line_end":618,"column_start":1,"column_end":4}},{"value":"/ rsgx_rijndael128GCM_encrypt performs a Rijndael AES-GCM encryption operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":18916,"byte_end":18997,"line_start":619,"line_end":619,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":18998,"byte_end":19001,"line_start":620,"line_end":620,"column_start":1,"column_end":4}},{"value":"/ Only a 128bit key size is supported by this Intel(R) SGX SDK cryptography library.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":19002,"byte_end":19088,"line_start":621,"line_end":621,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":19089,"byte_end":19092,"line_start":622,"line_end":622,"column_start":1,"column_end":4}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":19093,"byte_end":19110,"line_start":623,"line_end":623,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":19111,"byte_end":19114,"line_start":624,"line_end":624,"column_start":1,"column_end":4}},{"value":"/ The Galois/Counter Mode (GCM) is a mode of operation of the AES algorithm.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":19115,"byte_end":19193,"line_start":625,"line_end":625,"column_start":1,"column_end":79}},{"value":"/ GCM [NIST SP 800-38D] uses a variation of the counter mode of operation for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":19194,"byte_end":19273,"line_start":626,"line_end":626,"column_start":1,"column_end":80}},{"value":"/ encryption. GCM assures authenticity of the confidential data (of up to about","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":19274,"byte_end":19355,"line_start":627,"line_end":627,"column_start":1,"column_end":82}},{"value":"/ 64 GB per invocation) using a universal hash function defined over a binary","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":19356,"byte_end":19435,"line_start":628,"line_end":628,"column_start":1,"column_end":80}},{"value":"/ finite field (the Galois field).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":19436,"byte_end":19472,"line_start":629,"line_end":629,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":19473,"byte_end":19476,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ GCM can also provide authentication assurance for additional data (of practically","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":19477,"byte_end":19562,"line_start":631,"line_end":631,"column_start":1,"column_end":86}},{"value":"/ unlimited length per invocation) that is not encrypted. GCM provides","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":19563,"byte_end":19635,"line_start":632,"line_end":632,"column_start":1,"column_end":73}},{"value":"/ stronger authentication assurance than a (non-cryptographic) checksum or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":19636,"byte_end":19712,"line_start":633,"line_end":633,"column_start":1,"column_end":77}},{"value":"/ error detecting code. In particular, GCM can detect both accidental modifications","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":19713,"byte_end":19798,"line_start":634,"line_end":634,"column_start":1,"column_end":86}},{"value":"/ of the data and intentional, unauthorized modifications.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":19799,"byte_end":19859,"line_start":635,"line_end":635,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":19860,"byte_end":19863,"line_start":636,"line_end":636,"column_start":1,"column_end":4}},{"value":"/ It is recommended that the source and destination data buffers are allocated","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":19864,"byte_end":19944,"line_start":637,"line_end":637,"column_start":1,"column_end":81}},{"value":"/ within the enclave. The AAD buffer could be allocated within or outside","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":19945,"byte_end":20020,"line_start":638,"line_end":638,"column_start":1,"column_end":76}},{"value":"/ enclave memory. The use of AAD data buffer could be information identifying","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20021,"byte_end":20100,"line_start":639,"line_end":639,"column_start":1,"column_end":80}},{"value":"/ the encrypted data since it will remain in clear text.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20101,"byte_end":20159,"line_start":640,"line_end":640,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20160,"byte_end":20163,"line_start":641,"line_end":641,"column_start":1,"column_end":4}},{"value":"/ # Parameters","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20164,"byte_end":20180,"line_start":642,"line_end":642,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20181,"byte_end":20184,"line_start":643,"line_end":643,"column_start":1,"column_end":4}},{"value":"/ **key**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20185,"byte_end":20196,"line_start":644,"line_end":644,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20197,"byte_end":20200,"line_start":645,"line_end":645,"column_start":1,"column_end":4}},{"value":"/ A pointer to key to be used in the AES-GCM encryption operation. The size must be 128 bits.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20201,"byte_end":20296,"line_start":646,"line_end":646,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20297,"byte_end":20300,"line_start":647,"line_end":647,"column_start":1,"column_end":4}},{"value":"/ **src**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20301,"byte_end":20312,"line_start":648,"line_end":648,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20313,"byte_end":20316,"line_start":649,"line_end":649,"column_start":1,"column_end":4}},{"value":"/ A pointer to the input data stream to be encrypted. Buffer content could be empty if there is AAD text.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20317,"byte_end":20424,"line_start":650,"line_end":650,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20425,"byte_end":20428,"line_start":651,"line_end":651,"column_start":1,"column_end":4}},{"value":"/ **iv**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20429,"byte_end":20439,"line_start":652,"line_end":652,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20440,"byte_end":20443,"line_start":653,"line_end":653,"column_start":1,"column_end":4}},{"value":"/ A pointer to the initialization vector to be used in the AES-GCM calculation. NIST AES-GCM recommended","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20444,"byte_end":20550,"line_start":654,"line_end":654,"column_start":1,"column_end":107}},{"value":"/ IV size is 96 bits (12 bytes).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20551,"byte_end":20585,"line_start":655,"line_end":655,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20586,"byte_end":20589,"line_start":656,"line_end":656,"column_start":1,"column_end":4}},{"value":"/ **aad**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20590,"byte_end":20601,"line_start":657,"line_end":657,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20602,"byte_end":20605,"line_start":658,"line_end":658,"column_start":1,"column_end":4}},{"value":"/ A pointer to an optional additional authentication data buffer which is used in the GCM MAC calculation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20606,"byte_end":20714,"line_start":659,"line_end":659,"column_start":1,"column_end":109}},{"value":"/ The data in this buffer will not be encrypted. The field is optional and content could be empty.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20715,"byte_end":20815,"line_start":660,"line_end":660,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20816,"byte_end":20819,"line_start":661,"line_end":661,"column_start":1,"column_end":4}},{"value":"/ **dst**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20820,"byte_end":20831,"line_start":662,"line_end":662,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20832,"byte_end":20835,"line_start":663,"line_end":663,"column_start":1,"column_end":4}},{"value":"/ A pointer to the output encrypted data buffer. This buffer should be allocated by the calling code.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20836,"byte_end":20939,"line_start":664,"line_end":664,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20940,"byte_end":20943,"line_start":665,"line_end":665,"column_start":1,"column_end":4}},{"value":"/ **mac**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20944,"byte_end":20955,"line_start":666,"line_end":666,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20956,"byte_end":20959,"line_start":667,"line_end":667,"column_start":1,"column_end":4}},{"value":"/ This is the output GCM MAC performed over the input data buffer (data to be encrypted) as well as","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":20960,"byte_end":21061,"line_start":668,"line_end":668,"column_start":1,"column_end":102}},{"value":"/ the additional authentication data (this is optional data). The calling code should allocate this buffer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":21062,"byte_end":21171,"line_start":669,"line_end":669,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":21172,"byte_end":21175,"line_start":670,"line_end":670,"column_start":1,"column_end":4}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":21176,"byte_end":21194,"line_start":671,"line_end":671,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":21195,"byte_end":21198,"line_start":672,"line_end":672,"column_start":1,"column_end":4}},{"value":"/ Library: libsgx_tcrypto.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":21199,"byte_end":21228,"line_start":673,"line_end":673,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":21229,"byte_end":21232,"line_start":674,"line_end":674,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":21233,"byte_end":21245,"line_start":675,"line_end":675,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":21246,"byte_end":21249,"line_start":676,"line_end":676,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_INVALID_PARAMETER**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":21250,"byte_end":21285,"line_start":677,"line_end":677,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":21286,"byte_end":21289,"line_start":678,"line_end":678,"column_start":1,"column_end":4}},{"value":"/ If both source buffer and AAD buffer content are empty.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":21290,"byte_end":21349,"line_start":679,"line_end":679,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":21350,"byte_end":21353,"line_start":680,"line_end":680,"column_start":1,"column_end":4}},{"value":"/ If IV Length is not equal to 12 (bytes).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":21354,"byte_end":21398,"line_start":681,"line_end":681,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":21399,"byte_end":21402,"line_start":682,"line_end":682,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_OUT_OF_MEMORY**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":21403,"byte_end":21434,"line_start":683,"line_end":683,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":21435,"byte_end":21438,"line_start":684,"line_end":684,"column_start":1,"column_end":4}},{"value":"/ Not enough memory is available to complete this operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":21439,"byte_end":21501,"line_start":685,"line_end":685,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":21502,"byte_end":21505,"line_start":686,"line_end":686,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_UNEXPECTED**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":21506,"byte_end":21534,"line_start":687,"line_end":687,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":21535,"byte_end":21538,"line_start":688,"line_end":688,"column_start":1,"column_end":4}},{"value":"/ An internal cryptography library failure occurred.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":21539,"byte_end":21593,"line_start":689,"line_end":689,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":21594,"byte_end":21597,"line_start":690,"line_end":690,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":71},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25839,"byte_end":25866,"line_start":826,"line_end":826,"column_start":8,"column_end":35},"name":"rsgx_rijndael128GCM_decrypt","qualname":"::crypto::rsgx_rijndael128GCM_decrypt","value":"pub fn rsgx_rijndael128GCM_decrypt(&sgx_aes_gcm_128bit_key_t, &[u8], &[u8],\n                                   &[u8], &sgx_aes_gcm_128bit_tag_t,\n                                   &mut [u8]) -> SgxError","parent":null,"children":[],"decl_id":null,"docs":"\n rsgx_rijndael128GCM_decrypt performs a Rijndael AES-GCM decryption operation.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":23145,"byte_end":23148,"line_start":750,"line_end":750,"column_start":1,"column_end":4}},{"value":"/ rsgx_rijndael128GCM_decrypt performs a Rijndael AES-GCM decryption operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":23149,"byte_end":23230,"line_start":751,"line_end":751,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":23231,"byte_end":23234,"line_start":752,"line_end":752,"column_start":1,"column_end":4}},{"value":"/ Only a 128bit key size is supported by this Intel(R) SGX SDK cryptography library.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":23235,"byte_end":23321,"line_start":753,"line_end":753,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":23322,"byte_end":23325,"line_start":754,"line_end":754,"column_start":1,"column_end":4}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":23326,"byte_end":23343,"line_start":755,"line_end":755,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":23344,"byte_end":23347,"line_start":756,"line_end":756,"column_start":1,"column_end":4}},{"value":"/ The Galois/Counter Mode (GCM) is a mode of operation of the AES algorithm.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":23348,"byte_end":23426,"line_start":757,"line_end":757,"column_start":1,"column_end":79}},{"value":"/ GCM [NIST SP 800-38D] uses a variation of the counter mode of operation for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":23427,"byte_end":23506,"line_start":758,"line_end":758,"column_start":1,"column_end":80}},{"value":"/ encryption. GCM assures authenticity of the confidential data (of up to about","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":23507,"byte_end":23588,"line_start":759,"line_end":759,"column_start":1,"column_end":82}},{"value":"/ 64 GB per invocation) using a universal hash function defined over a binary","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":23589,"byte_end":23668,"line_start":760,"line_end":760,"column_start":1,"column_end":80}},{"value":"/ finite field (the Galois field).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":23669,"byte_end":23705,"line_start":761,"line_end":761,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":23706,"byte_end":23709,"line_start":762,"line_end":762,"column_start":1,"column_end":4}},{"value":"/ GCM can also provide authentication assurance for additional data (of practically","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":23710,"byte_end":23795,"line_start":763,"line_end":763,"column_start":1,"column_end":86}},{"value":"/ unlimited length per invocation) that is not encrypted. GCM provides","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":23796,"byte_end":23868,"line_start":764,"line_end":764,"column_start":1,"column_end":73}},{"value":"/ stronger authentication assurance than a (non-cryptographic) checksum or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":23869,"byte_end":23945,"line_start":765,"line_end":765,"column_start":1,"column_end":77}},{"value":"/ error detecting code. In particular, GCM can detect both accidental modifications","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":23946,"byte_end":24031,"line_start":766,"line_end":766,"column_start":1,"column_end":86}},{"value":"/ of the data and intentional, unauthorized modifications.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24032,"byte_end":24092,"line_start":767,"line_end":767,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24093,"byte_end":24096,"line_start":768,"line_end":768,"column_start":1,"column_end":4}},{"value":"/ It is recommended that the destination data buffer is allocated within the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24097,"byte_end":24175,"line_start":769,"line_end":769,"column_start":1,"column_end":79}},{"value":"/ enclave. The AAD buffer could be allocated within or outside enclave memory.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24176,"byte_end":24256,"line_start":770,"line_end":770,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24257,"byte_end":24260,"line_start":771,"line_end":771,"column_start":1,"column_end":4}},{"value":"/ # Parameters","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24261,"byte_end":24277,"line_start":772,"line_end":772,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24278,"byte_end":24281,"line_start":773,"line_end":773,"column_start":1,"column_end":4}},{"value":"/ **key**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24282,"byte_end":24293,"line_start":774,"line_end":774,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24294,"byte_end":24297,"line_start":775,"line_end":775,"column_start":1,"column_end":4}},{"value":"/ A pointer to key to be used in the AES-GCM decryption operation. The size must be 128 bits.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24298,"byte_end":24393,"line_start":776,"line_end":776,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24394,"byte_end":24397,"line_start":777,"line_end":777,"column_start":1,"column_end":4}},{"value":"/ **src**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24398,"byte_end":24409,"line_start":778,"line_end":778,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24410,"byte_end":24413,"line_start":779,"line_end":779,"column_start":1,"column_end":4}},{"value":"/ A pointer to the input data stream to be decrypted. Buffer content could be empty if there is AAD text.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24414,"byte_end":24521,"line_start":780,"line_end":780,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24522,"byte_end":24525,"line_start":781,"line_end":781,"column_start":1,"column_end":4}},{"value":"/ **iv**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24526,"byte_end":24536,"line_start":782,"line_end":782,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24537,"byte_end":24540,"line_start":783,"line_end":783,"column_start":1,"column_end":4}},{"value":"/ A pointer to the initialization vector to be used in the AES-GCM calculation. NIST AES-GCM recommended","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24541,"byte_end":24647,"line_start":784,"line_end":784,"column_start":1,"column_end":107}},{"value":"/ IV size is 96 bits (12 bytes).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24648,"byte_end":24682,"line_start":785,"line_end":785,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24683,"byte_end":24686,"line_start":786,"line_end":786,"column_start":1,"column_end":4}},{"value":"/ **aad**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24687,"byte_end":24698,"line_start":787,"line_end":787,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24699,"byte_end":24702,"line_start":788,"line_end":788,"column_start":1,"column_end":4}},{"value":"/ A pointer to an optional additional authentication data buffer which is provided for the GCM MAC calculation","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24703,"byte_end":24815,"line_start":789,"line_end":789,"column_start":1,"column_end":113}},{"value":"/ when encrypting. The data in this buffer was not encrypted. The field is optional and content could be empty.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24816,"byte_end":24929,"line_start":790,"line_end":790,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24930,"byte_end":24933,"line_start":791,"line_end":791,"column_start":1,"column_end":4}},{"value":"/ **mac**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24934,"byte_end":24945,"line_start":792,"line_end":792,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24946,"byte_end":24949,"line_start":793,"line_end":793,"column_start":1,"column_end":4}},{"value":"/ This is the GCM MAC that was performed over the input data buffer (data to be encrypted) as well as","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":24950,"byte_end":25053,"line_start":794,"line_end":794,"column_start":1,"column_end":104}},{"value":"/ the additional authentication data (this is optional data) during the encryption process (call to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25054,"byte_end":25155,"line_start":795,"line_end":795,"column_start":1,"column_end":102}},{"value":"/ rsgx_rijndael128GCM_encrypt).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25156,"byte_end":25189,"line_start":796,"line_end":796,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25190,"byte_end":25193,"line_start":797,"line_end":797,"column_start":1,"column_end":4}},{"value":"/ **dst**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25194,"byte_end":25205,"line_start":798,"line_end":798,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25206,"byte_end":25209,"line_start":799,"line_end":799,"column_start":1,"column_end":4}},{"value":"/ A pointer to the output decrypted data buffer. This buffer should be allocated by the calling code.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25210,"byte_end":25313,"line_start":800,"line_end":800,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25314,"byte_end":25317,"line_start":801,"line_end":801,"column_start":1,"column_end":4}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25318,"byte_end":25336,"line_start":802,"line_end":802,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25337,"byte_end":25340,"line_start":803,"line_end":803,"column_start":1,"column_end":4}},{"value":"/ Library: libsgx_tcrypto.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25341,"byte_end":25370,"line_start":804,"line_end":804,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25371,"byte_end":25374,"line_start":805,"line_end":805,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25375,"byte_end":25387,"line_start":806,"line_end":806,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25388,"byte_end":25391,"line_start":807,"line_end":807,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_INVALID_PARAMETER**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25392,"byte_end":25427,"line_start":808,"line_end":808,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25428,"byte_end":25431,"line_start":809,"line_end":809,"column_start":1,"column_end":4}},{"value":"/ If both source buffer and AAD buffer content are empty.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25432,"byte_end":25491,"line_start":810,"line_end":810,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25492,"byte_end":25495,"line_start":811,"line_end":811,"column_start":1,"column_end":4}},{"value":"/ If IV Length is not equal to 12 (bytes).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25496,"byte_end":25540,"line_start":812,"line_end":812,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25541,"byte_end":25544,"line_start":813,"line_end":813,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_MAC_MISMATCH**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25545,"byte_end":25575,"line_start":814,"line_end":814,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25576,"byte_end":25579,"line_start":815,"line_end":815,"column_start":1,"column_end":4}},{"value":"/ The input MAC does not match the MAC calculated.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25580,"byte_end":25632,"line_start":816,"line_end":816,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25633,"byte_end":25636,"line_start":817,"line_end":817,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_OUT_OF_MEMORY**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25637,"byte_end":25668,"line_start":818,"line_end":818,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25669,"byte_end":25672,"line_start":819,"line_end":819,"column_start":1,"column_end":4}},{"value":"/ Not enough memory is available to complete this operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25673,"byte_end":25735,"line_start":820,"line_end":820,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25736,"byte_end":25739,"line_start":821,"line_end":821,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_UNEXPECTED**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25740,"byte_end":25768,"line_start":822,"line_end":822,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25769,"byte_end":25772,"line_start":823,"line_end":823,"column_start":1,"column_end":4}},{"value":"/ An internal cryptography library failure occurred.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25773,"byte_end":25827,"line_start":824,"line_end":824,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":25828,"byte_end":25831,"line_start":825,"line_end":825,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":72},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28524,"byte_end":28549,"line_start":929,"line_end":929,"column_start":8,"column_end":33},"name":"rsgx_rijndael128_cmac_msg","qualname":"::crypto::rsgx_rijndael128_cmac_msg","value":"pub fn rsgx_rijndael128_cmac_msg<T>(&sgx_cmac_128bit_key_t, &T)\n-> SgxResult<sgx_cmac_128bit_tag_t> where T: Copy + ContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"\n The rsgx_rijndael128_cmac_msg function performs a standard 128bit CMAC hash over the input data buffer.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":27380,"byte_end":27383,"line_start":885,"line_end":885,"column_start":1,"column_end":4}},{"value":"/ The rsgx_rijndael128_cmac_msg function performs a standard 128bit CMAC hash over the input data buffer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":27384,"byte_end":27491,"line_start":886,"line_end":886,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":27492,"byte_end":27495,"line_start":887,"line_end":887,"column_start":1,"column_end":4}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":27496,"byte_end":27513,"line_start":888,"line_end":888,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":27514,"byte_end":27517,"line_start":889,"line_end":889,"column_start":1,"column_end":4}},{"value":"/ The rsgx_rijndael128_cmac_msg function performs a standard CMAC hash over the input data buffer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":27518,"byte_end":27618,"line_start":890,"line_end":890,"column_start":1,"column_end":101}},{"value":"/ Only a 128-bit version of the CMAC hash is supported.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":27619,"byte_end":27676,"line_start":891,"line_end":891,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":27677,"byte_end":27680,"line_start":892,"line_end":892,"column_start":1,"column_end":4}},{"value":"/ The function should be used if the complete input data stream is available.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":27681,"byte_end":27760,"line_start":893,"line_end":893,"column_start":1,"column_end":80}},{"value":"/ Otherwise, the Init, Updateâ€¦ Update, Final procedure should be used to compute","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":27761,"byte_end":27845,"line_start":894,"line_end":894,"column_start":1,"column_end":83}},{"value":"/ a CMAC hash over multiple input data sets.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":27846,"byte_end":27892,"line_start":895,"line_end":895,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":27893,"byte_end":27896,"line_start":896,"line_end":896,"column_start":1,"column_end":4}},{"value":"/ # Parameters","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":27897,"byte_end":27913,"line_start":897,"line_end":897,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":27914,"byte_end":27917,"line_start":898,"line_end":898,"column_start":1,"column_end":4}},{"value":"/ **key**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":27918,"byte_end":27929,"line_start":899,"line_end":899,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":27930,"byte_end":27933,"line_start":900,"line_end":900,"column_start":1,"column_end":4}},{"value":"/ A pointer to key to be used in the CMAC hash operation. The size must be 128 bits.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":27934,"byte_end":28020,"line_start":901,"line_end":901,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28021,"byte_end":28024,"line_start":902,"line_end":902,"column_start":1,"column_end":4}},{"value":"/ **src**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28025,"byte_end":28036,"line_start":903,"line_end":903,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28037,"byte_end":28040,"line_start":904,"line_end":904,"column_start":1,"column_end":4}},{"value":"/ A pointer to the input data stream to be hashed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28041,"byte_end":28093,"line_start":905,"line_end":905,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28094,"byte_end":28097,"line_start":906,"line_end":906,"column_start":1,"column_end":4}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28098,"byte_end":28116,"line_start":907,"line_end":907,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28117,"byte_end":28120,"line_start":908,"line_end":908,"column_start":1,"column_end":4}},{"value":"/ Library: libsgx_tcrypto.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28121,"byte_end":28150,"line_start":909,"line_end":909,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28151,"byte_end":28154,"line_start":910,"line_end":910,"column_start":1,"column_end":4}},{"value":"/ # Return value","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28155,"byte_end":28173,"line_start":911,"line_end":911,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28174,"byte_end":28177,"line_start":912,"line_end":912,"column_start":1,"column_end":4}},{"value":"/ The 128-bit hash that has been CMAC calculated","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28178,"byte_end":28228,"line_start":913,"line_end":913,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28229,"byte_end":28232,"line_start":914,"line_end":914,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28233,"byte_end":28245,"line_start":915,"line_end":915,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28246,"byte_end":28249,"line_start":916,"line_end":916,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_INVALID_PARAMETER**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28250,"byte_end":28285,"line_start":917,"line_end":917,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28286,"byte_end":28289,"line_start":918,"line_end":918,"column_start":1,"column_end":4}},{"value":"/ The pointer is invalid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28290,"byte_end":28317,"line_start":919,"line_end":919,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28318,"byte_end":28321,"line_start":920,"line_end":920,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_OUT_OF_MEMORY**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28322,"byte_end":28353,"line_start":921,"line_end":921,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28354,"byte_end":28357,"line_start":922,"line_end":922,"column_start":1,"column_end":4}},{"value":"/ Not enough memory is available to complete this operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28358,"byte_end":28420,"line_start":923,"line_end":923,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28421,"byte_end":28424,"line_start":924,"line_end":924,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_UNEXPECTED**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28425,"byte_end":28453,"line_start":925,"line_end":925,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28454,"byte_end":28457,"line_start":926,"line_end":926,"column_start":1,"column_end":4}},{"value":"/ An internal cryptography library failure occurred.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28458,"byte_end":28512,"line_start":927,"line_end":927,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":28513,"byte_end":28516,"line_start":928,"line_end":928,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":74},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":29301,"byte_end":29332,"line_start":959,"line_end":959,"column_start":8,"column_end":39},"name":"rsgx_rijndael128_align_cmac_msg","qualname":"::crypto::rsgx_rijndael128_align_cmac_msg","value":"pub fn rsgx_rijndael128_align_cmac_msg<T>(&sgx_cmac_128bit_key_t, &T)\n-> SgxResult<sgx_align_mac_128bit_t> where T: Copy + ContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":76},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":30226,"byte_end":30253,"line_start":992,"line_end":992,"column_start":8,"column_end":35},"name":"rsgx_rijndael128_cmac_slice","qualname":"::crypto::rsgx_rijndael128_cmac_slice","value":"pub fn rsgx_rijndael128_cmac_slice<T>(&sgx_cmac_128bit_key_t, &[T])\n-> SgxResult<sgx_cmac_128bit_tag_t> where T: Copy + ContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"\n The rsgx_rijndael128_cmac_slice function performs a standard 128bit CMAC hash over the input data buffer.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":30101,"byte_end":30104,"line_start":989,"line_end":989,"column_start":1,"column_end":4}},{"value":"/ The rsgx_rijndael128_cmac_slice function performs a standard 128bit CMAC hash over the input data buffer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":30105,"byte_end":30214,"line_start":990,"line_end":990,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":30215,"byte_end":30218,"line_start":991,"line_end":991,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":78},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":31006,"byte_end":31039,"line_start":1022,"line_end":1022,"column_start":8,"column_end":41},"name":"rsgx_rijndael128_align_cmac_slice","qualname":"::crypto::rsgx_rijndael128_align_cmac_slice","value":"pub fn rsgx_rijndael128_align_cmac_slice<T>(&sgx_cmac_128bit_key_t, &[T])\n-> SgxResult<sgx_align_mac_128bit_t> where T: Copy + ContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":87},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":33670,"byte_end":33683,"line_start":1116,"line_end":1116,"column_start":12,"column_end":25},"name":"SgxCmacHandle","qualname":"::crypto::SgxCmacHandle","value":"SgxCmacHandle {  }","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"decl_id":null,"docs":"\n CMAC algorithm context state.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":33390,"byte_end":33393,"line_start":1109,"line_end":1109,"column_start":1,"column_end":4}},{"value":"/ CMAC algorithm context state.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":33394,"byte_end":33427,"line_start":1110,"line_end":1110,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":33428,"byte_end":33431,"line_start":1111,"line_end":1111,"column_start":1,"column_end":4}},{"value":"/ This is a handle to the context state used by the cryptography library to perform an","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":33432,"byte_end":33520,"line_start":1112,"line_end":1112,"column_start":1,"column_end":89}},{"value":"/ iterative CMAC 128-bit hash. The algorithm stores the intermediate results of performing","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":33521,"byte_end":33613,"line_start":1113,"line_end":1113,"column_start":1,"column_end":93}},{"value":"/ the hash calculation over data sets.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":33614,"byte_end":33654,"line_start":1114,"line_end":1114,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":33655,"byte_end":33658,"line_start":1115,"line_end":1115,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":33856,"byte_end":33859,"line_start":1125,"line_end":1125,"column_start":12,"column_end":15},"name":"new","qualname":"<SgxCmacHandle>::new","value":"pub fn new() -> SgxCmacHandle","parent":null,"children":[],"decl_id":null,"docs":"\n Constructs a new, empty SgxCmacHandle.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":33786,"byte_end":33789,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ Constructs a new, empty SgxCmacHandle.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":33794,"byte_end":33836,"line_start":1123,"line_end":1123,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":33841,"byte_end":33844,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35575,"byte_end":35579,"line_start":1172,"line_end":1172,"column_start":12,"column_end":16},"name":"init","qualname":"<SgxCmacHandle>::init","value":"pub fn init(&Self, &sgx_cmac_128bit_key_t) -> SgxError","parent":null,"children":[],"decl_id":null,"docs":"\n init returns an allocated and initialized CMAC algorithm context state.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":34044,"byte_end":34047,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ init returns an allocated and initialized CMAC algorithm context state.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":34052,"byte_end":34127,"line_start":1133,"line_end":1133,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":34132,"byte_end":34135,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ This should be part of the Init, Update â€¦ Update, Final process when the CMAC hash is to be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":34140,"byte_end":34237,"line_start":1135,"line_end":1135,"column_start":5,"column_end":100}},{"value":"/ performed over multiple datasets. If a complete dataset is available, the recommended call","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":34242,"byte_end":34336,"line_start":1136,"line_end":1136,"column_start":5,"column_end":99}},{"value":"/ is rsgx_rijndael128_cmac_msg to perform the hash in a single call.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":34341,"byte_end":34411,"line_start":1137,"line_end":1137,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":34416,"byte_end":34419,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":34424,"byte_end":34441,"line_start":1139,"line_end":1139,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":34446,"byte_end":34449,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ Calling init is the first set in performing a CMAC 128-bit hash over multiple datasets.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":34454,"byte_end":34545,"line_start":1141,"line_end":1141,"column_start":5,"column_end":96}},{"value":"/ The caller does not allocate memory for the CMAC state that this function returns.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":34550,"byte_end":34636,"line_start":1142,"line_end":1142,"column_start":5,"column_end":91}},{"value":"/ The state is specific to the implementation of the cryptography library and thus the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":34641,"byte_end":34729,"line_start":1143,"line_end":1143,"column_start":5,"column_end":93}},{"value":"/ allocation is performed by the library itself. If the hash over the desired datasets is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":34734,"byte_end":34825,"line_start":1144,"line_end":1144,"column_start":5,"column_end":96}},{"value":"/ completed or any error occurs during the hash calculation process, sgx_cmac128_close should","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":34830,"byte_end":34925,"line_start":1145,"line_end":1145,"column_start":5,"column_end":100}},{"value":"/ be called to free the state allocated by this algorithm.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":34930,"byte_end":34990,"line_start":1146,"line_end":1146,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":34995,"byte_end":34998,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35003,"byte_end":35019,"line_start":1148,"line_end":1148,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35024,"byte_end":35027,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ **key**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35032,"byte_end":35043,"line_start":1150,"line_end":1150,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35048,"byte_end":35051,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ A pointer to key to be used in the CMAC hash operation. The size must be 128 bits.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35056,"byte_end":35142,"line_start":1152,"line_end":1152,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35147,"byte_end":35150,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35155,"byte_end":35173,"line_start":1154,"line_end":1154,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35178,"byte_end":35181,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ Library: libsgx_tcrypto.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35186,"byte_end":35215,"line_start":1156,"line_end":1156,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35220,"byte_end":35223,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35228,"byte_end":35240,"line_start":1158,"line_end":1158,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35245,"byte_end":35248,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_INVALID_PARAMETER**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35253,"byte_end":35288,"line_start":1160,"line_end":1160,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35293,"byte_end":35296,"line_start":1161,"line_end":1161,"column_start":5,"column_end":8}},{"value":"/ The pointer is invalid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35301,"byte_end":35328,"line_start":1162,"line_end":1162,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35333,"byte_end":35336,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_OUT_OF_MEMORY**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35341,"byte_end":35372,"line_start":1164,"line_end":1164,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35377,"byte_end":35380,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ Not enough memory is available to complete this operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35385,"byte_end":35447,"line_start":1166,"line_end":1166,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35452,"byte_end":35455,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_UNEXPECTED**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35460,"byte_end":35488,"line_start":1168,"line_end":1168,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35493,"byte_end":35496,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/ An internal cryptography library failure occurred.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35501,"byte_end":35555,"line_start":1170,"line_end":1170,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35560,"byte_end":35563,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":37581,"byte_end":37591,"line_start":1231,"line_end":1231,"column_start":12,"column_end":22},"name":"update_msg","qualname":"<SgxCmacHandle>::update_msg","value":"pub fn update_msg<T>(&Self, &T) -> SgxError where T: Copy + ContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"\n update_msg performs a CMAC 128-bit hash over the input dataset provided.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35970,"byte_end":35973,"line_start":1187,"line_end":1187,"column_start":5,"column_end":8}},{"value":"/ update_msg performs a CMAC 128-bit hash over the input dataset provided.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":35978,"byte_end":36054,"line_start":1188,"line_end":1188,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":36059,"byte_end":36062,"line_start":1189,"line_end":1189,"column_start":5,"column_end":8}},{"value":"/ This function supports an iterative calculation of the hash over multiple datasets where the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":36067,"byte_end":36163,"line_start":1190,"line_end":1190,"column_start":5,"column_end":101}},{"value":"/ cmac_handle contains the intermediate results of the hash calculation over previous datasets.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":36168,"byte_end":36265,"line_start":1191,"line_end":1191,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":36270,"byte_end":36273,"line_start":1192,"line_end":1192,"column_start":5,"column_end":8}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":36278,"byte_end":36295,"line_start":1193,"line_end":1193,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":36300,"byte_end":36303,"line_start":1194,"line_end":1194,"column_start":5,"column_end":8}},{"value":"/ This function should be used as part of a CMAC 128-bit hash calculation over","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":36308,"byte_end":36388,"line_start":1195,"line_end":1195,"column_start":5,"column_end":85}},{"value":"/ multiple datasets. If a CMAC hash is needed over a single data set, function","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":36393,"byte_end":36473,"line_start":1196,"line_end":1196,"column_start":5,"column_end":85}},{"value":"/ rsgx_rijndael128_cmac128_msg should be used instead. Prior to calling","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":36478,"byte_end":36551,"line_start":1197,"line_end":1197,"column_start":5,"column_end":78}},{"value":"/ this function on the first dataset, the init function must be called first to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":36556,"byte_end":36637,"line_start":1198,"line_end":1198,"column_start":5,"column_end":86}},{"value":"/ allocate and initialize the CMAC state structure which will hold intermediate","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":36642,"byte_end":36723,"line_start":1199,"line_end":1199,"column_start":5,"column_end":86}},{"value":"/ hash results over earlier datasets. The function get_hash should be used","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":36728,"byte_end":36804,"line_start":1200,"line_end":1200,"column_start":5,"column_end":81}},{"value":"/ to obtain the hash after the final dataset has been processed by this function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":36809,"byte_end":36892,"line_start":1201,"line_end":1201,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":36897,"byte_end":36900,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":36905,"byte_end":36921,"line_start":1203,"line_end":1203,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":36926,"byte_end":36929,"line_start":1204,"line_end":1204,"column_start":5,"column_end":8}},{"value":"/ **src**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":36934,"byte_end":36945,"line_start":1205,"line_end":1205,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":36950,"byte_end":36953,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ A pointer to the input data stream to be hashed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":36958,"byte_end":37010,"line_start":1207,"line_end":1207,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":37015,"byte_end":37018,"line_start":1208,"line_end":1208,"column_start":5,"column_end":8}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":37023,"byte_end":37041,"line_start":1209,"line_end":1209,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":37046,"byte_end":37049,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ Library: libsgx_tcrypto.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":37054,"byte_end":37083,"line_start":1211,"line_end":1211,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":37088,"byte_end":37091,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":37096,"byte_end":37108,"line_start":1213,"line_end":1213,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":37113,"byte_end":37116,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_INVALID_PARAMETER**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":37121,"byte_end":37156,"line_start":1215,"line_end":1215,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":37161,"byte_end":37164,"line_start":1216,"line_end":1216,"column_start":5,"column_end":8}},{"value":"/ The pointer is invalid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":37169,"byte_end":37196,"line_start":1217,"line_end":1217,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":37201,"byte_end":37204,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_INVALID_STATE**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":37209,"byte_end":37240,"line_start":1219,"line_end":1219,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":37245,"byte_end":37248,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ The CMAC state is not initialized.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":37253,"byte_end":37291,"line_start":1221,"line_end":1221,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":37296,"byte_end":37299,"line_start":1222,"line_end":1222,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_OUT_OF_MEMORY**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":37304,"byte_end":37335,"line_start":1223,"line_end":1223,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":37340,"byte_end":37343,"line_start":1224,"line_end":1224,"column_start":5,"column_end":8}},{"value":"/ Not enough memory is available to complete this operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":37348,"byte_end":37410,"line_start":1225,"line_end":1225,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":37415,"byte_end":37418,"line_start":1226,"line_end":1226,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_UNEXPECTED**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":37423,"byte_end":37451,"line_start":1227,"line_end":1227,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":37456,"byte_end":37459,"line_start":1228,"line_end":1228,"column_start":5,"column_end":8}},{"value":"/ An internal cryptography library failure occurred while performing the CMAC hash calculation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":37464,"byte_end":37561,"line_start":1229,"line_end":1229,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":37566,"byte_end":37569,"line_start":1230,"line_end":1230,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":38077,"byte_end":38089,"line_start":1249,"line_end":1249,"column_start":12,"column_end":24},"name":"update_slice","qualname":"<SgxCmacHandle>::update_slice","value":"pub fn update_slice<T>(&Self, &[T]) -> SgxError where T: Copy +\nContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"\n update_slice performs a CMAC 128-bit hash over the input dataset provided.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":37971,"byte_end":37974,"line_start":1246,"line_end":1246,"column_start":5,"column_end":8}},{"value":"/ update_slice performs a CMAC 128-bit hash over the input dataset provided.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":37979,"byte_end":38057,"line_start":1247,"line_end":1247,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":38062,"byte_end":38065,"line_start":1248,"line_end":1248,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":39305,"byte_end":39313,"line_start":1294,"line_end":1294,"column_start":12,"column_end":20},"name":"get_hash","qualname":"<SgxCmacHandle>::get_hash","value":"pub fn get_hash(&Self) -> SgxResult<sgx_cmac_128bit_tag_t>","parent":null,"children":[],"decl_id":null,"docs":"\n get_hash obtains the CMAC 128-bit hash after the final dataset has been processed.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":38473,"byte_end":38476,"line_start":1264,"line_end":1264,"column_start":5,"column_end":8}},{"value":"/ get_hash obtains the CMAC 128-bit hash after the final dataset has been processed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":38481,"byte_end":38567,"line_start":1265,"line_end":1265,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":38572,"byte_end":38575,"line_start":1266,"line_end":1266,"column_start":5,"column_end":8}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":38580,"byte_end":38597,"line_start":1267,"line_end":1267,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":38602,"byte_end":38605,"line_start":1268,"line_end":1268,"column_start":5,"column_end":8}},{"value":"/ This function returns the hash after performing the CMAC 128-bit hash calculation","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":38610,"byte_end":38695,"line_start":1269,"line_end":1269,"column_start":5,"column_end":90}},{"value":"/ over one or more datasets using the update function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":38700,"byte_end":38756,"line_start":1270,"line_end":1270,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":38761,"byte_end":38764,"line_start":1271,"line_end":1271,"column_start":5,"column_end":8}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":38769,"byte_end":38787,"line_start":1272,"line_end":1272,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":38792,"byte_end":38795,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ Library: libsgx_tcrypto.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":38800,"byte_end":38829,"line_start":1274,"line_end":1274,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":38834,"byte_end":38837,"line_start":1275,"line_end":1275,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":38842,"byte_end":38860,"line_start":1276,"line_end":1276,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":38865,"byte_end":38868,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ The 128-bit hash that has been CMAC calculated","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":38873,"byte_end":38923,"line_start":1278,"line_end":1278,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":38928,"byte_end":38931,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":38936,"byte_end":38948,"line_start":1280,"line_end":1280,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":38953,"byte_end":38956,"line_start":1281,"line_end":1281,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_INVALID_PARAMETER**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":38961,"byte_end":38996,"line_start":1282,"line_end":1282,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":39001,"byte_end":39004,"line_start":1283,"line_end":1283,"column_start":5,"column_end":8}},{"value":"/ The pointer is invalid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":39009,"byte_end":39036,"line_start":1284,"line_end":1284,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":39041,"byte_end":39044,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_INVALID_STATE**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":39049,"byte_end":39080,"line_start":1286,"line_end":1286,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":39085,"byte_end":39088,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ The CMAC state is not initialized.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":39093,"byte_end":39131,"line_start":1288,"line_end":1288,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":39136,"byte_end":39139,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_UNEXPECTED**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":39144,"byte_end":39172,"line_start":1290,"line_end":1290,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":39177,"byte_end":39180,"line_start":1291,"line_end":1291,"column_start":5,"column_end":8}},{"value":"/ The CMAC state passed in is likely problematic causing an internal cryptography library failure.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":39185,"byte_end":39285,"line_start":1292,"line_end":1292,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":39290,"byte_end":39293,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":39722,"byte_end":39736,"line_start":1307,"line_end":1307,"column_start":12,"column_end":26},"name":"get_align_hash","qualname":"<SgxCmacHandle>::get_align_hash","value":"pub fn get_align_hash(&Self) -> SgxResult<sgx_align_mac_128bit_t>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":40726,"byte_end":40731,"line_start":1338,"line_end":1338,"column_start":12,"column_end":17},"name":"close","qualname":"<SgxCmacHandle>::close","value":"pub fn close(&Self) -> SgxError","parent":null,"children":[],"decl_id":null,"docs":"\n close cleans up and deallocates the CMAC algorithm context state that was allocated in function init.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":40162,"byte_end":40165,"line_start":1320,"line_end":1320,"column_start":5,"column_end":8}},{"value":"/ close cleans up and deallocates the CMAC algorithm context state that was allocated in function init.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":40170,"byte_end":40275,"line_start":1321,"line_end":1321,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":40280,"byte_end":40283,"line_start":1322,"line_end":1322,"column_start":5,"column_end":8}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":40288,"byte_end":40305,"line_start":1323,"line_end":1323,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":40310,"byte_end":40313,"line_start":1324,"line_end":1324,"column_start":5,"column_end":8}},{"value":"/ Calling close is the last step after performing a CMAC hash over multiple datasets.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":40318,"byte_end":40405,"line_start":1325,"line_end":1325,"column_start":5,"column_end":92}},{"value":"/ The caller uses this function to deallocate memory used for storing the CMAC algorithm context state.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":40410,"byte_end":40515,"line_start":1326,"line_end":1326,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":40520,"byte_end":40523,"line_start":1327,"line_end":1327,"column_start":5,"column_end":8}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":40528,"byte_end":40546,"line_start":1328,"line_end":1328,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":40551,"byte_end":40554,"line_start":1329,"line_end":1329,"column_start":5,"column_end":8}},{"value":"/ Library: libsgx_tcrypto.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":40559,"byte_end":40588,"line_start":1330,"line_end":1330,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":40593,"byte_end":40596,"line_start":1331,"line_end":1331,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":40601,"byte_end":40613,"line_start":1332,"line_end":1332,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":40618,"byte_end":40621,"line_start":1333,"line_end":1333,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_INVALID_PARAMETER**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":40626,"byte_end":40661,"line_start":1334,"line_end":1334,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":40666,"byte_end":40669,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ The input handle is invalid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":40674,"byte_end":40706,"line_start":1336,"line_end":1336,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":40711,"byte_end":40714,"line_start":1337,"line_end":1337,"column_start":5,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":104},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":41623,"byte_end":41643,"line_start":1378,"line_end":1378,"column_start":8,"column_end":28},"name":"rsgx_hmac_sha256_msg","qualname":"::crypto::rsgx_hmac_sha256_msg","value":"pub fn rsgx_hmac_sha256_msg<T>(&sgx_hmac_256bit_key_t, &T)\n-> SgxResult<sgx_hmac_256bit_tag_t> where T: Copy + ContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":106},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":42464,"byte_end":42490,"line_start":1410,"line_end":1410,"column_start":8,"column_end":34},"name":"rsgx_align_hmac_sha256_msg","qualname":"::crypto::rsgx_align_hmac_sha256_msg","value":"pub fn rsgx_align_hmac_sha256_msg<T>(&sgx_hmac_256bit_key_t, &T)\n-> SgxResult<sgx_align_mac_256bit_t> where T: Copy + ContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":108},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":43335,"byte_end":43357,"line_start":1442,"line_end":1442,"column_start":8,"column_end":30},"name":"rsgx_hmac_sha256_slice","qualname":"::crypto::rsgx_hmac_sha256_slice","value":"pub fn rsgx_hmac_sha256_slice<T>(&sgx_hmac_256bit_key_t, &[T])\n-> SgxResult<sgx_hmac_256bit_tag_t> where T: Copy + ContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":110},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":44179,"byte_end":44207,"line_start":1474,"line_end":1474,"column_start":8,"column_end":36},"name":"rsgx_align_hmac_sha256_slice","qualname":"::crypto::rsgx_align_hmac_sha256_slice","value":"pub fn rsgx_align_hmac_sha256_slice<T>(&sgx_hmac_256bit_key_t, &[T])\n-> SgxResult<sgx_align_mac_256bit_t> where T: Copy + ContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":119},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":46791,"byte_end":46804,"line_start":1570,"line_end":1570,"column_start":12,"column_end":25},"name":"SgxHmacHandle","qualname":"::crypto::SgxHmacHandle","value":"SgxHmacHandle {  }","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":46914,"byte_end":46917,"line_start":1576,"line_end":1576,"column_start":12,"column_end":15},"name":"new","qualname":"<SgxHmacHandle>::new","value":"pub fn new() -> SgxHmacHandle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":47109,"byte_end":47113,"line_start":1583,"line_end":1583,"column_start":12,"column_end":16},"name":"init","qualname":"<SgxHmacHandle>::init","value":"pub fn init(&Self, &sgx_hmac_256bit_key_t) -> SgxError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":47511,"byte_end":47521,"line_start":1598,"line_end":1598,"column_start":12,"column_end":22},"name":"update_msg","qualname":"<SgxHmacHandle>::update_msg","value":"pub fn update_msg<T>(&Self, &T) -> SgxError where T: Copy + ContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":47908,"byte_end":47920,"line_start":1613,"line_end":1613,"column_start":12,"column_end":24},"name":"update_slice","qualname":"<SgxHmacHandle>::update_slice","value":"pub fn update_slice<T>(&Self, &[T]) -> SgxError where T: Copy +\nContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":48311,"byte_end":48319,"line_start":1628,"line_end":1628,"column_start":12,"column_end":20},"name":"get_hash","qualname":"<SgxHmacHandle>::get_hash","value":"pub fn get_hash(&Self) -> SgxResult<sgx_hmac_256bit_tag_t>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":48728,"byte_end":48742,"line_start":1641,"line_end":1641,"column_start":12,"column_end":26},"name":"get_align_hash","qualname":"<SgxHmacHandle>::get_align_hash","value":"pub fn get_align_hash(&Self) -> SgxResult<sgx_align_mac_256bit_t>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":49175,"byte_end":49180,"line_start":1654,"line_end":1654,"column_start":12,"column_end":17},"name":"close","qualname":"<SgxHmacHandle>::close","value":"pub fn close(&Self) -> SgxError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":136},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":49950,"byte_end":49969,"line_start":1691,"line_end":1691,"column_start":11,"column_end":30},"name":"SGX_AESCTR_CTR_SIZE","qualname":"::crypto::SGX_AESCTR_CTR_SIZE","value":"size_t","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":137},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":49993,"byte_end":50017,"line_start":1692,"line_end":1692,"column_start":10,"column_end":34},"name":"sgx_aes_ctr_128bit_ctr_t","qualname":"::crypto::sgx_aes_ctr_128bit_ctr_t","value":"[uint8_t; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":139},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51801,"byte_end":51821,"line_start":1752,"line_end":1752,"column_start":8,"column_end":28},"name":"rsgx_aes_ctr_encrypt","qualname":"::crypto::rsgx_aes_ctr_encrypt","value":"pub fn rsgx_aes_ctr_encrypt(&sgx_aes_ctr_128bit_key_t, &[u8],\n                            &sgx_aes_ctr_128bit_ctr_t, u32, &mut [u8])\n-> SgxError","parent":null,"children":[],"decl_id":null,"docs":"\n rsgx_aes_ctr_encrypt performs a Rijndael AES-CTR encryption operation.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":50053,"byte_end":50056,"line_start":1694,"line_end":1694,"column_start":1,"column_end":4}},{"value":"/ rsgx_aes_ctr_encrypt performs a Rijndael AES-CTR encryption operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":50057,"byte_end":50131,"line_start":1695,"line_end":1695,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":50132,"byte_end":50135,"line_start":1696,"line_end":1696,"column_start":1,"column_end":4}},{"value":"/ Only a 128bit key size is supported by this Intel(R) SGX SDK cryptography library.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":50136,"byte_end":50222,"line_start":1697,"line_end":1697,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":50223,"byte_end":50226,"line_start":1698,"line_end":1698,"column_start":1,"column_end":4}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":50227,"byte_end":50244,"line_start":1699,"line_end":1699,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":50245,"byte_end":50248,"line_start":1700,"line_end":1700,"column_start":1,"column_end":4}},{"value":"/ This function encrypts the input data stream of a variable length according to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":50249,"byte_end":50331,"line_start":1701,"line_end":1701,"column_start":1,"column_end":83}},{"value":"/ the CTR mode as specified in [NIST SP 800-38A]. The counter can be thought","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":50332,"byte_end":50410,"line_start":1702,"line_end":1702,"column_start":1,"column_end":79}},{"value":"/ of as an IV which increments on successive encryption or decryption calls. For","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":50411,"byte_end":50493,"line_start":1703,"line_end":1703,"column_start":1,"column_end":83}},{"value":"/ a given dataset or data stream, the incremented counter block should be used","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":50494,"byte_end":50574,"line_start":1704,"line_end":1704,"column_start":1,"column_end":81}},{"value":"/ on successive calls of the encryption process for that given stream. However,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":50575,"byte_end":50656,"line_start":1705,"line_end":1705,"column_start":1,"column_end":82}},{"value":"/ for new or different datasets/streams, the same counter should not be reused,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":50657,"byte_end":50738,"line_start":1706,"line_end":1706,"column_start":1,"column_end":82}},{"value":"/ instead initialize the counter for the new data set.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":50739,"byte_end":50795,"line_start":1707,"line_end":1707,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":50796,"byte_end":50799,"line_start":1708,"line_end":1708,"column_start":1,"column_end":4}},{"value":"/ It is recommended that the source, destination and counter data buffers are","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":50800,"byte_end":50879,"line_start":1709,"line_end":1709,"column_start":1,"column_end":80}},{"value":"/ allocated within the enclave.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":50880,"byte_end":50913,"line_start":1710,"line_end":1710,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":50914,"byte_end":50917,"line_start":1711,"line_end":1711,"column_start":1,"column_end":4}},{"value":"/ # Parameters","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":50918,"byte_end":50934,"line_start":1712,"line_end":1712,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":50935,"byte_end":50938,"line_start":1713,"line_end":1713,"column_start":1,"column_end":4}},{"value":"/ **key**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":50939,"byte_end":50950,"line_start":1714,"line_end":1714,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":50951,"byte_end":50954,"line_start":1715,"line_end":1715,"column_start":1,"column_end":4}},{"value":"/ A pointer to key to be used in the AES-CTR encryption operation. The size must be 128 bits.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":50955,"byte_end":51050,"line_start":1716,"line_end":1716,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51051,"byte_end":51054,"line_start":1717,"line_end":1717,"column_start":1,"column_end":4}},{"value":"/ **src**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51055,"byte_end":51066,"line_start":1718,"line_end":1718,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51067,"byte_end":51070,"line_start":1719,"line_end":1719,"column_start":1,"column_end":4}},{"value":"/ A pointer to the input data stream to be encrypted.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51071,"byte_end":51126,"line_start":1720,"line_end":1720,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51127,"byte_end":51130,"line_start":1721,"line_end":1721,"column_start":1,"column_end":4}},{"value":"/ **ctr**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51131,"byte_end":51142,"line_start":1722,"line_end":1722,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51143,"byte_end":51146,"line_start":1723,"line_end":1723,"column_start":1,"column_end":4}},{"value":"/ A pointer to the initialization vector to be used in the AES-CTR calculation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51147,"byte_end":51228,"line_start":1724,"line_end":1724,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51229,"byte_end":51232,"line_start":1725,"line_end":1725,"column_start":1,"column_end":4}},{"value":"/ **ctr_inc_bits**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51233,"byte_end":51253,"line_start":1726,"line_end":1726,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51254,"byte_end":51257,"line_start":1727,"line_end":1727,"column_start":1,"column_end":4}},{"value":"/ Specifies the number of bits in the counter to be incremented.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51258,"byte_end":51324,"line_start":1728,"line_end":1728,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51325,"byte_end":51328,"line_start":1729,"line_end":1729,"column_start":1,"column_end":4}},{"value":"/ **dst**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51329,"byte_end":51340,"line_start":1730,"line_end":1730,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51341,"byte_end":51344,"line_start":1731,"line_end":1731,"column_start":1,"column_end":4}},{"value":"/ A pointer to the output encrypted data buffer. This buffer should be allocated by the calling code.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51345,"byte_end":51448,"line_start":1732,"line_end":1732,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51449,"byte_end":51452,"line_start":1733,"line_end":1733,"column_start":1,"column_end":4}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51453,"byte_end":51471,"line_start":1734,"line_end":1734,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51472,"byte_end":51475,"line_start":1735,"line_end":1735,"column_start":1,"column_end":4}},{"value":"/ Library: libsgx_tcrypto.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51476,"byte_end":51505,"line_start":1736,"line_end":1736,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51506,"byte_end":51509,"line_start":1737,"line_end":1737,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51510,"byte_end":51522,"line_start":1738,"line_end":1738,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51523,"byte_end":51526,"line_start":1739,"line_end":1739,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_INVALID_PARAMETER**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51527,"byte_end":51562,"line_start":1740,"line_end":1740,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51563,"byte_end":51566,"line_start":1741,"line_end":1741,"column_start":1,"column_end":4}},{"value":"/ The pointer is invalid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51567,"byte_end":51594,"line_start":1742,"line_end":1742,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51595,"byte_end":51598,"line_start":1743,"line_end":1743,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_OUT_OF_MEMORY**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51599,"byte_end":51630,"line_start":1744,"line_end":1744,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51631,"byte_end":51634,"line_start":1745,"line_end":1745,"column_start":1,"column_end":4}},{"value":"/ Not enough memory is available to complete this operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51635,"byte_end":51697,"line_start":1746,"line_end":1746,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51698,"byte_end":51701,"line_start":1747,"line_end":1747,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_UNEXPECTED**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51702,"byte_end":51730,"line_start":1748,"line_end":1748,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51731,"byte_end":51734,"line_start":1749,"line_end":1749,"column_start":1,"column_end":4}},{"value":"/ An internal cryptography library failure occurred.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51735,"byte_end":51789,"line_start":1750,"line_end":1750,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":51790,"byte_end":51793,"line_start":1751,"line_end":1751,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":140},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":54564,"byte_end":54584,"line_start":1848,"line_end":1848,"column_start":8,"column_end":28},"name":"rsgx_aes_ctr_decrypt","qualname":"::crypto::rsgx_aes_ctr_decrypt","value":"pub fn rsgx_aes_ctr_decrypt(&sgx_aes_ctr_128bit_key_t, &[u8],\n                            &sgx_aes_ctr_128bit_ctr_t, u32, &mut [u8])\n-> SgxError","parent":null,"children":[],"decl_id":null,"docs":"\n rsgx_aes_ctr_decrypt performs a Rijndael AES-CTR decryption operation.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":52816,"byte_end":52819,"line_start":1790,"line_end":1790,"column_start":1,"column_end":4}},{"value":"/ rsgx_aes_ctr_decrypt performs a Rijndael AES-CTR decryption operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":52820,"byte_end":52894,"line_start":1791,"line_end":1791,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":52895,"byte_end":52898,"line_start":1792,"line_end":1792,"column_start":1,"column_end":4}},{"value":"/ Only a 128bit key size is supported by this Intel(R) SGX SDK cryptography library.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":52899,"byte_end":52985,"line_start":1793,"line_end":1793,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":52986,"byte_end":52989,"line_start":1794,"line_end":1794,"column_start":1,"column_end":4}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":52990,"byte_end":53007,"line_start":1795,"line_end":1795,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53008,"byte_end":53011,"line_start":1796,"line_end":1796,"column_start":1,"column_end":4}},{"value":"/ This function decrypts the input data stream of a variable length according to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53012,"byte_end":53094,"line_start":1797,"line_end":1797,"column_start":1,"column_end":83}},{"value":"/ the CTR mode as specified in [NIST SP 800-38A]. The counter can be thought","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53095,"byte_end":53173,"line_start":1798,"line_end":1798,"column_start":1,"column_end":79}},{"value":"/ of as an IV which increments on successive encryption or decryption calls. For","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53174,"byte_end":53256,"line_start":1799,"line_end":1799,"column_start":1,"column_end":83}},{"value":"/ a given dataset or data stream, the incremented counter block should be used","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53257,"byte_end":53337,"line_start":1800,"line_end":1800,"column_start":1,"column_end":81}},{"value":"/ on successive calls of the decryption process for that given stream. However,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53338,"byte_end":53419,"line_start":1801,"line_end":1801,"column_start":1,"column_end":82}},{"value":"/ for new or different datasets/streams, the same counter should not be reused,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53420,"byte_end":53501,"line_start":1802,"line_end":1802,"column_start":1,"column_end":82}},{"value":"/ instead initialize the counter for the new data set.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53502,"byte_end":53558,"line_start":1803,"line_end":1803,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53559,"byte_end":53562,"line_start":1804,"line_end":1804,"column_start":1,"column_end":4}},{"value":"/ It is recommended that the source, destination and counter data buffers are","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53563,"byte_end":53642,"line_start":1805,"line_end":1805,"column_start":1,"column_end":80}},{"value":"/ allocated within the enclave.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53643,"byte_end":53676,"line_start":1806,"line_end":1806,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53677,"byte_end":53680,"line_start":1807,"line_end":1807,"column_start":1,"column_end":4}},{"value":"/ # Parameters","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53681,"byte_end":53697,"line_start":1808,"line_end":1808,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53698,"byte_end":53701,"line_start":1809,"line_end":1809,"column_start":1,"column_end":4}},{"value":"/ **key**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53702,"byte_end":53713,"line_start":1810,"line_end":1810,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53714,"byte_end":53717,"line_start":1811,"line_end":1811,"column_start":1,"column_end":4}},{"value":"/ A pointer to key to be used in the AES-CTR encryption operation. The size must be 128 bits.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53718,"byte_end":53813,"line_start":1812,"line_end":1812,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53814,"byte_end":53817,"line_start":1813,"line_end":1813,"column_start":1,"column_end":4}},{"value":"/ **src**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53818,"byte_end":53829,"line_start":1814,"line_end":1814,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53830,"byte_end":53833,"line_start":1815,"line_end":1815,"column_start":1,"column_end":4}},{"value":"/ A pointer to the input data stream to be decrypted.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53834,"byte_end":53889,"line_start":1816,"line_end":1816,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53890,"byte_end":53893,"line_start":1817,"line_end":1817,"column_start":1,"column_end":4}},{"value":"/ **ctr**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53894,"byte_end":53905,"line_start":1818,"line_end":1818,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53906,"byte_end":53909,"line_start":1819,"line_end":1819,"column_start":1,"column_end":4}},{"value":"/ A pointer to the initialization vector to be used in the AES-CTR calculation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53910,"byte_end":53991,"line_start":1820,"line_end":1820,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53992,"byte_end":53995,"line_start":1821,"line_end":1821,"column_start":1,"column_end":4}},{"value":"/ **ctr_inc_bits**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":53996,"byte_end":54016,"line_start":1822,"line_end":1822,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":54017,"byte_end":54020,"line_start":1823,"line_end":1823,"column_start":1,"column_end":4}},{"value":"/ Specifies the number of bits in the counter to be incremented.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":54021,"byte_end":54087,"line_start":1824,"line_end":1824,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":54088,"byte_end":54091,"line_start":1825,"line_end":1825,"column_start":1,"column_end":4}},{"value":"/ **dst**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":54092,"byte_end":54103,"line_start":1826,"line_end":1826,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":54104,"byte_end":54107,"line_start":1827,"line_end":1827,"column_start":1,"column_end":4}},{"value":"/ A pointer to the output decrypted data buffer. This buffer should be allocated by the calling code.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":54108,"byte_end":54211,"line_start":1828,"line_end":1828,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":54212,"byte_end":54215,"line_start":1829,"line_end":1829,"column_start":1,"column_end":4}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":54216,"byte_end":54234,"line_start":1830,"line_end":1830,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":54235,"byte_end":54238,"line_start":1831,"line_end":1831,"column_start":1,"column_end":4}},{"value":"/ Library: libsgx_tcrypto.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":54239,"byte_end":54268,"line_start":1832,"line_end":1832,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":54269,"byte_end":54272,"line_start":1833,"line_end":1833,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":54273,"byte_end":54285,"line_start":1834,"line_end":1834,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":54286,"byte_end":54289,"line_start":1835,"line_end":1835,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_INVALID_PARAMETER**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":54290,"byte_end":54325,"line_start":1836,"line_end":1836,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":54326,"byte_end":54329,"line_start":1837,"line_end":1837,"column_start":1,"column_end":4}},{"value":"/ The pointer is invalid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":54330,"byte_end":54357,"line_start":1838,"line_end":1838,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":54358,"byte_end":54361,"line_start":1839,"line_end":1839,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_OUT_OF_MEMORY**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":54362,"byte_end":54393,"line_start":1840,"line_end":1840,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":54394,"byte_end":54397,"line_start":1841,"line_end":1841,"column_start":1,"column_end":4}},{"value":"/ Not enough memory is available to complete this operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":54398,"byte_end":54460,"line_start":1842,"line_end":1842,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":54461,"byte_end":54464,"line_start":1843,"line_end":1843,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_UNEXPECTED**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":54465,"byte_end":54493,"line_start":1844,"line_end":1844,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":54494,"byte_end":54497,"line_start":1845,"line_end":1845,"column_start":1,"column_end":4}},{"value":"/ An internal cryptography library failure occurred.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":54498,"byte_end":54552,"line_start":1846,"line_end":1846,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":54553,"byte_end":54556,"line_start":1847,"line_end":1847,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":155},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":62609,"byte_end":62621,"line_start":2130,"line_end":2130,"column_start":12,"column_end":24},"name":"SgxEccHandle","qualname":"::crypto::SgxEccHandle","value":"SgxEccHandle {  }","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157}],"decl_id":null,"docs":"\n ECC GF(p) context state.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":62315,"byte_end":62318,"line_start":2123,"line_end":2123,"column_start":1,"column_end":4}},{"value":"/ ECC GF(p) context state.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":62319,"byte_end":62347,"line_start":2124,"line_end":2124,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":62348,"byte_end":62351,"line_start":2125,"line_end":2125,"column_start":1,"column_end":4}},{"value":"/ This is a handle to the ECC GF(p) context state allocated and initialized used to perform","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":62352,"byte_end":62445,"line_start":2126,"line_end":2126,"column_start":1,"column_end":94}},{"value":"/ elliptic curve cryptosystem standard functions. The algorithm stores the intermediate results","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":62446,"byte_end":62543,"line_start":2127,"line_end":2127,"column_start":1,"column_end":98}},{"value":"/ of calculations performed using this context.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":62544,"byte_end":62593,"line_start":2128,"line_end":2128,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":62594,"byte_end":62597,"line_start":2129,"line_end":2129,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":62791,"byte_end":62794,"line_start":2139,"line_end":2139,"column_start":12,"column_end":15},"name":"new","qualname":"<SgxEccHandle>::new","value":"pub fn new() -> SgxEccHandle","parent":null,"children":[],"decl_id":null,"docs":"\n Constructs a new, empty SgxEccHandle.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":62722,"byte_end":62725,"line_start":2136,"line_end":2136,"column_start":5,"column_end":8}},{"value":"/ Constructs a new, empty SgxEccHandle.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":62730,"byte_end":62771,"line_start":2137,"line_end":2137,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":62776,"byte_end":62779,"line_start":2138,"line_end":2138,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":65870,"byte_end":65874,"line_start":2202,"line_end":2202,"column_start":12,"column_end":16},"name":"open","qualname":"<SgxEccHandle>::open","value":"pub fn open(&Self) -> SgxError","parent":null,"children":[],"decl_id":null,"docs":"\n open returns an allocated and initialized context for the elliptic curve cryptosystem\n over a prime finite field, GF(p).","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":62976,"byte_end":62979,"line_start":2146,"line_end":2146,"column_start":5,"column_end":8}},{"value":"/ open returns an allocated and initialized context for the elliptic curve cryptosystem","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":62984,"byte_end":63073,"line_start":2147,"line_end":2147,"column_start":5,"column_end":94}},{"value":"/ over a prime finite field, GF(p).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":63078,"byte_end":63115,"line_start":2148,"line_end":2148,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":63120,"byte_end":63123,"line_start":2149,"line_end":2149,"column_start":5,"column_end":8}},{"value":"/ This context must be created prior to calling create_key_pair or compute_shared_dhkey.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":63128,"byte_end":63218,"line_start":2150,"line_end":2150,"column_start":5,"column_end":95}},{"value":"/ When the calling code has completed its set of ECC operations, close should be called to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":63223,"byte_end":63315,"line_start":2151,"line_end":2151,"column_start":5,"column_end":97}},{"value":"/ cleanup and deallocate the ECC context.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":63320,"byte_end":63363,"line_start":2152,"line_end":2152,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":63368,"byte_end":63371,"line_start":2153,"line_end":2153,"column_start":5,"column_end":8}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":63376,"byte_end":63393,"line_start":2154,"line_end":2154,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":63398,"byte_end":63401,"line_start":2155,"line_end":2155,"column_start":5,"column_end":8}},{"value":"/ open is utilized to allocate and initialize a 256-bit","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":63406,"byte_end":63463,"line_start":2156,"line_end":2156,"column_start":5,"column_end":62}},{"value":"/ GF(p) cryptographic system. The caller does not allocate memory for the ECC","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":63468,"byte_end":63547,"line_start":2157,"line_end":2157,"column_start":5,"column_end":84}},{"value":"/ state that this function returns. The state is specific to the implementation of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":63552,"byte_end":63636,"line_start":2158,"line_end":2158,"column_start":5,"column_end":89}},{"value":"/ the cryptography library and thus the allocation is performed by the library","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":63641,"byte_end":63721,"line_start":2159,"line_end":2159,"column_start":5,"column_end":85}},{"value":"/ itself. If the ECC cryptographic function using this cryptographic system is completed","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":63726,"byte_end":63816,"line_start":2160,"line_end":2160,"column_start":5,"column_end":95}},{"value":"/ or any error occurs, close should be called to free the state allocated by this algorithm.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":63821,"byte_end":63915,"line_start":2161,"line_end":2161,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":63920,"byte_end":63923,"line_start":2162,"line_end":2162,"column_start":5,"column_end":8}},{"value":"/ Public key cryptography successfully allows to solving problems of information","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":63928,"byte_end":64010,"line_start":2163,"line_end":2163,"column_start":5,"column_end":87}},{"value":"/ safety by enabling trusted communication over insecure channels. Although","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":64015,"byte_end":64092,"line_start":2164,"line_end":2164,"column_start":5,"column_end":82}},{"value":"/ elliptic curves are well studied as a branch of mathematics, an interest to the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":64097,"byte_end":64180,"line_start":2165,"line_end":2165,"column_start":5,"column_end":88}},{"value":"/ cryptographic schemes based on elliptic curves is constantly rising due to the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":64185,"byte_end":64267,"line_start":2166,"line_end":2166,"column_start":5,"column_end":87}},{"value":"/ advantages that the elliptic curve algorithms provide in the wireless communications:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":64272,"byte_end":64361,"line_start":2167,"line_end":2167,"column_start":5,"column_end":94}},{"value":"/ shorter processing time and key length.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":64366,"byte_end":64409,"line_start":2168,"line_end":2168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":64414,"byte_end":64417,"line_start":2169,"line_end":2169,"column_start":5,"column_end":8}},{"value":"/ Elliptic curve cryptosystems (ECCs) implement a different way of creating public","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":64422,"byte_end":64506,"line_start":2170,"line_end":2170,"column_start":5,"column_end":89}},{"value":"/ keys. As elliptic curve calculation is based on the addition of the rational","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":64511,"byte_end":64591,"line_start":2171,"line_end":2171,"column_start":5,"column_end":85}},{"value":"/ points in the (x,y) plane and it is difficult to solve a discrete logarithm from","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":64596,"byte_end":64680,"line_start":2172,"line_end":2172,"column_start":5,"column_end":89}},{"value":"/ these points, a higher level of safety is achieved through the cryptographic","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":64685,"byte_end":64765,"line_start":2173,"line_end":2173,"column_start":5,"column_end":85}},{"value":"/ schemes that use the elliptic curves. The cryptographic systems that encrypt","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":64770,"byte_end":64850,"line_start":2174,"line_end":2174,"column_start":5,"column_end":85}},{"value":"/ messages by using the properties of elliptic curves are hard to attack due to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":64855,"byte_end":64936,"line_start":2175,"line_end":2175,"column_start":5,"column_end":86}},{"value":"/ the extreme complexity of deciphering the private key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":64941,"byte_end":64999,"line_start":2176,"line_end":2176,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":65004,"byte_end":65007,"line_start":2177,"line_end":2177,"column_start":5,"column_end":8}},{"value":"/ Using of elliptic curves allows shorter public key length and encourages cryptographers","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":65012,"byte_end":65103,"line_start":2178,"line_end":2178,"column_start":5,"column_end":96}},{"value":"/ to create cryptosystems with the same or higher encryption","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":65108,"byte_end":65170,"line_start":2179,"line_end":2179,"column_start":5,"column_end":67}},{"value":"/ strength as the RSA or DSA cryptosystems. Because of the relatively short key","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":65175,"byte_end":65256,"line_start":2180,"line_end":2180,"column_start":5,"column_end":86}},{"value":"/ length, ECCs do encryption and decryption faster on the hardware that","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":65261,"byte_end":65334,"line_start":2181,"line_end":2181,"column_start":5,"column_end":78}},{"value":"/ requires less computation processing volumes.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":65339,"byte_end":65388,"line_start":2182,"line_end":2182,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":65393,"byte_end":65396,"line_start":2183,"line_end":2183,"column_start":5,"column_end":8}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":65401,"byte_end":65419,"line_start":2184,"line_end":2184,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":65424,"byte_end":65427,"line_start":2185,"line_end":2185,"column_start":5,"column_end":8}},{"value":"/ Library: libsgx_tcrypto.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":65432,"byte_end":65461,"line_start":2186,"line_end":2186,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":65466,"byte_end":65469,"line_start":2187,"line_end":2187,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":65474,"byte_end":65486,"line_start":2188,"line_end":2188,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":65491,"byte_end":65494,"line_start":2189,"line_end":2189,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_INVALID_PARAMETER**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":65499,"byte_end":65534,"line_start":2190,"line_end":2190,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":65539,"byte_end":65542,"line_start":2191,"line_end":2191,"column_start":5,"column_end":8}},{"value":"/ The pointer is invalid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":65547,"byte_end":65574,"line_start":2192,"line_end":2192,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":65579,"byte_end":65582,"line_start":2193,"line_end":2193,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_OUT_OF_MEMORY**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":65587,"byte_end":65618,"line_start":2194,"line_end":2194,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":65623,"byte_end":65626,"line_start":2195,"line_end":2195,"column_start":5,"column_end":8}},{"value":"/ Not enough memory is available to complete this operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":65631,"byte_end":65693,"line_start":2196,"line_end":2196,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":65698,"byte_end":65701,"line_start":2197,"line_end":2197,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_UNEXPECTED**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":65706,"byte_end":65734,"line_start":2198,"line_end":2198,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":65739,"byte_end":65742,"line_start":2199,"line_end":2199,"column_start":5,"column_end":8}},{"value":"/ The ECC context state was not initialized properly due to an internal cryptography library failure.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":65747,"byte_end":65850,"line_start":2200,"line_end":2200,"column_start":5,"column_end":108}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":65855,"byte_end":65858,"line_start":2201,"line_end":2201,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":68225,"byte_end":68240,"line_start":2272,"line_end":2272,"column_start":12,"column_end":27},"name":"create_key_pair","qualname":"<SgxEccHandle>::create_key_pair","value":"pub fn create_key_pair(&Self)\n-> SgxResult<(sgx_ec256_private_t, sgx_ec256_public_t)>","parent":null,"children":[],"decl_id":null,"docs":"\n create_key_pair generates a private/public key pair on the ECC curve for the given\n cryptographic system.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":66238,"byte_end":66241,"line_start":2217,"line_end":2217,"column_start":5,"column_end":8}},{"value":"/ create_key_pair generates a private/public key pair on the ECC curve for the given","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":66246,"byte_end":66332,"line_start":2218,"line_end":2218,"column_start":5,"column_end":91}},{"value":"/ cryptographic system.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":66337,"byte_end":66362,"line_start":2219,"line_end":2219,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":66367,"byte_end":66370,"line_start":2220,"line_end":2220,"column_start":5,"column_end":8}},{"value":"/ open must be called to allocate and initialize the ECC context prior to making this call.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":66375,"byte_end":66468,"line_start":2221,"line_end":2221,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":66473,"byte_end":66476,"line_start":2222,"line_end":2222,"column_start":5,"column_end":8}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":66481,"byte_end":66498,"line_start":2223,"line_end":2223,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":66503,"byte_end":66506,"line_start":2224,"line_end":2224,"column_start":5,"column_end":8}},{"value":"/ This function populates private/public key pair. The calling code allocates","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":66511,"byte_end":66590,"line_start":2225,"line_end":2225,"column_start":5,"column_end":84}},{"value":"/ memory for the private and public key pointers to be populated. The function","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":66595,"byte_end":66675,"line_start":2226,"line_end":2226,"column_start":5,"column_end":85}},{"value":"/ generates a private key p_private and computes a public key p_public of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":66680,"byte_end":66755,"line_start":2227,"line_end":2227,"column_start":5,"column_end":80}},{"value":"/ the elliptic cryptosystem over a finite field GF(p).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":66760,"byte_end":66816,"line_start":2228,"line_end":2228,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":66821,"byte_end":66824,"line_start":2229,"line_end":2229,"column_start":5,"column_end":8}},{"value":"/ The private key p_private is a number that lies in the range of [1, n-1]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":66829,"byte_end":66905,"line_start":2230,"line_end":2230,"column_start":5,"column_end":81}},{"value":"/ where n is the order of the elliptic curve base point.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":66910,"byte_end":66968,"line_start":2231,"line_end":2231,"column_start":5,"column_end":63}},{"value":"/ The public key p_public is an elliptic curve point such that p_public =","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":66973,"byte_end":67048,"line_start":2232,"line_end":2232,"column_start":5,"column_end":80}},{"value":"/ p_private *G, where G is the base point of the elliptic curve.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67053,"byte_end":67119,"line_start":2233,"line_end":2233,"column_start":5,"column_end":71}},{"value":"/ The context of the point p_public as an elliptic curve point must be created","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67124,"byte_end":67204,"line_start":2234,"line_end":2234,"column_start":5,"column_end":85}},{"value":"/ by using the function open.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67209,"byte_end":67240,"line_start":2235,"line_end":2235,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67245,"byte_end":67248,"line_start":2236,"line_end":2236,"column_start":5,"column_end":8}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67253,"byte_end":67271,"line_start":2237,"line_end":2237,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67276,"byte_end":67279,"line_start":2238,"line_end":2238,"column_start":5,"column_end":8}},{"value":"/ Library: libsgx_tcrypto.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67284,"byte_end":67313,"line_start":2239,"line_end":2239,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67318,"byte_end":67321,"line_start":2240,"line_end":2240,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67326,"byte_end":67344,"line_start":2241,"line_end":2241,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67349,"byte_end":67352,"line_start":2242,"line_end":2242,"column_start":5,"column_end":8}},{"value":"/ **sgx_ec256_private_t**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67357,"byte_end":67384,"line_start":2243,"line_end":2243,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67389,"byte_end":67392,"line_start":2244,"line_end":2244,"column_start":5,"column_end":8}},{"value":"/ The private key which is a number that lies in the range of [1, n-1] where n is the order","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67397,"byte_end":67490,"line_start":2245,"line_end":2245,"column_start":5,"column_end":98}},{"value":"/ of the elliptic curve base point.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67495,"byte_end":67532,"line_start":2246,"line_end":2246,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67537,"byte_end":67540,"line_start":2247,"line_end":2247,"column_start":5,"column_end":8}},{"value":"/ **sgx_ec256_public_t**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67545,"byte_end":67571,"line_start":2248,"line_end":2248,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67576,"byte_end":67579,"line_start":2249,"line_end":2249,"column_start":5,"column_end":8}},{"value":"/ The public key which is an elliptic curve point such that:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67584,"byte_end":67646,"line_start":2250,"line_end":2250,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67651,"byte_end":67654,"line_start":2251,"line_end":2251,"column_start":5,"column_end":8}},{"value":"/ public key = private key * G, where G is the base point of the elliptic curve.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67659,"byte_end":67741,"line_start":2252,"line_end":2252,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67746,"byte_end":67749,"line_start":2253,"line_end":2253,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67754,"byte_end":67766,"line_start":2254,"line_end":2254,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67771,"byte_end":67774,"line_start":2255,"line_end":2255,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_INVALID_PARAMETER**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67779,"byte_end":67814,"line_start":2256,"line_end":2256,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67819,"byte_end":67822,"line_start":2257,"line_end":2257,"column_start":5,"column_end":8}},{"value":"/ The pointer is invalid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67827,"byte_end":67854,"line_start":2258,"line_end":2258,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67859,"byte_end":67862,"line_start":2259,"line_end":2259,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_INVALID_STATE**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67867,"byte_end":67898,"line_start":2260,"line_end":2260,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67903,"byte_end":67906,"line_start":2261,"line_end":2261,"column_start":5,"column_end":8}},{"value":"/ The ECC state is not initialized.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67911,"byte_end":67948,"line_start":2262,"line_end":2262,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67953,"byte_end":67956,"line_start":2263,"line_end":2263,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_OUT_OF_MEMORY**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67961,"byte_end":67992,"line_start":2264,"line_end":2264,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":67997,"byte_end":68000,"line_start":2265,"line_end":2265,"column_start":5,"column_end":8}},{"value":"/ Not enough memory is available to complete this operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":68005,"byte_end":68067,"line_start":2266,"line_end":2266,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":68072,"byte_end":68075,"line_start":2267,"line_end":2267,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_UNEXPECTED**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":68080,"byte_end":68108,"line_start":2268,"line_end":2268,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":68113,"byte_end":68116,"line_start":2269,"line_end":2269,"column_start":5,"column_end":8}},{"value":"/ The key creation process failed due to an internal cryptography library failure.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":68121,"byte_end":68205,"line_start":2270,"line_end":2270,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":68210,"byte_end":68213,"line_start":2271,"line_end":2271,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":68765,"byte_end":68786,"line_start":2287,"line_end":2287,"column_start":12,"column_end":33},"name":"create_align_key_pair","qualname":"<SgxEccHandle>::create_align_key_pair","value":"pub fn create_align_key_pair(&Self)\n-> SgxResult<(sgx_align_ec256_private_t, sgx_ec256_public_t)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":70554,"byte_end":70565,"line_start":2351,"line_end":2351,"column_start":12,"column_end":23},"name":"check_point","qualname":"<SgxEccHandle>::check_point","value":"pub fn check_point(&Self, &sgx_ec256_public_t) -> SgxResult<bool>","parent":null,"children":[],"decl_id":null,"docs":"\n check_point checks whether the input point is a valid point on the ECC curve for the given cryptographic system.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":69335,"byte_end":69338,"line_start":2304,"line_end":2304,"column_start":5,"column_end":8}},{"value":"/ check_point checks whether the input point is a valid point on the ECC curve for the given cryptographic system.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":69343,"byte_end":69459,"line_start":2305,"line_end":2305,"column_start":5,"column_end":121}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":69464,"byte_end":69467,"line_start":2306,"line_end":2306,"column_start":5,"column_end":8}},{"value":"/ open context must be called to allocate and initialize the ECC context prior to making this call.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":69472,"byte_end":69573,"line_start":2307,"line_end":2307,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":69578,"byte_end":69581,"line_start":2308,"line_end":2308,"column_start":5,"column_end":8}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":69586,"byte_end":69603,"line_start":2309,"line_end":2309,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":69608,"byte_end":69611,"line_start":2310,"line_end":2310,"column_start":5,"column_end":8}},{"value":"/ check_point validates whether the input point is a valid point on the ECC curve for the given cryptographic system.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":69616,"byte_end":69735,"line_start":2311,"line_end":2311,"column_start":5,"column_end":124}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":69740,"byte_end":69743,"line_start":2312,"line_end":2312,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":69748,"byte_end":69764,"line_start":2313,"line_end":2313,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":69769,"byte_end":69772,"line_start":2314,"line_end":2314,"column_start":5,"column_end":8}},{"value":"/ **point**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":69777,"byte_end":69790,"line_start":2315,"line_end":2315,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":69795,"byte_end":69798,"line_start":2316,"line_end":2316,"column_start":5,"column_end":8}},{"value":"/ A pointer to the point to perform validity check on.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":69803,"byte_end":69859,"line_start":2317,"line_end":2317,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":69864,"byte_end":69867,"line_start":2318,"line_end":2318,"column_start":5,"column_end":8}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":69872,"byte_end":69890,"line_start":2319,"line_end":2319,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":69895,"byte_end":69898,"line_start":2320,"line_end":2320,"column_start":5,"column_end":8}},{"value":"/ Library: libsgx_tcrypto.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":69903,"byte_end":69932,"line_start":2321,"line_end":2321,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":69937,"byte_end":69940,"line_start":2322,"line_end":2322,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":69945,"byte_end":69963,"line_start":2323,"line_end":2323,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":69968,"byte_end":69971,"line_start":2324,"line_end":2324,"column_start":5,"column_end":8}},{"value":"/ **true**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":69976,"byte_end":69988,"line_start":2325,"line_end":2325,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":69993,"byte_end":69996,"line_start":2326,"line_end":2326,"column_start":5,"column_end":8}},{"value":"/ The input point is valid","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":70001,"byte_end":70029,"line_start":2327,"line_end":2327,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":70034,"byte_end":70037,"line_start":2328,"line_end":2328,"column_start":5,"column_end":8}},{"value":"/ **false**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":70042,"byte_end":70055,"line_start":2329,"line_end":2329,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":70060,"byte_end":70063,"line_start":2330,"line_end":2330,"column_start":5,"column_end":8}},{"value":"/ The input point is not valid","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":70068,"byte_end":70100,"line_start":2331,"line_end":2331,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":70105,"byte_end":70108,"line_start":2332,"line_end":2332,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":70113,"byte_end":70125,"line_start":2333,"line_end":2333,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":70130,"byte_end":70133,"line_start":2334,"line_end":2334,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_INVALID_PARAMETER**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":70138,"byte_end":70173,"line_start":2335,"line_end":2335,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":70178,"byte_end":70181,"line_start":2336,"line_end":2336,"column_start":5,"column_end":8}},{"value":"/ The pointer is invalid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":70186,"byte_end":70213,"line_start":2337,"line_end":2337,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":70218,"byte_end":70221,"line_start":2338,"line_end":2338,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_INVALID_STATE**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":70226,"byte_end":70257,"line_start":2339,"line_end":2339,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":70262,"byte_end":70265,"line_start":2340,"line_end":2340,"column_start":5,"column_end":8}},{"value":"/ The ECC state is not initialized.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":70270,"byte_end":70307,"line_start":2341,"line_end":2341,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":70312,"byte_end":70315,"line_start":2342,"line_end":2342,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_OUT_OF_MEMORY**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":70320,"byte_end":70351,"line_start":2343,"line_end":2343,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":70356,"byte_end":70359,"line_start":2344,"line_end":2344,"column_start":5,"column_end":8}},{"value":"/ Not enough memory is available to complete this operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":70364,"byte_end":70426,"line_start":2345,"line_end":2345,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":70431,"byte_end":70434,"line_start":2346,"line_end":2346,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_UNEXPECTED**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":70439,"byte_end":70467,"line_start":2347,"line_end":2347,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":70472,"byte_end":70475,"line_start":2348,"line_end":2348,"column_start":5,"column_end":8}},{"value":"/ An internal cryptography library failure occurred.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":70480,"byte_end":70534,"line_start":2349,"line_end":2349,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":70539,"byte_end":70542,"line_start":2350,"line_end":2350,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":74584,"byte_end":74604,"line_start":2460,"line_end":2460,"column_start":12,"column_end":32},"name":"compute_shared_dhkey","qualname":"<SgxEccHandle>::compute_shared_dhkey","value":"pub fn compute_shared_dhkey(&Self, &sgx_ec256_private_t, &sgx_ec256_public_t)\n-> SgxResult<sgx_ec256_dh_shared_t>","parent":null,"children":[],"decl_id":null,"docs":"\n compute_shared_dhkey generates a secret key shared between two participants of the cryptosystem.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":71105,"byte_end":71108,"line_start":2370,"line_end":2370,"column_start":5,"column_end":8}},{"value":"/ compute_shared_dhkey generates a secret key shared between two participants of the cryptosystem.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":71113,"byte_end":71213,"line_start":2371,"line_end":2371,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":71218,"byte_end":71221,"line_start":2372,"line_end":2372,"column_start":5,"column_end":8}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":71226,"byte_end":71243,"line_start":2373,"line_end":2373,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":71248,"byte_end":71251,"line_start":2374,"line_end":2374,"column_start":5,"column_end":8}},{"value":"/ This function computes the Diffie-Hellman shared key based on the enclaveâ€™s","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":71256,"byte_end":71337,"line_start":2375,"line_end":2375,"column_start":5,"column_end":84}},{"value":"/ own (local) private key and remote enclaveâ€™s public Ga Key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":71342,"byte_end":71407,"line_start":2376,"line_end":2376,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":71412,"byte_end":71415,"line_start":2377,"line_end":2377,"column_start":5,"column_end":8}},{"value":"/ The function computes a secret number sharedKey, which is a secret key","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":71420,"byte_end":71494,"line_start":2378,"line_end":2378,"column_start":5,"column_end":79}},{"value":"/ shared between two participants of the cryptosystem.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":71499,"byte_end":71555,"line_start":2379,"line_end":2379,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":71560,"byte_end":71563,"line_start":2380,"line_end":2380,"column_start":5,"column_end":8}},{"value":"/ In cryptography, metasyntactic names such as Alice as Bob are normally used","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":71568,"byte_end":71647,"line_start":2381,"line_end":2381,"column_start":5,"column_end":84}},{"value":"/ as examples and in discussions and stand for participant A and participant B.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":71652,"byte_end":71733,"line_start":2382,"line_end":2382,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":71738,"byte_end":71741,"line_start":2383,"line_end":2383,"column_start":5,"column_end":8}},{"value":"/ Both participants (Alice and Bob) use the cryptosystem for receiving a common","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":71746,"byte_end":71827,"line_start":2384,"line_end":2384,"column_start":5,"column_end":86}},{"value":"/ secret point on the elliptic curve called a secret key (sharedKey). To","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":71832,"byte_end":71906,"line_start":2385,"line_end":2385,"column_start":5,"column_end":79}},{"value":"/ receive a secret key, participants apply the Diffie-Hellman key-agreement","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":71911,"byte_end":71988,"line_start":2386,"line_end":2386,"column_start":5,"column_end":82}},{"value":"/ scheme involving public key exchange. The value of the secret key entirely","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":71993,"byte_end":72071,"line_start":2387,"line_end":2387,"column_start":5,"column_end":83}},{"value":"/ depends on participants.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":72076,"byte_end":72104,"line_start":2388,"line_end":2388,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":72109,"byte_end":72112,"line_start":2389,"line_end":2389,"column_start":5,"column_end":8}},{"value":"/ According to the scheme, Alice and Bob perform the following operations:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":72117,"byte_end":72193,"line_start":2390,"line_end":2390,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":72198,"byte_end":72201,"line_start":2391,"line_end":2391,"column_start":5,"column_end":8}},{"value":"/ 1. Alice calculates her own public key pubKeyA by using her private key","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":72206,"byte_end":72281,"line_start":2392,"line_end":2392,"column_start":5,"column_end":80}},{"value":"/ privKeyA: pubKeyA = privKeyA * G, where G is the base point of the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":72286,"byte_end":72356,"line_start":2393,"line_end":2393,"column_start":5,"column_end":75}},{"value":"/ elliptic curve.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":72361,"byte_end":72380,"line_start":2394,"line_end":2394,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":72385,"byte_end":72388,"line_start":2395,"line_end":2395,"column_start":5,"column_end":8}},{"value":"/ 2. Alice passes the public key to Bob.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":72393,"byte_end":72435,"line_start":2396,"line_end":2396,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":72440,"byte_end":72443,"line_start":2397,"line_end":2397,"column_start":5,"column_end":8}},{"value":"/ 3. Bob calculates his own public key pubKeyB by using his private key","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":72448,"byte_end":72521,"line_start":2398,"line_end":2398,"column_start":5,"column_end":78}},{"value":"/ privKeyB: pubKeyB = privKeyB * G, where G is a base point of the elliptic curve.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":72526,"byte_end":72610,"line_start":2399,"line_end":2399,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":72615,"byte_end":72618,"line_start":2400,"line_end":2400,"column_start":5,"column_end":8}},{"value":"/ 4. Bob passes the public key to Alice.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":72623,"byte_end":72665,"line_start":2401,"line_end":2401,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":72670,"byte_end":72673,"line_start":2402,"line_end":2402,"column_start":5,"column_end":8}},{"value":"/ 5. Alice gets Bob's public key and calculates the secret point shareKeyA. When","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":72678,"byte_end":72760,"line_start":2403,"line_end":2403,"column_start":5,"column_end":87}},{"value":"/ calculating, she uses her own private key and Bob's public key and applies the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":72765,"byte_end":72847,"line_start":2404,"line_end":2404,"column_start":5,"column_end":87}},{"value":"/ following formula:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":72852,"byte_end":72874,"line_start":2405,"line_end":2405,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":72879,"byte_end":72882,"line_start":2406,"line_end":2406,"column_start":5,"column_end":8}},{"value":"/ shareKeyA = privKeyA * pubKeyB = privKeyA * privKeyB * G.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":72887,"byte_end":72948,"line_start":2407,"line_end":2407,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":72953,"byte_end":72956,"line_start":2408,"line_end":2408,"column_start":5,"column_end":8}},{"value":"/ 6. Bob gets Alice's public key and calculates the secret point shareKeyB. When","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":72961,"byte_end":73043,"line_start":2409,"line_end":2409,"column_start":5,"column_end":87}},{"value":"/ calculating, he uses his own private key and Alice's public key and applies the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73048,"byte_end":73131,"line_start":2410,"line_end":2410,"column_start":5,"column_end":88}},{"value":"/ following formula:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73136,"byte_end":73158,"line_start":2411,"line_end":2411,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73163,"byte_end":73166,"line_start":2412,"line_end":2412,"column_start":5,"column_end":8}},{"value":"/ shareKeyB = privKeyB * pubKeyA = privKeyB * privKeyA * G.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73171,"byte_end":73232,"line_start":2413,"line_end":2413,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73237,"byte_end":73240,"line_start":2414,"line_end":2414,"column_start":5,"column_end":8}},{"value":"/ As the following equation is true privKeyA * privKeyB * G =","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73245,"byte_end":73308,"line_start":2415,"line_end":2415,"column_start":5,"column_end":68}},{"value":"/ privKeyB * privKeyA * G, the result of both calculations is the same,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73313,"byte_end":73386,"line_start":2416,"line_end":2416,"column_start":5,"column_end":78}},{"value":"/ that is, the equation shareKeyA = shareKeyB is true. The secret point serves as","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73391,"byte_end":73474,"line_start":2417,"line_end":2417,"column_start":5,"column_end":88}},{"value":"/ a secret key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73479,"byte_end":73496,"line_start":2418,"line_end":2418,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73501,"byte_end":73504,"line_start":2419,"line_end":2419,"column_start":5,"column_end":8}},{"value":"/ Shared secret shareKey is an x-coordinate of the secret point on the elliptic","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73509,"byte_end":73590,"line_start":2420,"line_end":2420,"column_start":5,"column_end":86}},{"value":"/ curve. The elliptic curve domain parameters must be hitherto defined by the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73595,"byte_end":73674,"line_start":2421,"line_end":2421,"column_start":5,"column_end":84}},{"value":"/ function: open.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73679,"byte_end":73698,"line_start":2422,"line_end":2422,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73703,"byte_end":73706,"line_start":2423,"line_end":2423,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73711,"byte_end":73727,"line_start":2424,"line_end":2424,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73732,"byte_end":73735,"line_start":2425,"line_end":2425,"column_start":5,"column_end":8}},{"value":"/ **private_b**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73740,"byte_end":73757,"line_start":2426,"line_end":2426,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73762,"byte_end":73765,"line_start":2427,"line_end":2427,"column_start":5,"column_end":8}},{"value":"/ A pointer to the local private key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73770,"byte_end":73809,"line_start":2428,"line_end":2428,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73814,"byte_end":73817,"line_start":2429,"line_end":2429,"column_start":5,"column_end":8}},{"value":"/ **public_ga**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73822,"byte_end":73839,"line_start":2430,"line_end":2430,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73844,"byte_end":73847,"line_start":2431,"line_end":2431,"column_start":5,"column_end":8}},{"value":"/ A pointer to the remote public key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73852,"byte_end":73891,"line_start":2432,"line_end":2432,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73896,"byte_end":73899,"line_start":2433,"line_end":2433,"column_start":5,"column_end":8}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73904,"byte_end":73922,"line_start":2434,"line_end":2434,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73927,"byte_end":73930,"line_start":2435,"line_end":2435,"column_start":5,"column_end":8}},{"value":"/ Library: libsgx_tcrypto.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73935,"byte_end":73964,"line_start":2436,"line_end":2436,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73969,"byte_end":73972,"line_start":2437,"line_end":2437,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":73977,"byte_end":73995,"line_start":2438,"line_end":2438,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":74000,"byte_end":74003,"line_start":2439,"line_end":2439,"column_start":5,"column_end":8}},{"value":"/ The secret key generated by this function which is a common point on the elliptic curve.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":74008,"byte_end":74100,"line_start":2440,"line_end":2440,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":74105,"byte_end":74108,"line_start":2441,"line_end":2441,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":74113,"byte_end":74125,"line_start":2442,"line_end":2442,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":74130,"byte_end":74133,"line_start":2443,"line_end":2443,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_INVALID_PARAMETER**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":74138,"byte_end":74173,"line_start":2444,"line_end":2444,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":74178,"byte_end":74181,"line_start":2445,"line_end":2445,"column_start":5,"column_end":8}},{"value":"/ The pointer is invalid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":74186,"byte_end":74213,"line_start":2446,"line_end":2446,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":74218,"byte_end":74221,"line_start":2447,"line_end":2447,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_INVALID_STATE**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":74226,"byte_end":74257,"line_start":2448,"line_end":2448,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":74262,"byte_end":74265,"line_start":2449,"line_end":2449,"column_start":5,"column_end":8}},{"value":"/ The ECC state is not initialized.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":74270,"byte_end":74307,"line_start":2450,"line_end":2450,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":74312,"byte_end":74315,"line_start":2451,"line_end":2451,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_OUT_OF_MEMORY**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":74320,"byte_end":74351,"line_start":2452,"line_end":2452,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":74356,"byte_end":74359,"line_start":2453,"line_end":2453,"column_start":5,"column_end":8}},{"value":"/ Not enough memory is available to complete this operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":74364,"byte_end":74426,"line_start":2454,"line_end":2454,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":74431,"byte_end":74434,"line_start":2455,"line_end":2455,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_UNEXPECTED**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":74439,"byte_end":74467,"line_start":2456,"line_end":2456,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":74472,"byte_end":74475,"line_start":2457,"line_end":2457,"column_start":5,"column_end":8}},{"value":"/ The key creation process failed due to an internal cryptography library failure.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":74480,"byte_end":74564,"line_start":2458,"line_end":2458,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":74569,"byte_end":74572,"line_start":2459,"line_end":2459,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":75222,"byte_end":75248,"line_start":2482,"line_end":2482,"column_start":12,"column_end":38},"name":"compute_align_shared_dhkey","qualname":"<SgxEccHandle>::compute_align_shared_dhkey","value":"pub fn compute_align_shared_dhkey(&Self, &sgx_ec256_private_t,\n                                  &sgx_ec256_public_t)\n-> SgxResult<sgx_align_ec256_dh_shared_t>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":78383,"byte_end":78397,"line_start":2579,"line_end":2579,"column_start":12,"column_end":26},"name":"ecdsa_sign_msg","qualname":"<SgxEccHandle>::ecdsa_sign_msg","value":"pub fn ecdsa_sign_msg<T>(&Self, &T, &sgx_ec256_private_t)\n-> SgxResult<sgx_ec256_signature_t> where T: Copy + ContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"\n ecdsa_sign_msg computes a digital signature with a given private key over an input dataset.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":76484,"byte_end":76487,"line_start":2519,"line_end":2519,"column_start":5,"column_end":8}},{"value":"/ ecdsa_sign_msg computes a digital signature with a given private key over an input dataset.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":76492,"byte_end":76587,"line_start":2520,"line_end":2520,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":76592,"byte_end":76595,"line_start":2521,"line_end":2521,"column_start":5,"column_end":8}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":76600,"byte_end":76617,"line_start":2522,"line_end":2522,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":76622,"byte_end":76625,"line_start":2523,"line_end":2523,"column_start":5,"column_end":8}},{"value":"/ This function computes a digital signature over the input dataset based on the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":76630,"byte_end":76712,"line_start":2524,"line_end":2524,"column_start":5,"column_end":87}},{"value":"/ put private key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":76717,"byte_end":76737,"line_start":2525,"line_end":2525,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":76742,"byte_end":76745,"line_start":2526,"line_end":2526,"column_start":5,"column_end":8}},{"value":"/ A message digest is a fixed size number derived from the original message","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":76750,"byte_end":76827,"line_start":2527,"line_end":2527,"column_start":5,"column_end":82}},{"value":"/ in this case)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":76914,"byte_end":76931,"line_start":2529,"line_end":2529,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":76936,"byte_end":76939,"line_start":2530,"line_end":2530,"column_start":5,"column_end":8}},{"value":"/ The signer's private key and the message digest are used to create a signature.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":76944,"byte_end":77027,"line_start":2531,"line_end":2531,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77032,"byte_end":77035,"line_start":2532,"line_end":2532,"column_start":5,"column_end":8}},{"value":"/ A digital signature over a message consists of a pair of large numbers, 256-bits","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77040,"byte_end":77124,"line_start":2533,"line_end":2533,"column_start":5,"column_end":89}},{"value":"/ each, which the given function computes.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77129,"byte_end":77173,"line_start":2534,"line_end":2534,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77178,"byte_end":77181,"line_start":2535,"line_end":2535,"column_start":5,"column_end":8}},{"value":"/ The scheme used for computing a digital signature is of the ECDSA scheme, an","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77186,"byte_end":77266,"line_start":2536,"line_end":2536,"column_start":5,"column_end":85}},{"value":"/ elliptic curve of the DSA scheme.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77271,"byte_end":77308,"line_start":2537,"line_end":2537,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77313,"byte_end":77316,"line_start":2538,"line_end":2538,"column_start":5,"column_end":8}},{"value":"/ The keys can be generated and set up by the function: create_key_pair.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77321,"byte_end":77395,"line_start":2539,"line_end":2539,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77400,"byte_end":77403,"line_start":2540,"line_end":2540,"column_start":5,"column_end":8}},{"value":"/ The elliptic curve domain parameters must be created by function: open.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77408,"byte_end":77483,"line_start":2541,"line_end":2541,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77488,"byte_end":77491,"line_start":2542,"line_end":2542,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77496,"byte_end":77512,"line_start":2543,"line_end":2543,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77517,"byte_end":77520,"line_start":2544,"line_end":2544,"column_start":5,"column_end":8}},{"value":"/ **data**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77525,"byte_end":77537,"line_start":2545,"line_end":2545,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77542,"byte_end":77545,"line_start":2546,"line_end":2546,"column_start":5,"column_end":8}},{"value":"/ A pointer to the data to calculate the signature over.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77550,"byte_end":77608,"line_start":2547,"line_end":2547,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77613,"byte_end":77616,"line_start":2548,"line_end":2548,"column_start":5,"column_end":8}},{"value":"/ **private**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77621,"byte_end":77636,"line_start":2549,"line_end":2549,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77641,"byte_end":77644,"line_start":2550,"line_end":2550,"column_start":5,"column_end":8}},{"value":"/ A pointer to the private key to be used in the calculation of the signature.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77649,"byte_end":77729,"line_start":2551,"line_end":2551,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77734,"byte_end":77737,"line_start":2552,"line_end":2552,"column_start":5,"column_end":8}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77742,"byte_end":77760,"line_start":2553,"line_end":2553,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77765,"byte_end":77768,"line_start":2554,"line_end":2554,"column_start":5,"column_end":8}},{"value":"/ Library: libsgx_tcrypto.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77773,"byte_end":77802,"line_start":2555,"line_end":2555,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77807,"byte_end":77810,"line_start":2556,"line_end":2556,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77815,"byte_end":77833,"line_start":2557,"line_end":2557,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77838,"byte_end":77841,"line_start":2558,"line_end":2558,"column_start":5,"column_end":8}},{"value":"/ The signature generated by this function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77846,"byte_end":77891,"line_start":2559,"line_end":2559,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77896,"byte_end":77899,"line_start":2560,"line_end":2560,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77904,"byte_end":77916,"line_start":2561,"line_end":2561,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77921,"byte_end":77924,"line_start":2562,"line_end":2562,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_INVALID_PARAMETER**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77929,"byte_end":77964,"line_start":2563,"line_end":2563,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77969,"byte_end":77972,"line_start":2564,"line_end":2564,"column_start":5,"column_end":8}},{"value":"/ The pointer is invalid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":77977,"byte_end":78004,"line_start":2565,"line_end":2565,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":78009,"byte_end":78012,"line_start":2566,"line_end":2566,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_INVALID_STATE**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":78017,"byte_end":78048,"line_start":2567,"line_end":2567,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":78053,"byte_end":78056,"line_start":2568,"line_end":2568,"column_start":5,"column_end":8}},{"value":"/ The ECC state is not initialized.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":78061,"byte_end":78098,"line_start":2569,"line_end":2569,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":78103,"byte_end":78106,"line_start":2570,"line_end":2570,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_OUT_OF_MEMORY**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":78111,"byte_end":78142,"line_start":2571,"line_end":2571,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":78147,"byte_end":78150,"line_start":2572,"line_end":2572,"column_start":5,"column_end":8}},{"value":"/ Not enough memory is available to complete this operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":78155,"byte_end":78217,"line_start":2573,"line_end":2573,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":78222,"byte_end":78225,"line_start":2574,"line_end":2574,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_UNEXPECTED**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":78230,"byte_end":78258,"line_start":2575,"line_end":2575,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":78263,"byte_end":78266,"line_start":2576,"line_end":2576,"column_start":5,"column_end":8}},{"value":"/ The signature generation process failed due to an internal cryptography library failure.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":78271,"byte_end":78363,"line_start":2577,"line_end":2577,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":78368,"byte_end":78371,"line_start":2578,"line_end":2578,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":79080,"byte_end":79096,"line_start":2602,"line_end":2602,"column_start":12,"column_end":28},"name":"ecdsa_sign_slice","qualname":"<SgxEccHandle>::ecdsa_sign_slice","value":"pub fn ecdsa_sign_slice<T>(&Self, &[T], &sgx_ec256_private_t)\n-> SgxResult<sgx_ec256_signature_t> where T: Copy + ContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"\n ecdsa_sign_slice computes a digital signature with a given private key over an input dataset.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":78955,"byte_end":78958,"line_start":2599,"line_end":2599,"column_start":5,"column_end":8}},{"value":"/ ecdsa_sign_slice computes a digital signature with a given private key over an input dataset.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":78963,"byte_end":79060,"line_start":2600,"line_end":2600,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":79065,"byte_end":79068,"line_start":2601,"line_end":2601,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":81337,"byte_end":81353,"line_start":2682,"line_end":2682,"column_start":12,"column_end":28},"name":"ecdsa_verify_msg","qualname":"<SgxEccHandle>::ecdsa_verify_msg","value":"pub fn ecdsa_verify_msg<T>(&Self, &T, &sgx_ec256_public_t,\n                           &sgx_ec256_signature_t) -> SgxResult<bool> where\nT: Copy + ContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"\n ecdsa_verify_msg verifies the input digital signature with a given public key over an input dataset.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":79658,"byte_end":79661,"line_start":2622,"line_end":2622,"column_start":5,"column_end":8}},{"value":"/ ecdsa_verify_msg verifies the input digital signature with a given public key over an input dataset.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":79666,"byte_end":79770,"line_start":2623,"line_end":2623,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":79775,"byte_end":79778,"line_start":2624,"line_end":2624,"column_start":5,"column_end":8}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":79783,"byte_end":79800,"line_start":2625,"line_end":2625,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":79805,"byte_end":79808,"line_start":2626,"line_end":2626,"column_start":5,"column_end":8}},{"value":"/ This function verifies the signature for the given data set based on the input public key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":79813,"byte_end":79907,"line_start":2627,"line_end":2627,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":79912,"byte_end":79915,"line_start":2628,"line_end":2628,"column_start":5,"column_end":8}},{"value":"/ A digital signature over a message consists of a pair of large numbers, 256-bits","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":79920,"byte_end":80004,"line_start":2629,"line_end":2629,"column_start":5,"column_end":89}},{"value":"/ each, which could be created by function: sgx_ecdsa_sign. The scheme","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80009,"byte_end":80081,"line_start":2630,"line_end":2630,"column_start":5,"column_end":77}},{"value":"/ used for computing a digital signature is of the ECDSA scheme, an elliptic","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80086,"byte_end":80164,"line_start":2631,"line_end":2631,"column_start":5,"column_end":83}},{"value":"/ curve of the DSA scheme.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80169,"byte_end":80197,"line_start":2632,"line_end":2632,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80202,"byte_end":80205,"line_start":2633,"line_end":2633,"column_start":5,"column_end":8}},{"value":"/ The elliptic curve domain parameters must be created by function: open.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80210,"byte_end":80285,"line_start":2634,"line_end":2634,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80290,"byte_end":80293,"line_start":2635,"line_end":2635,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80298,"byte_end":80314,"line_start":2636,"line_end":2636,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80319,"byte_end":80322,"line_start":2637,"line_end":2637,"column_start":5,"column_end":8}},{"value":"/ **data**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80327,"byte_end":80339,"line_start":2638,"line_end":2638,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80344,"byte_end":80347,"line_start":2639,"line_end":2639,"column_start":5,"column_end":8}},{"value":"/ A pointer to the signed dataset to verify.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80352,"byte_end":80398,"line_start":2640,"line_end":2640,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80403,"byte_end":80406,"line_start":2641,"line_end":2641,"column_start":5,"column_end":8}},{"value":"/ **public**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80411,"byte_end":80425,"line_start":2642,"line_end":2642,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80430,"byte_end":80433,"line_start":2643,"line_end":2643,"column_start":5,"column_end":8}},{"value":"/ A pointer to the public key to be used in the calculation of the signature.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80438,"byte_end":80517,"line_start":2644,"line_end":2644,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80522,"byte_end":80525,"line_start":2645,"line_end":2645,"column_start":5,"column_end":8}},{"value":"/ **signature**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80530,"byte_end":80547,"line_start":2646,"line_end":2646,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80552,"byte_end":80555,"line_start":2647,"line_end":2647,"column_start":5,"column_end":8}},{"value":"/ A pointer to the signature to be verified.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80560,"byte_end":80606,"line_start":2648,"line_end":2648,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80611,"byte_end":80614,"line_start":2649,"line_end":2649,"column_start":5,"column_end":8}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80619,"byte_end":80637,"line_start":2650,"line_end":2650,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80642,"byte_end":80645,"line_start":2651,"line_end":2651,"column_start":5,"column_end":8}},{"value":"/ Library: libsgx_tcrypto.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80650,"byte_end":80679,"line_start":2652,"line_end":2652,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80684,"byte_end":80687,"line_start":2653,"line_end":2653,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80692,"byte_end":80710,"line_start":2654,"line_end":2654,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80715,"byte_end":80718,"line_start":2655,"line_end":2655,"column_start":5,"column_end":8}},{"value":"/ **true**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80723,"byte_end":80735,"line_start":2656,"line_end":2656,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80740,"byte_end":80743,"line_start":2657,"line_end":2657,"column_start":5,"column_end":8}},{"value":"/ Digital signature is valid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80748,"byte_end":80779,"line_start":2658,"line_end":2658,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80784,"byte_end":80787,"line_start":2659,"line_end":2659,"column_start":5,"column_end":8}},{"value":"/ **false**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80792,"byte_end":80805,"line_start":2660,"line_end":2660,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80810,"byte_end":80813,"line_start":2661,"line_end":2661,"column_start":5,"column_end":8}},{"value":"/ Digital signature is not valid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80818,"byte_end":80853,"line_start":2662,"line_end":2662,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80858,"byte_end":80861,"line_start":2663,"line_end":2663,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80866,"byte_end":80878,"line_start":2664,"line_end":2664,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80883,"byte_end":80886,"line_start":2665,"line_end":2665,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_INVALID_PARAMETER**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80891,"byte_end":80926,"line_start":2666,"line_end":2666,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80931,"byte_end":80934,"line_start":2667,"line_end":2667,"column_start":5,"column_end":8}},{"value":"/ The pointer is invalid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80939,"byte_end":80966,"line_start":2668,"line_end":2668,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80971,"byte_end":80974,"line_start":2669,"line_end":2669,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_INVALID_STATE**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":80979,"byte_end":81010,"line_start":2670,"line_end":2670,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":81015,"byte_end":81018,"line_start":2671,"line_end":2671,"column_start":5,"column_end":8}},{"value":"/ The ECC state is not initialized.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":81023,"byte_end":81060,"line_start":2672,"line_end":2672,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":81065,"byte_end":81068,"line_start":2673,"line_end":2673,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_OUT_OF_MEMORY**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":81073,"byte_end":81104,"line_start":2674,"line_end":2674,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":81109,"byte_end":81112,"line_start":2675,"line_end":2675,"column_start":5,"column_end":8}},{"value":"/ Not enough memory is available to complete this operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":81117,"byte_end":81179,"line_start":2676,"line_end":2676,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":81184,"byte_end":81187,"line_start":2677,"line_end":2677,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_UNEXPECTED**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":81192,"byte_end":81220,"line_start":2678,"line_end":2678,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":81225,"byte_end":81228,"line_start":2679,"line_end":2679,"column_start":5,"column_end":8}},{"value":"/ The verification process failed due to an internal cryptography library failure.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":81233,"byte_end":81317,"line_start":2680,"line_end":2680,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":81322,"byte_end":81325,"line_start":2681,"line_end":2681,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":82201,"byte_end":82219,"line_start":2710,"line_end":2710,"column_start":12,"column_end":30},"name":"ecdsa_verify_slice","qualname":"<SgxEccHandle>::ecdsa_verify_slice","value":"pub fn ecdsa_verify_slice<T>(&Self, &[T], &sgx_ec256_public_t,\n                             &sgx_ec256_signature_t) -> SgxResult<bool> where\nT: Copy + ContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"\n ecdsa_verify_slice verifies the input digital signature with a given public key over an input dataset.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":82067,"byte_end":82070,"line_start":2707,"line_end":2707,"column_start":5,"column_end":8}},{"value":"/ ecdsa_verify_slice verifies the input digital signature with a given public key over an input dataset.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":82075,"byte_end":82181,"line_start":2708,"line_end":2708,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":82186,"byte_end":82189,"line_start":2709,"line_end":2709,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":82944,"byte_end":82961,"line_start":2735,"line_end":2735,"column_start":12,"column_end":29},"name":"ecdsa_verify_hash","qualname":"<SgxEccHandle>::ecdsa_verify_hash","value":"pub fn ecdsa_verify_hash(&Self, &sgx_sha256_hash_t, &sgx_ec256_public_t,\n                         &sgx_ec256_signature_t) -> SgxResult<bool>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":84140,"byte_end":84145,"line_start":2775,"line_end":2775,"column_start":12,"column_end":17},"name":"close","qualname":"<SgxEccHandle>::close","value":"pub fn close(&Self) -> SgxError","parent":null,"children":[],"decl_id":null,"docs":"\n close cleans up and deallocates the ECC 256 GF(p) state that was allocated in function open.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":83639,"byte_end":83642,"line_start":2757,"line_end":2757,"column_start":5,"column_end":8}},{"value":"/ close cleans up and deallocates the ECC 256 GF(p) state that was allocated in function open.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":83647,"byte_end":83743,"line_start":2758,"line_end":2758,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":83748,"byte_end":83751,"line_start":2759,"line_end":2759,"column_start":5,"column_end":8}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":83756,"byte_end":83773,"line_start":2760,"line_end":2760,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":83778,"byte_end":83781,"line_start":2761,"line_end":2761,"column_start":5,"column_end":8}},{"value":"/ close is used by calling code to deallocate memory used for storing the ECC 256 GF(p) state used","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":83786,"byte_end":83886,"line_start":2762,"line_end":2762,"column_start":5,"column_end":105}},{"value":"/ in ECC cryptographic calculations.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":83891,"byte_end":83929,"line_start":2763,"line_end":2763,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":83934,"byte_end":83937,"line_start":2764,"line_end":2764,"column_start":5,"column_end":8}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":83942,"byte_end":83960,"line_start":2765,"line_end":2765,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":83965,"byte_end":83968,"line_start":2766,"line_end":2766,"column_start":5,"column_end":8}},{"value":"/ Library: libsgx_tcrypto.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":83973,"byte_end":84002,"line_start":2767,"line_end":2767,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":84007,"byte_end":84010,"line_start":2768,"line_end":2768,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":84015,"byte_end":84027,"line_start":2769,"line_end":2769,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":84032,"byte_end":84035,"line_start":2770,"line_end":2770,"column_start":5,"column_end":8}},{"value":"/ **SGX_ERROR_INVALID_PARAMETER**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":84040,"byte_end":84075,"line_start":2771,"line_end":2771,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":84080,"byte_end":84083,"line_start":2772,"line_end":2772,"column_start":5,"column_end":8}},{"value":"/ The input handle is invalid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":84088,"byte_end":84120,"line_start":2773,"line_end":2773,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":84125,"byte_end":84128,"line_start":2774,"line_end":2774,"column_start":5,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":180},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":86269,"byte_end":86290,"line_start":2861,"line_end":2861,"column_start":8,"column_end":29},"name":"rsgx_rsa3072_sign_msg","qualname":"::crypto::rsgx_rsa3072_sign_msg","value":"pub fn rsgx_rsa3072_sign_msg<T>(&T, &sgx_rsa3072_key_t)\n-> SgxResult<sgx_rsa3072_signature_t> where T: Copy + ContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"\n The rsgx_rsa3072_sign_msg computes a digital signature for a given dataset based on RSA 3072 private key.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85027,"byte_end":85030,"line_start":2815,"line_end":2815,"column_start":1,"column_end":4}},{"value":"/ The rsgx_rsa3072_sign_msg computes a digital signature for a given dataset based on RSA 3072 private key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85031,"byte_end":85140,"line_start":2816,"line_end":2816,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85141,"byte_end":85144,"line_start":2817,"line_end":2817,"column_start":1,"column_end":4}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85145,"byte_end":85162,"line_start":2818,"line_end":2818,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85163,"byte_end":85166,"line_start":2819,"line_end":2819,"column_start":1,"column_end":4}},{"value":"/ This function computes a digital signature over the input dataset based on the RSA 3072 private key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85167,"byte_end":85271,"line_start":2820,"line_end":2820,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85272,"byte_end":85275,"line_start":2821,"line_end":2821,"column_start":1,"column_end":4}},{"value":"/ A message digest is a fixed size number derived from the original message with an applied hash function","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85276,"byte_end":85383,"line_start":2822,"line_end":2822,"column_start":1,"column_end":108}},{"value":"/ over the binary code of the message. (SHA256 in this case)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85384,"byte_end":85446,"line_start":2823,"line_end":2823,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85447,"byte_end":85450,"line_start":2824,"line_end":2824,"column_start":1,"column_end":4}},{"value":"/ The signer's private key and the message digest are used to create a signature.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85451,"byte_end":85534,"line_start":2825,"line_end":2825,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85535,"byte_end":85538,"line_start":2826,"line_end":2826,"column_start":1,"column_end":4}},{"value":"/ The scheme used for computing a digital signature is of the RSASSA-PKCS1-v1_5 scheme.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85539,"byte_end":85628,"line_start":2827,"line_end":2827,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85629,"byte_end":85632,"line_start":2828,"line_end":2828,"column_start":1,"column_end":4}},{"value":"/ # Parameters","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85633,"byte_end":85649,"line_start":2829,"line_end":2829,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85650,"byte_end":85653,"line_start":2830,"line_end":2830,"column_start":1,"column_end":4}},{"value":"/ **data**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85654,"byte_end":85666,"line_start":2831,"line_end":2831,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85667,"byte_end":85670,"line_start":2832,"line_end":2832,"column_start":1,"column_end":4}},{"value":"/ A pointer to the data to calculate the signature over.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85671,"byte_end":85729,"line_start":2833,"line_end":2833,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85730,"byte_end":85733,"line_start":2834,"line_end":2834,"column_start":1,"column_end":4}},{"value":"/ **key**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85734,"byte_end":85745,"line_start":2835,"line_end":2835,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85746,"byte_end":85749,"line_start":2836,"line_end":2836,"column_start":1,"column_end":4}},{"value":"/ A pointer to the RSA key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85750,"byte_end":85779,"line_start":2837,"line_end":2837,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85780,"byte_end":85783,"line_start":2838,"line_end":2838,"column_start":1,"column_end":4}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85784,"byte_end":85802,"line_start":2839,"line_end":2839,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85803,"byte_end":85806,"line_start":2840,"line_end":2840,"column_start":1,"column_end":4}},{"value":"/ Library: libsgx_tcrypto.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85807,"byte_end":85836,"line_start":2841,"line_end":2841,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85837,"byte_end":85840,"line_start":2842,"line_end":2842,"column_start":1,"column_end":4}},{"value":"/ # Return value","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85841,"byte_end":85859,"line_start":2843,"line_end":2843,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85860,"byte_end":85863,"line_start":2844,"line_end":2844,"column_start":1,"column_end":4}},{"value":"/ The signature generated by this function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85864,"byte_end":85909,"line_start":2845,"line_end":2845,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85910,"byte_end":85913,"line_start":2846,"line_end":2846,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85914,"byte_end":85926,"line_start":2847,"line_end":2847,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85927,"byte_end":85930,"line_start":2848,"line_end":2848,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_INVALID_PARAMETER**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85931,"byte_end":85966,"line_start":2849,"line_end":2849,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85967,"byte_end":85970,"line_start":2850,"line_end":2850,"column_start":1,"column_end":4}},{"value":"/ The RSA key, data is NULL. Or the data size is 0.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":85971,"byte_end":86024,"line_start":2851,"line_end":2851,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":86025,"byte_end":86028,"line_start":2852,"line_end":2852,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_OUT_OF_MEMORY**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":86029,"byte_end":86060,"line_start":2853,"line_end":2853,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":86061,"byte_end":86064,"line_start":2854,"line_end":2854,"column_start":1,"column_end":4}},{"value":"/ Not enough memory is available to complete this operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":86065,"byte_end":86127,"line_start":2855,"line_end":2855,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":86128,"byte_end":86131,"line_start":2856,"line_end":2856,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_UNEXPECTED**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":86132,"byte_end":86160,"line_start":2857,"line_end":2857,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":86161,"byte_end":86164,"line_start":2858,"line_end":2858,"column_start":1,"column_end":4}},{"value":"/ The signature generation process failed due to an internal cryptography library failure.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":86165,"byte_end":86257,"line_start":2859,"line_end":2859,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":86258,"byte_end":86261,"line_start":2860,"line_end":2860,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":182},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":87157,"byte_end":87180,"line_start":2894,"line_end":2894,"column_start":8,"column_end":31},"name":"rsgx_rsa3072_sign_slice","qualname":"::crypto::rsgx_rsa3072_sign_slice","value":"pub fn rsgx_rsa3072_sign_slice<T>(&[T], &sgx_rsa3072_key_t)\n-> SgxResult<sgx_rsa3072_signature_t> where T: Copy + ContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"\n The rsgx_rsa3072_sign_slice computes a digital signature for a given dataset based on RSA 3072 private key.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":87030,"byte_end":87033,"line_start":2891,"line_end":2891,"column_start":1,"column_end":4}},{"value":"/ The rsgx_rsa3072_sign_slice computes a digital signature for a given dataset based on RSA 3072 private key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":87034,"byte_end":87145,"line_start":2892,"line_end":2892,"column_start":1,"column_end":112}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":87146,"byte_end":87149,"line_start":2893,"line_end":2893,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":184},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":89221,"byte_end":89244,"line_start":2976,"line_end":2976,"column_start":8,"column_end":31},"name":"rsgx_rsa3072_verify_msg","qualname":"::crypto::rsgx_rsa3072_verify_msg","value":"pub fn rsgx_rsa3072_verify_msg<T>(&T, &sgx_rsa3072_public_key_t,\n                                  &sgx_rsa3072_signature_t) -> SgxResult<bool>\nwhere T: Copy + ContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"\n rsgx_rsa3072_verify_msg verifies the input digital signature for the given data- set based on the RSA 3072 public key.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":87934,"byte_end":87937,"line_start":2924,"line_end":2924,"column_start":1,"column_end":4}},{"value":"/ rsgx_rsa3072_verify_msg verifies the input digital signature for the given data- set based on the RSA 3072 public key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":87938,"byte_end":88060,"line_start":2925,"line_end":2925,"column_start":1,"column_end":123}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88061,"byte_end":88064,"line_start":2926,"line_end":2926,"column_start":1,"column_end":4}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88065,"byte_end":88082,"line_start":2927,"line_end":2927,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88083,"byte_end":88086,"line_start":2928,"line_end":2928,"column_start":1,"column_end":4}},{"value":"/ This function verifies the signature for the given data set based on the input RSA 3072 public key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88087,"byte_end":88190,"line_start":2929,"line_end":2929,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88191,"byte_end":88194,"line_start":2930,"line_end":2930,"column_start":1,"column_end":4}},{"value":"/ A digital signature over a message is a buffer of 384-bytes, which could be created by function: rsgx_rsa3072_sign.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88195,"byte_end":88314,"line_start":2931,"line_end":2931,"column_start":1,"column_end":120}},{"value":"/ The scheme used for computing a digital signature is of the RSASSA-PKCS1-v1_5 scheme.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88315,"byte_end":88404,"line_start":2932,"line_end":2932,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88405,"byte_end":88408,"line_start":2933,"line_end":2933,"column_start":1,"column_end":4}},{"value":"/ # Parameters","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88409,"byte_end":88425,"line_start":2934,"line_end":2934,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88426,"byte_end":88429,"line_start":2935,"line_end":2935,"column_start":1,"column_end":4}},{"value":"/ **data**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88430,"byte_end":88442,"line_start":2936,"line_end":2936,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88443,"byte_end":88446,"line_start":2937,"line_end":2937,"column_start":1,"column_end":4}},{"value":"/ A pointer to the signed dataset to be verified.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88447,"byte_end":88498,"line_start":2938,"line_end":2938,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88499,"byte_end":88502,"line_start":2939,"line_end":2939,"column_start":1,"column_end":4}},{"value":"/ **public**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88503,"byte_end":88517,"line_start":2940,"line_end":2940,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88518,"byte_end":88521,"line_start":2941,"line_end":2941,"column_start":1,"column_end":4}},{"value":"/ A pointer to the public key to be used in the calculation of the signature.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88522,"byte_end":88601,"line_start":2942,"line_end":2942,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88602,"byte_end":88605,"line_start":2943,"line_end":2943,"column_start":1,"column_end":4}},{"value":"/ **signature**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88606,"byte_end":88623,"line_start":2944,"line_end":2944,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88624,"byte_end":88627,"line_start":2945,"line_end":2945,"column_start":1,"column_end":4}},{"value":"/ A pointer to the signature to be verified.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88628,"byte_end":88674,"line_start":2946,"line_end":2946,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88675,"byte_end":88678,"line_start":2947,"line_end":2947,"column_start":1,"column_end":4}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88679,"byte_end":88697,"line_start":2948,"line_end":2948,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88698,"byte_end":88701,"line_start":2949,"line_end":2949,"column_start":1,"column_end":4}},{"value":"/ Library: libsgx_tcrypto.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88702,"byte_end":88731,"line_start":2950,"line_end":2950,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88732,"byte_end":88735,"line_start":2951,"line_end":2951,"column_start":1,"column_end":4}},{"value":"/ # Return value","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88736,"byte_end":88754,"line_start":2952,"line_end":2952,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88755,"byte_end":88758,"line_start":2953,"line_end":2953,"column_start":1,"column_end":4}},{"value":"/ **true**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88759,"byte_end":88771,"line_start":2954,"line_end":2954,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88772,"byte_end":88775,"line_start":2955,"line_end":2955,"column_start":1,"column_end":4}},{"value":"/ Digital signature is valid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88776,"byte_end":88807,"line_start":2956,"line_end":2956,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88808,"byte_end":88811,"line_start":2957,"line_end":2957,"column_start":1,"column_end":4}},{"value":"/ **false**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88812,"byte_end":88825,"line_start":2958,"line_end":2958,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88826,"byte_end":88829,"line_start":2959,"line_end":2959,"column_start":1,"column_end":4}},{"value":"/ Digital signature is not valid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88830,"byte_end":88865,"line_start":2960,"line_end":2960,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88866,"byte_end":88869,"line_start":2961,"line_end":2961,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88870,"byte_end":88882,"line_start":2962,"line_end":2962,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88883,"byte_end":88886,"line_start":2963,"line_end":2963,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_INVALID_PARAMETER**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88887,"byte_end":88922,"line_start":2964,"line_end":2964,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88923,"byte_end":88926,"line_start":2965,"line_end":2965,"column_start":1,"column_end":4}},{"value":"/ The private key, data is NULL. Or the data size is 0.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88927,"byte_end":88984,"line_start":2966,"line_end":2966,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88985,"byte_end":88988,"line_start":2967,"line_end":2967,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_OUT_OF_MEMORY**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":88989,"byte_end":89020,"line_start":2968,"line_end":2968,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":89021,"byte_end":89024,"line_start":2969,"line_end":2969,"column_start":1,"column_end":4}},{"value":"/ Not enough memory is available to complete this operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":89025,"byte_end":89087,"line_start":2970,"line_end":2970,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":89088,"byte_end":89091,"line_start":2971,"line_end":2971,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_UNEXPECTED**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":89092,"byte_end":89120,"line_start":2972,"line_end":2972,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":89121,"byte_end":89124,"line_start":2973,"line_end":2973,"column_start":1,"column_end":4}},{"value":"/ The verification process failed due to an internal cryptography library failure.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":89125,"byte_end":89209,"line_start":2974,"line_end":2974,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":89210,"byte_end":89213,"line_start":2975,"line_end":2975,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":186},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":90364,"byte_end":90389,"line_start":3014,"line_end":3014,"column_start":8,"column_end":33},"name":"rsgx_rsa3072_verify_slice","qualname":"::crypto::rsgx_rsa3072_verify_slice","value":"pub fn rsgx_rsa3072_verify_slice<T>(&[T], &sgx_rsa3072_public_key_t,\n                                    &sgx_rsa3072_signature_t)\n-> SgxResult<bool> where T: Copy + ContiguousMemory","parent":null,"children":[],"decl_id":null,"docs":"\n rsgx_rsa3072_verify_slice verifies the input digital signature for the given data- set based on the RSA 3072 public key.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":90224,"byte_end":90227,"line_start":3011,"line_end":3011,"column_start":1,"column_end":4}},{"value":"/ rsgx_rsa3072_verify_slice verifies the input digital signature for the given data- set based on the RSA 3072 public key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":90228,"byte_end":90352,"line_start":3012,"line_end":3012,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":90353,"byte_end":90356,"line_start":3013,"line_end":3013,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":188},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":91431,"byte_end":91455,"line_start":3050,"line_end":3050,"column_start":8,"column_end":32},"name":"rsgx_create_rsa_key_pair","qualname":"::crypto::rsgx_create_rsa_key_pair","value":"pub fn rsgx_create_rsa_key_pair(i32, i32, &mut [u8], &mut [u8], &mut [u8],\n                                &mut [u8], &mut [u8], &mut [u8], &mut [u8],\n                                &mut [u8]) -> SgxError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":91383,"byte_end":91423,"line_start":3049,"line_end":3049,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":195},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":98016,"byte_end":98029,"line_start":3291,"line_end":3291,"column_start":12,"column_end":25},"name":"SgxRsaPrivKey","qualname":"::crypto::SgxRsaPrivKey","value":"SgxRsaPrivKey {  }","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":98178,"byte_end":98181,"line_start":3299,"line_end":3299,"column_start":12,"column_end":15},"name":"new","qualname":"<SgxRsaPrivKey>::new","value":"pub fn new() -> SgxRsaPrivKey","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":98448,"byte_end":98454,"line_start":3309,"line_end":3309,"column_start":12,"column_end":18},"name":"create","qualname":"<SgxRsaPrivKey>::create","value":"pub fn create(&Self, i32, i32, &[u8], &[u8], &[u8], &[u8], &[u8], &[u8])\n-> SgxError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":98427,"byte_end":98436,"line_start":3308,"line_end":3308,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":98740,"byte_end":98747,"line_start":3323,"line_end":3323,"column_start":12,"column_end":19},"name":"create2","qualname":"<SgxRsaPrivKey>::create2","value":"pub fn create2(&Self, i32, i32, &[u8], &[u8], &[u8], &[u8], &[u8], &[u8])\n-> SgxError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":99554,"byte_end":99561,"line_start":3360,"line_end":3360,"column_start":12,"column_end":19},"name":"create1","qualname":"<SgxRsaPrivKey>::create1","value":"pub fn create1(&Self, i32, i32, i32, &[u8], &[u8], &[u8]) -> SgxError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":100306,"byte_end":100320,"line_start":3393,"line_end":3393,"column_start":12,"column_end":26},"name":"decrypt_sha256","qualname":"<SgxRsaPrivKey>::decrypt_sha256","value":"pub fn decrypt_sha256(&Self, &mut [u8], &mut usize, &[u8]) -> SgxError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":100769,"byte_end":100773,"line_start":3410,"line_end":3410,"column_start":12,"column_end":16},"name":"free","qualname":"<SgxRsaPrivKey>::free","value":"pub fn free(&Self) -> SgxError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":211},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":101713,"byte_end":101725,"line_start":3452,"line_end":3452,"column_start":12,"column_end":24},"name":"SgxRsaPubKey","qualname":"::crypto::SgxRsaPubKey","value":"SgxRsaPubKey {  }","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":101873,"byte_end":101876,"line_start":3460,"line_end":3460,"column_start":12,"column_end":15},"name":"new","qualname":"<SgxRsaPubKey>::new","value":"pub fn new() -> SgxRsaPubKey","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":102127,"byte_end":102133,"line_start":3469,"line_end":3469,"column_start":12,"column_end":18},"name":"create","qualname":"<SgxRsaPubKey>::create","value":"pub fn create(&Self, i32, i32, &[u8], &[u8]) -> SgxError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":102683,"byte_end":102697,"line_start":3487,"line_end":3487,"column_start":12,"column_end":26},"name":"encrypt_sha256","qualname":"<SgxRsaPubKey>::encrypt_sha256","value":"pub fn encrypt_sha256(&Self, &mut [u8], &mut usize, &[u8]) -> SgxError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":103145,"byte_end":103149,"line_start":3504,"line_end":3504,"column_start":12,"column_end":16},"name":"free","qualname":"<SgxRsaPubKey>::free","value":"pub fn free(&Self) -> SgxError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":225},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104841,"byte_end":104870,"line_start":3581,"line_end":3581,"column_start":8,"column_end":37},"name":"rsgx_calculate_ecdsa_priv_key","qualname":"::crypto::rsgx_calculate_ecdsa_priv_key","value":"pub fn rsgx_calculate_ecdsa_priv_key(&[u8], &[u8], &mut [u8]) -> SgxError","parent":null,"children":[],"decl_id":null,"docs":"\n rsgx_calculate_ecdsa_priv_key generates an ECDSA private key based on an input random seed.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104075,"byte_end":104078,"line_start":3546,"line_end":3546,"column_start":1,"column_end":4}},{"value":"/ rsgx_calculate_ecdsa_priv_key generates an ECDSA private key based on an input random seed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104079,"byte_end":104174,"line_start":3547,"line_end":3547,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104175,"byte_end":104178,"line_start":3548,"line_end":3548,"column_start":1,"column_end":4}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104179,"byte_end":104196,"line_start":3549,"line_end":3549,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104197,"byte_end":104200,"line_start":3550,"line_end":3550,"column_start":1,"column_end":4}},{"value":"/ This function generates an ECDSA private key based on an input random seed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104201,"byte_end":104280,"line_start":3551,"line_end":3551,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104281,"byte_end":104284,"line_start":3552,"line_end":3552,"column_start":1,"column_end":4}},{"value":"/ # Parameters","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104285,"byte_end":104301,"line_start":3553,"line_end":3553,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104302,"byte_end":104305,"line_start":3554,"line_end":3554,"column_start":1,"column_end":4}},{"value":"/ **hash_drg**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104306,"byte_end":104322,"line_start":3555,"line_end":3555,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104323,"byte_end":104326,"line_start":3556,"line_end":3556,"column_start":1,"column_end":4}},{"value":"/ Pointer to the input random seed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104327,"byte_end":104364,"line_start":3557,"line_end":3557,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104365,"byte_end":104368,"line_start":3558,"line_end":3558,"column_start":1,"column_end":4}},{"value":"/ **sgx_nistp256_r_m1**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104369,"byte_end":104394,"line_start":3559,"line_end":3559,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104395,"byte_end":104398,"line_start":3560,"line_end":3560,"column_start":1,"column_end":4}},{"value":"/ Pointer to the buffer for n-1 where n is order of the ECC group used.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104399,"byte_end":104472,"line_start":3561,"line_end":3561,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104473,"byte_end":104476,"line_start":3562,"line_end":3562,"column_start":1,"column_end":4}},{"value":"/ **out_key**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104477,"byte_end":104492,"line_start":3563,"line_end":3563,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104493,"byte_end":104496,"line_start":3564,"line_end":3564,"column_start":1,"column_end":4}},{"value":"/ Pointer to the generated ECDSA private key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104497,"byte_end":104544,"line_start":3565,"line_end":3565,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104545,"byte_end":104548,"line_start":3566,"line_end":3566,"column_start":1,"column_end":4}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104549,"byte_end":104567,"line_start":3567,"line_end":3567,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104568,"byte_end":104571,"line_start":3568,"line_end":3568,"column_start":1,"column_end":4}},{"value":"/ Library: libsgx_tcrypto.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104572,"byte_end":104601,"line_start":3569,"line_end":3569,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104602,"byte_end":104605,"line_start":3570,"line_end":3570,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104606,"byte_end":104618,"line_start":3571,"line_end":3571,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104619,"byte_end":104622,"line_start":3572,"line_end":3572,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_INVALID_PARAMETER**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104623,"byte_end":104658,"line_start":3573,"line_end":3573,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104659,"byte_end":104662,"line_start":3574,"line_end":3574,"column_start":1,"column_end":4}},{"value":"/ Some of the pointers are NULL, or the input size is 0.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104663,"byte_end":104721,"line_start":3575,"line_end":3575,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104722,"byte_end":104725,"line_start":3576,"line_end":3576,"column_start":1,"column_end":4}},{"value":"/ **SGX_ERROR_UNEXPECTED**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104726,"byte_end":104754,"line_start":3577,"line_end":3577,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104755,"byte_end":104758,"line_start":3578,"line_end":3578,"column_start":1,"column_end":4}},{"value":"/ Unexpected error occurred during the ECDSA private key generation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104759,"byte_end":104829,"line_start":3579,"line_end":3579,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":104830,"byte_end":104833,"line_start":3580,"line_end":3580,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":226},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":105796,"byte_end":105831,"line_start":3612,"line_end":3612,"column_start":8,"column_end":43},"name":"rsgx_ecc256_calculate_pub_from_priv","qualname":"::crypto::rsgx_ecc256_calculate_pub_from_priv","value":"pub fn rsgx_ecc256_calculate_pub_from_priv(&sgx_ec256_private_t,\n                                           &mut sgx_ec256_public_t)\n-> SgxError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":227},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":106207,"byte_end":106227,"line_start":3628,"line_end":3628,"column_start":8,"column_end":28},"name":"rsgx_ecc256_priv_key","qualname":"::crypto::rsgx_ecc256_priv_key","value":"pub fn rsgx_ecc256_priv_key(&[u8], &[u8]) -> SgxResult<sgx_ec256_private_t>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":228},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":107130,"byte_end":107156,"line_start":3656,"line_end":3656,"column_start":8,"column_end":34},"name":"rsgx_align_ecc256_priv_key","qualname":"::crypto::rsgx_align_ecc256_priv_key","value":"pub fn rsgx_align_ecc256_priv_key(&[u8], &[u8])\n-> SgxResult<sgx_align_ec256_private_t>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":229},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":108093,"byte_end":108118,"line_start":3684,"line_end":3684,"column_start":8,"column_end":33},"name":"rsgx_ecc256_pub_from_priv","qualname":"::crypto::rsgx_ecc256_pub_from_priv","value":"pub fn rsgx_ecc256_pub_from_priv(&sgx_ec256_private_t)\n-> SgxResult<sgx_ec256_public_t>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":234},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":110549,"byte_end":110561,"line_start":3776,"line_end":3776,"column_start":12,"column_end":24},"name":"SgxAesHandle","qualname":"::crypto::SgxAesHandle","value":"SgxAesHandle {  }","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":110669,"byte_end":110672,"line_start":3782,"line_end":3782,"column_start":12,"column_end":15},"name":"new","qualname":"<SgxAesHandle>::new","value":"pub fn new() -> SgxAesHandle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":110861,"byte_end":110865,"line_start":3789,"line_end":3789,"column_start":12,"column_end":16},"name":"init","qualname":"<SgxAesHandle>::init","value":"pub fn init(&Self, &sgx_aes_gcm_128bit_key_t, &[u8], &[u8]) -> SgxError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":111232,"byte_end":111238,"line_start":3800,"line_end":3800,"column_start":12,"column_end":18},"name":"update","qualname":"<SgxAesHandle>::update","value":"pub fn update(&Self, &[u8], &mut [u8]) -> SgxError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":111598,"byte_end":111605,"line_start":3811,"line_end":3811,"column_start":12,"column_end":19},"name":"get_mac","qualname":"<SgxAesHandle>::get_mac","value":"pub fn get_mac(&Self) -> SgxResult<sgx_aes_gcm_128bit_tag_t>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":112025,"byte_end":112038,"line_start":3823,"line_end":3823,"column_start":12,"column_end":25},"name":"get_align_mac","qualname":"<SgxAesHandle>::get_align_mac","value":"pub fn get_align_mac(&Self) -> SgxResult<sgx_align_mac_128bit_t>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":112476,"byte_end":112481,"line_start":3835,"line_end":3835,"column_start":12,"column_end":17},"name":"close","qualname":"<SgxAesHandle>::close","value":"pub fn close(&Self) -> SgxError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":9141,"byte_end":9153,"line_start":275,"line_end":275,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":15877,"byte_end":15889,"line_start":492,"line_end":492,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":15962,"byte_end":15974,"line_start":498,"line_end":498,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":16256,"byte_end":16269,"line_start":512,"line_end":512,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":18637,"byte_end":18650,"line_start":603,"line_end":603,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":18723,"byte_end":18736,"line_start":609,"line_end":609,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":33766,"byte_end":33779,"line_start":1121,"line_end":1121,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":41325,"byte_end":41338,"line_start":1363,"line_end":1363,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":41411,"byte_end":41424,"line_start":1369,"line_end":1369,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":46887,"byte_end":46900,"line_start":1575,"line_end":1575,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":49774,"byte_end":49787,"line_start":1679,"line_end":1679,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":49860,"byte_end":49873,"line_start":1685,"line_end":1685,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":62703,"byte_end":62715,"line_start":2135,"line_end":2135,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":84746,"byte_end":84758,"line_start":2800,"line_end":2800,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":84831,"byte_end":84843,"line_start":2806,"line_end":2806,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":98151,"byte_end":98164,"line_start":3298,"line_end":3298,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":101537,"byte_end":101550,"line_start":3440,"line_end":3440,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":101623,"byte_end":101636,"line_start":3446,"line_end":3446,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":101847,"byte_end":101859,"line_start":3459,"line_end":3459,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":103912,"byte_end":103924,"line_start":3534,"line_end":3534,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":103997,"byte_end":104009,"line_start":3540,"line_end":3540,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":110643,"byte_end":110655,"line_start":3781,"line_end":3781,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":113074,"byte_end":113086,"line_start":3859,"line_end":3859,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":113159,"byte_end":113171,"line_start":3865,"line_end":3865,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":9141,"byte_end":9153,"line_start":275,"line_end":275,"column_start":6,"column_end":18},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":38},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":15877,"byte_end":15889,"line_start":492,"line_end":492,"column_start":18,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":38},"to":{"krate":1,"index":2032}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":15962,"byte_end":15974,"line_start":498,"line_end":498,"column_start":15,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":38},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":16256,"byte_end":16269,"line_start":512,"line_end":512,"column_start":6,"column_end":19},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":54},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":18637,"byte_end":18650,"line_start":603,"line_end":603,"column_start":18,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":54},"to":{"krate":1,"index":2032}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":18723,"byte_end":18736,"line_start":609,"line_end":609,"column_start":15,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":54},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":33766,"byte_end":33779,"line_start":1121,"line_end":1121,"column_start":6,"column_end":19},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":87},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":41325,"byte_end":41338,"line_start":1363,"line_end":1363,"column_start":18,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":87},"to":{"krate":1,"index":2032}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":41411,"byte_end":41424,"line_start":1369,"line_end":1369,"column_start":15,"column_end":28},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":87},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":46887,"byte_end":46900,"line_start":1575,"line_end":1575,"column_start":6,"column_end":19},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":49774,"byte_end":49787,"line_start":1679,"line_end":1679,"column_start":18,"column_end":31},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":119},"to":{"krate":1,"index":2032}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":49860,"byte_end":49873,"line_start":1685,"line_end":1685,"column_start":15,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":119},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":62703,"byte_end":62715,"line_start":2135,"line_end":2135,"column_start":6,"column_end":18},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":84746,"byte_end":84758,"line_start":2800,"line_end":2800,"column_start":18,"column_end":30},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":155},"to":{"krate":1,"index":2032}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":84831,"byte_end":84843,"line_start":2806,"line_end":2806,"column_start":15,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":155},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":98151,"byte_end":98164,"line_start":3298,"line_end":3298,"column_start":6,"column_end":19},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":101537,"byte_end":101550,"line_start":3440,"line_end":3440,"column_start":18,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":195},"to":{"krate":1,"index":2032}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":101623,"byte_end":101636,"line_start":3446,"line_end":3446,"column_start":15,"column_end":28},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":195},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":101847,"byte_end":101859,"line_start":3459,"line_end":3459,"column_start":6,"column_end":18},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":103912,"byte_end":103924,"line_start":3534,"line_end":3534,"column_start":18,"column_end":30},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":211},"to":{"krate":1,"index":2032}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":103997,"byte_end":104009,"line_start":3540,"line_end":3540,"column_start":15,"column_end":27},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":211},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":110643,"byte_end":110655,"line_start":3781,"line_end":3781,"column_start":6,"column_end":18},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":113074,"byte_end":113086,"line_start":3859,"line_end":3859,"column_start":18,"column_end":30},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":234},"to":{"krate":1,"index":2032}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tcrypto/src/crypto.rs","byte_start":113159,"byte_end":113171,"line_start":3865,"line_end":3865,"column_start":15,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":234},"to":{"krate":1,"index":2265}}]}