{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd","program":"/home/chenge/.rustup/toolchains/nightly-2020-10-25-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","sgx_tstd","--edition=2018","/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","rlib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"backtrace\"","--cfg","feature=\"default\"","--cfg","feature=\"net\"","--cfg","feature=\"stdio\"","-C","metadata=c28bfefc1912e2c5","-C","extra-filename=-c28bfefc1912e2c5","--out-dir","/home/chenge/workplace/rust-sgx-samples/channel_establishment/attestation/target/rls/debug/deps","-L","dependency=/home/chenge/workplace/rust-sgx-samples/channel_establishment/attestation/target/rls/debug/deps","--extern","hashbrown=/home/chenge/workplace/rust-sgx-samples/channel_establishment/attestation/target/rls/debug/deps/libhashbrown_tstd-594437af0f540794.rmeta","--extern","sgx_alloc=/home/chenge/workplace/rust-sgx-samples/channel_establishment/attestation/target/rls/debug/deps/libsgx_alloc-f508566f9e6d2193.rmeta","--extern","sgx_backtrace_sys=/home/chenge/workplace/rust-sgx-samples/channel_establishment/attestation/target/rls/debug/deps/libsgx_backtrace_sys-08eaa1cf1e0824f7.rmeta","--extern","sgx_demangle=/home/chenge/workplace/rust-sgx-samples/channel_establishment/attestation/target/rls/debug/deps/libsgx_demangle-eaffa584b36ca057.rmeta","--extern","sgx_libc=/home/chenge/workplace/rust-sgx-samples/channel_establishment/attestation/target/rls/debug/deps/libsgx_libc-0f6cea5001f4f5af.rmeta","--extern","sgx_tprotected_fs=/home/chenge/workplace/rust-sgx-samples/channel_establishment/attestation/target/rls/debug/deps/libsgx_tprotected_fs-f765b5cecd82d4af.rmeta","--extern","sgx_trts=/home/chenge/workplace/rust-sgx-samples/channel_establishment/attestation/target/rls/debug/deps/libsgx_trts-449906c6d24165e0.rmeta","--extern","sgx_types=/home/chenge/workplace/rust-sgx-samples/channel_establishment/attestation/target/rls/debug/deps/libsgx_types-61d5a9603996ee61.rmeta","--extern","sgx_unwind=/home/chenge/workplace/rust-sgx-samples/channel_establishment/attestation/target/rls/debug/deps/libsgx_unwind-1cf5b5b2b1d3d1af.rmeta","--cap-lints","allow","--cfg","RUST_BACKTRACE=\"1\"","-L","native=/home/chenge/workplace/rust-sgx-samples/channel_establishment/attestation/target/rls/debug/build/sgx_backtrace_sys-b1d6dfbd2989c145/out/libbacktrace/","-L","native=/home/chenge/workplace/rust-sgx-samples/channel_establishment/attestation/target/rls/debug/build/sgx_backtrace_sys-b1d6dfbd2989c145/out/libbacktrace","-L","native=/home/chenge/workplace/rust-sgx-samples/channel_establishment/attestation/target/rls/debug/build/sgx_unwind-18c500f13d2b4158/out/libunwind/src/.libs","--error-format=json","--sysroot","/home/chenge/.rustup/toolchains/nightly-2020-10-25-x86_64-unknown-linux-gnu"],"output":"/home/chenge/workplace/rust-sgx-samples/channel_establishment/attestation/target/rls/debug/deps/libsgx_tstd-c28bfefc1912e2c5.rmeta"},"prelude":{"crate_id":{"name":"sgx_tstd","disambiguator":[5711454005569031132,16460238909996796011]},"crate_root":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src","external_crates":[{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","num":4,"id":{"name":"hashbrown_tstd","disambiguator":[16183371823444078344,9581521231937859750]}},{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","num":6,"id":{"name":"sgx_unwind","disambiguator":[5102318145313185060,11471209729797343327]}},{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","num":7,"id":{"name":"sgx_backtrace_sys","disambiguator":[14660314418822277024,729926221133144524]}},{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","num":8,"id":{"name":"sgx_libc","disambiguator":[9606408002860437706,2854280889918615103]}},{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","num":9,"id":{"name":"sgx_types","disambiguator":[15093814546649415990,6106876177477605172]}},{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","num":10,"id":{"name":"sgx_demangle","disambiguator":[5629922212444546827,5063537095693118307]}},{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","num":11,"id":{"name":"sgx_alloc","disambiguator":[4294983768567477794,6176906306381446119]}},{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","num":12,"id":{"name":"sgx_trts","disambiguator":[13098705569631004602,1313249152699973655]}},{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","num":13,"id":{"name":"sgx_tprotected_fs","disambiguator":[10042502995804616197,13663583401362379357]}}],"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":803,"byte_end":7339,"line_start":18,"line_end":300,"column_start":1,"column_end":25}},"imports":[{"kind":"Use","ref_id":{"krate":9,"index":12},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":4334,"byte_end":4340,"line_start":128,"line_end":128,"column_start":20,"column_end":26},"alias_span":null,"name":"cfg_if","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":12,"index":6},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":4403,"byte_end":4422,"line_start":133,"line_end":133,"column_start":5,"column_end":24},"alias_span":null,"name":"global_ctors_object","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":12,"index":7},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":4428,"byte_end":4447,"line_start":134,"line_end":134,"column_start":5,"column_end":24},"alias_span":null,"name":"global_dtors_object","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":12,"index":188},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":4453,"byte_end":4476,"line_start":135,"line_end":135,"column_start":5,"column_end":28},"alias_span":null,"name":"is_x86_feature_detected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":12,"index":187},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":4482,"byte_end":4506,"line_start":136,"line_end":136,"column_start":5,"column_end":29},"alias_span":null,"name":"is_cpu_feature_supported","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":2044},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":16679,"byte_end":16683,"line_start":23,"line_end":23,"column_start":25,"column_end":29},"alias_span":null,"name":"Send","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":2049},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":16685,"byte_end":16690,"line_start":23,"line_end":23,"column_start":31,"column_end":36},"alias_span":null,"name":"Sized","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":2056},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":16692,"byte_end":16696,"line_start":23,"line_end":23,"column_start":38,"column_end":42},"alias_span":null,"name":"Sync","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":2085},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":16698,"byte_end":16703,"line_start":23,"line_end":23,"column_start":44,"column_end":49},"alias_span":null,"name":"Unpin","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":2265},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":16745,"byte_end":16749,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"alias_span":null,"name":"Drop","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":2268},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":16751,"byte_end":16753,"line_start":25,"line_end":25,"column_start":28,"column_end":30},"alias_span":null,"name":"Fn","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":2271},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":16755,"byte_end":16760,"line_start":25,"line_end":25,"column_start":32,"column_end":37},"alias_span":null,"name":"FnMut","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":2274},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":16762,"byte_end":16768,"line_start":25,"line_end":25,"column_start":39,"column_end":45},"alias_span":null,"name":"FnOnce","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":1319},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":16835,"byte_end":16839,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"alias_span":null,"name":"drop","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":1956},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":16917,"byte_end":16922,"line_start":33,"line_end":33,"column_start":26,"column_end":31},"alias_span":null,"name":"AsMut","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":1953},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":16924,"byte_end":16929,"line_start":33,"line_end":33,"column_start":33,"column_end":38},"alias_span":null,"name":"AsRef","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":1962},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":16931,"byte_end":16935,"line_start":33,"line_end":33,"column_start":40,"column_end":44},"alias_span":null,"name":"From","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":1959},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":16937,"byte_end":16941,"line_start":33,"line_end":33,"column_start":46,"column_end":50},"alias_span":null,"name":"Into","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":5232},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":16984,"byte_end":17003,"line_start":35,"line_end":35,"column_start":23,"column_end":42},"alias_span":null,"name":"DoubleEndedIterator","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":5257},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17005,"byte_end":17022,"line_start":35,"line_end":35,"column_start":44,"column_end":61},"alias_span":null,"name":"ExactSizeIterator","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":5218},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17065,"byte_end":17071,"line_start":37,"line_end":37,"column_start":23,"column_end":29},"alias_span":null,"name":"Extend","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":5209},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17073,"byte_end":17085,"line_start":37,"line_end":37,"column_start":31,"column_end":43},"alias_span":null,"name":"IntoIterator","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":5303},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17087,"byte_end":17095,"line_start":37,"line_end":37,"column_start":45,"column_end":53},"alias_span":null,"name":"Iterator","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":32301},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17139,"byte_end":17145,"line_start":39,"line_end":39,"column_start":24,"column_end":30},"alias_span":null,"name":"Option","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":32303},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17154,"byte_end":17158,"line_start":39,"line_end":39,"column_start":39,"column_end":43},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":32304},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17154,"byte_end":17158,"line_start":39,"line_end":39,"column_start":39,"column_end":43},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":55}},{"kind":"Use","ref_id":{"krate":1,"index":32305},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17160,"byte_end":17164,"line_start":39,"line_end":39,"column_start":45,"column_end":49},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":32306},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17160,"byte_end":17164,"line_start":39,"line_end":39,"column_start":45,"column_end":49},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":56}},{"kind":"Use","ref_id":{"krate":1,"index":32460},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17208,"byte_end":17214,"line_start":41,"line_end":41,"column_start":24,"column_end":30},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":32466},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17223,"byte_end":17226,"line_start":41,"line_end":41,"column_start":39,"column_end":42},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":32467},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17223,"byte_end":17226,"line_start":41,"line_end":41,"column_start":39,"column_end":42},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":1,"index":32463},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17228,"byte_end":17230,"line_start":41,"line_end":41,"column_start":44,"column_end":46},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":32464},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17228,"byte_end":17230,"line_start":41,"line_end":41,"column_start":44,"column_end":46},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":60}},{"kind":"Use","ref_id":{"krate":1,"index":34},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17316,"byte_end":17319,"line_start":46,"line_end":46,"column_start":5,"column_end":8},"alias_span":null,"name":"asm","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":33},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17321,"byte_end":17327,"line_start":46,"line_end":46,"column_start":10,"column_end":16},"alias_span":null,"name":"assert","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":31},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17329,"byte_end":17332,"line_start":46,"line_end":46,"column_start":18,"column_end":21},"alias_span":null,"name":"cfg","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":25},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17334,"byte_end":17340,"line_start":46,"line_end":46,"column_start":23,"column_end":29},"alias_span":null,"name":"column","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":17},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17342,"byte_end":17355,"line_start":46,"line_end":46,"column_start":31,"column_end":44},"alias_span":null,"name":"compile_error","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":23},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17357,"byte_end":17363,"line_start":46,"line_end":46,"column_start":46,"column_end":52},"alias_span":null,"name":"concat","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":22},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17365,"byte_end":17378,"line_start":46,"line_end":46,"column_start":54,"column_end":67},"alias_span":null,"name":"concat_idents","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":20},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17380,"byte_end":17383,"line_start":46,"line_end":46,"column_start":69,"column_end":72},"alias_span":null,"name":"env","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":26},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17385,"byte_end":17389,"line_start":46,"line_end":46,"column_start":74,"column_end":78},"alias_span":null,"name":"file","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":18},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17391,"byte_end":17402,"line_start":46,"line_end":46,"column_start":80,"column_end":91},"alias_span":null,"name":"format_args","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":19},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17408,"byte_end":17422,"line_start":47,"line_end":47,"column_start":5,"column_end":19},"alias_span":null,"name":"format_args_nl","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":36},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17424,"byte_end":17434,"line_start":47,"line_end":47,"column_start":21,"column_end":31},"alias_span":null,"name":"global_asm","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":32},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17436,"byte_end":17443,"line_start":47,"line_end":47,"column_start":33,"column_end":40},"alias_span":null,"name":"include","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":29},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17445,"byte_end":17458,"line_start":47,"line_end":47,"column_start":42,"column_end":55},"alias_span":null,"name":"include_bytes","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":28},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17460,"byte_end":17471,"line_start":47,"line_end":47,"column_start":57,"column_end":68},"alias_span":null,"name":"include_str","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":24},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17473,"byte_end":17477,"line_start":47,"line_end":47,"column_start":70,"column_end":74},"alias_span":null,"name":"line","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":35},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17479,"byte_end":17487,"line_start":47,"line_end":47,"column_start":76,"column_end":84},"alias_span":null,"name":"llvm_asm","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":37},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17489,"byte_end":17499,"line_start":47,"line_end":47,"column_start":86,"column_end":96},"alias_span":null,"name":"log_syntax","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":30},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17505,"byte_end":17516,"line_start":48,"line_end":48,"column_start":5,"column_end":16},"alias_span":null,"name":"module_path","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":21},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17518,"byte_end":17528,"line_start":48,"line_end":48,"column_start":18,"column_end":28},"alias_span":null,"name":"option_env","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":27},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17530,"byte_end":17539,"line_start":48,"line_end":48,"column_start":30,"column_end":39},"alias_span":null,"name":"stringify","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":38},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17541,"byte_end":17553,"line_start":48,"line_end":48,"column_start":41,"column_end":53},"alias_span":null,"name":"trace_macros","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":42},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17767,"byte_end":17783,"line_start":56,"line_end":56,"column_start":5,"column_end":21},"alias_span":null,"name":"global_allocator","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":39},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17785,"byte_end":17789,"line_start":56,"line_end":56,"column_start":23,"column_end":27},"alias_span":null,"name":"test","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":41},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17791,"byte_end":17800,"line_start":56,"line_end":56,"column_start":29,"column_end":38},"alias_span":null,"name":"test_case","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":1741},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17802,"byte_end":17807,"line_start":56,"line_end":56,"column_start":40,"column_end":45},"alias_span":null,"name":"Clone","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":1744},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17802,"byte_end":17807,"line_start":56,"line_end":56,"column_start":40,"column_end":45},"alias_span":null,"name":"Clone","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":1,"index":2054},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17809,"byte_end":17813,"line_start":56,"line_end":56,"column_start":47,"column_end":51},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":2055},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17809,"byte_end":17813,"line_start":56,"line_end":56,"column_start":47,"column_end":51},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":89}},{"kind":"Use","ref_id":{"krate":1,"index":6593},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17815,"byte_end":17820,"line_start":56,"line_end":56,"column_start":53,"column_end":58},"alias_span":null,"name":"Debug","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":2032},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17822,"byte_end":17829,"line_start":56,"line_end":56,"column_start":60,"column_end":67},"alias_span":null,"name":"Default","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":2036},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17822,"byte_end":17829,"line_start":56,"line_end":56,"column_start":60,"column_end":67},"alias_span":null,"name":"Default","value":"","parent":{"krate":0,"index":91}},{"kind":"Use","ref_id":{"krate":1,"index":1774},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17831,"byte_end":17833,"line_start":56,"line_end":56,"column_start":69,"column_end":71},"alias_span":null,"name":"Eq","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":1776},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17831,"byte_end":17833,"line_start":56,"line_end":56,"column_start":69,"column_end":71},"alias_span":null,"name":"Eq","value":"","parent":{"krate":0,"index":92}},{"kind":"Use","ref_id":{"krate":1,"index":6784},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17835,"byte_end":17839,"line_start":56,"line_end":56,"column_start":73,"column_end":77},"alias_span":null,"name":"Hash","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":1795},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17841,"byte_end":17844,"line_start":56,"line_end":56,"column_start":79,"column_end":82},"alias_span":null,"name":"Ord","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":1800},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17841,"byte_end":17844,"line_start":56,"line_end":56,"column_start":79,"column_end":82},"alias_span":null,"name":"Ord","value":"","parent":{"krate":0,"index":94}},{"kind":"Use","ref_id":{"krate":1,"index":1769},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17850,"byte_end":17859,"line_start":57,"line_end":57,"column_start":5,"column_end":14},"alias_span":null,"name":"PartialEq","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":1773},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17850,"byte_end":17859,"line_start":57,"line_end":57,"column_start":5,"column_end":14},"alias_span":null,"name":"PartialEq","value":"","parent":{"krate":0,"index":95}},{"kind":"Use","ref_id":{"krate":1,"index":1806},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17861,"byte_end":17871,"line_start":57,"line_end":57,"column_start":16,"column_end":26},"alias_span":null,"name":"PartialOrd","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":1813},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17861,"byte_end":17871,"line_start":57,"line_end":57,"column_start":16,"column_end":26},"alias_span":null,"name":"PartialOrd","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":1,"index":44},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17873,"byte_end":17887,"line_start":57,"line_end":57,"column_start":28,"column_end":42},"alias_span":null,"name":"RustcDecodable","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":45},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17889,"byte_end":17903,"line_start":57,"line_end":57,"column_start":44,"column_end":58},"alias_span":null,"name":"RustcEncodable","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":1,"index":43},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":17951,"byte_end":17965,"line_start":61,"line_end":61,"column_start":28,"column_end":42},"alias_span":null,"name":"cfg_accessible","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":5,"index":337},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":18253,"byte_end":18260,"line_start":69,"line_end":69,"column_start":24,"column_end":31},"alias_span":null,"name":"ToOwned","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":5,"index":91},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":18302,"byte_end":18305,"line_start":71,"line_end":71,"column_start":23,"column_end":26},"alias_span":null,"name":"Box","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":5,"index":5374},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":18349,"byte_end":18355,"line_start":73,"line_end":73,"column_start":25,"column_end":31},"alias_span":null,"name":"String","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":5,"index":4140},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":18357,"byte_end":18365,"line_start":73,"line_end":73,"column_start":33,"column_end":41},"alias_span":null,"name":"ToString","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":5,"index":4617},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":18406,"byte_end":18409,"line_start":75,"line_end":75,"column_start":21,"column_end":24},"alias_span":null,"name":"Vec","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":5,"index":318},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":4758,"byte_end":4764,"line_start":150,"line_end":150,"column_start":22,"column_end":28},"alias_span":null,"name":"borrow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":48},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":4787,"byte_end":4792,"line_start":151,"line_end":151,"column_start":22,"column_end":27},"alias_span":null,"name":"boxed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":3217},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":4815,"byte_end":4818,"line_start":152,"line_end":152,"column_start":22,"column_end":25},"alias_span":null,"name":"fmt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":6},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":4841,"byte_end":4847,"line_start":153,"line_end":153,"column_start":22,"column_end":28},"alias_span":null,"name":"format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":3339},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":4870,"byte_end":4872,"line_start":154,"line_end":154,"column_start":22,"column_end":24},"alias_span":null,"name":"rc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":3668},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":4895,"byte_end":4900,"line_start":155,"line_end":155,"column_start":22,"column_end":27},"alias_span":null,"name":"slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":3820},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":4923,"byte_end":4926,"line_start":156,"line_end":156,"column_start":22,"column_end":25},"alias_span":null,"name":"str","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":3926},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":4949,"byte_end":4955,"line_start":157,"line_end":157,"column_start":22,"column_end":28},"alias_span":null,"name":"string","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":4575},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":4978,"byte_end":4981,"line_start":158,"line_end":158,"column_start":22,"column_end":25},"alias_span":null,"name":"vec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":5},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":4978,"byte_end":4981,"line_start":158,"line_end":158,"column_start":22,"column_end":25},"alias_span":null,"name":"vec","value":"","parent":{"krate":0,"index":114}},{"kind":"Use","ref_id":{"krate":1,"index":2570},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":4997,"byte_end":5000,"line_start":159,"line_end":159,"column_start":15,"column_end":18},"alias_span":null,"name":"any","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":2612},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5016,"byte_end":5021,"line_start":160,"line_end":160,"column_start":15,"column_end":20},"alias_span":null,"name":"array","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":2917},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5037,"byte_end":5041,"line_start":161,"line_end":161,"column_start":15,"column_end":19},"alias_span":null,"name":"cell","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":3160},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5057,"byte_end":5061,"line_start":162,"line_end":162,"column_start":15,"column_end":19},"alias_span":null,"name":"char","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":1740},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5077,"byte_end":5082,"line_start":163,"line_end":163,"column_start":15,"column_end":20},"alias_span":null,"name":"clone","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":1767},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5098,"byte_end":5101,"line_start":164,"line_end":164,"column_start":15,"column_end":18},"alias_span":null,"name":"cmp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":1909},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5117,"byte_end":5124,"line_start":165,"line_end":165,"column_start":15,"column_end":22},"alias_span":null,"name":"convert","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":2031},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5140,"byte_end":5147,"line_start":166,"line_end":166,"column_start":15,"column_end":22},"alias_span":null,"name":"default","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":6730},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5163,"byte_end":5167,"line_start":167,"line_end":167,"column_start":15,"column_end":19},"alias_span":null,"name":"hash","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":830},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5183,"byte_end":5187,"line_start":168,"line_end":168,"column_start":15,"column_end":19},"alias_span":null,"name":"hint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":54},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5203,"byte_end":5207,"line_start":169,"line_end":169,"column_start":15,"column_end":19},"alias_span":null,"name":"i128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":55},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5223,"byte_end":5226,"line_start":170,"line_end":170,"column_start":15,"column_end":18},"alias_span":null,"name":"i16","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":56},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5242,"byte_end":5245,"line_start":171,"line_end":171,"column_start":15,"column_end":18},"alias_span":null,"name":"i32","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":57},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5261,"byte_end":5264,"line_start":172,"line_end":172,"column_start":15,"column_end":18},"alias_span":null,"name":"i64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":58},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5280,"byte_end":5282,"line_start":173,"line_end":173,"column_start":15,"column_end":17},"alias_span":null,"name":"i8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":836},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5298,"byte_end":5308,"line_start":174,"line_end":174,"column_start":15,"column_end":25},"alias_span":null,"name":"intrinsics","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":59},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5324,"byte_end":5329,"line_start":175,"line_end":175,"column_start":15,"column_end":20},"alias_span":null,"name":"isize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":3391},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5345,"byte_end":5349,"line_start":176,"line_end":176,"column_start":15,"column_end":19},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":2038},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5365,"byte_end":5371,"line_start":177,"line_end":177,"column_start":15,"column_end":21},"alias_span":null,"name":"marker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":1220},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5387,"byte_end":5390,"line_start":178,"line_end":178,"column_start":15,"column_end":18},"alias_span":null,"name":"mem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":2107},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5406,"byte_end":5409,"line_start":179,"line_end":179,"column_start":15,"column_end":18},"alias_span":null,"name":"ops","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":5654},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5425,"byte_end":5431,"line_start":180,"line_end":180,"column_start":15,"column_end":21},"alias_span":null,"name":"option","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":5916},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5447,"byte_end":5450,"line_start":181,"line_end":181,"column_start":15,"column_end":18},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":1349},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5466,"byte_end":5469,"line_start":182,"line_end":182,"column_start":15,"column_end":18},"alias_span":null,"name":"ptr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":6015},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5485,"byte_end":5488,"line_start":183,"line_end":183,"column_start":15,"column_end":18},"alias_span":null,"name":"raw","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":6016},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5504,"byte_end":5510,"line_start":184,"line_end":184,"column_start":15,"column_end":21},"alias_span":null,"name":"result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":60},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5526,"byte_end":5530,"line_start":185,"line_end":185,"column_start":15,"column_end":19},"alias_span":null,"name":"u128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":61},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5546,"byte_end":5549,"line_start":186,"line_end":186,"column_start":15,"column_end":18},"alias_span":null,"name":"u16","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":62},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5565,"byte_end":5568,"line_start":187,"line_end":187,"column_start":15,"column_end":18},"alias_span":null,"name":"u32","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":63},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5584,"byte_end":5587,"line_start":188,"line_end":188,"column_start":15,"column_end":18},"alias_span":null,"name":"u64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":64},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5603,"byte_end":5605,"line_start":189,"line_end":189,"column_start":15,"column_end":17},"alias_span":null,"name":"u8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":65},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5621,"byte_end":5626,"line_start":190,"line_end":190,"column_start":15,"column_end":20},"alias_span":null,"name":"usize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":85},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":19740,"byte_end":19746,"line_start":33,"line_end":33,"column_start":20,"column_end":26},"alias_span":null,"name":"consts","value":"","parent":{"krate":0,"index":147}},{"kind":"Use","ref_id":{"krate":1,"index":73},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":19768,"byte_end":19774,"line_start":34,"line_end":34,"column_start":21,"column_end":27},"alias_span":null,"name":"DIGITS","value":"","parent":{"krate":0,"index":147}},{"kind":"Use","ref_id":{"krate":1,"index":74},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":19776,"byte_end":19783,"line_start":34,"line_end":34,"column_start":29,"column_end":36},"alias_span":null,"name":"EPSILON","value":"","parent":{"krate":0,"index":147}},{"kind":"Use","ref_id":{"krate":1,"index":72},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":19785,"byte_end":19800,"line_start":34,"line_end":34,"column_start":38,"column_end":53},"alias_span":null,"name":"MANTISSA_DIGITS","value":"","parent":{"krate":0,"index":147}},{"kind":"Use","ref_id":{"krate":1,"index":71},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":19802,"byte_end":19807,"line_start":34,"line_end":34,"column_start":55,"column_end":60},"alias_span":null,"name":"RADIX","value":"","parent":{"krate":0,"index":147}},{"kind":"Use","ref_id":{"krate":1,"index":83},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":19830,"byte_end":19838,"line_start":35,"line_end":35,"column_start":21,"column_end":29},"alias_span":null,"name":"INFINITY","value":"","parent":{"krate":0,"index":147}},{"kind":"Use","ref_id":{"krate":1,"index":81},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":19840,"byte_end":19850,"line_start":35,"line_end":35,"column_start":31,"column_end":41},"alias_span":null,"name":"MAX_10_EXP","value":"","parent":{"krate":0,"index":147}},{"kind":"Use","ref_id":{"krate":1,"index":82},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":19852,"byte_end":19855,"line_start":35,"line_end":35,"column_start":43,"column_end":46},"alias_span":null,"name":"NAN","value":"","parent":{"krate":0,"index":147}},{"kind":"Use","ref_id":{"krate":1,"index":84},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":19857,"byte_end":19869,"line_start":35,"line_end":35,"column_start":48,"column_end":60},"alias_span":null,"name":"NEG_INFINITY","value":"","parent":{"krate":0,"index":147}},{"kind":"Use","ref_id":{"krate":1,"index":77},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":19892,"byte_end":19895,"line_start":36,"line_end":36,"column_start":21,"column_end":24},"alias_span":null,"name":"MAX","value":"","parent":{"krate":0,"index":147}},{"kind":"Use","ref_id":{"krate":1,"index":75},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":19897,"byte_end":19900,"line_start":36,"line_end":36,"column_start":26,"column_end":29},"alias_span":null,"name":"MIN","value":"","parent":{"krate":0,"index":147}},{"kind":"Use","ref_id":{"krate":1,"index":76},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":19902,"byte_end":19914,"line_start":36,"line_end":36,"column_start":31,"column_end":43},"alias_span":null,"name":"MIN_POSITIVE","value":"","parent":{"krate":0,"index":147}},{"kind":"Use","ref_id":{"krate":1,"index":79},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":19937,"byte_end":19944,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"alias_span":null,"name":"MAX_EXP","value":"","parent":{"krate":0,"index":147}},{"kind":"Use","ref_id":{"krate":1,"index":80},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":19946,"byte_end":19956,"line_start":37,"line_end":37,"column_start":30,"column_end":40},"alias_span":null,"name":"MIN_10_EXP","value":"","parent":{"krate":0,"index":147}},{"kind":"Use","ref_id":{"krate":1,"index":78},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":19958,"byte_end":19965,"line_start":37,"line_end":37,"column_start":42,"column_end":49},"alias_span":null,"name":"MIN_EXP","value":"","parent":{"krate":0,"index":147}},{"kind":"Use","ref_id":{"krate":1,"index":174},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31382,"byte_end":31388,"line_start":33,"line_end":33,"column_start":20,"column_end":26},"alias_span":null,"name":"consts","value":"","parent":{"krate":0,"index":210}},{"kind":"Use","ref_id":{"krate":1,"index":162},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31410,"byte_end":31416,"line_start":34,"line_end":34,"column_start":21,"column_end":27},"alias_span":null,"name":"DIGITS","value":"","parent":{"krate":0,"index":210}},{"kind":"Use","ref_id":{"krate":1,"index":163},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31418,"byte_end":31425,"line_start":34,"line_end":34,"column_start":29,"column_end":36},"alias_span":null,"name":"EPSILON","value":"","parent":{"krate":0,"index":210}},{"kind":"Use","ref_id":{"krate":1,"index":161},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31427,"byte_end":31442,"line_start":34,"line_end":34,"column_start":38,"column_end":53},"alias_span":null,"name":"MANTISSA_DIGITS","value":"","parent":{"krate":0,"index":210}},{"kind":"Use","ref_id":{"krate":1,"index":160},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31444,"byte_end":31449,"line_start":34,"line_end":34,"column_start":55,"column_end":60},"alias_span":null,"name":"RADIX","value":"","parent":{"krate":0,"index":210}},{"kind":"Use","ref_id":{"krate":1,"index":172},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31472,"byte_end":31480,"line_start":35,"line_end":35,"column_start":21,"column_end":29},"alias_span":null,"name":"INFINITY","value":"","parent":{"krate":0,"index":210}},{"kind":"Use","ref_id":{"krate":1,"index":170},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31482,"byte_end":31492,"line_start":35,"line_end":35,"column_start":31,"column_end":41},"alias_span":null,"name":"MAX_10_EXP","value":"","parent":{"krate":0,"index":210}},{"kind":"Use","ref_id":{"krate":1,"index":171},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31494,"byte_end":31497,"line_start":35,"line_end":35,"column_start":43,"column_end":46},"alias_span":null,"name":"NAN","value":"","parent":{"krate":0,"index":210}},{"kind":"Use","ref_id":{"krate":1,"index":173},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31499,"byte_end":31511,"line_start":35,"line_end":35,"column_start":48,"column_end":60},"alias_span":null,"name":"NEG_INFINITY","value":"","parent":{"krate":0,"index":210}},{"kind":"Use","ref_id":{"krate":1,"index":166},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31534,"byte_end":31537,"line_start":36,"line_end":36,"column_start":21,"column_end":24},"alias_span":null,"name":"MAX","value":"","parent":{"krate":0,"index":210}},{"kind":"Use","ref_id":{"krate":1,"index":164},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31539,"byte_end":31542,"line_start":36,"line_end":36,"column_start":26,"column_end":29},"alias_span":null,"name":"MIN","value":"","parent":{"krate":0,"index":210}},{"kind":"Use","ref_id":{"krate":1,"index":165},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31544,"byte_end":31556,"line_start":36,"line_end":36,"column_start":31,"column_end":43},"alias_span":null,"name":"MIN_POSITIVE","value":"","parent":{"krate":0,"index":210}},{"kind":"Use","ref_id":{"krate":1,"index":168},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31579,"byte_end":31586,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"alias_span":null,"name":"MAX_EXP","value":"","parent":{"krate":0,"index":210}},{"kind":"Use","ref_id":{"krate":1,"index":169},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31588,"byte_end":31598,"line_start":37,"line_end":37,"column_start":30,"column_end":40},"alias_span":null,"name":"MIN_10_EXP","value":"","parent":{"krate":0,"index":210}},{"kind":"Use","ref_id":{"krate":1,"index":167},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31600,"byte_end":31607,"line_start":37,"line_end":37,"column_start":42,"column_end":49},"alias_span":null,"name":"MIN_EXP","value":"","parent":{"krate":0,"index":210}},{"kind":"Use","ref_id":{"krate":0,"index":304},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":44207,"byte_end":44215,"line_start":47,"line_end":47,"column_start":23,"column_end":31},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":278}},{"kind":"Use","ref_id":{"krate":0,"index":7059},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":44217,"byte_end":44228,"line_start":47,"line_end":47,"column_start":33,"column_end":44},"alias_span":null,"name":"AccessError","value":"","parent":{"krate":0,"index":278}},{"kind":"Use","ref_id":{"krate":0,"index":345},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":44260,"byte_end":44263,"line_start":48,"line_end":48,"column_start":30,"column_end":33},"alias_span":null,"name":"__StaticLocalKeyInner","value":"","parent":{"krate":0,"index":278}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ascii.rs","byte_start":95863,"byte_end":95864,"line_start":18,"line_end":18,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"escape_default","parent":{"krate":0,"index":396}},{"kind":"Use","ref_id":{"krate":1,"index":31142},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":114816,"byte_end":114821,"line_start":426,"line_end":426,"column_start":21,"column_end":26},"alias_span":null,"name":"Bound","value":"","parent":{"krate":0,"index":398}},{"kind":"Use","ref_id":{"krate":5,"index":415},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":114858,"byte_end":114869,"line_start":427,"line_end":427,"column_start":36,"column_end":47},"alias_span":null,"name":"binary_heap","value":"","parent":{"krate":0,"index":398}},{"kind":"Use","ref_id":{"krate":5,"index":3197},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":114871,"byte_end":114880,"line_start":427,"line_end":427,"column_start":49,"column_end":58},"alias_span":null,"name":"btree_map","value":"","parent":{"krate":0,"index":398}},{"kind":"Use","ref_id":{"krate":5,"index":3199},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":114882,"byte_end":114891,"line_start":427,"line_end":427,"column_start":60,"column_end":69},"alias_span":null,"name":"btree_set","value":"","parent":{"krate":0,"index":398}},{"kind":"Use","ref_id":{"krate":5,"index":2429},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":114929,"byte_end":114940,"line_start":428,"line_end":428,"column_start":36,"column_end":47},"alias_span":null,"name":"linked_list","value":"","parent":{"krate":0,"index":398}},{"kind":"Use","ref_id":{"krate":5,"index":2781},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":114942,"byte_end":114951,"line_start":428,"line_end":428,"column_start":49,"column_end":58},"alias_span":null,"name":"vec_deque","value":"","parent":{"krate":0,"index":398}},{"kind":"Use","ref_id":{"krate":5,"index":817},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":114989,"byte_end":114997,"line_start":429,"line_end":429,"column_start":36,"column_end":44},"alias_span":null,"name":"BTreeMap","value":"","parent":{"krate":0,"index":398}},{"kind":"Use","ref_id":{"krate":5,"index":5204},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":114999,"byte_end":115007,"line_start":429,"line_end":429,"column_start":46,"column_end":54},"alias_span":null,"name":"BTreeSet","value":"","parent":{"krate":0,"index":398}},{"kind":"Use","ref_id":{"krate":5,"index":437},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":115009,"byte_end":115019,"line_start":429,"line_end":429,"column_start":56,"column_end":66},"alias_span":null,"name":"BinaryHeap","value":"","parent":{"krate":0,"index":398}},{"kind":"Use","ref_id":{"krate":5,"index":2443},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":115057,"byte_end":115067,"line_start":430,"line_end":430,"column_start":36,"column_end":46},"alias_span":null,"name":"LinkedList","value":"","parent":{"krate":0,"index":398}},{"kind":"Use","ref_id":{"krate":5,"index":2870},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":115069,"byte_end":115077,"line_start":430,"line_end":430,"column_start":48,"column_end":56},"alias_span":null,"name":"VecDeque","value":"","parent":{"krate":0,"index":398}},{"kind":"Use","ref_id":{"krate":0,"index":7085},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":115105,"byte_end":115112,"line_start":432,"line_end":432,"column_start":25,"column_end":32},"alias_span":null,"name":"HashMap","value":"","parent":{"krate":0,"index":398}},{"kind":"Use","ref_id":{"krate":0,"index":7111},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":115138,"byte_end":115145,"line_start":433,"line_end":433,"column_start":25,"column_end":32},"alias_span":null,"name":"HashSet","value":"","parent":{"krate":0,"index":398}},{"kind":"Use","ref_id":{"krate":5,"index":5347},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":115182,"byte_end":115197,"line_start":435,"line_end":435,"column_start":35,"column_end":50},"alias_span":null,"name":"TryReserveError","value":"","parent":{"krate":0,"index":398}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":115331,"byte_end":115332,"line_start":441,"line_end":441,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"HashMap","parent":{"krate":0,"index":1405}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":115457,"byte_end":115458,"line_start":446,"line_end":446,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"HashSet","parent":{"krate":0,"index":1407}},{"kind":"Use","ref_id":{"krate":12,"index":384},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":291682,"byte_end":291689,"line_start":173,"line_end":173,"column_start":23,"column_end":30},"alias_span":null,"name":"CString","value":"","parent":{"krate":0,"index":1644}},{"kind":"Use","ref_id":{"krate":12,"index":406},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":291691,"byte_end":291695,"line_start":173,"line_end":173,"column_start":32,"column_end":36},"alias_span":null,"name":"CStr","value":"","parent":{"krate":0,"index":1644}},{"kind":"Use","ref_id":{"krate":12,"index":411},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":291697,"byte_end":291705,"line_start":173,"line_end":173,"column_start":38,"column_end":46},"alias_span":null,"name":"NulError","value":"","parent":{"krate":0,"index":1644}},{"kind":"Use","ref_id":{"krate":12,"index":456},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":291707,"byte_end":291722,"line_start":173,"line_end":173,"column_start":48,"column_end":63},"alias_span":null,"name":"IntoStringError","value":"","parent":{"krate":0,"index":1644}},{"kind":"Use","ref_id":{"krate":12,"index":426},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":291747,"byte_end":291768,"line_start":174,"line_end":174,"column_start":23,"column_end":44},"alias_span":null,"name":"FromBytesWithNulError","value":"","parent":{"krate":0,"index":1644}},{"kind":"Use","ref_id":{"krate":0,"index":7164},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":291794,"byte_end":291802,"line_start":175,"line_end":175,"column_start":24,"column_end":32},"alias_span":null,"name":"OsString","value":"","parent":{"krate":0,"index":1644}},{"kind":"Use","ref_id":{"krate":0,"index":1694},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":291804,"byte_end":291809,"line_start":175,"line_end":175,"column_start":34,"column_end":39},"alias_span":null,"name":"OsStr","value":"","parent":{"krate":0,"index":1644}},{"kind":"Use","ref_id":{"krate":1,"index":3344},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":291832,"byte_end":291838,"line_start":177,"line_end":177,"column_start":20,"column_end":26},"alias_span":null,"name":"c_void","value":"","parent":{"krate":0,"index":1644}},{"kind":"Use","ref_id":{"krate":1,"index":31543},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":291860,"byte_end":291866,"line_start":178,"line_end":178,"column_start":21,"column_end":27},"alias_span":null,"name":"VaList","value":"","parent":{"krate":0,"index":1644}},{"kind":"Use","ref_id":{"krate":1,"index":31533},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":291868,"byte_end":291878,"line_start":178,"line_end":178,"column_start":29,"column_end":39},"alias_span":null,"name":"VaListImpl","value":"","parent":{"krate":0,"index":1644}},{"kind":"Use","ref_id":{"krate":0,"index":7255},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326462,"byte_end":326476,"line_start":30,"line_end":30,"column_start":25,"column_end":39},"alias_span":null,"name":"IntoInnerError","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":2014},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326503,"byte_end":326512,"line_start":31,"line_end":31,"column_start":26,"column_end":35},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":2051},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326514,"byte_end":326523,"line_start":31,"line_end":31,"column_start":37,"column_end":46},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":2096},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326525,"byte_end":326535,"line_start":31,"line_end":31,"column_start":48,"column_end":58},"alias_span":null,"name":"LineWriter","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":7263},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326560,"byte_end":326566,"line_start":32,"line_end":32,"column_start":23,"column_end":29},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":2186},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326590,"byte_end":326595,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":7292},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326597,"byte_end":326606,"line_start":33,"line_end":33,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":2184},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326608,"byte_end":326614,"line_start":33,"line_end":33,"column_start":41,"column_end":47},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":2327},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326638,"byte_end":326642,"line_start":34,"line_end":34,"column_start":22,"column_end":26},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":6301},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326663,"byte_end":326668,"line_start":35,"line_end":35,"column_start":19,"column_end":24},"alias_span":null,"name":"errno","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":6302},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326670,"byte_end":326679,"line_start":35,"line_end":35,"column_start":26,"column_end":35},"alias_span":null,"name":"set_errno","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":6303},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326681,"byte_end":326693,"line_start":35,"line_end":35,"column_start":37,"column_end":49},"alias_span":null,"name":"error_string","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":2478},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326744,"byte_end":326750,"line_start":37,"line_end":37,"column_start":23,"column_end":29},"alias_span":null,"name":"stderr","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":2423},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326752,"byte_end":326757,"line_start":37,"line_end":37,"column_start":31,"column_end":36},"alias_span":null,"name":"stdin","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":2453},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326759,"byte_end":326765,"line_start":37,"line_end":37,"column_start":38,"column_end":44},"alias_span":null,"name":"stdout","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":2473},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326767,"byte_end":326773,"line_start":37,"line_end":37,"column_start":46,"column_end":52},"alias_span":null,"name":"Stderr","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":2418},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326775,"byte_end":326780,"line_start":37,"line_end":37,"column_start":54,"column_end":59},"alias_span":null,"name":"Stdin","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":2448},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326782,"byte_end":326788,"line_start":37,"line_end":37,"column_start":61,"column_end":67},"alias_span":null,"name":"Stdout","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":2475},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326839,"byte_end":326849,"line_start":39,"line_end":39,"column_start":23,"column_end":33},"alias_span":null,"name":"StderrLock","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":2420},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326851,"byte_end":326860,"line_start":39,"line_end":39,"column_start":35,"column_end":44},"alias_span":null,"name":"StdinLock","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":2450},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326862,"byte_end":326872,"line_start":39,"line_end":39,"column_start":46,"column_end":56},"alias_span":null,"name":"StdoutLock","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":2501},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326923,"byte_end":326930,"line_start":41,"line_end":41,"column_start":23,"column_end":30},"alias_span":null,"name":"_eprint","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":2500},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326932,"byte_end":326938,"line_start":41,"line_end":41,"column_start":32,"column_end":38},"alias_span":null,"name":"_print","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":2514},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326962,"byte_end":326966,"line_start":42,"line_end":42,"column_start":22,"column_end":26},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":2520},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326968,"byte_end":326973,"line_start":42,"line_end":42,"column_start":28,"column_end":33},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":2531},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326975,"byte_end":326981,"line_start":42,"line_end":42,"column_start":35,"column_end":41},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":2540},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326983,"byte_end":326987,"line_start":42,"line_end":42,"column_start":43,"column_end":47},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":2518},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326989,"byte_end":326994,"line_start":42,"line_end":42,"column_start":49,"column_end":54},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":2529},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":326996,"byte_end":327002,"line_start":42,"line_end":42,"column_start":56,"column_end":62},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":2538},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":327004,"byte_end":327008,"line_start":42,"line_end":42,"column_start":64,"column_end":68},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":1941}},{"kind":"Use","ref_id":{"krate":0,"index":2653},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/prelude.rs","byte_start":375310,"byte_end":375317,"line_start":28,"line_end":28,"column_start":17,"column_end":24},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":1993}},{"kind":"Use","ref_id":{"krate":0,"index":2572},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/prelude.rs","byte_start":375319,"byte_end":375323,"line_start":28,"line_end":28,"column_start":26,"column_end":30},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":1993}},{"kind":"Use","ref_id":{"krate":0,"index":2647},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/prelude.rs","byte_start":375325,"byte_end":375329,"line_start":28,"line_end":28,"column_start":32,"column_end":36},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":1993}},{"kind":"Use","ref_id":{"krate":0,"index":2630},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/prelude.rs","byte_start":375331,"byte_end":375336,"line_start":28,"line_end":28,"column_start":38,"column_end":43},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":1993}},{"kind":"Use","ref_id":{"krate":0,"index":7411},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":461493,"byte_end":461499,"line_start":26,"line_end":26,"column_start":20,"column_end":26},"alias_span":null,"name":"IpAddr","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":0,"index":7441},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":461501,"byte_end":461509,"line_start":26,"line_end":26,"column_start":28,"column_end":36},"alias_span":null,"name":"Ipv4Addr","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":0,"index":7444},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":461511,"byte_end":461519,"line_start":26,"line_end":26,"column_start":38,"column_end":46},"alias_span":null,"name":"Ipv6Addr","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":0,"index":7447},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":461521,"byte_end":461539,"line_start":26,"line_end":26,"column_start":48,"column_end":66},"alias_span":null,"name":"Ipv6MulticastScope","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":0,"index":7476},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":461563,"byte_end":461573,"line_start":27,"line_end":27,"column_start":22,"column_end":32},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":0,"index":7498},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":461575,"byte_end":461587,"line_start":27,"line_end":27,"column_start":34,"column_end":46},"alias_span":null,"name":"SocketAddrV4","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":0,"index":7501},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":461589,"byte_end":461601,"line_start":27,"line_end":27,"column_start":48,"column_end":60},"alias_span":null,"name":"SocketAddrV6","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":0,"index":2982},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":461603,"byte_end":461616,"line_start":27,"line_end":27,"column_start":62,"column_end":75},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":0,"index":3151},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":461662,"byte_end":461671,"line_start":29,"line_end":29,"column_start":20,"column_end":29},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":0,"index":3154},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":461716,"byte_end":461727,"line_start":31,"line_end":31,"column_start":20,"column_end":31},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":0,"index":3262},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":461772,"byte_end":461781,"line_start":33,"line_end":33,"column_start":20,"column_end":29},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":0,"index":7504},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":461805,"byte_end":461819,"line_start":34,"line_end":34,"column_start":23,"column_end":37},"alias_span":null,"name":"AddrParseError","value":"","parent":{"krate":0,"index":2718}},{"kind":"Use","ref_id":{"krate":1,"index":14210},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/num.rs","byte_start":578434,"byte_end":578442,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"alias_span":null,"name":"Wrapping","value":"","parent":{"krate":0,"index":3324}},{"kind":"Use","ref_id":{"krate":1,"index":14211},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/num.rs","byte_start":578434,"byte_end":578442,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"alias_span":null,"name":"Wrapping","value":"","parent":{"krate":0,"index":3325}},{"kind":"Use","ref_id":{"krate":1,"index":17685},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/num.rs","byte_start":578464,"byte_end":578474,"line_start":26,"line_end":26,"column_start":21,"column_end":31},"alias_span":null,"name":"FpCategory","value":"","parent":{"krate":0,"index":3324}},{"kind":"Use","ref_id":{"krate":1,"index":13332},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/num.rs","byte_start":578476,"byte_end":578491,"line_start":26,"line_end":26,"column_start":33,"column_end":48},"alias_span":null,"name":"ParseFloatError","value":"","parent":{"krate":0,"index":3324}},{"kind":"Use","ref_id":{"krate":1,"index":13480},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/num.rs","byte_start":578493,"byte_end":578506,"line_start":26,"line_end":26,"column_start":50,"column_end":63},"alias_span":null,"name":"ParseIntError","value":"","parent":{"krate":0,"index":3324}},{"kind":"Use","ref_id":{"krate":1,"index":13465},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/num.rs","byte_start":578508,"byte_end":578523,"line_start":26,"line_end":26,"column_start":65,"column_end":80},"alias_span":null,"name":"TryFromIntError","value":"","parent":{"krate":0,"index":3324}},{"kind":"Use","ref_id":{"krate":1,"index":14100},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/num.rs","byte_start":578546,"byte_end":578557,"line_start":27,"line_end":27,"column_start":21,"column_end":32},"alias_span":null,"name":"NonZeroI128","value":"","parent":{"krate":0,"index":3324}},{"kind":"Use","ref_id":{"krate":1,"index":13989},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/num.rs","byte_start":578559,"byte_end":578569,"line_start":27,"line_end":27,"column_start":34,"column_end":44},"alias_span":null,"name":"NonZeroI16","value":"","parent":{"krate":0,"index":3324}},{"kind":"Use","ref_id":{"krate":1,"index":14026},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/num.rs","byte_start":578571,"byte_end":578581,"line_start":27,"line_end":27,"column_start":46,"column_end":56},"alias_span":null,"name":"NonZeroI32","value":"","parent":{"krate":0,"index":3324}},{"kind":"Use","ref_id":{"krate":1,"index":14063},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/num.rs","byte_start":578583,"byte_end":578593,"line_start":27,"line_end":27,"column_start":58,"column_end":68},"alias_span":null,"name":"NonZeroI64","value":"","parent":{"krate":0,"index":3324}},{"kind":"Use","ref_id":{"krate":1,"index":13952},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/num.rs","byte_start":578595,"byte_end":578604,"line_start":27,"line_end":27,"column_start":70,"column_end":79},"alias_span":null,"name":"NonZeroI8","value":"","parent":{"krate":0,"index":3324}},{"kind":"Use","ref_id":{"krate":1,"index":14137},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/num.rs","byte_start":578606,"byte_end":578618,"line_start":27,"line_end":27,"column_start":81,"column_end":93},"alias_span":null,"name":"NonZeroIsize","value":"","parent":{"krate":0,"index":3324}},{"kind":"Use","ref_id":{"krate":1,"index":13878},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/num.rs","byte_start":578641,"byte_end":578652,"line_start":28,"line_end":28,"column_start":21,"column_end":32},"alias_span":null,"name":"NonZeroU128","value":"","parent":{"krate":0,"index":3324}},{"kind":"Use","ref_id":{"krate":1,"index":13767},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/num.rs","byte_start":578654,"byte_end":578664,"line_start":28,"line_end":28,"column_start":34,"column_end":44},"alias_span":null,"name":"NonZeroU16","value":"","parent":{"krate":0,"index":3324}},{"kind":"Use","ref_id":{"krate":1,"index":13804},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/num.rs","byte_start":578666,"byte_end":578676,"line_start":28,"line_end":28,"column_start":46,"column_end":56},"alias_span":null,"name":"NonZeroU32","value":"","parent":{"krate":0,"index":3324}},{"kind":"Use","ref_id":{"krate":1,"index":13841},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/num.rs","byte_start":578678,"byte_end":578688,"line_start":28,"line_end":28,"column_start":58,"column_end":68},"alias_span":null,"name":"NonZeroU64","value":"","parent":{"krate":0,"index":3324}},{"kind":"Use","ref_id":{"krate":1,"index":13730},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/num.rs","byte_start":578690,"byte_end":578699,"line_start":28,"line_end":28,"column_start":70,"column_end":79},"alias_span":null,"name":"NonZeroU8","value":"","parent":{"krate":0,"index":3324}},{"kind":"Use","ref_id":{"krate":1,"index":13915},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/num.rs","byte_start":578701,"byte_end":578713,"line_start":28,"line_end":28,"column_start":81,"column_end":93},"alias_span":null,"name":"NonZeroUsize","value":"","parent":{"krate":0,"index":3324}},{"kind":"Use","ref_id":{"krate":0,"index":5893},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/mod.rs","byte_start":579540,"byte_end":579543,"line_start":18,"line_end":18,"column_start":21,"column_end":24},"alias_span":null,"name":"unix","value":"","parent":{"krate":0,"index":3345}},{"kind":"Use","ref_id":{"krate":1,"index":3344},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":580923,"byte_end":580929,"line_start":39,"line_end":39,"column_start":20,"column_end":26},"alias_span":null,"name":"c_void","value":"","parent":{"krate":0,"index":3347}},{"kind":"Use","ref_id":{"krate":0,"index":3381},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581033,"byte_end":581038,"line_start":45,"line_end":45,"column_start":22,"column_end":27},"alias_span":null,"name":"off_t","value":"","parent":{"krate":0,"index":3347}},{"kind":"Use","ref_id":{"krate":0,"index":3379},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581040,"byte_end":581045,"line_start":45,"line_end":45,"column_start":29,"column_end":34},"alias_span":null,"name":"ino_t","value":"","parent":{"krate":0,"index":3347}},{"kind":"Use","ref_id":{"krate":0,"index":3380},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581047,"byte_end":581054,"line_start":45,"line_end":45,"column_start":36,"column_end":43},"alias_span":null,"name":"nlink_t","value":"","parent":{"krate":0,"index":3347}},{"kind":"Use","ref_id":{"krate":0,"index":3378},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581056,"byte_end":581065,"line_start":45,"line_end":45,"column_start":45,"column_end":54},"alias_span":null,"name":"blksize_t","value":"","parent":{"krate":0,"index":3347}},{"kind":"Use","ref_id":{"krate":0,"index":3377},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581067,"byte_end":581075,"line_start":45,"line_end":45,"column_start":56,"column_end":64},"alias_span":null,"name":"blkcnt_t","value":"","parent":{"krate":0,"index":3347}},{"kind":"Use","ref_id":{"krate":0,"index":7542},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581077,"byte_end":581081,"line_start":45,"line_end":45,"column_start":66,"column_end":70},"alias_span":null,"name":"stat","value":"","parent":{"krate":0,"index":3347}},{"kind":"Use","ref_id":{"krate":0,"index":3382},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581083,"byte_end":581089,"line_start":45,"line_end":45,"column_start":72,"column_end":78},"alias_span":null,"name":"time_t","value":"","parent":{"krate":0,"index":3347}},{"kind":"Use","ref_id":{"krate":0,"index":6669},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":588184,"byte_end":588201,"line_start":37,"line_end":37,"column_start":28,"column_end":45},"alias_span":null,"name":"set_panic_handler","value":"","parent":{"krate":0,"index":3424}},{"kind":"Use","ref_id":{"krate":0,"index":6670},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":588203,"byte_end":588221,"line_start":37,"line_end":37,"column_start":47,"column_end":65},"alias_span":null,"name":"take_panic_handler","value":"","parent":{"krate":0,"index":3424}},{"kind":"Use","ref_id":{"krate":1,"index":32400},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":588246,"byte_end":588254,"line_start":38,"line_end":38,"column_start":23,"column_end":31},"alias_span":null,"name":"Location","value":"","parent":{"krate":0,"index":3424}},{"kind":"Use","ref_id":{"krate":1,"index":32392},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":588256,"byte_end":588265,"line_start":38,"line_end":38,"column_start":33,"column_end":42},"alias_span":null,"name":"PanicInfo","value":"","parent":{"krate":0,"index":3424}},{"kind":"Use","ref_id":{"krate":5,"index":4280},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663491,"byte_end":663494,"line_start":30,"line_end":30,"column_start":29,"column_end":32},"alias_span":null,"name":"Arc","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":5,"index":4298},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663496,"byte_end":663500,"line_start":30,"line_end":30,"column_start":34,"column_end":38},"alias_span":null,"name":"Weak","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":1,"index":6217},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663523,"byte_end":663529,"line_start":31,"line_end":31,"column_start":21,"column_end":27},"alias_span":null,"name":"atomic","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":0,"index":3925},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663556,"byte_end":663563,"line_start":33,"line_end":33,"column_start":25,"column_end":32},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":0,"index":3932},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663565,"byte_end":663582,"line_start":33,"line_end":33,"column_start":34,"column_end":51},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":0,"index":3982},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663609,"byte_end":663619,"line_start":34,"line_end":34,"column_start":25,"column_end":35},"alias_span":null,"name":"SgxCondvar","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":0,"index":3968},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663621,"byte_end":663637,"line_start":34,"line_end":34,"column_start":37,"column_end":53},"alias_span":null,"name":"SgxThreadCondvar","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":0,"index":8063},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663639,"byte_end":663656,"line_start":34,"line_end":34,"column_start":55,"column_end":72},"alias_span":null,"name":"WaitTimeoutResult","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":0,"index":4052},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663681,"byte_end":663689,"line_start":35,"line_end":35,"column_start":23,"column_end":31},"alias_span":null,"name":"SgxMutex","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":0,"index":4061},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663691,"byte_end":663704,"line_start":35,"line_end":35,"column_start":33,"column_end":46},"alias_span":null,"name":"SgxMutexGuard","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":0,"index":4040},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663706,"byte_end":663720,"line_start":35,"line_end":35,"column_start":48,"column_end":62},"alias_span":null,"name":"SgxThreadMutex","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":0,"index":4147},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663747,"byte_end":663764,"line_start":36,"line_end":36,"column_start":25,"column_end":42},"alias_span":null,"name":"SgxReentrantMutex","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":0,"index":4171},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663766,"byte_end":663788,"line_start":36,"line_end":36,"column_start":44,"column_end":66},"alias_span":null,"name":"SgxReentrantMutexGuard","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":0,"index":4136},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663790,"byte_end":663813,"line_start":36,"line_end":36,"column_start":68,"column_end":91},"alias_span":null,"name":"SgxReentrantThreadMutex","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":0,"index":4207},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663837,"byte_end":663841,"line_start":37,"line_end":37,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":0,"index":8078},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663843,"byte_end":663852,"line_start":37,"line_end":37,"column_start":28,"column_end":37},"alias_span":null,"name":"OnceState","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":0,"index":4212},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663854,"byte_end":663863,"line_start":37,"line_end":37,"column_start":39,"column_end":48},"alias_span":null,"name":"ONCE_INIT","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":0,"index":4274},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663889,"byte_end":663898,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"alias_span":null,"name":"SgxRwLock","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":0,"index":4283},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663900,"byte_end":663918,"line_start":38,"line_end":38,"column_start":35,"column_end":53},"alias_span":null,"name":"SgxRwLockReadGuard","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":0,"index":4292},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663920,"byte_end":663939,"line_start":38,"line_end":38,"column_start":55,"column_end":74},"alias_span":null,"name":"SgxRwLockWriteGuard","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":0,"index":4260},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663941,"byte_end":663956,"line_start":38,"line_end":38,"column_start":76,"column_end":91},"alias_span":null,"name":"SgxThreadRwLock","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":0,"index":4387},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663984,"byte_end":663995,"line_start":39,"line_end":39,"column_start":26,"column_end":37},"alias_span":null,"name":"SgxSpinlock","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":0,"index":4396},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663997,"byte_end":664013,"line_start":39,"line_end":39,"column_start":39,"column_end":55},"alias_span":null,"name":"SgxSpinlockGuard","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":0,"index":4379},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":664015,"byte_end":664032,"line_start":39,"line_end":39,"column_start":57,"column_end":74},"alias_span":null,"name":"SgxThreadSpinlock","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":0,"index":4862},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":664071,"byte_end":664082,"line_start":40,"line_end":40,"column_start":37,"column_end":48},"alias_span":null,"name":"PoisonError","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":0,"index":4865},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":664084,"byte_end":664096,"line_start":40,"line_end":40,"column_start":50,"column_end":62},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":0,"index":4874},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":664098,"byte_end":664111,"line_start":40,"line_end":40,"column_start":64,"column_end":77},"alias_span":null,"name":"TryLockResult","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":0,"index":4872},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":664113,"byte_end":664123,"line_start":40,"line_end":40,"column_start":79,"column_end":89},"alias_span":null,"name":"LockResult","value":"","parent":{"krate":0,"index":3882}},{"kind":"Use","ref_id":{"krate":1,"index":34821},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":756188,"byte_end":756196,"line_start":28,"line_end":28,"column_start":21,"column_end":29},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":4407}},{"kind":"Use","ref_id":{"krate":12,"index":696},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":772325,"byte_end":772340,"line_start":26,"line_end":26,"column_start":28,"column_end":43},"alias_span":null,"name":"SgxThreadPolicy","value":"","parent":{"krate":0,"index":4473}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/fs.rs","byte_start":776282,"byte_end":776283,"line_start":19,"line_end":19,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"FileType, OpenOptions, canonicalize, metadata, read_dir, set_permissions, File, remove_file, Permissions, Metadata, read_link, DirEntry, DirBuilder, symlink_metadata, remove_dir, ReadDir","parent":{"krate":0,"index":4504}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":6086,"byte_end":6087,"line_start":219,"line_end":219,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":4549}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/future.rs","byte_start":784028,"byte_end":784029,"line_start":31,"line_end":31,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":4551}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/ffi.rs","byte_start":991009,"byte_end":991010,"line_start":20,"line_end":20,"column_start":42,"column_end":43},"alias_span":null,"name":"*","value":"OsStrExt, OsStringExt","parent":{"krate":0,"index":5894}},{"kind":"Use","ref_id":{"krate":0,"index":3364},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/raw.rs","byte_start":1036478,"byte_end":1036487,"line_start":24,"line_end":24,"column_start":25,"column_end":34},"alias_span":null,"name":"pthread_t","value":"","parent":{"krate":0,"index":6229}},{"kind":"Use","ref_id":{"krate":0,"index":3377},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/raw.rs","byte_start":1036514,"byte_end":1036522,"line_start":25,"line_end":25,"column_start":26,"column_end":34},"alias_span":null,"name":"blkcnt_t","value":"","parent":{"krate":0,"index":6229}},{"kind":"Use","ref_id":{"krate":0,"index":3382},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/raw.rs","byte_start":1036524,"byte_end":1036530,"line_start":25,"line_end":25,"column_start":36,"column_end":42},"alias_span":null,"name":"time_t","value":"","parent":{"krate":0,"index":6229}},{"kind":"Use","ref_id":{"krate":0,"index":3378},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/raw.rs","byte_start":1036558,"byte_end":1036567,"line_start":26,"line_end":26,"column_start":26,"column_end":35},"alias_span":null,"name":"blksize_t","value":"","parent":{"krate":0,"index":6229}},{"kind":"Use","ref_id":{"krate":0,"index":3362},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/raw.rs","byte_start":1036569,"byte_end":1036574,"line_start":26,"line_end":26,"column_start":37,"column_end":42},"alias_span":null,"name":"dev_t","value":"","parent":{"krate":0,"index":6229}},{"kind":"Use","ref_id":{"krate":0,"index":3379},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/raw.rs","byte_start":1036576,"byte_end":1036581,"line_start":26,"line_end":26,"column_start":44,"column_end":49},"alias_span":null,"name":"ino_t","value":"","parent":{"krate":0,"index":6229}},{"kind":"Use","ref_id":{"krate":0,"index":3363},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/raw.rs","byte_start":1036583,"byte_end":1036589,"line_start":26,"line_end":26,"column_start":51,"column_end":57},"alias_span":null,"name":"mode_t","value":"","parent":{"krate":0,"index":6229}},{"kind":"Use","ref_id":{"krate":0,"index":3380},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/raw.rs","byte_start":1036591,"byte_end":1036598,"line_start":26,"line_end":26,"column_start":59,"column_end":66},"alias_span":null,"name":"nlink_t","value":"","parent":{"krate":0,"index":6229}},{"kind":"Use","ref_id":{"krate":0,"index":3381},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/raw.rs","byte_start":1036600,"byte_end":1036605,"line_start":26,"line_end":26,"column_start":68,"column_end":73},"alias_span":null,"name":"off_t","value":"","parent":{"krate":0,"index":6229}},{"kind":"Use","ref_id":{"krate":0,"index":4643},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/mod.rs","byte_start":989780,"byte_end":989788,"line_start":31,"line_end":31,"column_start":26,"column_end":34},"alias_span":null,"name":"OsStrExt","value":"","parent":{"krate":0,"index":6244}},{"kind":"Use","ref_id":{"krate":0,"index":4637},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/mod.rs","byte_start":989790,"byte_end":989801,"line_start":31,"line_end":31,"column_start":36,"column_end":47},"alias_span":null,"name":"OsStringExt","value":"","parent":{"krate":0,"index":6244}},{"kind":"Use","ref_id":{"krate":0,"index":5976},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/mod.rs","byte_start":989827,"byte_end":989838,"line_start":32,"line_end":32,"column_start":24,"column_end":35},"alias_span":null,"name":"DirEntryExt","value":"","parent":{"krate":0,"index":6244}},{"kind":"Use","ref_id":{"krate":0,"index":5910},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/mod.rs","byte_start":989863,"byte_end":989870,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"alias_span":null,"name":"FileExt","value":"","parent":{"krate":0,"index":6244}},{"kind":"Use","ref_id":{"krate":0,"index":5966},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/mod.rs","byte_start":989896,"byte_end":989907,"line_start":34,"line_end":34,"column_start":25,"column_end":36},"alias_span":null,"name":"FileTypeExt","value":"","parent":{"krate":0,"index":6244}},{"kind":"Use","ref_id":{"krate":0,"index":5932},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/mod.rs","byte_start":989909,"byte_end":989920,"line_start":34,"line_end":34,"column_start":38,"column_end":49},"alias_span":null,"name":"MetadataExt","value":"","parent":{"krate":0,"index":6244}},{"kind":"Use","ref_id":{"krate":0,"index":5926},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/mod.rs","byte_start":989922,"byte_end":989936,"line_start":34,"line_end":34,"column_start":51,"column_end":65},"alias_span":null,"name":"OpenOptionsExt","value":"","parent":{"krate":0,"index":6244}},{"kind":"Use","ref_id":{"krate":0,"index":5918},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/mod.rs","byte_start":989938,"byte_end":989952,"line_start":34,"line_end":34,"column_start":67,"column_end":81},"alias_span":null,"name":"PermissionsExt","value":"","parent":{"krate":0,"index":6244}},{"kind":"Use","ref_id":{"krate":0,"index":5998},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/mod.rs","byte_start":989979,"byte_end":989986,"line_start":35,"line_end":35,"column_start":25,"column_end":32},"alias_span":null,"name":"AsRawFd","value":"","parent":{"krate":0,"index":6244}},{"kind":"Use","ref_id":{"krate":0,"index":6000},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/mod.rs","byte_start":989988,"byte_end":989997,"line_start":35,"line_end":35,"column_start":34,"column_end":43},"alias_span":null,"name":"FromRawFd","value":"","parent":{"krate":0,"index":6244}},{"kind":"Use","ref_id":{"krate":0,"index":6002},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/mod.rs","byte_start":989999,"byte_end":990008,"line_start":35,"line_end":35,"column_start":45,"column_end":54},"alias_span":null,"name":"IntoRawFd","value":"","parent":{"krate":0,"index":6244}},{"kind":"Use","ref_id":{"krate":0,"index":5997},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/mod.rs","byte_start":990010,"byte_end":990015,"line_start":35,"line_end":35,"column_start":56,"column_end":61},"alias_span":null,"name":"RawFd","value":"","parent":{"krate":0,"index":6244}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1082869,"byte_end":1082870,"line_start":29,"line_end":29,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"Layout, GlobalAlloc","parent":{"krate":0,"index":6607}},{"kind":"Use","ref_id":{"krate":11,"index":16},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1082892,"byte_end":1082898,"line_start":31,"line_end":31,"column_start":20,"column_end":26},"alias_span":null,"name":"System","value":"","parent":{"krate":0,"index":6607}},{"kind":"Use","ref_id":{"krate":11,"index":17},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1082892,"byte_end":1082898,"line_start":31,"line_end":31,"column_start":20,"column_end":26},"alias_span":null,"name":"System","value":"","parent":{"krate":0,"index":6616}},{"kind":"Use","ref_id":{"krate":0,"index":6709},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/rt.rs","byte_start":1155032,"byte_end":1155043,"line_start":25,"line_end":25,"column_start":28,"column_end":39},"alias_span":null,"name":"begin_panic","value":"","parent":{"krate":0,"index":6915}},{"kind":"Use","ref_id":{"krate":0,"index":6693},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/rt.rs","byte_start":1155045,"byte_end":1155060,"line_start":25,"line_end":25,"column_start":41,"column_end":56},"alias_span":null,"name":"begin_panic_fmt","value":"","parent":{"krate":0,"index":6915}},{"kind":"Use","ref_id":{"krate":0,"index":6672},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/rt.rs","byte_start":1155062,"byte_end":1155080,"line_start":25,"line_end":25,"column_start":58,"column_end":76},"alias_span":null,"name":"update_panic_count","value":"","parent":{"krate":0,"index":6915}},{"kind":"Use","ref_id":{"krate":0,"index":5297},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/rt.rs","byte_start":1155110,"byte_end":1155117,"line_start":26,"line_end":26,"column_start":28,"column_end":35},"alias_span":null,"name":"at_exit","value":"","parent":{"krate":0,"index":6915}},{"kind":"Use","ref_id":{"krate":0,"index":4686},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1158592,"byte_end":1158620,"line_start":60,"line_end":60,"column_start":39,"column_end":67},"alias_span":null,"name":"__rust_begin_short_backtrace","value":"","parent":{"krate":0,"index":6931}},{"kind":"Use","ref_id":{"krate":0,"index":8144},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1158660,"byte_end":1158671,"line_start":61,"line_end":61,"column_start":39,"column_end":50},"alias_span":null,"name":"PrintFormat","value":"","parent":{"krate":0,"index":6931}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":6473,"byte_end":6474,"line_start":245,"line_end":245,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":363},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":6504,"byte_end":6520,"line_start":247,"line_end":247,"column_start":5,"column_end":21},"alias_span":null,"name":"rsgx_thread_self","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":364},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":6526,"byte_end":6543,"line_start":248,"line_end":248,"column_start":5,"column_end":22},"alias_span":null,"name":"rsgx_thread_equal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":4},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":6706,"byte_end":6715,"line_start":258,"line_end":258,"column_start":5,"column_end":14},"alias_span":null,"name":"assert_eq","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":5},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":6721,"byte_end":6730,"line_start":259,"line_end":259,"column_start":5,"column_end":14},"alias_span":null,"name":"assert_ne","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":6},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":6736,"byte_end":6748,"line_start":260,"line_end":260,"column_start":5,"column_end":17},"alias_span":null,"name":"debug_assert","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":7},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":6754,"byte_end":6769,"line_start":261,"line_end":261,"column_start":5,"column_end":20},"alias_span":null,"name":"debug_assert_eq","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":8},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":6775,"byte_end":6790,"line_start":262,"line_end":262,"column_start":5,"column_end":20},"alias_span":null,"name":"debug_assert_ne","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":9},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":6812,"byte_end":6819,"line_start":264,"line_end":264,"column_start":5,"column_end":12},"alias_span":null,"name":"matches","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":10},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":6825,"byte_end":6830,"line_start":265,"line_end":265,"column_start":5,"column_end":10},"alias_span":null,"name":"r#try","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":15},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":6836,"byte_end":6840,"line_start":266,"line_end":266,"column_start":5,"column_end":9},"alias_span":null,"name":"todo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":14},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":6846,"byte_end":6859,"line_start":267,"line_end":267,"column_start":5,"column_end":18},"alias_span":null,"name":"unimplemented","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":13},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":6865,"byte_end":6876,"line_start":268,"line_end":268,"column_start":5,"column_end":16},"alias_span":null,"name":"unreachable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":11},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":6882,"byte_end":6887,"line_start":269,"line_end":269,"column_start":5,"column_end":10},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":12},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":6893,"byte_end":6900,"line_start":270,"line_end":270,"column_start":5,"column_end":12},"alias_span":null,"name":"writeln","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":34},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":6996,"byte_end":6999,"line_start":276,"line_end":276,"column_start":5,"column_end":8},"alias_span":null,"name":"asm","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":33},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":7019,"byte_end":7025,"line_start":278,"line_end":278,"column_start":5,"column_end":11},"alias_span":null,"name":"assert","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":31},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":7031,"byte_end":7034,"line_start":279,"line_end":279,"column_start":5,"column_end":8},"alias_span":null,"name":"cfg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":25},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":7040,"byte_end":7046,"line_start":280,"line_end":280,"column_start":5,"column_end":11},"alias_span":null,"name":"column","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":17},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":7052,"byte_end":7065,"line_start":281,"line_end":281,"column_start":5,"column_end":18},"alias_span":null,"name":"compile_error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":23},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":7071,"byte_end":7077,"line_start":282,"line_end":282,"column_start":5,"column_end":11},"alias_span":null,"name":"concat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":22},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":7083,"byte_end":7096,"line_start":283,"line_end":283,"column_start":5,"column_end":18},"alias_span":null,"name":"concat_idents","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":20},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":7102,"byte_end":7105,"line_start":284,"line_end":284,"column_start":5,"column_end":8},"alias_span":null,"name":"env","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":26},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":7111,"byte_end":7115,"line_start":285,"line_end":285,"column_start":5,"column_end":9},"alias_span":null,"name":"file","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":18},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":7121,"byte_end":7132,"line_start":286,"line_end":286,"column_start":5,"column_end":16},"alias_span":null,"name":"format_args","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":19},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":7138,"byte_end":7152,"line_start":287,"line_end":287,"column_start":5,"column_end":19},"alias_span":null,"name":"format_args_nl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":36},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":7158,"byte_end":7168,"line_start":288,"line_end":288,"column_start":5,"column_end":15},"alias_span":null,"name":"global_asm","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":32},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":7174,"byte_end":7181,"line_start":289,"line_end":289,"column_start":5,"column_end":12},"alias_span":null,"name":"include","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":29},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":7187,"byte_end":7200,"line_start":290,"line_end":290,"column_start":5,"column_end":18},"alias_span":null,"name":"include_bytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":28},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":7206,"byte_end":7217,"line_start":291,"line_end":291,"column_start":5,"column_end":16},"alias_span":null,"name":"include_str","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":24},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":7223,"byte_end":7227,"line_start":292,"line_end":292,"column_start":5,"column_end":9},"alias_span":null,"name":"line","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":37},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":7233,"byte_end":7243,"line_start":293,"line_end":293,"column_start":5,"column_end":15},"alias_span":null,"name":"log_syntax","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":30},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":7249,"byte_end":7260,"line_start":294,"line_end":294,"column_start":5,"column_end":16},"alias_span":null,"name":"module_path","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":21},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":7266,"byte_end":7276,"line_start":295,"line_end":295,"column_start":5,"column_end":15},"alias_span":null,"name":"option_env","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":27},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":7282,"byte_end":7291,"line_start":296,"line_end":296,"column_start":5,"column_end":14},"alias_span":null,"name":"stringify","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":38},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":7297,"byte_end":7309,"line_start":297,"line_end":297,"column_start":5,"column_end":17},"alias_span":null,"name":"trace_macros","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":9414},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":7329,"byte_end":7338,"line_start":300,"line_end":300,"column_start":15,"column_end":24},"alias_span":null,"name":"primitive","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":803,"byte_end":7339,"line_start":18,"line_end":300,"column_start":1,"column_end":25},"name":"","qualname":"::","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":28},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":8676},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":210},{"krate":0,"index":278},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":1409},{"krate":0,"index":1497},{"krate":0,"index":1644},{"krate":0,"index":1851},{"krate":0,"index":1941},{"krate":0,"index":2718},{"krate":0,"index":3324},{"krate":0,"index":3345},{"krate":0,"index":3424},{"krate":0,"index":3537},{"krate":0,"index":3882},{"krate":0,"index":4407},{"krate":0,"index":4473},{"krate":0,"index":4503},{"krate":0,"index":4549},{"krate":0,"index":4551},{"krate":0,"index":4553},{"krate":0,"index":5304},{"krate":0,"index":6607},{"krate":0,"index":6631},{"krate":0,"index":6730},{"krate":0,"index":6732},{"krate":0,"index":6735},{"krate":0,"index":6915},{"krate":0,"index":6931},{"krate":0,"index":7016},{"krate":0,"index":7017},{"krate":0,"index":7018},{"krate":0,"index":7019},{"krate":0,"index":7020},{"krate":0,"index":7023},{"krate":0,"index":7024},{"krate":0,"index":7025},{"krate":0,"index":7026},{"krate":0,"index":7027},{"krate":0,"index":7028},{"krate":0,"index":7029},{"krate":0,"index":7030},{"krate":0,"index":7031},{"krate":0,"index":7032},{"krate":0,"index":7033},{"krate":0,"index":7034},{"krate":0,"index":7035},{"krate":0,"index":7036},{"krate":0,"index":7037},{"krate":0,"index":7038},{"krate":0,"index":7039},{"krate":0,"index":7040},{"krate":0,"index":7041},{"krate":0,"index":7042},{"krate":0,"index":7043},{"krate":0,"index":7044},{"krate":0,"index":7045},{"krate":0,"index":7046},{"krate":0,"index":7047},{"krate":0,"index":7048},{"krate":0,"index":7049},{"krate":0,"index":7050},{"krate":0,"index":7051},{"krate":0,"index":7052},{"krate":0,"index":7053},{"krate":0,"index":7054},{"krate":0,"index":7055},{"krate":0,"index":7056},{"krate":0,"index":7057},{"krate":0,"index":7058}],"decl_id":null,"docs":" # The Rust SGX SDK Standard Library","sig":null,"attributes":[{"value":"/ # The Rust SGX SDK Standard Library","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":803,"byte_end":842,"line_start":18,"line_end":18,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":843,"byte_end":846,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The Rust SGX standard library (previously named as `sgx_tstdc`) is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":847,"byte_end":917,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/ the foundation of portable Rust SGX SDK, a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":918,"byte_end":964,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/ set of minimal and battle-tested shared abstractions for the Rust SGX","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":965,"byte_end":1038,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/ ecosystem. Similar to Rust's libstd, it offers core types, like [`Vec<T>`] and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":1039,"byte_end":1121,"line_start":23,"line_end":23,"column_start":1,"column_end":83}},{"value":"/ [`Option<T>`], library-defined [operations on language","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":1122,"byte_end":1180,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/ primitives](#primitives), [standard macros](#macros), [I/O] and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":1181,"byte_end":1248,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ [multithreading], among [many other things][other].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":1249,"byte_end":1304,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":1305,"byte_end":1308,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `std` is available to all Rust crates by default, just as if each one","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":1309,"byte_end":1382,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ contained an `extern crate sgx_tstd as std;` import at the [crate root]. Therefore the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":1383,"byte_end":1473,"line_start":29,"line_end":29,"column_start":1,"column_end":91}},{"value":"/ standard library can be accessed in [`use`] statements through the path","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":1474,"byte_end":1549,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ `std`, as in [`use std::env`], or in expressions through the absolute path","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":1550,"byte_end":1628,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ `::std`, as in [`::std::env::args`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":1629,"byte_end":1669,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"no_std","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":1729,"byte_end":1739,"line_start":36,"line_end":36,"column_start":1,"column_end":11}},{"value":"needs_panic_runtime","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":1740,"byte_end":1763,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":1764,"byte_end":1795,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"allow(unused_must_use)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":1796,"byte_end":1822,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"allow(dead_code)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":1823,"byte_end":1843,"line_start":40,"line_end":40,"column_start":1,"column_end":21}},{"value":"allow(deprecated)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":1844,"byte_end":1865,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"allow(unused_assignments)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":1866,"byte_end":1895,"line_start":42,"line_end":42,"column_start":1,"column_end":30}},{"value":"feature(alloc_error_handler)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":1897,"byte_end":1929,"line_start":44,"line_end":44,"column_start":1,"column_end":33}},{"value":"feature(allocator_api)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":1930,"byte_end":1956,"line_start":45,"line_end":45,"column_start":1,"column_end":27}},{"value":"feature(allow_internal_unsafe)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":1957,"byte_end":1991,"line_start":46,"line_end":46,"column_start":1,"column_end":35}},{"value":"feature(allocator_internals)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":1992,"byte_end":2024,"line_start":47,"line_end":47,"column_start":1,"column_end":33}},{"value":"feature(allow_internal_unstable)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2025,"byte_end":2061,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"feature(array_error_internals)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2062,"byte_end":2096,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"feature(asm)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2097,"byte_end":2113,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"feature(optin_builtin_traits)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2206,"byte_end":2235,"line_start":52,"line_end":52,"column_start":38,"column_end":67}},{"value":"feature(box_syntax)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2238,"byte_end":2261,"line_start":53,"line_end":53,"column_start":1,"column_end":24}},{"value":"feature(c_variadic)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2262,"byte_end":2285,"line_start":54,"line_end":54,"column_start":1,"column_end":24}},{"value":"feature(cfg_accessible)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2286,"byte_end":2313,"line_start":55,"line_end":55,"column_start":1,"column_end":28}},{"value":"feature(cfg_target_has_atomic)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2314,"byte_end":2348,"line_start":56,"line_end":56,"column_start":1,"column_end":35}},{"value":"feature(char_error_internals)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2349,"byte_end":2382,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"feature(concat_idents)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2383,"byte_end":2409,"line_start":58,"line_end":58,"column_start":1,"column_end":27}},{"value":"feature(const_fn)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2410,"byte_end":2431,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"feature(const_fn_fn_ptr_basics)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2432,"byte_end":2467,"line_start":60,"line_end":60,"column_start":1,"column_end":36}},{"value":"feature(core_intrinsics)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2468,"byte_end":2496,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"feature(custom_test_frameworks)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2497,"byte_end":2532,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"feature(dropck_eyepatch)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2533,"byte_end":2561,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"feature(extend_one)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2562,"byte_end":2585,"line_start":64,"line_end":64,"column_start":1,"column_end":24}},{"value":"feature(fixed_size_array)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2586,"byte_end":2615,"line_start":65,"line_end":65,"column_start":1,"column_end":30}},{"value":"feature(fn_traits)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2616,"byte_end":2638,"line_start":66,"line_end":66,"column_start":1,"column_end":23}},{"value":"feature(generator_trait)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2639,"byte_end":2667,"line_start":67,"line_end":67,"column_start":1,"column_end":29}},{"value":"feature(format_args_nl)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2668,"byte_end":2695,"line_start":68,"line_end":68,"column_start":1,"column_end":28}},{"value":"feature(global_asm)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2696,"byte_end":2719,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"feature(hashmap_internals)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2720,"byte_end":2750,"line_start":70,"line_end":70,"column_start":1,"column_end":31}},{"value":"feature(int_error_internals)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2751,"byte_end":2783,"line_start":71,"line_end":71,"column_start":1,"column_end":33}},{"value":"feature(lang_items)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2784,"byte_end":2807,"line_start":72,"line_end":72,"column_start":1,"column_end":24}},{"value":"feature(llvm_asm)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2808,"byte_end":2829,"line_start":73,"line_end":73,"column_start":1,"column_end":22}},{"value":"feature(log_syntax)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2830,"byte_end":2853,"line_start":74,"line_end":74,"column_start":1,"column_end":24}},{"value":"feature(maybe_uninit_ref)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2854,"byte_end":2883,"line_start":75,"line_end":75,"column_start":1,"column_end":30}},{"value":"feature(never_type)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2884,"byte_end":2907,"line_start":76,"line_end":76,"column_start":1,"column_end":24}},{"value":"feature(needs_panic_runtime)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2908,"byte_end":2940,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"feature(panic_unwind)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2941,"byte_end":2966,"line_start":78,"line_end":78,"column_start":1,"column_end":26}},{"value":"feature(prelude_import)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2967,"byte_end":2994,"line_start":79,"line_end":79,"column_start":1,"column_end":28}},{"value":"feature(ptr_internals)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":2995,"byte_end":3021,"line_start":80,"line_end":80,"column_start":1,"column_end":27}},{"value":"feature(raw)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":3022,"byte_end":3038,"line_start":81,"line_end":81,"column_start":1,"column_end":17}},{"value":"feature(shrink_to)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":3039,"byte_end":3061,"line_start":82,"line_end":82,"column_start":1,"column_end":23}},{"value":"feature(rustc_attrs)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":3062,"byte_end":3086,"line_start":83,"line_end":83,"column_start":1,"column_end":25}},{"value":"feature(slice_concat_ext)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":3087,"byte_end":3116,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"feature(str_internals)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":3117,"byte_end":3143,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"feature(thread_local)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":3144,"byte_end":3169,"line_start":86,"line_end":86,"column_start":1,"column_end":26}},{"value":"feature(toowned_clone_into)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":3170,"byte_end":3201,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"feature(trace_macros)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":3202,"byte_end":3227,"line_start":88,"line_end":88,"column_start":1,"column_end":26}},{"value":"feature(try_reserve)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":3228,"byte_end":3252,"line_start":89,"line_end":89,"column_start":1,"column_end":25}},{"value":"feature(unboxed_closures)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":3253,"byte_end":3282,"line_start":90,"line_end":90,"column_start":1,"column_end":30}},{"value":"feature(untagged_unions)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":3283,"byte_end":3311,"line_start":91,"line_end":91,"column_start":1,"column_end":29}},{"value":"feature(unwind_attributes)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":3312,"byte_end":3342,"line_start":92,"line_end":92,"column_start":1,"column_end":31}},{"value":"feature(libc)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":3343,"byte_end":3360,"line_start":93,"line_end":93,"column_start":1,"column_end":18}},{"value":"feature(panic_internals)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":3361,"byte_end":3389,"line_start":94,"line_end":94,"column_start":1,"column_end":29}},{"value":"feature(std_internals)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":3390,"byte_end":3416,"line_start":95,"line_end":95,"column_start":1,"column_end":27}},{"value":"feature(panic_info_message)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":3417,"byte_end":3448,"line_start":96,"line_end":96,"column_start":1,"column_end":32}},{"value":"feature(unicode_internals)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":3449,"byte_end":3479,"line_start":97,"line_end":97,"column_start":1,"column_end":31}},{"value":"feature(alloc_layout_extra)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":3480,"byte_end":3511,"line_start":98,"line_end":98,"column_start":1,"column_end":32}},{"value":"feature(linked_list_remove)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":3512,"byte_end":3543,"line_start":99,"line_end":99,"column_start":1,"column_end":32}},{"value":"feature(int_error_matching)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":3544,"byte_end":3575,"line_start":100,"line_end":100,"column_start":1,"column_end":32}},{"value":"feature(drain_filter)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":3576,"byte_end":3601,"line_start":101,"line_end":101,"column_start":1,"column_end":26}},{"value":"feature(negative_impls)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":3602,"byte_end":3629,"line_start":102,"line_end":102,"column_start":1,"column_end":28}},{"value":"default_lib_allocator","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":3630,"byte_end":3655,"line_start":103,"line_end":103,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":28},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/mod.rs","parent":null,"children":[{"krate":0,"index":29}],"decl_id":null,"docs":" The Rust Prelude.","sig":null,"attributes":[{"value":"/ The Rust Prelude.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/mod.rs","byte_start":15085,"byte_end":15106,"line_start":18,"line_end":18,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/mod.rs","byte_start":15107,"byte_end":15110,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Rust comes with a variety of things in its standard library. However, if","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/mod.rs","byte_start":15111,"byte_end":15187,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ you had to manually import every single thing that you used, it would be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/mod.rs","byte_start":15188,"byte_end":15264,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ very verbose. But importing a lot of things that a program never uses isn't","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/mod.rs","byte_start":15265,"byte_end":15344,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ good either. A balance needs to be struck.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/mod.rs","byte_start":15345,"byte_end":15391,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/mod.rs","byte_start":15392,"byte_end":15395,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The *prelude* is the list of things that Rust automatically imports into","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/mod.rs","byte_start":15396,"byte_end":15472,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ every Rust program. It's kept as small as possible, and is focused on","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/mod.rs","byte_start":15473,"byte_end":15546,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/ things, particularly traits, which are used in almost every single Rust","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/mod.rs","byte_start":15547,"byte_end":15622,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ program.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/mod.rs","byte_start":15623,"byte_end":15635,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/mod.rs","byte_start":15636,"byte_end":15639,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ On a technical level, Rust inserts","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/mod.rs","byte_start":15640,"byte_end":15678,"line_start":30,"line_end":30,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/mod.rs","byte_start":15679,"byte_end":15682,"line_start":31,"line_end":31,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":29},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1","qualname":"::prelude::v1","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":8566},{"krate":0,"index":56},{"krate":0,"index":8568},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":8572},{"krate":0,"index":60},{"krate":0,"index":8574},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":8626},{"krate":0,"index":89},{"krate":0,"index":8628},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":8632},{"krate":0,"index":92},{"krate":0,"index":8634},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":8638},{"krate":0,"index":95},{"krate":0,"index":8640},{"krate":0,"index":96},{"krate":0,"index":8642},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"decl_id":null,"docs":" The first version of the prelude of The Rust Standard Library.","sig":null,"attributes":[{"value":"/ The first version of the prelude of The Rust Standard Library.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":16499,"byte_end":16565,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":16566,"byte_end":16569,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ See the [module-level documentation](../index.html) for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/v1.rs","byte_start":16570,"byte_end":16635,"line_start":20,"line_end":20,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":147},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"f32","qualname":"::f32","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169}],"decl_id":null,"docs":" This module provides constants which are specific to the implementation\n of the `f32` floating point data type.","sig":null,"attributes":[{"value":"/ This module provides constants which are specific to the implementation","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":19215,"byte_end":19290,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ of the `f32` floating point data type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":19291,"byte_end":19333,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":19334,"byte_end":19337,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ *[See also the `f32` primitive type](../../std/primitive.f32.html).*","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":19338,"byte_end":19410,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":19411,"byte_end":19414,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Mathematically significant numbers are provided in the `consts` sub-module.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":19415,"byte_end":19494,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":19495,"byte_end":19498,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Although using these constants won't cause compilation warnings,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":19499,"byte_end":19567,"line_start":25,"line_end":25,"column_start":1,"column_end":69}},{"value":"/ new code should use the associated constants directly on the primitive type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":19568,"byte_end":19648,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"allow(missing_docs)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":19650,"byte_end":19673,"line_start":28,"line_end":28,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":20105,"byte_end":20110,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"floor","qualname":"<f32>::floor","value":"pub fn floor(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the largest integer less than or equal to a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":20008,"byte_end":20071,"line_start":41,"line_end":41,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":20076,"byte_end":20079,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":20084,"byte_end":20093,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":20284,"byte_end":20288,"line_start":51,"line_end":51,"column_start":12,"column_end":16},"name":"ceil","qualname":"<f32>::ceil","value":"pub fn ceil(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the smallest integer greater than or equal to a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":20183,"byte_end":20250,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":20255,"byte_end":20258,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":20263,"byte_end":20272,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":20484,"byte_end":20489,"line_start":59,"line_end":59,"column_start":12,"column_end":17},"name":"round","qualname":"<f32>::round","value":"pub fn round(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the nearest integer to a number. Round half-way cases away from\n `0.0`.","sig":null,"attributes":[{"value":"/ Returns the nearest integer to a number. Round half-way cases away from","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":20360,"byte_end":20435,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ `0.0`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":20440,"byte_end":20450,"line_start":56,"line_end":56,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":20455,"byte_end":20458,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":20463,"byte_end":20472,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":20637,"byte_end":20642,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"trunc","qualname":"<f32>::trunc","value":"pub fn trunc(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the integer part of a number.","sig":null,"attributes":[{"value":"/ Returns the integer part of a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":20562,"byte_end":20603,"line_start":63,"line_end":63,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":20608,"byte_end":20611,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":20616,"byte_end":20625,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":20793,"byte_end":20798,"line_start":73,"line_end":73,"column_start":12,"column_end":17},"name":"fract","qualname":"<f32>::fract","value":"pub fn fract(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the fractional part of a number.","sig":null,"attributes":[{"value":"/ Returns the fractional part of a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":20715,"byte_end":20759,"line_start":70,"line_end":70,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":20764,"byte_end":20767,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":20772,"byte_end":20781,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":20975,"byte_end":20978,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"abs","qualname":"<f32>::abs","value":"pub fn abs(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value of `self`. Returns `NAN` if the\n number is `NAN`.","sig":null,"attributes":[{"value":"/ Computes the absolute value of `self`. Returns `NAN` if the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":20853,"byte_end":20916,"line_start":77,"line_end":77,"column_start":5,"column_end":68}},{"value":"/ number is `NAN`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":20921,"byte_end":20941,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":20946,"byte_end":20949,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":20954,"byte_end":20963,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":21320,"byte_end":21326,"line_start":92,"line_end":92,"column_start":12,"column_end":18},"name":"signum","qualname":"<f32>::signum","value":"pub fn signum(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns a number that represents the sign of `self`.","sig":null,"attributes":[{"value":"/ Returns a number that represents the sign of `self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":21050,"byte_end":21106,"line_start":85,"line_end":85,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":21111,"byte_end":21114,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ - `1.0` if the number is positive, `+0.0` or `INFINITY`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":21119,"byte_end":21178,"line_start":87,"line_end":87,"column_start":5,"column_end":64}},{"value":"/ - `-1.0` if the number is negative, `-0.0` or `NEG_INFINITY`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":21183,"byte_end":21247,"line_start":88,"line_end":88,"column_start":5,"column_end":69}},{"value":"/ - `NAN` if the number is `NAN`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":21252,"byte_end":21286,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":21291,"byte_end":21294,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":21299,"byte_end":21308,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":21735,"byte_end":21743,"line_start":104,"line_end":104,"column_start":12,"column_end":20},"name":"copysign","qualname":"<f32>::copysign","value":"pub fn copysign(Self, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns a number composed of the magnitude of `self` and the sign of\n `sign`.","sig":null,"attributes":[{"value":"/ Returns a number composed of the magnitude of `self` and the sign of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":21418,"byte_end":21490,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"/ `sign`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":21495,"byte_end":21506,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":21511,"byte_end":21514,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Equal to `self` if the sign of `self` and `sign` are the same, otherwise","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":21519,"byte_end":21595,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ equal to `-self`. If `self` is a `NAN`, then a `NAN` with the sign of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":21600,"byte_end":21673,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ `sign` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":21678,"byte_end":21701,"line_start":101,"line_end":101,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":21706,"byte_end":21709,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":21714,"byte_end":21723,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":22177,"byte_end":22184,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"mul_add","qualname":"<f32>::mul_add","value":"pub fn mul_add(Self, f32, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Fused multiply-add. Computes `(self * a) + b` with only one rounding\n error, yielding a more accurate result than an unfused multiply-add.","sig":null,"attributes":[{"value":"/ Fused multiply-add. Computes `(self * a) + b` with only one rounding","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":21836,"byte_end":21908,"line_start":108,"line_end":108,"column_start":5,"column_end":77}},{"value":"/ error, yielding a more accurate result than an unfused multiply-add.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":21913,"byte_end":21985,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":21990,"byte_end":21993,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Using `mul_add` can be more performant than an unfused multiply-add if","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":21998,"byte_end":22072,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/ the target architecture has a dedicated `fma` CPU instruction.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":22077,"byte_end":22143,"line_start":112,"line_end":112,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":22148,"byte_end":22151,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":22156,"byte_end":22165,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":22603,"byte_end":22613,"line_start":127,"line_end":127,"column_start":12,"column_end":22},"name":"div_euclid","qualname":"<f32>::div_euclid","value":"pub fn div_euclid(Self, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Calculates Euclidean division, the matching method for `rem_euclid`.","sig":null,"attributes":[{"value":"/ Calculates Euclidean division, the matching method for `rem_euclid`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":22277,"byte_end":22349,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":22354,"byte_end":22357,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This computes the integer `n` such that","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":22362,"byte_end":22405,"line_start":121,"line_end":121,"column_start":5,"column_end":48}},{"value":"/ `self = n * rhs + self.rem_euclid(rhs)`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":22410,"byte_end":22454,"line_start":122,"line_end":122,"column_start":5,"column_end":49}},{"value":"/ In other words, the result is `self / rhs` rounded to the integer `n`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":22459,"byte_end":22532,"line_start":123,"line_end":123,"column_start":5,"column_end":78}},{"value":"/ such that `self >= n * rhs`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":22537,"byte_end":22569,"line_start":124,"line_end":124,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":22574,"byte_end":22577,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":22582,"byte_end":22591,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":23484,"byte_end":23494,"line_start":147,"line_end":147,"column_start":12,"column_end":22},"name":"rem_euclid","qualname":"<f32>::rem_euclid","value":"pub fn rem_euclid(Self, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Calculates the least nonnegative remainder of `self (mod rhs)`.","sig":null,"attributes":[{"value":"/ Calculates the least nonnegative remainder of `self (mod rhs)`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":22800,"byte_end":22867,"line_start":135,"line_end":135,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":22872,"byte_end":22875,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ In particular, the return value `r` satisfies `0.0 <= r < rhs.abs()` in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":22880,"byte_end":22955,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ most cases. However, due to a floating point round-off error it can","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":22960,"byte_end":23031,"line_start":138,"line_end":138,"column_start":5,"column_end":76}},{"value":"/ result in `r == rhs.abs()`, violating the mathematical definition, if","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":23036,"byte_end":23109,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ `self` is much smaller than `rhs.abs()` in magnitude and `self < 0.0`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":23114,"byte_end":23188,"line_start":140,"line_end":140,"column_start":5,"column_end":79}},{"value":"/ This result is not an element of the function's codomain, but it is the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":23193,"byte_end":23268,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ closest floating point number in the real numbers and thus fulfills the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":23273,"byte_end":23348,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ property `self == self.div_euclid(rhs) * rhs + self.rem_euclid(rhs)`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":23353,"byte_end":23425,"line_start":143,"line_end":143,"column_start":5,"column_end":77}},{"value":"/ approximatively.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":23430,"byte_end":23450,"line_start":144,"line_end":144,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":23455,"byte_end":23458,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":23463,"byte_end":23472,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":23755,"byte_end":23759,"line_start":157,"line_end":157,"column_start":12,"column_end":16},"name":"powi","qualname":"<f32>::powi","value":"pub fn powi(Self, i32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Raises a number to an integer power.","sig":null,"attributes":[{"value":"/ Raises a number to an integer power.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":23607,"byte_end":23647,"line_start":152,"line_end":152,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":23652,"byte_end":23655,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Using this function is generally faster than using `powf`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":23660,"byte_end":23721,"line_start":154,"line_end":154,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":23726,"byte_end":23729,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":23734,"byte_end":23743,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":23922,"byte_end":23926,"line_start":164,"line_end":164,"column_start":12,"column_end":16},"name":"powf","qualname":"<f32>::powf","value":"pub fn powf(Self, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Raises a number to a floating point power.","sig":null,"attributes":[{"value":"/ Raises a number to a floating point power.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":23842,"byte_end":23888,"line_start":161,"line_end":161,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":23893,"byte_end":23896,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":23901,"byte_end":23910,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":24142,"byte_end":24146,"line_start":173,"line_end":173,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<f32>::sqrt","value":"pub fn sqrt(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the square root of a number.","sig":null,"attributes":[{"value":"/ Returns the square root of a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":24008,"byte_end":24048,"line_start":168,"line_end":168,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":24053,"byte_end":24056,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Returns NaN if `self` is a negative number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":24061,"byte_end":24108,"line_start":170,"line_end":170,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":24113,"byte_end":24116,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":24121,"byte_end":24130,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":24303,"byte_end":24306,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"exp","qualname":"<f32>::exp","value":"pub fn exp(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns `e^(self)`, (the exponential function).","sig":null,"attributes":[{"value":"/ Returns `e^(self)`, (the exponential function).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":24218,"byte_end":24269,"line_start":177,"line_end":177,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":24274,"byte_end":24277,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":24282,"byte_end":24291,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":24434,"byte_end":24438,"line_start":187,"line_end":187,"column_start":12,"column_end":16},"name":"exp2","qualname":"<f32>::exp2","value":"pub fn exp2(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns `2^(self)`.","sig":null,"attributes":[{"value":"/ Returns `2^(self)`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":24377,"byte_end":24400,"line_start":184,"line_end":184,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":24405,"byte_end":24408,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":24413,"byte_end":24422,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":24592,"byte_end":24594,"line_start":194,"line_end":194,"column_start":12,"column_end":14},"name":"ln","qualname":"<f32>::ln","value":"pub fn ln(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the natural logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the natural logarithm of the number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":24510,"byte_end":24558,"line_start":191,"line_end":191,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":24563,"byte_end":24566,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":24571,"byte_end":24580,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":25004,"byte_end":25007,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"log","qualname":"<f32>::log","value":"pub fn log(Self, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the logarithm of the number with respect to an arbitrary base.","sig":null,"attributes":[{"value":"/ Returns the logarithm of the number with respect to an arbitrary base.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":24665,"byte_end":24739,"line_start":198,"line_end":198,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":24744,"byte_end":24747,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The result may not be correctly rounded owing to implementation details;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":24752,"byte_end":24828,"line_start":200,"line_end":200,"column_start":5,"column_end":81}},{"value":"/ `self.log2()` can produce more accurate results for base 2, and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":24833,"byte_end":24900,"line_start":201,"line_end":201,"column_start":5,"column_end":72}},{"value":"/ `self.log10()` can produce more accurate results for base 10.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":24905,"byte_end":24970,"line_start":202,"line_end":202,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":24975,"byte_end":24978,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":24983,"byte_end":24992,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":25156,"byte_end":25160,"line_start":212,"line_end":212,"column_start":12,"column_end":16},"name":"log2","qualname":"<f32>::log2","value":"pub fn log2(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the base 2 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 2 logarithm of the number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":25075,"byte_end":25122,"line_start":209,"line_end":209,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":25127,"byte_end":25130,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":25135,"byte_end":25144,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":25454,"byte_end":25459,"line_start":222,"line_end":222,"column_start":12,"column_end":17},"name":"log10","qualname":"<f32>::log10","value":"pub fn log10(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the base 10 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 10 logarithm of the number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":25372,"byte_end":25420,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":25425,"byte_end":25428,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":25433,"byte_end":25442,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":25684,"byte_end":25691,"line_start":232,"line_end":232,"column_start":12,"column_end":19},"name":"abs_sub","qualname":"<f32>::abs_sub","value":"pub fn abs_sub(Self, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":25532,"byte_end":25575,"line_start":226,"line_end":226,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":25580,"byte_end":25583,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ * If `self <= other`: `0:0`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":25588,"byte_end":25619,"line_start":228,"line_end":228,"column_start":5,"column_end":36}},{"value":"/ * Else: `self - other`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":25624,"byte_end":25650,"line_start":229,"line_end":229,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":25655,"byte_end":25658,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":25663,"byte_end":25672,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":25848,"byte_end":25852,"line_start":239,"line_end":239,"column_start":12,"column_end":16},"name":"cbrt","qualname":"<f32>::cbrt","value":"pub fn cbrt(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the cubic root of a number.","sig":null,"attributes":[{"value":"/ Returns the cubic root of a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":25775,"byte_end":25814,"line_start":236,"line_end":236,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":25819,"byte_end":25822,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":25827,"byte_end":25836,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":26062,"byte_end":26067,"line_start":247,"line_end":247,"column_start":12,"column_end":17},"name":"hypot","qualname":"<f32>::hypot","value":"pub fn hypot(Self, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Calculates the length of the hypotenuse of a right-angle triangle given\n legs of length `x` and `y`.","sig":null,"attributes":[{"value":"/ Calculates the length of the hypotenuse of a right-angle triangle given","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":25917,"byte_end":25992,"line_start":243,"line_end":243,"column_start":5,"column_end":80}},{"value":"/ legs of length `x` and `y`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":25997,"byte_end":26028,"line_start":244,"line_end":244,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":26033,"byte_end":26036,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":26041,"byte_end":26050,"line_start":246,"line_end":246,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":26233,"byte_end":26236,"line_start":254,"line_end":254,"column_start":12,"column_end":15},"name":"sin","qualname":"<f32>::sin","value":"pub fn sin(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Computes the sine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the sine of a number (in radians).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":26152,"byte_end":26199,"line_start":251,"line_end":251,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":26204,"byte_end":26207,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":26212,"byte_end":26221,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":26390,"byte_end":26393,"line_start":261,"line_end":261,"column_start":12,"column_end":15},"name":"cos","qualname":"<f32>::cos","value":"pub fn cos(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Computes the cosine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the cosine of a number (in radians).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":26307,"byte_end":26356,"line_start":258,"line_end":258,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":26361,"byte_end":26364,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":26369,"byte_end":26378,"line_start":260,"line_end":260,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":26548,"byte_end":26551,"line_start":268,"line_end":268,"column_start":12,"column_end":15},"name":"tan","qualname":"<f32>::tan","value":"pub fn tan(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Computes the tangent of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the tangent of a number (in radians).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":26464,"byte_end":26514,"line_start":265,"line_end":265,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":26519,"byte_end":26522,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":26527,"byte_end":26536,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":26807,"byte_end":26811,"line_start":277,"line_end":277,"column_start":12,"column_end":16},"name":"asin","qualname":"<f32>::asin","value":"pub fn asin(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Computes the arcsine of a number. Return value is in radians in\n the range [-pi/2, pi/2] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arcsine of a number. Return value is in radians in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":26615,"byte_end":26682,"line_start":272,"line_end":272,"column_start":5,"column_end":72}},{"value":"/ the range [-pi/2, pi/2] or NaN if the number is outside the range","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":26687,"byte_end":26756,"line_start":273,"line_end":273,"column_start":5,"column_end":74}},{"value":"/ [-1, 1].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":26761,"byte_end":26773,"line_start":274,"line_end":274,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":26778,"byte_end":26781,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":26786,"byte_end":26795,"line_start":276,"line_end":276,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":27064,"byte_end":27068,"line_start":286,"line_end":286,"column_start":12,"column_end":16},"name":"acos","qualname":"<f32>::acos","value":"pub fn acos(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Computes the arccosine of a number. Return value is in radians in\n the range [0, pi] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arccosine of a number. Return value is in radians in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":26876,"byte_end":26945,"line_start":281,"line_end":281,"column_start":5,"column_end":74}},{"value":"/ the range [0, pi] or NaN if the number is outside the range","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":26950,"byte_end":27013,"line_start":282,"line_end":282,"column_start":5,"column_end":68}},{"value":"/ [-1, 1].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":27018,"byte_end":27030,"line_start":283,"line_end":283,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":27035,"byte_end":27038,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":27043,"byte_end":27052,"line_start":285,"line_end":285,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":27270,"byte_end":27274,"line_start":294,"line_end":294,"column_start":12,"column_end":16},"name":"atan","qualname":"<f32>::atan","value":"pub fn atan(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Computes the arctangent of a number. Return value is in radians in the\n range [-pi/2, pi/2];","sig":null,"attributes":[{"value":"/ Computes the arctangent of a number. Return value is in radians in the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":27133,"byte_end":27207,"line_start":290,"line_end":290,"column_start":5,"column_end":79}},{"value":"/ range [-pi/2, pi/2];","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":27212,"byte_end":27236,"line_start":291,"line_end":291,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":27241,"byte_end":27244,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":27249,"byte_end":27258,"line_start":293,"line_end":293,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":27664,"byte_end":27669,"line_start":306,"line_end":306,"column_start":12,"column_end":17},"name":"atan2","qualname":"<f32>::atan2","value":"pub fn atan2(Self, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`) in radians.","sig":null,"attributes":[{"value":"/ Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`) in radians.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":27339,"byte_end":27426,"line_start":298,"line_end":298,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":27431,"byte_end":27434,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ * `x = 0`, `y = 0`: `0`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":27439,"byte_end":27466,"line_start":300,"line_end":300,"column_start":5,"column_end":32}},{"value":"/ * `x >= 0`: `arctan(y/x)` -> `[-pi/2, pi/2]`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":27471,"byte_end":27519,"line_start":301,"line_end":301,"column_start":5,"column_end":53}},{"value":"/ * `y >= 0`: `arctan(y/x) + pi` -> `(pi/2, pi]`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":27524,"byte_end":27574,"line_start":302,"line_end":302,"column_start":5,"column_end":55}},{"value":"/ * `y < 0`: `arctan(y/x) - pi` -> `(-pi, -pi/2)`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":27579,"byte_end":27630,"line_start":303,"line_end":303,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":27635,"byte_end":27638,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":27643,"byte_end":27652,"line_start":305,"line_end":305,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":27891,"byte_end":27898,"line_start":314,"line_end":314,"column_start":12,"column_end":19},"name":"sin_cos","qualname":"<f32>::sin_cos","value":"pub fn sin_cos(Self) -> (f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" Simultaneously computes the sine and cosine of the number, `x`. Returns\n `(sin(x), cos(x))`.","sig":null,"attributes":[{"value":"/ Simultaneously computes the sine and cosine of the number, `x`. Returns","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":27754,"byte_end":27829,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ `(sin(x), cos(x))`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":27834,"byte_end":27857,"line_start":311,"line_end":311,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":27862,"byte_end":27865,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":27870,"byte_end":27879,"line_start":313,"line_end":313,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":28096,"byte_end":28102,"line_start":322,"line_end":322,"column_start":12,"column_end":18},"name":"exp_m1","qualname":"<f32>::exp_m1","value":"pub fn exp_m1(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns `e^(self) - 1` in a way that is accurate even if the\n number is close to zero.","sig":null,"attributes":[{"value":"/ Returns `e^(self) - 1` in a way that is accurate even if the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":27965,"byte_end":28029,"line_start":318,"line_end":318,"column_start":5,"column_end":69}},{"value":"/ number is close to zero.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":28034,"byte_end":28062,"line_start":319,"line_end":319,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":28067,"byte_end":28070,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":28075,"byte_end":28084,"line_start":321,"line_end":321,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":28317,"byte_end":28322,"line_start":330,"line_end":330,"column_start":12,"column_end":17},"name":"ln_1p","qualname":"<f32>::ln_1p","value":"pub fn ln_1p(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns `ln(1+n)` (natural logarithm) more accurately than if\n the operations were performed separately.","sig":null,"attributes":[{"value":"/ Returns `ln(1+n)` (natural logarithm) more accurately than if","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":28168,"byte_end":28233,"line_start":326,"line_end":326,"column_start":5,"column_end":70}},{"value":"/ the operations were performed separately.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":28238,"byte_end":28283,"line_start":327,"line_end":327,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":28288,"byte_end":28291,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":28296,"byte_end":28305,"line_start":329,"line_end":329,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":28451,"byte_end":28455,"line_start":337,"line_end":337,"column_start":12,"column_end":16},"name":"sinh","qualname":"<f32>::sinh","value":"pub fn sinh(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Hyperbolic sine function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":28388,"byte_end":28417,"line_start":334,"line_end":334,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":28422,"byte_end":28425,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":28430,"byte_end":28439,"line_start":336,"line_end":336,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":28585,"byte_end":28589,"line_start":344,"line_end":344,"column_start":12,"column_end":16},"name":"cosh","qualname":"<f32>::cosh","value":"pub fn cosh(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Hyperbolic cosine function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":28520,"byte_end":28551,"line_start":341,"line_end":341,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":28556,"byte_end":28559,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":28564,"byte_end":28573,"line_start":343,"line_end":343,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":28720,"byte_end":28724,"line_start":351,"line_end":351,"column_start":12,"column_end":16},"name":"tanh","qualname":"<f32>::tanh","value":"pub fn tanh(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Hyperbolic tangent function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":28654,"byte_end":28686,"line_start":348,"line_end":348,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":28691,"byte_end":28694,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":28699,"byte_end":28708,"line_start":350,"line_end":350,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":28860,"byte_end":28865,"line_start":358,"line_end":358,"column_start":12,"column_end":17},"name":"asinh","qualname":"<f32>::asinh","value":"pub fn asinh(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Inverse hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic sine function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":28789,"byte_end":28826,"line_start":355,"line_end":355,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":28831,"byte_end":28834,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":28839,"byte_end":28848,"line_start":357,"line_end":357,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":29121,"byte_end":29126,"line_start":369,"line_end":369,"column_start":12,"column_end":17},"name":"acosh","qualname":"<f32>::acosh","value":"pub fn acosh(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Inverse hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic cosine function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":29048,"byte_end":29087,"line_start":366,"line_end":366,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":29092,"byte_end":29095,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":29100,"byte_end":29109,"line_start":368,"line_end":368,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":29321,"byte_end":29326,"line_start":376,"line_end":376,"column_start":12,"column_end":17},"name":"atanh","qualname":"<f32>::atanh","value":"pub fn atanh(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Inverse hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic tangent function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":29247,"byte_end":29287,"line_start":373,"line_end":373,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":29292,"byte_end":29295,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":29300,"byte_end":29309,"line_start":375,"line_end":375,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":29833,"byte_end":29838,"line_start":393,"line_end":393,"column_start":12,"column_end":17},"name":"clamp","qualname":"<f32>::clamp","value":"pub fn clamp(Self, f32, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Restrict a value to a certain interval unless it is NaN.","sig":null,"attributes":[{"value":"/ Restrict a value to a certain interval unless it is NaN.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":29405,"byte_end":29465,"line_start":380,"line_end":380,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":29470,"byte_end":29473,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ Returns `max` if `self` is greater than `max`, and `min` if `self` is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":29478,"byte_end":29551,"line_start":382,"line_end":382,"column_start":5,"column_end":78}},{"value":"/ less than `min`. Otherwise this returns `self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":29556,"byte_end":29607,"line_start":383,"line_end":383,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":29612,"byte_end":29615,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Not that this function returns NaN if the initial value was NaN as","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":29620,"byte_end":29690,"line_start":385,"line_end":385,"column_start":5,"column_end":75}},{"value":"/ well.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":29695,"byte_end":29704,"line_start":386,"line_end":386,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":29709,"byte_end":29712,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":29717,"byte_end":29729,"line_start":388,"line_end":388,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":29734,"byte_end":29737,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ Panics if `min > max`, `min` is NaN, or `max` is NaN.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":29742,"byte_end":29799,"line_start":390,"line_end":390,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":29804,"byte_end":29807,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f32.rs","byte_start":29812,"byte_end":29821,"line_start":392,"line_end":392,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":210},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"f64","qualname":"::f64","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232}],"decl_id":null,"docs":" This module provides constants which are specific to the implementation\n of the `f64` floating point data type.","sig":null,"attributes":[{"value":"/ This module provides constants which are specific to the implementation","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":30855,"byte_end":30930,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ of the `f64` floating point data type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":30931,"byte_end":30973,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":30974,"byte_end":30977,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ *[See also the `f64` primitive type](../../std/primitive.f64.html).*","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":30978,"byte_end":31050,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31051,"byte_end":31054,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Mathematically significant numbers are provided in the `consts` sub-module.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31055,"byte_end":31134,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31135,"byte_end":31138,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Although using these constants won’t cause compilation warnings,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31139,"byte_end":31209,"line_start":25,"line_end":25,"column_start":1,"column_end":69}},{"value":"/ new code should use the associated constants directly on the primitive type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31210,"byte_end":31290,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"allow(missing_docs)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31292,"byte_end":31315,"line_start":28,"line_end":28,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31747,"byte_end":31752,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"floor","qualname":"<f64>::floor","value":"pub fn floor(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the largest integer less than or equal to a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31650,"byte_end":31713,"line_start":41,"line_end":41,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31718,"byte_end":31721,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31726,"byte_end":31735,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31926,"byte_end":31930,"line_start":51,"line_end":51,"column_start":12,"column_end":16},"name":"ceil","qualname":"<f64>::ceil","value":"pub fn ceil(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the smallest integer greater than or equal to a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31825,"byte_end":31892,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31897,"byte_end":31900,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":31905,"byte_end":31914,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":32126,"byte_end":32131,"line_start":59,"line_end":59,"column_start":12,"column_end":17},"name":"round","qualname":"<f64>::round","value":"pub fn round(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the nearest integer to a number. Round half-way cases away from\n `0.0`.","sig":null,"attributes":[{"value":"/ Returns the nearest integer to a number. Round half-way cases away from","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":32002,"byte_end":32077,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ `0.0`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":32082,"byte_end":32092,"line_start":56,"line_end":56,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":32097,"byte_end":32100,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":32105,"byte_end":32114,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":32279,"byte_end":32284,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"trunc","qualname":"<f64>::trunc","value":"pub fn trunc(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the integer part of a number.","sig":null,"attributes":[{"value":"/ Returns the integer part of a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":32204,"byte_end":32245,"line_start":63,"line_end":63,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":32250,"byte_end":32253,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":32258,"byte_end":32267,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":32435,"byte_end":32440,"line_start":73,"line_end":73,"column_start":12,"column_end":17},"name":"fract","qualname":"<f64>::fract","value":"pub fn fract(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the fractional part of a number.","sig":null,"attributes":[{"value":"/ Returns the fractional part of a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":32357,"byte_end":32401,"line_start":70,"line_end":70,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":32406,"byte_end":32409,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":32414,"byte_end":32423,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":32617,"byte_end":32620,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"abs","qualname":"<f64>::abs","value":"pub fn abs(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value of `self`. Returns `NAN` if the\n number is `NAN`.","sig":null,"attributes":[{"value":"/ Computes the absolute value of `self`. Returns `NAN` if the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":32495,"byte_end":32558,"line_start":77,"line_end":77,"column_start":5,"column_end":68}},{"value":"/ number is `NAN`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":32563,"byte_end":32583,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":32588,"byte_end":32591,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":32596,"byte_end":32605,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":32962,"byte_end":32968,"line_start":92,"line_end":92,"column_start":12,"column_end":18},"name":"signum","qualname":"<f64>::signum","value":"pub fn signum(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns a number that represents the sign of `self`.","sig":null,"attributes":[{"value":"/ Returns a number that represents the sign of `self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":32692,"byte_end":32748,"line_start":85,"line_end":85,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":32753,"byte_end":32756,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ - `1.0` if the number is positive, `+0.0` or `INFINITY`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":32761,"byte_end":32820,"line_start":87,"line_end":87,"column_start":5,"column_end":64}},{"value":"/ - `-1.0` if the number is negative, `-0.0` or `NEG_INFINITY`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":32825,"byte_end":32889,"line_start":88,"line_end":88,"column_start":5,"column_end":69}},{"value":"/ - `NAN` if the number is `NAN`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":32894,"byte_end":32928,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":32933,"byte_end":32936,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":32941,"byte_end":32950,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":33377,"byte_end":33385,"line_start":104,"line_end":104,"column_start":12,"column_end":20},"name":"copysign","qualname":"<f64>::copysign","value":"pub fn copysign(Self, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns a number composed of the magnitude of `self` and the sign of\n `sign`.","sig":null,"attributes":[{"value":"/ Returns a number composed of the magnitude of `self` and the sign of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":33060,"byte_end":33132,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"/ `sign`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":33137,"byte_end":33148,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":33153,"byte_end":33156,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Equal to `self` if the sign of `self` and `sign` are the same, otherwise","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":33161,"byte_end":33237,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ equal to `-self`. If `self` is a `NAN`, then a `NAN` with the sign of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":33242,"byte_end":33315,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ `sign` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":33320,"byte_end":33343,"line_start":101,"line_end":101,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":33348,"byte_end":33351,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":33356,"byte_end":33365,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":33819,"byte_end":33826,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"mul_add","qualname":"<f64>::mul_add","value":"pub fn mul_add(Self, f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Fused multiply-add. Computes `(self * a) + b` with only one rounding\n error, yielding a more accurate result than an unfused multiply-add.","sig":null,"attributes":[{"value":"/ Fused multiply-add. Computes `(self * a) + b` with only one rounding","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":33478,"byte_end":33550,"line_start":108,"line_end":108,"column_start":5,"column_end":77}},{"value":"/ error, yielding a more accurate result than an unfused multiply-add.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":33555,"byte_end":33627,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":33632,"byte_end":33635,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Using `mul_add` can be more performant than an unfused multiply-add if","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":33640,"byte_end":33714,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/ the target architecture has a dedicated `fma` CPU instruction.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":33719,"byte_end":33785,"line_start":112,"line_end":112,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":33790,"byte_end":33793,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":33798,"byte_end":33807,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":34245,"byte_end":34255,"line_start":127,"line_end":127,"column_start":12,"column_end":22},"name":"div_euclid","qualname":"<f64>::div_euclid","value":"pub fn div_euclid(Self, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Calculates Euclidean division, the matching method for `rem_euclid`.","sig":null,"attributes":[{"value":"/ Calculates Euclidean division, the matching method for `rem_euclid`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":33919,"byte_end":33991,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":33996,"byte_end":33999,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This computes the integer `n` such that","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":34004,"byte_end":34047,"line_start":121,"line_end":121,"column_start":5,"column_end":48}},{"value":"/ `self = n * rhs + self.rem_euclid(rhs)`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":34052,"byte_end":34096,"line_start":122,"line_end":122,"column_start":5,"column_end":49}},{"value":"/ In other words, the result is `self / rhs` rounded to the integer `n`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":34101,"byte_end":34174,"line_start":123,"line_end":123,"column_start":5,"column_end":78}},{"value":"/ such that `self >= n * rhs`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":34179,"byte_end":34211,"line_start":124,"line_end":124,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":34216,"byte_end":34219,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":34224,"byte_end":34233,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":35126,"byte_end":35136,"line_start":147,"line_end":147,"column_start":12,"column_end":22},"name":"rem_euclid","qualname":"<f64>::rem_euclid","value":"pub fn rem_euclid(Self, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Calculates the least nonnegative remainder of `self (mod rhs)`.","sig":null,"attributes":[{"value":"/ Calculates the least nonnegative remainder of `self (mod rhs)`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":34442,"byte_end":34509,"line_start":135,"line_end":135,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":34514,"byte_end":34517,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ In particular, the return value `r` satisfies `0.0 <= r < rhs.abs()` in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":34522,"byte_end":34597,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ most cases. However, due to a floating point round-off error it can","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":34602,"byte_end":34673,"line_start":138,"line_end":138,"column_start":5,"column_end":76}},{"value":"/ result in `r == rhs.abs()`, violating the mathematical definition, if","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":34678,"byte_end":34751,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ `self` is much smaller than `rhs.abs()` in magnitude and `self < 0.0`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":34756,"byte_end":34830,"line_start":140,"line_end":140,"column_start":5,"column_end":79}},{"value":"/ This result is not an element of the function's codomain, but it is the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":34835,"byte_end":34910,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ closest floating point number in the real numbers and thus fulfills the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":34915,"byte_end":34990,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ property `self == self.div_euclid(rhs) * rhs + self.rem_euclid(rhs)`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":34995,"byte_end":35067,"line_start":143,"line_end":143,"column_start":5,"column_end":77}},{"value":"/ approximatively.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":35072,"byte_end":35092,"line_start":144,"line_end":144,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":35097,"byte_end":35100,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":35105,"byte_end":35114,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":35397,"byte_end":35401,"line_start":157,"line_end":157,"column_start":12,"column_end":16},"name":"powi","qualname":"<f64>::powi","value":"pub fn powi(Self, i32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Raises a number to an integer power.","sig":null,"attributes":[{"value":"/ Raises a number to an integer power.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":35249,"byte_end":35289,"line_start":152,"line_end":152,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":35294,"byte_end":35297,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Using this function is generally faster than using `powf`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":35302,"byte_end":35363,"line_start":154,"line_end":154,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":35368,"byte_end":35371,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":35376,"byte_end":35385,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":35564,"byte_end":35568,"line_start":164,"line_end":164,"column_start":12,"column_end":16},"name":"powf","qualname":"<f64>::powf","value":"pub fn powf(Self, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Raises a number to a floating point power.","sig":null,"attributes":[{"value":"/ Raises a number to a floating point power.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":35484,"byte_end":35530,"line_start":161,"line_end":161,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":35535,"byte_end":35538,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":35543,"byte_end":35552,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":35784,"byte_end":35788,"line_start":173,"line_end":173,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<f64>::sqrt","value":"pub fn sqrt(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the square root of a number.","sig":null,"attributes":[{"value":"/ Returns the square root of a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":35650,"byte_end":35690,"line_start":168,"line_end":168,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":35695,"byte_end":35698,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Returns NaN if `self` is a negative number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":35703,"byte_end":35750,"line_start":170,"line_end":170,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":35755,"byte_end":35758,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":35763,"byte_end":35772,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":35945,"byte_end":35948,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"exp","qualname":"<f64>::exp","value":"pub fn exp(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns `e^(self)`, (the exponential function).","sig":null,"attributes":[{"value":"/ Returns `e^(self)`, (the exponential function).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":35860,"byte_end":35911,"line_start":177,"line_end":177,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":35916,"byte_end":35919,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":35924,"byte_end":35933,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":36076,"byte_end":36080,"line_start":187,"line_end":187,"column_start":12,"column_end":16},"name":"exp2","qualname":"<f64>::exp2","value":"pub fn exp2(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns `2^(self)`.","sig":null,"attributes":[{"value":"/ Returns `2^(self)`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":36019,"byte_end":36042,"line_start":184,"line_end":184,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":36047,"byte_end":36050,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":36055,"byte_end":36064,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":36234,"byte_end":36236,"line_start":194,"line_end":194,"column_start":12,"column_end":14},"name":"ln","qualname":"<f64>::ln","value":"pub fn ln(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the natural logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the natural logarithm of the number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":36152,"byte_end":36200,"line_start":191,"line_end":191,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":36205,"byte_end":36208,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":36213,"byte_end":36222,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":36665,"byte_end":36668,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"log","qualname":"<f64>::log","value":"pub fn log(Self, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the logarithm of the number with respect to an arbitrary base.","sig":null,"attributes":[{"value":"/ Returns the logarithm of the number with respect to an arbitrary base.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":36326,"byte_end":36400,"line_start":198,"line_end":198,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":36405,"byte_end":36408,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The result may not be correctly rounded owing to implementation details;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":36413,"byte_end":36489,"line_start":200,"line_end":200,"column_start":5,"column_end":81}},{"value":"/ `self.log2()` can produce more accurate results for base 2, and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":36494,"byte_end":36561,"line_start":201,"line_end":201,"column_start":5,"column_end":72}},{"value":"/ `self.log10()` can produce more accurate results for base 10.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":36566,"byte_end":36631,"line_start":202,"line_end":202,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":36636,"byte_end":36639,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":36644,"byte_end":36653,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":36817,"byte_end":36821,"line_start":212,"line_end":212,"column_start":12,"column_end":16},"name":"log2","qualname":"<f64>::log2","value":"pub fn log2(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the base 2 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 2 logarithm of the number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":36736,"byte_end":36783,"line_start":209,"line_end":209,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":36788,"byte_end":36791,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":36796,"byte_end":36805,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":37167,"byte_end":37172,"line_start":224,"line_end":224,"column_start":12,"column_end":17},"name":"log10","qualname":"<f64>::log10","value":"pub fn log10(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the base 10 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 10 logarithm of the number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":37085,"byte_end":37133,"line_start":221,"line_end":221,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":37138,"byte_end":37141,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":37146,"byte_end":37155,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":37416,"byte_end":37423,"line_start":234,"line_end":234,"column_start":12,"column_end":19},"name":"abs_sub","qualname":"<f64>::abs_sub","value":"pub fn abs_sub(Self, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":37264,"byte_end":37307,"line_start":228,"line_end":228,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":37312,"byte_end":37315,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ * If `self <= other`: `0:0`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":37320,"byte_end":37351,"line_start":230,"line_end":230,"column_start":5,"column_end":36}},{"value":"/ * Else: `self - other`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":37356,"byte_end":37382,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":37387,"byte_end":37390,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":37395,"byte_end":37404,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":37579,"byte_end":37583,"line_start":241,"line_end":241,"column_start":12,"column_end":16},"name":"cbrt","qualname":"<f64>::cbrt","value":"pub fn cbrt(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the cubic root of a number.","sig":null,"attributes":[{"value":"/ Returns the cubic root of a number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":37506,"byte_end":37545,"line_start":238,"line_end":238,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":37550,"byte_end":37553,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":37558,"byte_end":37567,"line_start":240,"line_end":240,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":37792,"byte_end":37797,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"hypot","qualname":"<f64>::hypot","value":"pub fn hypot(Self, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Calculates the length of the hypotenuse of a right-angle triangle given\n legs of length `x` and `y`.","sig":null,"attributes":[{"value":"/ Calculates the length of the hypotenuse of a right-angle triangle given","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":37647,"byte_end":37722,"line_start":245,"line_end":245,"column_start":5,"column_end":80}},{"value":"/ legs of length `x` and `y`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":37727,"byte_end":37758,"line_start":246,"line_end":246,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":37763,"byte_end":37766,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":37771,"byte_end":37780,"line_start":248,"line_end":248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":37962,"byte_end":37965,"line_start":256,"line_end":256,"column_start":12,"column_end":15},"name":"sin","qualname":"<f64>::sin","value":"pub fn sin(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Computes the sine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the sine of a number (in radians).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":37881,"byte_end":37928,"line_start":253,"line_end":253,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":37933,"byte_end":37936,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":37941,"byte_end":37950,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":38119,"byte_end":38122,"line_start":263,"line_end":263,"column_start":12,"column_end":15},"name":"cos","qualname":"<f64>::cos","value":"pub fn cos(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Computes the cosine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the cosine of a number (in radians).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":38036,"byte_end":38085,"line_start":260,"line_end":260,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":38090,"byte_end":38093,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":38098,"byte_end":38107,"line_start":262,"line_end":262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":38277,"byte_end":38280,"line_start":270,"line_end":270,"column_start":12,"column_end":15},"name":"tan","qualname":"<f64>::tan","value":"pub fn tan(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Computes the tangent of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the tangent of a number (in radians).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":38193,"byte_end":38243,"line_start":267,"line_end":267,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":38248,"byte_end":38251,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":38256,"byte_end":38265,"line_start":269,"line_end":269,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":38535,"byte_end":38539,"line_start":279,"line_end":279,"column_start":12,"column_end":16},"name":"asin","qualname":"<f64>::asin","value":"pub fn asin(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Computes the arcsine of a number. Return value is in radians in\n the range [-pi/2, pi/2] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arcsine of a number. Return value is in radians in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":38343,"byte_end":38410,"line_start":274,"line_end":274,"column_start":5,"column_end":72}},{"value":"/ the range [-pi/2, pi/2] or NaN if the number is outside the range","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":38415,"byte_end":38484,"line_start":275,"line_end":275,"column_start":5,"column_end":74}},{"value":"/ [-1, 1].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":38489,"byte_end":38501,"line_start":276,"line_end":276,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":38506,"byte_end":38509,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":38514,"byte_end":38523,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":38791,"byte_end":38795,"line_start":288,"line_end":288,"column_start":12,"column_end":16},"name":"acos","qualname":"<f64>::acos","value":"pub fn acos(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Computes the arccosine of a number. Return value is in radians in\n the range [0, pi] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arccosine of a number. Return value is in radians in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":38603,"byte_end":38672,"line_start":283,"line_end":283,"column_start":5,"column_end":74}},{"value":"/ the range [0, pi] or NaN if the number is outside the range","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":38677,"byte_end":38740,"line_start":284,"line_end":284,"column_start":5,"column_end":68}},{"value":"/ [-1, 1].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":38745,"byte_end":38757,"line_start":285,"line_end":285,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":38762,"byte_end":38765,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":38770,"byte_end":38779,"line_start":287,"line_end":287,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":38996,"byte_end":39000,"line_start":296,"line_end":296,"column_start":12,"column_end":16},"name":"atan","qualname":"<f64>::atan","value":"pub fn atan(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Computes the arctangent of a number. Return value is in radians in the\n range [-pi/2, pi/2];","sig":null,"attributes":[{"value":"/ Computes the arctangent of a number. Return value is in radians in the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":38859,"byte_end":38933,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ range [-pi/2, pi/2];","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":38938,"byte_end":38962,"line_start":293,"line_end":293,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":38967,"byte_end":38970,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":38975,"byte_end":38984,"line_start":295,"line_end":295,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":39389,"byte_end":39394,"line_start":308,"line_end":308,"column_start":12,"column_end":17},"name":"atan2","qualname":"<f64>::atan2","value":"pub fn atan2(Self, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`) in radians.","sig":null,"attributes":[{"value":"/ Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`) in radians.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":39064,"byte_end":39151,"line_start":300,"line_end":300,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":39156,"byte_end":39159,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ * `x = 0`, `y = 0`: `0`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":39164,"byte_end":39191,"line_start":302,"line_end":302,"column_start":5,"column_end":32}},{"value":"/ * `x >= 0`: `arctan(y/x)` -> `[-pi/2, pi/2]`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":39196,"byte_end":39244,"line_start":303,"line_end":303,"column_start":5,"column_end":53}},{"value":"/ * `y >= 0`: `arctan(y/x) + pi` -> `(pi/2, pi]`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":39249,"byte_end":39299,"line_start":304,"line_end":304,"column_start":5,"column_end":55}},{"value":"/ * `y < 0`: `arctan(y/x) - pi` -> `(-pi, -pi/2)`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":39304,"byte_end":39355,"line_start":305,"line_end":305,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":39360,"byte_end":39363,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":39368,"byte_end":39377,"line_start":307,"line_end":307,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":39615,"byte_end":39622,"line_start":316,"line_end":316,"column_start":12,"column_end":19},"name":"sin_cos","qualname":"<f64>::sin_cos","value":"pub fn sin_cos(Self) -> (f64, f64)","parent":null,"children":[],"decl_id":null,"docs":" Simultaneously computes the sine and cosine of the number, `x`. Returns\n `(sin(x), cos(x))`.","sig":null,"attributes":[{"value":"/ Simultaneously computes the sine and cosine of the number, `x`. Returns","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":39478,"byte_end":39553,"line_start":312,"line_end":312,"column_start":5,"column_end":80}},{"value":"/ `(sin(x), cos(x))`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":39558,"byte_end":39581,"line_start":313,"line_end":313,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":39586,"byte_end":39589,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":39594,"byte_end":39603,"line_start":315,"line_end":315,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":39820,"byte_end":39826,"line_start":324,"line_end":324,"column_start":12,"column_end":18},"name":"exp_m1","qualname":"<f64>::exp_m1","value":"pub fn exp_m1(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns `e^(self) - 1` in a way that is accurate even if the\n number is close to zero.","sig":null,"attributes":[{"value":"/ Returns `e^(self) - 1` in a way that is accurate even if the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":39689,"byte_end":39753,"line_start":320,"line_end":320,"column_start":5,"column_end":69}},{"value":"/ number is close to zero.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":39758,"byte_end":39786,"line_start":321,"line_end":321,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":39791,"byte_end":39794,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":39799,"byte_end":39808,"line_start":323,"line_end":323,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":40040,"byte_end":40045,"line_start":332,"line_end":332,"column_start":12,"column_end":17},"name":"ln_1p","qualname":"<f64>::ln_1p","value":"pub fn ln_1p(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns `ln(1+n)` (natural logarithm) more accurately than if\n the operations were performed separately.","sig":null,"attributes":[{"value":"/ Returns `ln(1+n)` (natural logarithm) more accurately than if","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":39891,"byte_end":39956,"line_start":328,"line_end":328,"column_start":5,"column_end":70}},{"value":"/ the operations were performed separately.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":39961,"byte_end":40006,"line_start":329,"line_end":329,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":40011,"byte_end":40014,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":40019,"byte_end":40028,"line_start":331,"line_end":331,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":40173,"byte_end":40177,"line_start":339,"line_end":339,"column_start":12,"column_end":16},"name":"sinh","qualname":"<f64>::sinh","value":"pub fn sinh(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Hyperbolic sine function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":40110,"byte_end":40139,"line_start":336,"line_end":336,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":40144,"byte_end":40147,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":40152,"byte_end":40161,"line_start":338,"line_end":338,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":40306,"byte_end":40310,"line_start":346,"line_end":346,"column_start":12,"column_end":16},"name":"cosh","qualname":"<f64>::cosh","value":"pub fn cosh(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Hyperbolic cosine function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":40241,"byte_end":40272,"line_start":343,"line_end":343,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":40277,"byte_end":40280,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":40285,"byte_end":40294,"line_start":345,"line_end":345,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":40440,"byte_end":40444,"line_start":353,"line_end":353,"column_start":12,"column_end":16},"name":"tanh","qualname":"<f64>::tanh","value":"pub fn tanh(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Hyperbolic tangent function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":40374,"byte_end":40406,"line_start":350,"line_end":350,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":40411,"byte_end":40414,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":40419,"byte_end":40428,"line_start":352,"line_end":352,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":40579,"byte_end":40584,"line_start":360,"line_end":360,"column_start":12,"column_end":17},"name":"asinh","qualname":"<f64>::asinh","value":"pub fn asinh(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Inverse hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic sine function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":40508,"byte_end":40545,"line_start":357,"line_end":357,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":40550,"byte_end":40553,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":40558,"byte_end":40567,"line_start":359,"line_end":359,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":40840,"byte_end":40845,"line_start":371,"line_end":371,"column_start":12,"column_end":17},"name":"acosh","qualname":"<f64>::acosh","value":"pub fn acosh(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Inverse hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic cosine function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":40767,"byte_end":40806,"line_start":368,"line_end":368,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":40811,"byte_end":40814,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":40819,"byte_end":40828,"line_start":370,"line_end":370,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":41028,"byte_end":41033,"line_start":378,"line_end":378,"column_start":12,"column_end":17},"name":"atanh","qualname":"<f64>::atanh","value":"pub fn atanh(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Inverse hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic tangent function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":40954,"byte_end":40994,"line_start":375,"line_end":375,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":40999,"byte_end":41002,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":41007,"byte_end":41016,"line_start":377,"line_end":377,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":41540,"byte_end":41545,"line_start":395,"line_end":395,"column_start":12,"column_end":17},"name":"clamp","qualname":"<f64>::clamp","value":"pub fn clamp(Self, f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Restrict a value to a certain interval unless it is NaN.","sig":null,"attributes":[{"value":"/ Restrict a value to a certain interval unless it is NaN.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":41112,"byte_end":41172,"line_start":382,"line_end":382,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":41177,"byte_end":41180,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ Returns `max` if `self` is greater than `max`, and `min` if `self` is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":41185,"byte_end":41258,"line_start":384,"line_end":384,"column_start":5,"column_end":78}},{"value":"/ less than `min`. Otherwise this returns `self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":41263,"byte_end":41314,"line_start":385,"line_end":385,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":41319,"byte_end":41322,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Not that this function returns NaN if the initial value was NaN as","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":41327,"byte_end":41397,"line_start":387,"line_end":387,"column_start":5,"column_end":75}},{"value":"/ well.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":41402,"byte_end":41411,"line_start":388,"line_end":388,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":41416,"byte_end":41419,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":41424,"byte_end":41436,"line_start":390,"line_end":390,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":41441,"byte_end":41444,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ Panics if `min > max`, `min` is NaN, or `max` is NaN.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":41449,"byte_end":41506,"line_start":392,"line_end":392,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":41511,"byte_end":41514,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/f64.rs","byte_start":41519,"byte_end":41528,"line_start":394,"line_end":394,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":278},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"thread","qualname":"::thread","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":8818},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":8828},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":7063},{"krate":0,"index":7078},{"krate":0,"index":7079},{"krate":0,"index":7074},{"krate":0,"index":7075},{"krate":0,"index":7072},{"krate":0,"index":7071},{"krate":0,"index":7068},{"krate":0,"index":7066},{"krate":0,"index":372},{"krate":0,"index":377},{"krate":0,"index":7081},{"krate":0,"index":7083},{"krate":0,"index":383},{"krate":0,"index":392},{"krate":0,"index":394}],"decl_id":null,"docs":" Native threads.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5656,"byte_end":5668,"line_start":195,"line_end":195,"column_start":1,"column_end":13}},{"value":"/ Native threads.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":43412,"byte_end":43431,"line_start":18,"line_end":18,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":304},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":77739,"byte_end":77747,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::thread::local::LocalKey","value":"LocalKey {  }","parent":null,"children":[{"krate":0,"index":306}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7059},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":81256,"byte_end":81267,"line_start":118,"line_end":118,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::thread::local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":7060}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](struct.LocalKey.html#method.try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](struct.LocalKey.html#method.try_with).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":81141,"byte_end":81227,"line_start":116,"line_end":116,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":81529,"byte_end":81532,"line_start":131,"line_end":131,"column_start":25,"column_end":28},"name":"new","qualname":"<LocalKey<T>>::new","value":"pub const unsafe fn new(unsafe fn() -> Result<&'static T, AccessError>)\n-> LocalKey<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":81960,"byte_end":81964,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the value in this TLS key.","sig":null,"attributes":[{"value":"/ Acquires a reference to the value in this TLS key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":81643,"byte_end":81697,"line_start":135,"line_end":135,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":81702,"byte_end":81705,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ This will lazily initialize the value if this thread has not referenced","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":81710,"byte_end":81785,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ this key yet.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":81790,"byte_end":81807,"line_start":138,"line_end":138,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":81812,"byte_end":81815,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":81820,"byte_end":81832,"line_start":140,"line_end":140,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":81837,"byte_end":81840,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This function will `panic!()` if TLS data needs to be destructed,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":81845,"byte_end":81914,"line_start":142,"line_end":142,"column_start":5,"column_end":74}},{"value":"/ TCS policy must be Bound.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":81919,"byte_end":81948,"line_start":143,"line_end":143,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":82617,"byte_end":82625,"line_start":161,"line_end":161,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the value in this TLS key.","sig":null,"attributes":[{"value":"/ Acquires a reference to the value in this TLS key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":82131,"byte_end":82185,"line_start":151,"line_end":151,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":82190,"byte_end":82193,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This will lazily initialize the value if this thread has not referenced","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":82198,"byte_end":82273,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ this key yet. If the key has been destroyed (which may happen if this is called","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":82278,"byte_end":82361,"line_start":154,"line_end":154,"column_start":5,"column_end":88}},{"value":"/ in a destructor), this function will return an [`AccessError`](struct.AccessError.html).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":82366,"byte_end":82458,"line_start":155,"line_end":155,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":82463,"byte_end":82466,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":82471,"byte_end":82483,"line_start":157,"line_end":157,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":82488,"byte_end":82491,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This function will still `panic!()` if the key is uninitialized and the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":82496,"byte_end":82571,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ key's initializer panics.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":82576,"byte_end":82605,"line_start":160,"line_end":160,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":345},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":85266,"byte_end":85269,"line_start":236,"line_end":236,"column_start":16,"column_end":19},"name":"Key","qualname":"::thread::local::statik::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":347}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":85547,"byte_end":85550,"line_start":249,"line_end":249,"column_start":22,"column_end":25},"name":"new","qualname":"<Key<T>>::new","value":"pub const fn new() -> Key<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":85645,"byte_end":85648,"line_start":253,"line_end":253,"column_start":23,"column_end":26},"name":"get","qualname":"<Key<T>>::get","value":"pub unsafe fn get(&Self, fn() -> T) -> Result<&'static T, AccessError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":361},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":52242,"byte_end":52249,"line_start":250,"line_end":250,"column_start":8,"column_end":15},"name":"current","qualname":"::thread::current","value":"pub fn current() -> SgxThread","parent":null,"children":[],"decl_id":null,"docs":" Gets a handle to the thread that invokes it.","sig":null,"attributes":[{"value":"/ Gets a handle to the thread that invokes it.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":52182,"byte_end":52230,"line_start":248,"line_end":248,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":52231,"byte_end":52234,"line_start":249,"line_end":249,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":362},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":53922,"byte_end":53931,"line_start":290,"line_end":290,"column_start":8,"column_end":17},"name":"panicking","qualname":"::thread::panicking","value":"pub fn panicking() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether the current thread is unwinding because of panic.","sig":null,"attributes":[{"value":"/ Determines whether the current thread is unwinding because of panic.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":53353,"byte_end":53425,"line_start":278,"line_end":278,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":53426,"byte_end":53429,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ A common use of this feature is to poison shared resources when writing","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":53430,"byte_end":53505,"line_start":280,"line_end":280,"column_start":1,"column_end":76}},{"value":"/ unsafe code, by checking `panicking` when the `drop` is called.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":53506,"byte_end":53573,"line_start":281,"line_end":281,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":53574,"byte_end":53577,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ This is usually not needed when writing safe code, as [`Mutex`es][Mutex]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":53578,"byte_end":53654,"line_start":283,"line_end":283,"column_start":1,"column_end":77}},{"value":"/ already poison themselves when a thread panics while holding the lock.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":53655,"byte_end":53729,"line_start":284,"line_end":284,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":53730,"byte_end":53733,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ This can also be used in multithreaded applications, in order to send a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":53734,"byte_end":53809,"line_start":286,"line_end":286,"column_start":1,"column_end":76}},{"value":"/ message to other threads warning that a thread has panicked (e.g., for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":53810,"byte_end":53884,"line_start":287,"line_end":287,"column_start":1,"column_end":75}},{"value":"/ monitoring purposes).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":53885,"byte_end":53910,"line_start":288,"line_end":288,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":53911,"byte_end":53914,"line_start":289,"line_end":289,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":363},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":55808,"byte_end":55824,"line_start":346,"line_end":346,"column_start":8,"column_end":24},"name":"rsgx_thread_self","qualname":"::thread::rsgx_thread_self","value":"pub fn rsgx_thread_self() -> sgx_thread_t","parent":null,"children":[],"decl_id":null,"docs":"\n The rsgx_thread_self function returns the unique thread identification.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":55364,"byte_end":55367,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ The rsgx_thread_self function returns the unique thread identification.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":55368,"byte_end":55443,"line_start":331,"line_end":331,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":55444,"byte_end":55447,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":55448,"byte_end":55465,"line_start":333,"line_end":333,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":55466,"byte_end":55469,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ The function is a simple wrap of get_thread_data() provided in the tRTS,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":55470,"byte_end":55546,"line_start":335,"line_end":335,"column_start":1,"column_end":77}},{"value":"/ which provides a trusted thread unique identifier.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":55547,"byte_end":55601,"line_start":336,"line_end":336,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":55602,"byte_end":55605,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":55606,"byte_end":55624,"line_start":338,"line_end":338,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":55625,"byte_end":55628,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ Library: libsgx_tstdc.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":55629,"byte_end":55656,"line_start":340,"line_end":340,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":55657,"byte_end":55660,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ # Return value","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":55661,"byte_end":55679,"line_start":342,"line_end":342,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":55680,"byte_end":55683,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ The return value cannot be NULL and is always valid as long as it is invoked by a thread inside the enclave.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":55684,"byte_end":55796,"line_start":344,"line_end":344,"column_start":1,"column_end":113}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":55797,"byte_end":55800,"line_start":345,"line_end":345,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":364},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":56263,"byte_end":56280,"line_start":368,"line_end":368,"column_start":8,"column_end":25},"name":"rsgx_thread_equal","qualname":"::thread::rsgx_thread_equal","value":"pub fn rsgx_thread_equal(sgx_thread_t, sgx_thread_t) -> bool","parent":null,"children":[],"decl_id":null,"docs":"\n The rsgx_thread_equal function compares two thread identifiers.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":55881,"byte_end":55884,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ The rsgx_thread_equal function compares two thread identifiers.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":55885,"byte_end":55952,"line_start":351,"line_end":351,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":55953,"byte_end":55956,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":55957,"byte_end":55974,"line_start":353,"line_end":353,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":55975,"byte_end":55978,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ The function compares two thread identifiers provided by sgx_thread_","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":55979,"byte_end":56051,"line_start":355,"line_end":355,"column_start":1,"column_end":73}},{"value":"/ self to determine if the IDs refer to the same trusted thread.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":56052,"byte_end":56118,"line_start":356,"line_end":356,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":56119,"byte_end":56122,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":56123,"byte_end":56141,"line_start":358,"line_end":358,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":56142,"byte_end":56145,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ Library: libsgx_tstdc.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":56146,"byte_end":56173,"line_start":360,"line_end":360,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":56174,"byte_end":56177,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"/ # Return value","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":56178,"byte_end":56196,"line_start":362,"line_end":362,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":56197,"byte_end":56200,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ **true**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":56201,"byte_end":56213,"line_start":364,"line_end":364,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":56214,"byte_end":56217,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ The two thread IDs are equal.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":56218,"byte_end":56251,"line_start":366,"line_end":366,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":56252,"byte_end":56255,"line_start":367,"line_end":367,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":365},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":56346,"byte_end":56356,"line_start":372,"line_end":372,"column_start":8,"column_end":18},"name":"current_td","qualname":"::thread::current_td","value":"pub fn current_td() -> SgxThreadData","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":369},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":58872,"byte_end":58876,"line_start":430,"line_end":430,"column_start":8,"column_end":12},"name":"park","qualname":"::thread::park","value":"pub fn park()","parent":null,"children":[],"decl_id":null,"docs":" Blocks unless or until the current thread's token is made available.","sig":null,"attributes":[{"value":"/ Blocks unless or until the current thread's token is made available.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":56558,"byte_end":56630,"line_start":383,"line_end":383,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":56631,"byte_end":56634,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ A call to `park` does not guarantee that the thread will remain parked","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":56635,"byte_end":56709,"line_start":385,"line_end":385,"column_start":1,"column_end":75}},{"value":"/ forever, and callers should be prepared for this possibility.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":56710,"byte_end":56775,"line_start":386,"line_end":386,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":56776,"byte_end":56779,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ # park and unpark","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":56780,"byte_end":56801,"line_start":388,"line_end":388,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":56802,"byte_end":56805,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ Every thread is equipped with some basic low-level blocking support, via the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":56806,"byte_end":56886,"line_start":390,"line_end":390,"column_start":1,"column_end":81}},{"value":"/ [`thread::park`][`park`] function and [`thread::Thread::unpark`][`unpark`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":56887,"byte_end":56965,"line_start":391,"line_end":391,"column_start":1,"column_end":79}},{"value":"/ method. [`park`] blocks the current thread, which can then be resumed from","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":56966,"byte_end":57044,"line_start":392,"line_end":392,"column_start":1,"column_end":79}},{"value":"/ another thread by calling the [`unpark`] method on the blocked thread's","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":57045,"byte_end":57120,"line_start":393,"line_end":393,"column_start":1,"column_end":76}},{"value":"/ handle.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":57121,"byte_end":57132,"line_start":394,"line_end":394,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":57133,"byte_end":57136,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/ Conceptually, each [`Thread`] handle has an associated token, which is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":57137,"byte_end":57211,"line_start":396,"line_end":396,"column_start":1,"column_end":75}},{"value":"/ initially not present:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":57212,"byte_end":57238,"line_start":397,"line_end":397,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":57239,"byte_end":57242,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ * The [`thread::park`][`park`] function blocks the current thread unless or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":57243,"byte_end":57322,"line_start":399,"line_end":399,"column_start":1,"column_end":80}},{"value":"/   until the token is available for its thread handle, at which point it","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":57323,"byte_end":57398,"line_start":400,"line_end":400,"column_start":1,"column_end":76}},{"value":"/   atomically consumes the token. It may also return *spuriously*, without","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":57399,"byte_end":57476,"line_start":401,"line_end":401,"column_start":1,"column_end":78}},{"value":"/   consuming the token. [`thread::park_timeout`] does the same, but allows","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":57477,"byte_end":57554,"line_start":402,"line_end":402,"column_start":1,"column_end":78}},{"value":"/   specifying a maximum time to block the thread for.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":57555,"byte_end":57611,"line_start":403,"line_end":403,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":57612,"byte_end":57615,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"/ * The [`unpark`] method on a [`Thread`] atomically makes the token available","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":57616,"byte_end":57696,"line_start":405,"line_end":405,"column_start":1,"column_end":81}},{"value":"/   if it wasn't already. Because the token is initially absent, [`unpark`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":57697,"byte_end":57774,"line_start":406,"line_end":406,"column_start":1,"column_end":78}},{"value":"/   followed by [`park`] will result in the second call returning immediately.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":57775,"byte_end":57855,"line_start":407,"line_end":407,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":57856,"byte_end":57859,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ In other words, each [`Thread`] acts a bit like a spinlock that can be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":57860,"byte_end":57934,"line_start":409,"line_end":409,"column_start":1,"column_end":75}},{"value":"/ locked and unlocked using `park` and `unpark`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":57935,"byte_end":57985,"line_start":410,"line_end":410,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":57986,"byte_end":57989,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ Notice that being unblocked does not imply any synchronization with someone","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":57990,"byte_end":58069,"line_start":412,"line_end":412,"column_start":1,"column_end":80}},{"value":"/ that unparked this thread, it could also be spurious.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":58070,"byte_end":58127,"line_start":413,"line_end":413,"column_start":1,"column_end":58}},{"value":"/ For example, it would be a valid, but inefficient, implementation to make both [`park`] and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":58128,"byte_end":58223,"line_start":414,"line_end":414,"column_start":1,"column_end":96}},{"value":"/ [`unpark`] return immediately without doing anything.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":58224,"byte_end":58281,"line_start":415,"line_end":415,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":58282,"byte_end":58285,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ The API is typically used by acquiring a handle to the current thread,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":58286,"byte_end":58360,"line_start":417,"line_end":417,"column_start":1,"column_end":75}},{"value":"/ placing that handle in a shared data structure so that other threads can","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":58361,"byte_end":58437,"line_start":418,"line_end":418,"column_start":1,"column_end":77}},{"value":"/ find it, and then `park`ing in a loop. When some desired condition is met, another","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":58438,"byte_end":58524,"line_start":419,"line_end":419,"column_start":1,"column_end":87}},{"value":"/ thread calls [`unpark`] on the handle.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":58525,"byte_end":58567,"line_start":420,"line_end":420,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":58568,"byte_end":58571,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ The motivation for this design is twofold:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":58572,"byte_end":58618,"line_start":422,"line_end":422,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":58619,"byte_end":58622,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/ * It avoids the need to allocate mutexes and condvars when building new","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":58623,"byte_end":58698,"line_start":424,"line_end":424,"column_start":1,"column_end":76}},{"value":"/   synchronization primitives; the threads already provide basic","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":58699,"byte_end":58766,"line_start":425,"line_end":425,"column_start":1,"column_end":68}},{"value":"/   blocking/signaling.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":58767,"byte_end":58792,"line_start":426,"line_end":426,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":58793,"byte_end":58796,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ * It can be implemented very efficiently on many platforms.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":58797,"byte_end":58860,"line_start":428,"line_end":428,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":58861,"byte_end":58864,"line_start":429,"line_end":429,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":370},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":61063,"byte_end":61078,"line_start":480,"line_end":480,"column_start":8,"column_end":23},"name":"park_timeout_ms","qualname":"::thread::park_timeout_ms","value":"pub fn park_timeout_ms(u32)","parent":null,"children":[],"decl_id":null,"docs":" Use [`park_timeout`].","sig":null,"attributes":[{"value":"/ Use [`park_timeout`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":60386,"byte_end":60411,"line_start":465,"line_end":465,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":60412,"byte_end":60415,"line_start":466,"line_end":466,"column_start":1,"column_end":4}},{"value":"/ Blocks unless or until the current thread's token is made available or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":60416,"byte_end":60490,"line_start":467,"line_end":467,"column_start":1,"column_end":75}},{"value":"/ the specified duration has been reached (may wake spuriously).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":60491,"byte_end":60557,"line_start":468,"line_end":468,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":60558,"byte_end":60561,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ The semantics of this function are equivalent to [`park`] except","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":60562,"byte_end":60630,"line_start":470,"line_end":470,"column_start":1,"column_end":69}},{"value":"/ that the thread will be blocked for roughly no longer than `dur`. This","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":60631,"byte_end":60705,"line_start":471,"line_end":471,"column_start":1,"column_end":75}},{"value":"/ method should not be used for precise timing due to anomalies such as","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":60706,"byte_end":60779,"line_start":472,"line_end":472,"column_start":1,"column_end":74}},{"value":"/ preemption or platform differences that may not cause the maximum","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":60780,"byte_end":60849,"line_start":473,"line_end":473,"column_start":1,"column_end":70}},{"value":"/ amount of time waited to be precisely `ms` long.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":60850,"byte_end":60902,"line_start":474,"line_end":474,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":60903,"byte_end":60906,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ See the [park documentation][`park`] for more detail.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":60907,"byte_end":60964,"line_start":476,"line_end":476,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":60965,"byte_end":60968,"line_start":477,"line_end":477,"column_start":1,"column_end":4}},{"value":"/ [`park_timeout`]: fn.park_timeout.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":60969,"byte_end":61011,"line_start":478,"line_end":478,"column_start":1,"column_end":43}},{"value":"/ [`park`]: ../../std/thread/fn.park.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":61012,"byte_end":61055,"line_start":479,"line_end":479,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":371},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":62527,"byte_end":62539,"line_start":524,"line_end":524,"column_start":8,"column_end":20},"name":"park_timeout","qualname":"::thread::park_timeout","value":"pub fn park_timeout(Duration)","parent":null,"children":[],"decl_id":null,"docs":" Blocks unless or until the current thread's token is made available or\n the specified duration has been reached (may wake spuriously).","sig":null,"attributes":[{"value":"/ Blocks unless or until the current thread's token is made available or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":61144,"byte_end":61218,"line_start":484,"line_end":484,"column_start":1,"column_end":75}},{"value":"/ the specified duration has been reached (may wake spuriously).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":61219,"byte_end":61285,"line_start":485,"line_end":485,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":61286,"byte_end":61289,"line_start":486,"line_end":486,"column_start":1,"column_end":4}},{"value":"/ The semantics of this function are equivalent to [`park`][park] except","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":61290,"byte_end":61364,"line_start":487,"line_end":487,"column_start":1,"column_end":75}},{"value":"/ that the thread will be blocked for roughly no longer than `dur`. This","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":61365,"byte_end":61439,"line_start":488,"line_end":488,"column_start":1,"column_end":75}},{"value":"/ method should not be used for precise timing due to anomalies such as","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":61440,"byte_end":61513,"line_start":489,"line_end":489,"column_start":1,"column_end":74}},{"value":"/ preemption or platform differences that may not cause the maximum","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":61514,"byte_end":61583,"line_start":490,"line_end":490,"column_start":1,"column_end":70}},{"value":"/ amount of time waited to be precisely `dur` long.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":61584,"byte_end":61637,"line_start":491,"line_end":491,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":61638,"byte_end":61641,"line_start":492,"line_end":492,"column_start":1,"column_end":4}},{"value":"/ See the [park documentation][park] for more details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":61642,"byte_end":61698,"line_start":493,"line_end":493,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":61699,"byte_end":61702,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":61703,"byte_end":61735,"line_start":495,"line_end":495,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":61736,"byte_end":61739,"line_start":496,"line_end":496,"column_start":1,"column_end":4}},{"value":"/ Platforms which do not support nanosecond precision for sleeping will have","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":61740,"byte_end":61818,"line_start":497,"line_end":497,"column_start":1,"column_end":79}},{"value":"/ `dur` rounded up to the nearest granularity of time they can sleep for.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":61819,"byte_end":61894,"line_start":498,"line_end":498,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":61895,"byte_end":61898,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":61899,"byte_end":61913,"line_start":500,"line_end":500,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":61914,"byte_end":61917,"line_start":501,"line_end":501,"column_start":1,"column_end":4}},{"value":"/ Waiting for the complete expiration of the timeout:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":61918,"byte_end":61973,"line_start":502,"line_end":502,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":61974,"byte_end":61977,"line_start":503,"line_end":503,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":61978,"byte_end":61996,"line_start":504,"line_end":504,"column_start":1,"column_end":19}},{"value":"/ use std::thread::park_timeout;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":61997,"byte_end":62031,"line_start":505,"line_end":505,"column_start":1,"column_end":35}},{"value":"/ use std::time::{Instant, Duration};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":62032,"byte_end":62071,"line_start":506,"line_end":506,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":62072,"byte_end":62075,"line_start":507,"line_end":507,"column_start":1,"column_end":4}},{"value":"/ let timeout = Duration::from_secs(2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":62076,"byte_end":62117,"line_start":508,"line_end":508,"column_start":1,"column_end":42}},{"value":"/ let beginning_park = Instant::now();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":62118,"byte_end":62158,"line_start":509,"line_end":509,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":62159,"byte_end":62162,"line_start":510,"line_end":510,"column_start":1,"column_end":4}},{"value":"/ let mut timeout_remaining = timeout;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":62163,"byte_end":62203,"line_start":511,"line_end":511,"column_start":1,"column_end":41}},{"value":"/ loop {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":62204,"byte_end":62214,"line_start":512,"line_end":512,"column_start":1,"column_end":11}},{"value":"/     park_timeout(timeout_remaining);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":62215,"byte_end":62255,"line_start":513,"line_end":513,"column_start":1,"column_end":41}},{"value":"/     let elapsed = beginning_park.elapsed();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":62256,"byte_end":62303,"line_start":514,"line_end":514,"column_start":1,"column_end":48}},{"value":"/     if elapsed >= timeout {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":62304,"byte_end":62335,"line_start":515,"line_end":515,"column_start":1,"column_end":32}},{"value":"/         break;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":62336,"byte_end":62354,"line_start":516,"line_end":516,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":62355,"byte_end":62364,"line_start":517,"line_end":517,"column_start":1,"column_end":10}},{"value":"/     println!(\"restarting park_timeout after {:?}\", elapsed);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":62365,"byte_end":62429,"line_start":518,"line_end":518,"column_start":1,"column_end":65}},{"value":"/     timeout_remaining = timeout - elapsed;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":62430,"byte_end":62476,"line_start":519,"line_end":519,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":62477,"byte_end":62482,"line_start":520,"line_end":520,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":62483,"byte_end":62490,"line_start":521,"line_end":521,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":62491,"byte_end":62494,"line_start":522,"line_end":522,"column_start":1,"column_end":4}},{"value":"/ [park]: fn.park.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":62495,"byte_end":62519,"line_start":523,"line_end":523,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":7063},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":64864,"byte_end":64872,"line_start":584,"line_end":584,"column_start":12,"column_end":20},"name":"ThreadId","qualname":"::thread::ThreadId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A unique identifier for a running thread.","sig":null,"attributes":[{"value":"/ A unique identifier for a running thread.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":64111,"byte_end":64156,"line_start":561,"line_end":561,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":64157,"byte_end":64160,"line_start":562,"line_end":562,"column_start":1,"column_end":4}},{"value":"/ A `ThreadId` is an opaque object that has a unique value for each thread","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":64161,"byte_end":64237,"line_start":563,"line_end":563,"column_start":1,"column_end":77}},{"value":"/ that creates one. `ThreadId`s are not guaranteed to correspond to a thread's","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":64238,"byte_end":64318,"line_start":564,"line_end":564,"column_start":1,"column_end":81}},{"value":"/ system-designated identifier. A `ThreadId` can be retrieved from the [`id`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":64319,"byte_end":64398,"line_start":565,"line_end":565,"column_start":1,"column_end":80}},{"value":"/ method on a [`Thread`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":64399,"byte_end":64426,"line_start":566,"line_end":566,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":64427,"byte_end":64430,"line_start":567,"line_end":567,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":64431,"byte_end":64445,"line_start":568,"line_end":568,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":64446,"byte_end":64449,"line_start":569,"line_end":569,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":64450,"byte_end":64457,"line_start":570,"line_end":570,"column_start":1,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":64458,"byte_end":64478,"line_start":571,"line_end":571,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":64479,"byte_end":64482,"line_start":572,"line_end":572,"column_start":1,"column_end":4}},{"value":"/ let other_thread = thread::spawn(|| {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":64483,"byte_end":64524,"line_start":573,"line_end":573,"column_start":1,"column_end":42}},{"value":"/     thread::current().id()","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":64525,"byte_end":64555,"line_start":574,"line_end":574,"column_start":1,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":64556,"byte_end":64563,"line_start":575,"line_end":575,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":64564,"byte_end":64567,"line_start":576,"line_end":576,"column_start":1,"column_end":4}},{"value":"/ let other_thread_id = other_thread.join().unwrap();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":64568,"byte_end":64623,"line_start":577,"line_end":577,"column_start":1,"column_end":56}},{"value":"/ assert!(thread::current().id() != other_thread_id);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":64624,"byte_end":64679,"line_start":578,"line_end":578,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":64680,"byte_end":64687,"line_start":579,"line_end":579,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":64688,"byte_end":64691,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/ [`id`]: ../../std/thread/struct.Thread.html#method.id","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":64692,"byte_end":64749,"line_start":581,"line_end":581,"column_start":1,"column_end":58}},{"value":"/ [`Thread`]: ../../std/thread/struct.Thread.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":64750,"byte_end":64801,"line_start":582,"line_end":582,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":66134,"byte_end":66140,"line_start":621,"line_end":621,"column_start":12,"column_end":18},"name":"as_u64","qualname":"<ThreadId>::as_u64","value":"pub fn as_u64(&Self) -> NonZeroU64","parent":null,"children":[],"decl_id":null,"docs":" This returns a numeric identifier for the thread identified by this\n `ThreadId`.","sig":null,"attributes":[{"value":"/ This returns a numeric identifier for the thread identified by this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":65667,"byte_end":65738,"line_start":613,"line_end":613,"column_start":5,"column_end":76}},{"value":"/ `ThreadId`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":65743,"byte_end":65758,"line_start":614,"line_end":614,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":65763,"byte_end":65766,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ As noted in the documentation for the type itself, it is essentially an","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":65771,"byte_end":65846,"line_start":616,"line_end":616,"column_start":5,"column_end":80}},{"value":"/ opaque ID, but is guaranteed to be unique for each thread. The returned","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":65851,"byte_end":65926,"line_start":617,"line_end":617,"column_start":5,"column_end":80}},{"value":"/ value is entirely opaque -- only equality testing is stable. Note that","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":65931,"byte_end":66005,"line_start":618,"line_end":618,"column_start":5,"column_end":79}},{"value":"/ it is not guaranteed which values new threads will return, and this may","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":66010,"byte_end":66085,"line_start":619,"line_end":619,"column_start":5,"column_end":80}},{"value":"/ change across Rust versions.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":66090,"byte_end":66122,"line_start":620,"line_end":620,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":7081},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":66668,"byte_end":66677,"line_start":644,"line_end":644,"column_start":12,"column_end":21},"name":"SgxThread","qualname":"::thread::SgxThread","value":"SgxThread {  }","parent":null,"children":[{"krate":0,"index":7082}],"decl_id":null,"docs":" A handle to a thread.","sig":null,"attributes":[{"value":"/ A handle to a thread.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":66610,"byte_end":66635,"line_start":641,"line_end":641,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":66636,"byte_end":66639,"line_start":642,"line_end":642,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":67631,"byte_end":67637,"line_start":672,"line_end":672,"column_start":12,"column_end":18},"name":"unpark","qualname":"<SgxThread>::unpark","value":"pub fn unpark(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Atomically makes the handle's token available if it is not already.","sig":null,"attributes":[{"value":"/ Atomically makes the handle's token available if it is not already.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":67308,"byte_end":67379,"line_start":666,"line_end":666,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":67384,"byte_end":67387,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ Every thread is equipped with some basic low-level blocking support, via","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":67392,"byte_end":67468,"line_start":668,"line_end":668,"column_start":5,"column_end":81}},{"value":"/ the [`park`][park] function and the `unpark()` method. These can be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":67473,"byte_end":67544,"line_start":669,"line_end":669,"column_start":5,"column_end":76}},{"value":"/ used as a more CPU-efficient implementation of a spinlock.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":67549,"byte_end":67611,"line_start":670,"line_end":670,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":67616,"byte_end":67619,"line_start":671,"line_end":671,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":69202,"byte_end":69204,"line_start":703,"line_end":703,"column_start":12,"column_end":14},"name":"id","qualname":"<SgxThread>::id","value":"pub fn id(&Self) -> ThreadId","parent":null,"children":[],"decl_id":null,"docs":" Gets the thread's unique identifier.","sig":null,"attributes":[{"value":"/ Gets the thread's unique identifier.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":69142,"byte_end":69182,"line_start":701,"line_end":701,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":69187,"byte_end":69190,"line_start":702,"line_end":702,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":69427,"byte_end":69431,"line_start":712,"line_end":712,"column_start":12,"column_end":16},"name":"name","qualname":"<SgxThread>::name","value":"pub fn name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Gets the thread's name.","sig":null,"attributes":[{"value":"/ Gets the thread's name.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":69259,"byte_end":69286,"line_start":707,"line_end":707,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":69291,"byte_end":69294,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ For more information about named threads, see","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":69299,"byte_end":69348,"line_start":709,"line_end":709,"column_start":5,"column_end":54}},{"value":"/ [this module-level documentation][naming-threads].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":69353,"byte_end":69407,"line_start":710,"line_end":710,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":69412,"byte_end":69415,"line_start":711,"line_end":711,"column_start":5,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":394},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":70807,"byte_end":70813,"line_start":749,"line_end":749,"column_start":10,"column_end":16},"name":"Result","qualname":"::thread::Result","value":"crate::result::Result<T, Box<Any + Send + 'static>>","parent":null,"children":[],"decl_id":null,"docs":" A specialized [`Result`] type for threads.","sig":null,"attributes":[{"value":"/ A specialized [`Result`] type for threads.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":70017,"byte_end":70063,"line_start":731,"line_end":731,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":70064,"byte_end":70067,"line_start":732,"line_end":732,"column_start":1,"column_end":4}},{"value":"/ Indicates the manner in which a thread exited.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":70068,"byte_end":70118,"line_start":733,"line_end":733,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":70119,"byte_end":70122,"line_start":734,"line_end":734,"column_start":1,"column_end":4}},{"value":"/ The value contained in the `Result::Err` variant","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":70123,"byte_end":70175,"line_start":735,"line_end":735,"column_start":1,"column_end":53}},{"value":"/ is the value the thread panicked with;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":70176,"byte_end":70218,"line_start":736,"line_end":736,"column_start":1,"column_end":43}},{"value":"/ that is, the argument the `panic!` macro was called with.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":70219,"byte_end":70280,"line_start":737,"line_end":737,"column_start":1,"column_end":62}},{"value":"/ Unlike with normal errors, this value doesn't implement","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":70281,"byte_end":70340,"line_start":738,"line_end":738,"column_start":1,"column_end":60}},{"value":"/ the [`Error`](crate::error::Error) trait.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":70341,"byte_end":70386,"line_start":739,"line_end":739,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":70387,"byte_end":70390,"line_start":740,"line_end":740,"column_start":1,"column_end":4}},{"value":"/ Thus, a sensible way to handle a thread panic is to either:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":70391,"byte_end":70454,"line_start":741,"line_end":741,"column_start":1,"column_end":64}},{"value":"/ 1. `unwrap` the `Result<T>`, propagating the panic","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":70455,"byte_end":70509,"line_start":742,"line_end":742,"column_start":1,"column_end":55}},{"value":"/ 2. or in case the thread is intended to be a subsystem boundary","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":70510,"byte_end":70577,"line_start":743,"line_end":743,"column_start":1,"column_end":68}},{"value":"/ that is supposed to isolate system-level failures,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":70578,"byte_end":70632,"line_start":744,"line_end":744,"column_start":1,"column_end":55}},{"value":"/ match on the `Err` variant and handle the panic in an appropriate way.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":70633,"byte_end":70707,"line_start":745,"line_end":745,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":70708,"byte_end":70711,"line_start":746,"line_end":746,"column_start":1,"column_end":4}},{"value":"/ A thread that completes without panicking is considered to exit successfully.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":70712,"byte_end":70793,"line_start":747,"line_end":747,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":70794,"byte_end":70797,"line_start":748,"line_end":748,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":396},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ascii.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ascii","qualname":"::ascii","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ascii.rs","parent":null,"children":[{"krate":0,"index":397}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":398},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"collections","qualname":"::collections","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":1405},{"krate":0,"index":1407}],"decl_id":null,"docs":" Collection types.","sig":null,"attributes":[{"value":"/ Collection types.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":96669,"byte_end":96690,"line_start":18,"line_end":18,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":96691,"byte_end":96694,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Rust's standard collection library provides efficient implementations of the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":96695,"byte_end":96775,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ most common general purpose programming data structures. By using the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":96776,"byte_end":96849,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/ standard implementations, it should be possible for two libraries to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":96850,"byte_end":96922,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ communicate without significant data conversion.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":96923,"byte_end":96975,"line_start":23,"line_end":23,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":96976,"byte_end":96979,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ To get this out of the way: you should probably just use [`Vec`] or [`HashMap`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":96980,"byte_end":97064,"line_start":25,"line_end":25,"column_start":1,"column_end":85}},{"value":"/ These two collections cover most use cases for generic data storage and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":97065,"byte_end":97140,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ processing. They are exceptionally good at doing what they do. All the other","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":97141,"byte_end":97221,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ collections in the standard library have specific use cases where they are","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":97222,"byte_end":97300,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ the optimal choice, but these cases are borderline *niche* in comparison.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":97301,"byte_end":97378,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ Even when `Vec` and `HashMap` are technically suboptimal, they're probably a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":97379,"byte_end":97459,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ good enough choice to get started.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":97460,"byte_end":97498,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":97499,"byte_end":97502,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Rust's collections can be grouped into four major categories:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":97503,"byte_end":97568,"line_start":33,"line_end":33,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":97569,"byte_end":97572,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ * Sequences: [`Vec`], [`VecDeque`], [`LinkedList`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":97573,"byte_end":97627,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/ * Maps: [`HashMap`], [`BTreeMap`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":97628,"byte_end":97665,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/ * Sets: [`HashSet`], [`BTreeSet`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":97666,"byte_end":97703,"line_start":37,"line_end":37,"column_start":1,"column_end":38}},{"value":"/ * Misc: [`BinaryHeap`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":97704,"byte_end":97730,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":97731,"byte_end":97734,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # When Should You Use Which Collection?","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":97735,"byte_end":97778,"line_start":40,"line_end":40,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":97779,"byte_end":97782,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ These are fairly high-level and quick break-downs of when each collection","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":97783,"byte_end":97860,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ should be considered. Detailed discussions of strengths and weaknesses of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":97861,"byte_end":97938,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ individual collections can be found on their own documentation pages.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":97939,"byte_end":98012,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":98013,"byte_end":98016,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ### Use a `Vec` when:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":98017,"byte_end":98042,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/ * You want to collect items up to be processed or sent elsewhere later, and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":98043,"byte_end":98122,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/   don't care about any properties of the actual values being stored.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":98123,"byte_end":98195,"line_start":48,"line_end":48,"column_start":1,"column_end":73}},{"value":"/ * You want a sequence of elements in a particular order, and will only be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":98196,"byte_end":98273,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/   appending to (or near) the end.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":98274,"byte_end":98311,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/ * You want a stack.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":98312,"byte_end":98335,"line_start":51,"line_end":51,"column_start":1,"column_end":24}},{"value":"/ * You want a resizable array.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":98336,"byte_end":98369,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/ * You want a heap-allocated array.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":98370,"byte_end":98408,"line_start":53,"line_end":53,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":98409,"byte_end":98412,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ### Use a `VecDeque` when:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":98413,"byte_end":98443,"line_start":55,"line_end":55,"column_start":1,"column_end":31}},{"value":"/ * You want a [`Vec`] that supports efficient insertion at both ends of the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":98444,"byte_end":98522,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/   sequence.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":98523,"byte_end":98538,"line_start":57,"line_end":57,"column_start":1,"column_end":16}},{"value":"/ * You want a queue.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":98539,"byte_end":98562,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/ * You want a double-ended queue (deque).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":98563,"byte_end":98607,"line_start":59,"line_end":59,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":98608,"byte_end":98611,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ### Use a `LinkedList` when:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":98612,"byte_end":98644,"line_start":61,"line_end":61,"column_start":1,"column_end":33}},{"value":"/ * You want a [`Vec`] or [`VecDeque`] of unknown size, and can't tolerate","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":98645,"byte_end":98721,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/   amortization.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":98722,"byte_end":98741,"line_start":63,"line_end":63,"column_start":1,"column_end":20}},{"value":"/ * You want to efficiently split and append lists.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":98742,"byte_end":98795,"line_start":64,"line_end":64,"column_start":1,"column_end":54}},{"value":"/ * You are *absolutely* certain you *really*, *truly*, want a doubly linked","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":98796,"byte_end":98874,"line_start":65,"line_end":65,"column_start":1,"column_end":79}},{"value":"/   list.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":98875,"byte_end":98886,"line_start":66,"line_end":66,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":98887,"byte_end":98890,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ### Use a `HashMap` when:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":98891,"byte_end":98920,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/ * You want to associate arbitrary keys with an arbitrary value.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":98921,"byte_end":98988,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/ * You want a cache.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":98989,"byte_end":99012,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ * You want a map, with no extra functionality.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":99013,"byte_end":99063,"line_start":71,"line_end":71,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":99064,"byte_end":99067,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ### Use a `BTreeMap` when:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":99068,"byte_end":99098,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/ * You want a map sorted by its keys.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":99099,"byte_end":99139,"line_start":74,"line_end":74,"column_start":1,"column_end":41}},{"value":"/ * You want to be able to get a range of entries on-demand.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":99140,"byte_end":99202,"line_start":75,"line_end":75,"column_start":1,"column_end":63}},{"value":"/ * You're interested in what the smallest or largest key-value pair is.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":99203,"byte_end":99277,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/ * You want to find the largest or smallest key that is smaller or larger","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":99278,"byte_end":99354,"line_start":77,"line_end":77,"column_start":1,"column_end":77}},{"value":"/   than something.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":99355,"byte_end":99376,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":99377,"byte_end":99380,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ### Use the `Set` variant of any of these `Map`s when:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":99381,"byte_end":99439,"line_start":80,"line_end":80,"column_start":1,"column_end":59}},{"value":"/ * You just want to remember which keys you've seen.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":99440,"byte_end":99495,"line_start":81,"line_end":81,"column_start":1,"column_end":56}},{"value":"/ * There is no meaningful value to associate with your keys.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":99496,"byte_end":99559,"line_start":82,"line_end":82,"column_start":1,"column_end":64}},{"value":"/ * You just want a set.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":99560,"byte_end":99586,"line_start":83,"line_end":83,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":99587,"byte_end":99590,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ### Use a `BinaryHeap` when:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":99591,"byte_end":99623,"line_start":85,"line_end":85,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":99624,"byte_end":99627,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ * You want to store a bunch of elements, but only ever want to process the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":99628,"byte_end":99706,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/   \"biggest\" or \"most important\" one at any given time.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":99707,"byte_end":99765,"line_start":88,"line_end":88,"column_start":1,"column_end":59}},{"value":"/ * You want a priority queue.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":99766,"byte_end":99798,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":99799,"byte_end":99802,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ # Performance","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":99803,"byte_end":99820,"line_start":91,"line_end":91,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":99821,"byte_end":99824,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ Choosing the right collection for the job requires an understanding of what","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":99825,"byte_end":99904,"line_start":93,"line_end":93,"column_start":1,"column_end":80}},{"value":"/ each collection is good at. Here we briefly summarize the performance of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":99905,"byte_end":99981,"line_start":94,"line_end":94,"column_start":1,"column_end":77}},{"value":"/ different collections for certain important operations. For further details,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":99982,"byte_end":100062,"line_start":95,"line_end":95,"column_start":1,"column_end":81}},{"value":"/ see each type's documentation, and note that the names of actual methods may","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":100063,"byte_end":100143,"line_start":96,"line_end":96,"column_start":1,"column_end":81}},{"value":"/ differ from the tables below on certain collections.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":100144,"byte_end":100200,"line_start":97,"line_end":97,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":100201,"byte_end":100204,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ Throughout the documentation, we will follow a few conventions. For all","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":100205,"byte_end":100280,"line_start":99,"line_end":99,"column_start":1,"column_end":76}},{"value":"/ operations, the collection's size is denoted by n. If another collection is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":100281,"byte_end":100360,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/ involved in the operation, it contains m elements. Operations which have an","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":100361,"byte_end":100440,"line_start":101,"line_end":101,"column_start":1,"column_end":80}},{"value":"/ *amortized* cost are suffixed with a `*`. Operations with an *expected*","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":100441,"byte_end":100516,"line_start":102,"line_end":102,"column_start":1,"column_end":76}},{"value":"/ cost are suffixed with a `~`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":100517,"byte_end":100550,"line_start":103,"line_end":103,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":100551,"byte_end":100554,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ All amortized costs are for the potential need to resize when capacity is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":100555,"byte_end":100632,"line_start":105,"line_end":105,"column_start":1,"column_end":78}},{"value":"/ exhausted. If a resize occurs it will take O(n) time. Our collections never","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":100633,"byte_end":100712,"line_start":106,"line_end":106,"column_start":1,"column_end":80}},{"value":"/ automatically shrink, so removal operations aren't amortized. Over a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":100713,"byte_end":100785,"line_start":107,"line_end":107,"column_start":1,"column_end":73}},{"value":"/ sufficiently large series of operations, the average cost per operation will","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":100786,"byte_end":100866,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ deterministically equal the given cost.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":100867,"byte_end":100910,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":100911,"byte_end":100914,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Only [`HashMap`] has expected costs, due to the probabilistic nature of hashing.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":100915,"byte_end":100999,"line_start":111,"line_end":111,"column_start":1,"column_end":85}},{"value":"/ It is theoretically possible, though very unlikely, for [`HashMap`] to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":101000,"byte_end":101074,"line_start":112,"line_end":112,"column_start":1,"column_end":75}},{"value":"/ experience worse performance.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":101075,"byte_end":101108,"line_start":113,"line_end":113,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":101109,"byte_end":101112,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ## Sequences","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":101113,"byte_end":101129,"line_start":115,"line_end":115,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":101130,"byte_end":101133,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ |                | get(i)         | insert(i)       | remove(i)      | append | split_off(i)   |","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":101134,"byte_end":101234,"line_start":117,"line_end":117,"column_start":1,"column_end":101}},{"value":"/ |----------------|----------------|-----------------|----------------|--------|----------------|","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":101235,"byte_end":101335,"line_start":118,"line_end":118,"column_start":1,"column_end":101}},{"value":"/ | [`Vec`]        | O(1)           | O(n-i)*         | O(n-i)         | O(m)*  | O(n-i)         |","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":101336,"byte_end":101436,"line_start":119,"line_end":119,"column_start":1,"column_end":101}},{"value":"/ | [`VecDeque`]   | O(1)           | O(min(i, n-i))* | O(min(i, n-i)) | O(m)*  | O(min(i, n-i)) |","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":101437,"byte_end":101537,"line_start":120,"line_end":120,"column_start":1,"column_end":101}},{"value":"/ | [`LinkedList`] | O(min(i, n-i)) | O(min(i, n-i))  | O(min(i, n-i)) | O(1)   | O(min(i, n-i)) |","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":101538,"byte_end":101638,"line_start":121,"line_end":121,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":101639,"byte_end":101642,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ Note that where ties occur, [`Vec`] is generally going to be faster than [`VecDeque`], and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":101643,"byte_end":101737,"line_start":123,"line_end":123,"column_start":1,"column_end":95}},{"value":"/ [`VecDeque`] is generally going to be faster than [`LinkedList`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":101738,"byte_end":101807,"line_start":124,"line_end":124,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":101808,"byte_end":101811,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ## Maps","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":101812,"byte_end":101823,"line_start":126,"line_end":126,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":101824,"byte_end":101827,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ For Sets, all operations have the cost of the equivalent Map operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":101828,"byte_end":101903,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":101904,"byte_end":101907,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ |              | get       | insert   | remove   | predecessor | append |","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":101908,"byte_end":101985,"line_start":130,"line_end":130,"column_start":1,"column_end":78}},{"value":"/ |--------------|-----------|----------|----------|-------------|--------|","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":101986,"byte_end":102063,"line_start":131,"line_end":131,"column_start":1,"column_end":78}},{"value":"/ | [`HashMap`]  | O(1)~     | O(1)~*   | O(1)~    | N/A         | N/A    |","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":102064,"byte_end":102141,"line_start":132,"line_end":132,"column_start":1,"column_end":78}},{"value":"/ | [`BTreeMap`] | O(log n)  | O(log n) | O(log n) | O(log n)    | O(n+m) |","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":102142,"byte_end":102219,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":102220,"byte_end":102223,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ # Correct and Efficient Usage of Collections","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":102224,"byte_end":102272,"line_start":135,"line_end":135,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":102273,"byte_end":102276,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ Of course, knowing which collection is the right one for the job doesn't","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":102277,"byte_end":102353,"line_start":137,"line_end":137,"column_start":1,"column_end":77}},{"value":"/ instantly permit you to use it correctly. Here are some quick tips for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":102354,"byte_end":102428,"line_start":138,"line_end":138,"column_start":1,"column_end":75}},{"value":"/ efficient and correct usage of the standard collections in general. If","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":102429,"byte_end":102503,"line_start":139,"line_end":139,"column_start":1,"column_end":75}},{"value":"/ you're interested in how to use a specific collection in particular, consult","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":102504,"byte_end":102584,"line_start":140,"line_end":140,"column_start":1,"column_end":81}},{"value":"/ its documentation for detailed discussion and code examples.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":102585,"byte_end":102649,"line_start":141,"line_end":141,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":102650,"byte_end":102653,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ ## Capacity Management","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":102654,"byte_end":102680,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":102681,"byte_end":102684,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ Many collections provide several constructors and methods that refer to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":102685,"byte_end":102760,"line_start":145,"line_end":145,"column_start":1,"column_end":76}},{"value":"/ \"capacity\". These collections are generally built on top of an array.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":102761,"byte_end":102834,"line_start":146,"line_end":146,"column_start":1,"column_end":74}},{"value":"/ Optimally, this array would be exactly the right size to fit only the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":102835,"byte_end":102908,"line_start":147,"line_end":147,"column_start":1,"column_end":74}},{"value":"/ elements stored in the collection, but for the collection to do this would","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":102909,"byte_end":102987,"line_start":148,"line_end":148,"column_start":1,"column_end":79}},{"value":"/ be very inefficient. If the backing array was exactly the right size at all","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":102988,"byte_end":103067,"line_start":149,"line_end":149,"column_start":1,"column_end":80}},{"value":"/ times, then every time an element is inserted, the collection would have to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":103068,"byte_end":103147,"line_start":150,"line_end":150,"column_start":1,"column_end":80}},{"value":"/ grow the array to fit it. Due to the way memory is allocated and managed on","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":103148,"byte_end":103227,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/ most computers, this would almost surely require allocating an entirely new","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":103228,"byte_end":103307,"line_start":152,"line_end":152,"column_start":1,"column_end":80}},{"value":"/ array and copying every single element from the old one into the new one.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":103308,"byte_end":103385,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"/ Hopefully you can see that this wouldn't be very efficient to do on every","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":103386,"byte_end":103463,"line_start":154,"line_end":154,"column_start":1,"column_end":78}},{"value":"/ operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":103464,"byte_end":103478,"line_start":155,"line_end":155,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":103479,"byte_end":103482,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ Most collections therefore use an *amortized* allocation strategy. They","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":103483,"byte_end":103558,"line_start":157,"line_end":157,"column_start":1,"column_end":76}},{"value":"/ generally let themselves have a fair amount of unoccupied space so that they","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":103559,"byte_end":103639,"line_start":158,"line_end":158,"column_start":1,"column_end":81}},{"value":"/ only have to grow on occasion. When they do grow, they allocate a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":103640,"byte_end":103709,"line_start":159,"line_end":159,"column_start":1,"column_end":70}},{"value":"/ substantially larger array to move the elements into so that it will take a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":103710,"byte_end":103789,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ while for another grow to be required. While this strategy is great in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":103790,"byte_end":103864,"line_start":161,"line_end":161,"column_start":1,"column_end":75}},{"value":"/ general, it would be even better if the collection *never* had to resize its","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":103865,"byte_end":103945,"line_start":162,"line_end":162,"column_start":1,"column_end":81}},{"value":"/ backing array. Unfortunately, the collection itself doesn't have enough","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":103946,"byte_end":104021,"line_start":163,"line_end":163,"column_start":1,"column_end":76}},{"value":"/ information to do this itself. Therefore, it is up to us programmers to give","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":104022,"byte_end":104102,"line_start":164,"line_end":164,"column_start":1,"column_end":81}},{"value":"/ it hints.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":104103,"byte_end":104116,"line_start":165,"line_end":165,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":104117,"byte_end":104120,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ Any `with_capacity` constructor will instruct the collection to allocate","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":104121,"byte_end":104197,"line_start":167,"line_end":167,"column_start":1,"column_end":77}},{"value":"/ enough space for the specified number of elements. Ideally this will be for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":104198,"byte_end":104277,"line_start":168,"line_end":168,"column_start":1,"column_end":80}},{"value":"/ exactly that many elements, but some implementation details may prevent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":104278,"byte_end":104353,"line_start":169,"line_end":169,"column_start":1,"column_end":76}},{"value":"/ this. See collection-specific documentation for details. In general, use","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":104354,"byte_end":104430,"line_start":170,"line_end":170,"column_start":1,"column_end":77}},{"value":"/ `with_capacity` when you know exactly how many elements will be inserted, or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":104431,"byte_end":104511,"line_start":171,"line_end":171,"column_start":1,"column_end":81}},{"value":"/ at least have a reasonable upper-bound on that number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":104512,"byte_end":104570,"line_start":172,"line_end":172,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":104571,"byte_end":104574,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ When anticipating a large influx of elements, the `reserve` family of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":104575,"byte_end":104648,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/ methods can be used to hint to the collection how much room it should make","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":104649,"byte_end":104727,"line_start":175,"line_end":175,"column_start":1,"column_end":79}},{"value":"/ for the coming items. As with `with_capacity`, the precise behavior of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":104728,"byte_end":104802,"line_start":176,"line_end":176,"column_start":1,"column_end":75}},{"value":"/ these methods will be specific to the collection of interest.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":104803,"byte_end":104868,"line_start":177,"line_end":177,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":104869,"byte_end":104872,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ For optimal performance, collections will generally avoid shrinking","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":104873,"byte_end":104944,"line_start":179,"line_end":179,"column_start":1,"column_end":72}},{"value":"/ themselves. If you believe that a collection will not soon contain any more","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":104945,"byte_end":105024,"line_start":180,"line_end":180,"column_start":1,"column_end":80}},{"value":"/ elements, or just really need the memory, the `shrink_to_fit` method prompts","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":105025,"byte_end":105105,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ the collection to shrink the backing array to the minimum size capable of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":105106,"byte_end":105183,"line_start":182,"line_end":182,"column_start":1,"column_end":78}},{"value":"/ holding its elements.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":105184,"byte_end":105209,"line_start":183,"line_end":183,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":105210,"byte_end":105213,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ Finally, if ever you're interested in what the actual capacity of the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":105214,"byte_end":105287,"line_start":185,"line_end":185,"column_start":1,"column_end":74}},{"value":"/ collection is, most collections provide a `capacity` method to query this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":105288,"byte_end":105365,"line_start":186,"line_end":186,"column_start":1,"column_end":78}},{"value":"/ information on demand. This can be useful for debugging purposes, or for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":105366,"byte_end":105442,"line_start":187,"line_end":187,"column_start":1,"column_end":77}},{"value":"/ use with the `reserve` methods.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":105443,"byte_end":105478,"line_start":188,"line_end":188,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":105479,"byte_end":105482,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ ## Iterators","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":105483,"byte_end":105499,"line_start":190,"line_end":190,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":105500,"byte_end":105503,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ Iterators are a powerful and robust mechanism used throughout Rust's","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":105504,"byte_end":105576,"line_start":192,"line_end":192,"column_start":1,"column_end":73}},{"value":"/ standard libraries. Iterators provide a sequence of values in a generic,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":105577,"byte_end":105653,"line_start":193,"line_end":193,"column_start":1,"column_end":77}},{"value":"/ safe, efficient and convenient way. The contents of an iterator are usually","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":105654,"byte_end":105733,"line_start":194,"line_end":194,"column_start":1,"column_end":80}},{"value":"/ *lazily* evaluated, so that only the values that are actually needed are","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":105734,"byte_end":105810,"line_start":195,"line_end":195,"column_start":1,"column_end":77}},{"value":"/ ever actually produced, and no allocation need be done to temporarily store","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":105811,"byte_end":105890,"line_start":196,"line_end":196,"column_start":1,"column_end":80}},{"value":"/ them. Iterators are primarily consumed using a `for` loop, although many","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":105891,"byte_end":105967,"line_start":197,"line_end":197,"column_start":1,"column_end":77}},{"value":"/ functions also take iterators where a collection or sequence of values is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":105968,"byte_end":106045,"line_start":198,"line_end":198,"column_start":1,"column_end":78}},{"value":"/ desired.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":106046,"byte_end":106058,"line_start":199,"line_end":199,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":106059,"byte_end":106062,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ All of the standard collections provide several iterators for performing","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":106063,"byte_end":106139,"line_start":201,"line_end":201,"column_start":1,"column_end":77}},{"value":"/ bulk manipulation of their contents. The three primary iterators almost","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":106140,"byte_end":106215,"line_start":202,"line_end":202,"column_start":1,"column_end":76}},{"value":"/ every collection should provide are `iter`, `iter_mut`, and `into_iter`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":106216,"byte_end":106292,"line_start":203,"line_end":203,"column_start":1,"column_end":77}},{"value":"/ Some of these are not provided on collections where it would be unsound or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":106293,"byte_end":106371,"line_start":204,"line_end":204,"column_start":1,"column_end":79}},{"value":"/ unreasonable to provide them.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":106372,"byte_end":106405,"line_start":205,"line_end":205,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":106406,"byte_end":106409,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ `iter` provides an iterator of immutable references to all the contents of a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":106410,"byte_end":106490,"line_start":207,"line_end":207,"column_start":1,"column_end":81}},{"value":"/ collection in the most \"natural\" order. For sequence collections like [`Vec`],","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":106491,"byte_end":106573,"line_start":208,"line_end":208,"column_start":1,"column_end":83}},{"value":"/ this means the items will be yielded in increasing order of index starting","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":106574,"byte_end":106652,"line_start":209,"line_end":209,"column_start":1,"column_end":79}},{"value":"/ at 0. For ordered collections like [`BTreeMap`], this means that the items","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":106653,"byte_end":106731,"line_start":210,"line_end":210,"column_start":1,"column_end":79}},{"value":"/ will be yielded in sorted order. For unordered collections like [`HashMap`],","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":106732,"byte_end":106812,"line_start":211,"line_end":211,"column_start":1,"column_end":81}},{"value":"/ the items will be yielded in whatever order the internal representation made","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":106813,"byte_end":106893,"line_start":212,"line_end":212,"column_start":1,"column_end":81}},{"value":"/ most convenient. This is great for reading through all the contents of the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":106894,"byte_end":106972,"line_start":213,"line_end":213,"column_start":1,"column_end":79}},{"value":"/ collection.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":106973,"byte_end":106988,"line_start":214,"line_end":214,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":106989,"byte_end":106992,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":106993,"byte_end":107000,"line_start":216,"line_end":216,"column_start":1,"column_end":8}},{"value":"/ let vec = vec![1, 2, 3, 4];","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":107001,"byte_end":107032,"line_start":217,"line_end":217,"column_start":1,"column_end":32}},{"value":"/ for x in vec.iter() {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":107033,"byte_end":107058,"line_start":218,"line_end":218,"column_start":1,"column_end":26}},{"value":"/    println!(\"vec contained {}\", x);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":107059,"byte_end":107098,"line_start":219,"line_end":219,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":107099,"byte_end":107104,"line_start":220,"line_end":220,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":107105,"byte_end":107112,"line_start":221,"line_end":221,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":107113,"byte_end":107116,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ `iter_mut` provides an iterator of *mutable* references in the same order as","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":107117,"byte_end":107197,"line_start":223,"line_end":223,"column_start":1,"column_end":81}},{"value":"/ `iter`. This is great for mutating all the contents of the collection.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":107198,"byte_end":107272,"line_start":224,"line_end":224,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":107273,"byte_end":107276,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":107277,"byte_end":107284,"line_start":226,"line_end":226,"column_start":1,"column_end":8}},{"value":"/ let mut vec = vec![1, 2, 3, 4];","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":107285,"byte_end":107320,"line_start":227,"line_end":227,"column_start":1,"column_end":36}},{"value":"/ for x in vec.iter_mut() {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":107321,"byte_end":107350,"line_start":228,"line_end":228,"column_start":1,"column_end":30}},{"value":"/    *x += 1;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":107351,"byte_end":107366,"line_start":229,"line_end":229,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":107367,"byte_end":107372,"line_start":230,"line_end":230,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":107373,"byte_end":107380,"line_start":231,"line_end":231,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":107381,"byte_end":107384,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ `into_iter` transforms the actual collection into an iterator over its","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":107385,"byte_end":107459,"line_start":233,"line_end":233,"column_start":1,"column_end":75}},{"value":"/ contents by-value. This is great when the collection itself is no longer","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":107460,"byte_end":107536,"line_start":234,"line_end":234,"column_start":1,"column_end":77}},{"value":"/ needed, and the values are needed elsewhere. Using `extend` with `into_iter`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":107537,"byte_end":107617,"line_start":235,"line_end":235,"column_start":1,"column_end":81}},{"value":"/ is the main way that contents of one collection are moved into another.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":107618,"byte_end":107693,"line_start":236,"line_end":236,"column_start":1,"column_end":76}},{"value":"/ `extend` automatically calls `into_iter`, and takes any `T: `[`IntoIterator`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":107694,"byte_end":107776,"line_start":237,"line_end":237,"column_start":1,"column_end":83}},{"value":"/ Calling `collect` on an iterator itself is also a great way to convert one","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":107777,"byte_end":107855,"line_start":238,"line_end":238,"column_start":1,"column_end":79}},{"value":"/ collection into another. Both of these methods should internally use the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":107856,"byte_end":107932,"line_start":239,"line_end":239,"column_start":1,"column_end":77}},{"value":"/ capacity management tools discussed in the previous section to do this as","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":107933,"byte_end":108010,"line_start":240,"line_end":240,"column_start":1,"column_end":78}},{"value":"/ efficiently as possible.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108011,"byte_end":108039,"line_start":241,"line_end":241,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108040,"byte_end":108043,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108044,"byte_end":108051,"line_start":243,"line_end":243,"column_start":1,"column_end":8}},{"value":"/ let mut vec1 = vec![1, 2, 3, 4];","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108052,"byte_end":108088,"line_start":244,"line_end":244,"column_start":1,"column_end":37}},{"value":"/ let vec2 = vec![10, 20, 30, 40];","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108089,"byte_end":108125,"line_start":245,"line_end":245,"column_start":1,"column_end":37}},{"value":"/ vec1.extend(vec2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108126,"byte_end":108148,"line_start":246,"line_end":246,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108149,"byte_end":108156,"line_start":247,"line_end":247,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108157,"byte_end":108160,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108161,"byte_end":108168,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108169,"byte_end":108204,"line_start":250,"line_end":250,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108205,"byte_end":108208,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ let vec = vec![1, 2, 3, 4];","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108209,"byte_end":108240,"line_start":252,"line_end":252,"column_start":1,"column_end":32}},{"value":"/ let buf: VecDeque<_> = vec.into_iter().collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108241,"byte_end":108294,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108295,"byte_end":108302,"line_start":254,"line_end":254,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108303,"byte_end":108306,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ Iterators also provide a series of *adapter* methods for performing common","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108307,"byte_end":108385,"line_start":256,"line_end":256,"column_start":1,"column_end":79}},{"value":"/ threads to sequences. Among the adapters are functional favorites like `map`,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108386,"byte_end":108467,"line_start":257,"line_end":257,"column_start":1,"column_end":82}},{"value":"/ `fold`, `skip` and `take`. Of particular interest to collections is the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108468,"byte_end":108543,"line_start":258,"line_end":258,"column_start":1,"column_end":76}},{"value":"/ `rev` adapter, that reverses any iterator that supports this operation. Most","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108544,"byte_end":108624,"line_start":259,"line_end":259,"column_start":1,"column_end":81}},{"value":"/ collections provide reversible iterators as the way to iterate over them in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108625,"byte_end":108704,"line_start":260,"line_end":260,"column_start":1,"column_end":80}},{"value":"/ reverse order.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108705,"byte_end":108723,"line_start":261,"line_end":261,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108724,"byte_end":108727,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108728,"byte_end":108735,"line_start":263,"line_end":263,"column_start":1,"column_end":8}},{"value":"/ let vec = vec![1, 2, 3, 4];","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108736,"byte_end":108767,"line_start":264,"line_end":264,"column_start":1,"column_end":32}},{"value":"/ for x in vec.iter().rev() {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108768,"byte_end":108799,"line_start":265,"line_end":265,"column_start":1,"column_end":32}},{"value":"/    println!(\"vec contained {}\", x);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108800,"byte_end":108839,"line_start":266,"line_end":266,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108840,"byte_end":108845,"line_start":267,"line_end":267,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108846,"byte_end":108853,"line_start":268,"line_end":268,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108854,"byte_end":108857,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ Several other collection methods also return iterators to yield a sequence","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108858,"byte_end":108936,"line_start":270,"line_end":270,"column_start":1,"column_end":79}},{"value":"/ of results but avoid allocating an entire collection to store the result in.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":108937,"byte_end":109017,"line_start":271,"line_end":271,"column_start":1,"column_end":81}},{"value":"/ This provides maximum flexibility as `collect` or `extend` can be called to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":109018,"byte_end":109097,"line_start":272,"line_end":272,"column_start":1,"column_end":80}},{"value":"/ \"pipe\" the sequence into any collection if desired. Otherwise, the sequence","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":109098,"byte_end":109177,"line_start":273,"line_end":273,"column_start":1,"column_end":80}},{"value":"/ can be looped over with a `for` loop. The iterator can also be discarded","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":109178,"byte_end":109254,"line_start":274,"line_end":274,"column_start":1,"column_end":77}},{"value":"/ after partial use, preventing the computation of the unused items.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":109255,"byte_end":109325,"line_start":275,"line_end":275,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":109326,"byte_end":109329,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ ## Entries","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":109330,"byte_end":109344,"line_start":277,"line_end":277,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":109345,"byte_end":109348,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ The `entry` API is intended to provide an efficient mechanism for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":109349,"byte_end":109418,"line_start":279,"line_end":279,"column_start":1,"column_end":70}},{"value":"/ manipulating the contents of a map conditionally on the presence of a key or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":109419,"byte_end":109499,"line_start":280,"line_end":280,"column_start":1,"column_end":81}},{"value":"/ not. The primary motivating use case for this is to provide efficient","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":109500,"byte_end":109573,"line_start":281,"line_end":281,"column_start":1,"column_end":74}},{"value":"/ accumulator maps. For instance, if one wishes to maintain a count of the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":109574,"byte_end":109650,"line_start":282,"line_end":282,"column_start":1,"column_end":77}},{"value":"/ number of times each key has been seen, they will have to perform some","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":109651,"byte_end":109725,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"/ conditional logic on whether this is the first time the key has been seen or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":109726,"byte_end":109806,"line_start":284,"line_end":284,"column_start":1,"column_end":81}},{"value":"/ not. Normally, this would require a `find` followed by an `insert`,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":109807,"byte_end":109878,"line_start":285,"line_end":285,"column_start":1,"column_end":72}},{"value":"/ effectively duplicating the search effort on each insertion.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":109879,"byte_end":109943,"line_start":286,"line_end":286,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":109944,"byte_end":109947,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ When a user calls `map.entry(&key)`, the map will search for the key and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":109948,"byte_end":110024,"line_start":288,"line_end":288,"column_start":1,"column_end":77}},{"value":"/ then yield a variant of the `Entry` enum.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":110025,"byte_end":110070,"line_start":289,"line_end":289,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":110071,"byte_end":110074,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ If a `Vacant(entry)` is yielded, then the key *was not* found. In this case","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":110075,"byte_end":110154,"line_start":291,"line_end":291,"column_start":1,"column_end":80}},{"value":"/ the only valid operation is to `insert` a value into the entry. When this is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":110155,"byte_end":110235,"line_start":292,"line_end":292,"column_start":1,"column_end":81}},{"value":"/ done, the vacant entry is consumed and converted into a mutable reference to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":110236,"byte_end":110316,"line_start":293,"line_end":293,"column_start":1,"column_end":81}},{"value":"/ the value that was inserted. This allows for further manipulation of the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":110317,"byte_end":110393,"line_start":294,"line_end":294,"column_start":1,"column_end":77}},{"value":"/ value beyond the lifetime of the search itself. This is useful if complex","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":110394,"byte_end":110471,"line_start":295,"line_end":295,"column_start":1,"column_end":78}},{"value":"/ logic needs to be performed on the value regardless of whether the value was","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":110472,"byte_end":110552,"line_start":296,"line_end":296,"column_start":1,"column_end":81}},{"value":"/ just inserted.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":110553,"byte_end":110571,"line_start":297,"line_end":297,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":110572,"byte_end":110575,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ If an `Occupied(entry)` is yielded, then the key *was* found. In this case,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":110576,"byte_end":110655,"line_start":299,"line_end":299,"column_start":1,"column_end":80}},{"value":"/ the user has several options: they can `get`, `insert` or `remove` the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":110656,"byte_end":110730,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ value of the occupied entry. Additionally, they can convert the occupied","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":110731,"byte_end":110807,"line_start":301,"line_end":301,"column_start":1,"column_end":77}},{"value":"/ entry into a mutable reference to its value, providing symmetry to the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":110808,"byte_end":110882,"line_start":302,"line_end":302,"column_start":1,"column_end":75}},{"value":"/ vacant `insert` case.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":110883,"byte_end":110908,"line_start":303,"line_end":303,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":110909,"byte_end":110912,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ### Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":110913,"byte_end":110929,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":110930,"byte_end":110933,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ Here are the two primary ways in which `entry` is used. First, a simple","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":110934,"byte_end":111009,"line_start":307,"line_end":307,"column_start":1,"column_end":76}},{"value":"/ example where the logic performed on the values is trivial.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111010,"byte_end":111073,"line_start":308,"line_end":308,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111074,"byte_end":111077,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ #### Counting the number of times each character in a string occurs","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111078,"byte_end":111149,"line_start":310,"line_end":310,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111150,"byte_end":111153,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111154,"byte_end":111161,"line_start":312,"line_end":312,"column_start":1,"column_end":8}},{"value":"/ use std::collections::btree_map::BTreeMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111162,"byte_end":111208,"line_start":313,"line_end":313,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111209,"byte_end":111212,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ let mut count = BTreeMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111213,"byte_end":111249,"line_start":315,"line_end":315,"column_start":1,"column_end":37}},{"value":"/ let message = \"she sells sea shells by the sea shore\";","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111250,"byte_end":111308,"line_start":316,"line_end":316,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111309,"byte_end":111312,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ for c in message.chars() {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111313,"byte_end":111343,"line_start":318,"line_end":318,"column_start":1,"column_end":31}},{"value":"/     *count.entry(c).or_insert(0) += 1;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111344,"byte_end":111386,"line_start":319,"line_end":319,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111387,"byte_end":111392,"line_start":320,"line_end":320,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111393,"byte_end":111396,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(count.get(&'s'), Some(&8));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111397,"byte_end":111439,"line_start":322,"line_end":322,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111440,"byte_end":111443,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ println!(\"Number of occurrences of each character\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111444,"byte_end":111500,"line_start":324,"line_end":324,"column_start":1,"column_end":57}},{"value":"/ for (char, count) in &count {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111501,"byte_end":111534,"line_start":325,"line_end":325,"column_start":1,"column_end":34}},{"value":"/     println!(\"{}: {}\", char, count);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111535,"byte_end":111575,"line_start":326,"line_end":326,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111576,"byte_end":111581,"line_start":327,"line_end":327,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111582,"byte_end":111589,"line_start":328,"line_end":328,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111590,"byte_end":111593,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ When the logic to be performed on the value is more complex, we may simply","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111594,"byte_end":111672,"line_start":330,"line_end":330,"column_start":1,"column_end":79}},{"value":"/ use the `entry` API to ensure that the value is initialized and perform the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111673,"byte_end":111752,"line_start":331,"line_end":331,"column_start":1,"column_end":80}},{"value":"/ logic afterwards.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111753,"byte_end":111774,"line_start":332,"line_end":332,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111775,"byte_end":111778,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ #### Tracking the inebriation of customers at a bar","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111779,"byte_end":111834,"line_start":334,"line_end":334,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111835,"byte_end":111838,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111839,"byte_end":111846,"line_start":336,"line_end":336,"column_start":1,"column_end":8}},{"value":"/ use std::collections::btree_map::BTreeMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111847,"byte_end":111893,"line_start":337,"line_end":337,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111894,"byte_end":111897,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/ // A client of the bar. They have a blood alcohol level.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111898,"byte_end":111958,"line_start":339,"line_end":339,"column_start":1,"column_end":61}},{"value":"/ struct Person { blood_alcohol: f32 }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":111959,"byte_end":111999,"line_start":340,"line_end":340,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112000,"byte_end":112003,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ // All the orders made to the bar, by client ID.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112004,"byte_end":112056,"line_start":342,"line_end":342,"column_start":1,"column_end":53}},{"value":"/ let orders = vec![1, 2, 1, 2, 3, 4, 1, 2, 2, 3, 4, 1, 1, 1];","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112057,"byte_end":112121,"line_start":343,"line_end":343,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112122,"byte_end":112125,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ // Our clients.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112126,"byte_end":112145,"line_start":345,"line_end":345,"column_start":1,"column_end":20}},{"value":"/ let mut blood_alcohol = BTreeMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112146,"byte_end":112190,"line_start":346,"line_end":346,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112191,"byte_end":112194,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ for id in orders {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112195,"byte_end":112217,"line_start":348,"line_end":348,"column_start":1,"column_end":23}},{"value":"/     // If this is the first time we've seen this customer, initialize them","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112218,"byte_end":112296,"line_start":349,"line_end":349,"column_start":1,"column_end":79}},{"value":"/     // with no blood alcohol. Otherwise, just retrieve them.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112297,"byte_end":112361,"line_start":350,"line_end":350,"column_start":1,"column_end":65}},{"value":"/     let person = blood_alcohol.entry(id).or_insert(Person { blood_alcohol: 0.0 });","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112362,"byte_end":112448,"line_start":351,"line_end":351,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112449,"byte_end":112452,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"/     // Reduce their blood alcohol level. It takes time to order and drink a beer!","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112453,"byte_end":112538,"line_start":353,"line_end":353,"column_start":1,"column_end":86}},{"value":"/     person.blood_alcohol *= 0.9;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112539,"byte_end":112575,"line_start":354,"line_end":354,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112576,"byte_end":112579,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/     // Check if they're sober enough to have another beer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112580,"byte_end":112642,"line_start":356,"line_end":356,"column_start":1,"column_end":63}},{"value":"/     if person.blood_alcohol > 0.3 {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112643,"byte_end":112682,"line_start":357,"line_end":357,"column_start":1,"column_end":40}},{"value":"/         // Too drunk... for now.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112683,"byte_end":112719,"line_start":358,"line_end":358,"column_start":1,"column_end":37}},{"value":"/         println!(\"Sorry {}, I have to cut you off\", id);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112720,"byte_end":112780,"line_start":359,"line_end":359,"column_start":1,"column_end":61}},{"value":"/     } else {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112781,"byte_end":112797,"line_start":360,"line_end":360,"column_start":1,"column_end":17}},{"value":"/         // Have another!","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112798,"byte_end":112826,"line_start":361,"line_end":361,"column_start":1,"column_end":29}},{"value":"/         person.blood_alcohol += 0.1;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112827,"byte_end":112867,"line_start":362,"line_end":362,"column_start":1,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112868,"byte_end":112877,"line_start":363,"line_end":363,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112878,"byte_end":112883,"line_start":364,"line_end":364,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112884,"byte_end":112891,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112892,"byte_end":112895,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ # Insert and complex keys","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112896,"byte_end":112925,"line_start":367,"line_end":367,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112926,"byte_end":112929,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ If we have a more complex key, calls to `insert` will","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112930,"byte_end":112987,"line_start":369,"line_end":369,"column_start":1,"column_end":58}},{"value":"/ not update the value of the key. For example:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":112988,"byte_end":113037,"line_start":370,"line_end":370,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113038,"byte_end":113041,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113042,"byte_end":113049,"line_start":372,"line_end":372,"column_start":1,"column_end":8}},{"value":"/ use std::cmp::Ordering;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113050,"byte_end":113077,"line_start":373,"line_end":373,"column_start":1,"column_end":28}},{"value":"/ use std::collections::BTreeMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113078,"byte_end":113113,"line_start":374,"line_end":374,"column_start":1,"column_end":36}},{"value":"/ use std::hash::{Hash, Hasher};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113114,"byte_end":113148,"line_start":375,"line_end":375,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113149,"byte_end":113152,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113153,"byte_end":113173,"line_start":377,"line_end":377,"column_start":1,"column_end":21}},{"value":"/ struct Foo {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113174,"byte_end":113190,"line_start":378,"line_end":378,"column_start":1,"column_end":17}},{"value":"/     a: u32,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113191,"byte_end":113206,"line_start":379,"line_end":379,"column_start":1,"column_end":16}},{"value":"/     b: &'static str,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113207,"byte_end":113231,"line_start":380,"line_end":380,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113232,"byte_end":113237,"line_start":381,"line_end":381,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113238,"byte_end":113241,"line_start":382,"line_end":382,"column_start":1,"column_end":4}},{"value":"/ // we will compare `Foo`s by their `a` value only.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113242,"byte_end":113296,"line_start":383,"line_end":383,"column_start":1,"column_end":55}},{"value":"/ impl PartialEq for Foo {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113297,"byte_end":113325,"line_start":384,"line_end":384,"column_start":1,"column_end":29}},{"value":"/     fn eq(&self, other: &Self) -> bool { self.a == other.a }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113326,"byte_end":113390,"line_start":385,"line_end":385,"column_start":1,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113391,"byte_end":113396,"line_start":386,"line_end":386,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113397,"byte_end":113400,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ impl Eq for Foo {}","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113401,"byte_end":113423,"line_start":388,"line_end":388,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113424,"byte_end":113427,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ // we will hash `Foo`s by their `a` value only.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113428,"byte_end":113479,"line_start":390,"line_end":390,"column_start":1,"column_end":52}},{"value":"/ impl Hash for Foo {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113480,"byte_end":113503,"line_start":391,"line_end":391,"column_start":1,"column_end":24}},{"value":"/     fn hash<H: Hasher>(&self, h: &mut H) { self.a.hash(h); }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113504,"byte_end":113568,"line_start":392,"line_end":392,"column_start":1,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113569,"byte_end":113574,"line_start":393,"line_end":393,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113575,"byte_end":113578,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ impl PartialOrd for Foo {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113579,"byte_end":113608,"line_start":395,"line_end":395,"column_start":1,"column_end":30}},{"value":"/     fn partial_cmp(&self, other: &Self) -> Option<Ordering> { self.a.partial_cmp(&other.a) }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113609,"byte_end":113705,"line_start":396,"line_end":396,"column_start":1,"column_end":97}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113706,"byte_end":113711,"line_start":397,"line_end":397,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113712,"byte_end":113715,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ impl Ord for Foo {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113716,"byte_end":113738,"line_start":399,"line_end":399,"column_start":1,"column_end":23}},{"value":"/     fn cmp(&self, other: &Self) -> Ordering { self.a.cmp(&other.a) }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113739,"byte_end":113811,"line_start":400,"line_end":400,"column_start":1,"column_end":73}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113812,"byte_end":113817,"line_start":401,"line_end":401,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113818,"byte_end":113821,"line_start":402,"line_end":402,"column_start":1,"column_end":4}},{"value":"/ let mut map = BTreeMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113822,"byte_end":113856,"line_start":403,"line_end":403,"column_start":1,"column_end":35}},{"value":"/ map.insert(Foo { a: 1, b: \"baz\" }, 99);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113857,"byte_end":113900,"line_start":404,"line_end":404,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113901,"byte_end":113904,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ // We already have a Foo with an a of 1, so this will be updating the value.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113905,"byte_end":113985,"line_start":406,"line_end":406,"column_start":1,"column_end":81}},{"value":"/ map.insert(Foo { a: 1, b: \"xyz\" }, 100);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":113986,"byte_end":114030,"line_start":407,"line_end":407,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":114031,"byte_end":114034,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ // The value has been updated...","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":114035,"byte_end":114071,"line_start":409,"line_end":409,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(map.values().next().unwrap(), &100);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":114072,"byte_end":114123,"line_start":410,"line_end":410,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":114124,"byte_end":114127,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ // ...but the key hasn't changed. b is still \"baz\", not \"xyz\".","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":114128,"byte_end":114194,"line_start":412,"line_end":412,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(map.keys().next().unwrap().b, \"baz\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":114195,"byte_end":114247,"line_start":413,"line_end":413,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":114248,"byte_end":114255,"line_start":414,"line_end":414,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":114256,"byte_end":114259,"line_start":415,"line_end":415,"column_start":1,"column_end":4}},{"value":"/ [`Vec`]: ../../std/vec/struct.Vec.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":114260,"byte_end":114302,"line_start":416,"line_end":416,"column_start":1,"column_end":43}},{"value":"/ [`HashMap`]: ../../std/collections/struct.HashMap.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":114303,"byte_end":114361,"line_start":417,"line_end":417,"column_start":1,"column_end":59}},{"value":"/ [`VecDeque`]: ../../std/collections/struct.VecDeque.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":114362,"byte_end":114422,"line_start":418,"line_end":418,"column_start":1,"column_end":61}},{"value":"/ [`LinkedList`]: ../../std/collections/struct.LinkedList.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":114423,"byte_end":114487,"line_start":419,"line_end":419,"column_start":1,"column_end":65}},{"value":"/ [`BTreeMap`]: ../../std/collections/struct.BTreeMap.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":114488,"byte_end":114548,"line_start":420,"line_end":420,"column_start":1,"column_end":61}},{"value":"/ [`HashSet`]: ../../std/collections/struct.HashSet.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":114549,"byte_end":114607,"line_start":421,"line_end":421,"column_start":1,"column_end":59}},{"value":"/ [`BTreeSet`]: ../../std/collections/struct.BTreeSet.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":114608,"byte_end":114668,"line_start":422,"line_end":422,"column_start":1,"column_end":61}},{"value":"/ [`BinaryHeap`]: ../../std/collections/struct.BinaryHeap.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":114669,"byte_end":114733,"line_start":423,"line_end":423,"column_start":1,"column_end":65}},{"value":"/ [`IntoIterator`]: ../../std/iter/trait.IntoIterator.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":114734,"byte_end":114794,"line_start":424,"line_end":424,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":7085},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122931,"byte_end":122938,"line_start":201,"line_end":201,"column_start":12,"column_end":19},"name":"HashMap","qualname":"::collections::hash::map::HashMap","value":"HashMap {  }","parent":null,"children":[{"krate":0,"index":7089}],"decl_id":null,"docs":" A hash map implemented with quadratic probing and SIMD lookup.","sig":null,"attributes":[{"value":"/ A hash map implemented with quadratic probing and SIMD lookup.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":115918,"byte_end":115984,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":115985,"byte_end":115988,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ By default, `HashMap` uses a hashing algorithm selected to provide","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":115989,"byte_end":116059,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/ resistance against HashDoS attacks. The algorithm is randomly seeded, and a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":116060,"byte_end":116139,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ reasonable best-effort is made to generate this seed from a high quality,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":116140,"byte_end":116217,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ secure source of randomness provided by the host without blocking the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":116218,"byte_end":116291,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/ program. Because of this, the randomness of the seed depends on the output","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":116292,"byte_end":116370,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ quality of the system's random number generator when the seed is created.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":116371,"byte_end":116448,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ In particular, seeds generated when the system's entropy pool is abnormally","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":116449,"byte_end":116528,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ low such as during system boot may be of a lower quality.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":116529,"byte_end":116590,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":116591,"byte_end":116594,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The default hashing algorithm is currently SipHash 1-3, though this is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":116595,"byte_end":116669,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ subject to change at any point in the future. While its performance is very","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":116670,"byte_end":116749,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ competitive for medium sized keys, other hashing algorithms will outperform","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":116750,"byte_end":116829,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ it for small keys such as integers as well as large keys such as long","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":116830,"byte_end":116903,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ strings, though those algorithms will typically *not* protect against","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":116904,"byte_end":116977,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ attacks such as HashDoS.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":116978,"byte_end":117006,"line_start":34,"line_end":34,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":117007,"byte_end":117010,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The hashing algorithm can be replaced on a per-`HashMap` basis using the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":117011,"byte_end":117087,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ [`default`], [`with_hasher`], and [`with_capacity_and_hasher`] methods. Many","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":117088,"byte_end":117168,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ alternative algorithms are available on crates.io, such as the [`fnv`] crate.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":117169,"byte_end":117250,"line_start":38,"line_end":38,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":117251,"byte_end":117254,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ It is required that the keys implement the [`Eq`] and [`Hash`] traits, although","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":117255,"byte_end":117338,"line_start":40,"line_end":40,"column_start":1,"column_end":84}},{"value":"/ this can frequently be achieved by using `#[derive(PartialEq, Eq, Hash)]`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":117339,"byte_end":117417,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ If you implement these yourself, it is important that the following","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":117418,"byte_end":117489,"line_start":42,"line_end":42,"column_start":1,"column_end":72}},{"value":"/ property holds:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":117490,"byte_end":117509,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":117510,"byte_end":117513,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":117514,"byte_end":117525,"line_start":45,"line_end":45,"column_start":1,"column_end":12}},{"value":"/ k1 == k2 -> hash(k1) == hash(k2)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":117526,"byte_end":117562,"line_start":46,"line_end":46,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":117563,"byte_end":117570,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":117571,"byte_end":117574,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ In other words, if two keys are equal, their hashes must be equal.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":117575,"byte_end":117645,"line_start":49,"line_end":49,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":117646,"byte_end":117649,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ It is a logic error for a key to be modified in such a way that the key's","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":117650,"byte_end":117727,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ hash, as determined by the [`Hash`] trait, or its equality, as determined by","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":117728,"byte_end":117808,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ the [`Eq`] trait, changes while it is in the map. This is normally only","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":117809,"byte_end":117884,"line_start":53,"line_end":53,"column_start":1,"column_end":76}},{"value":"/ possible through [`Cell`], [`RefCell`], global state, I/O, or unsafe code.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":117885,"byte_end":117963,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":117964,"byte_end":117967,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The hash table implementation is a Rust port of Google's [SwissTable].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":117968,"byte_end":118042,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"/ The original C++ version of SwissTable can be found [here], and this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118043,"byte_end":118115,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/ [CppCon talk] gives an overview of how the algorithm works.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118116,"byte_end":118179,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118180,"byte_end":118183,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ [SwissTable]: https://abseil.io/blog/20180927-swisstables","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118184,"byte_end":118245,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/ [here]: https://github.com/abseil/abseil-cpp/blob/master/absl/container/internal/raw_hash_set.h","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118246,"byte_end":118345,"line_start":61,"line_end":61,"column_start":1,"column_end":100}},{"value":"/ [CppCon talk]: https://www.youtube.com/watch?v=ncHmEUmJZf4","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118346,"byte_end":118408,"line_start":62,"line_end":62,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118409,"byte_end":118412,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118413,"byte_end":118427,"line_start":64,"line_end":64,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118428,"byte_end":118431,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118432,"byte_end":118439,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118440,"byte_end":118474,"line_start":67,"line_end":67,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118475,"byte_end":118478,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ // Type inference lets us omit an explicit type signature (which","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118479,"byte_end":118547,"line_start":69,"line_end":69,"column_start":1,"column_end":69}},{"value":"/ // would be `HashMap<String, String>` in this example).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118548,"byte_end":118607,"line_start":70,"line_end":70,"column_start":1,"column_end":60}},{"value":"/ let mut book_reviews = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118608,"byte_end":118650,"line_start":71,"line_end":71,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118651,"byte_end":118654,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ // Review some books.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118655,"byte_end":118680,"line_start":73,"line_end":73,"column_start":1,"column_end":26}},{"value":"/ book_reviews.insert(","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118681,"byte_end":118705,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/     \"Adventures of Huckleberry Finn\".to_string(),","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118706,"byte_end":118759,"line_start":75,"line_end":75,"column_start":1,"column_end":54}},{"value":"/     \"My favorite book.\".to_string(),","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118760,"byte_end":118800,"line_start":76,"line_end":76,"column_start":1,"column_end":41}},{"value":"/ );","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118801,"byte_end":118807,"line_start":77,"line_end":77,"column_start":1,"column_end":7}},{"value":"/ book_reviews.insert(","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118808,"byte_end":118832,"line_start":78,"line_end":78,"column_start":1,"column_end":25}},{"value":"/     \"Grimms' Fairy Tales\".to_string(),","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118833,"byte_end":118875,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"/     \"Masterpiece.\".to_string(),","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118876,"byte_end":118911,"line_start":80,"line_end":80,"column_start":1,"column_end":36}},{"value":"/ );","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118912,"byte_end":118918,"line_start":81,"line_end":81,"column_start":1,"column_end":7}},{"value":"/ book_reviews.insert(","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118919,"byte_end":118943,"line_start":82,"line_end":82,"column_start":1,"column_end":25}},{"value":"/     \"Pride and Prejudice\".to_string(),","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118944,"byte_end":118986,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/     \"Very enjoyable.\".to_string(),","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":118987,"byte_end":119025,"line_start":84,"line_end":84,"column_start":1,"column_end":39}},{"value":"/ );","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119026,"byte_end":119032,"line_start":85,"line_end":85,"column_start":1,"column_end":7}},{"value":"/ book_reviews.insert(","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119033,"byte_end":119057,"line_start":86,"line_end":86,"column_start":1,"column_end":25}},{"value":"/     \"The Adventures of Sherlock Holmes\".to_string(),","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119058,"byte_end":119114,"line_start":87,"line_end":87,"column_start":1,"column_end":57}},{"value":"/     \"Eye lyked it alot.\".to_string(),","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119115,"byte_end":119156,"line_start":88,"line_end":88,"column_start":1,"column_end":42}},{"value":"/ );","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119157,"byte_end":119163,"line_start":89,"line_end":89,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119164,"byte_end":119167,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ // Check for a specific one.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119168,"byte_end":119200,"line_start":91,"line_end":91,"column_start":1,"column_end":33}},{"value":"/ // When collections store owned values (String), they can still be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119201,"byte_end":119271,"line_start":92,"line_end":92,"column_start":1,"column_end":71}},{"value":"/ // queried using references (&str).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119272,"byte_end":119311,"line_start":93,"line_end":93,"column_start":1,"column_end":40}},{"value":"/ if !book_reviews.contains_key(\"Les Misérables\") {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119312,"byte_end":119366,"line_start":94,"line_end":94,"column_start":1,"column_end":54}},{"value":"/     println!(\"We've got {} reviews, but Les Misérables ain't one.\",","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119367,"byte_end":119439,"line_start":95,"line_end":95,"column_start":1,"column_end":72}},{"value":"/              book_reviews.len());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119440,"byte_end":119477,"line_start":96,"line_end":96,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119478,"byte_end":119483,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119484,"byte_end":119487,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ // oops, this review has a lot of spelling mistakes, let's delete it.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119488,"byte_end":119561,"line_start":99,"line_end":99,"column_start":1,"column_end":74}},{"value":"/ book_reviews.remove(\"The Adventures of Sherlock Holmes\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119562,"byte_end":119623,"line_start":100,"line_end":100,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119624,"byte_end":119627,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ // Look up the values associated with some keys.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119628,"byte_end":119680,"line_start":102,"line_end":102,"column_start":1,"column_end":53}},{"value":"/ let to_find = [\"Pride and Prejudice\", \"Alice's Adventure in Wonderland\"];","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119681,"byte_end":119758,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/ for &book in &to_find {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119759,"byte_end":119786,"line_start":104,"line_end":104,"column_start":1,"column_end":28}},{"value":"/     match book_reviews.get(book) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119787,"byte_end":119825,"line_start":105,"line_end":105,"column_start":1,"column_end":39}},{"value":"/         Some(review) => println!(\"{}: {}\", book, review),","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119826,"byte_end":119887,"line_start":106,"line_end":106,"column_start":1,"column_end":62}},{"value":"/         None => println!(\"{} is unreviewed.\", book)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119888,"byte_end":119943,"line_start":107,"line_end":107,"column_start":1,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119944,"byte_end":119953,"line_start":108,"line_end":108,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119954,"byte_end":119959,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119960,"byte_end":119963,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ // Look up the value for a key (will panic if the key is not found).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":119964,"byte_end":120036,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ println!(\"Review for Jane: {}\", book_reviews[\"Pride and Prejudice\"]);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120037,"byte_end":120110,"line_start":112,"line_end":112,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120111,"byte_end":120114,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ // Iterate over everything.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120115,"byte_end":120146,"line_start":114,"line_end":114,"column_start":1,"column_end":32}},{"value":"/ for (book, review) in &book_reviews {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120147,"byte_end":120188,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"/     println!(\"{}: \\\"{}\\\"\", book, review);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120189,"byte_end":120234,"line_start":116,"line_end":116,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120235,"byte_end":120240,"line_start":117,"line_end":117,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120241,"byte_end":120248,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120249,"byte_end":120252,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ `HashMap` also implements an [`Entry API`](#method.entry), which allows","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120253,"byte_end":120328,"line_start":120,"line_end":120,"column_start":1,"column_end":76}},{"value":"/ for more complex methods of getting, setting, updating and removing keys and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120329,"byte_end":120409,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/ their values:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120410,"byte_end":120427,"line_start":122,"line_end":122,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120428,"byte_end":120431,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120432,"byte_end":120439,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120440,"byte_end":120474,"line_start":125,"line_end":125,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120475,"byte_end":120478,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ // type inference lets us omit an explicit type signature (which","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120479,"byte_end":120547,"line_start":127,"line_end":127,"column_start":1,"column_end":69}},{"value":"/ // would be `HashMap<&str, u8>` in this example).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120548,"byte_end":120601,"line_start":128,"line_end":128,"column_start":1,"column_end":54}},{"value":"/ let mut player_stats = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120602,"byte_end":120644,"line_start":129,"line_end":129,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120645,"byte_end":120648,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ fn random_stat_buff() -> u8 {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120649,"byte_end":120682,"line_start":131,"line_end":131,"column_start":1,"column_end":34}},{"value":"/     // could actually return some random value here - let's just return","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120683,"byte_end":120758,"line_start":132,"line_end":132,"column_start":1,"column_end":76}},{"value":"/     // some fixed value for now","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120759,"byte_end":120794,"line_start":133,"line_end":133,"column_start":1,"column_end":36}},{"value":"/     42","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120795,"byte_end":120805,"line_start":134,"line_end":134,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120806,"byte_end":120811,"line_start":135,"line_end":135,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120812,"byte_end":120815,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ // insert a key only if it doesn't already exist","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120816,"byte_end":120868,"line_start":137,"line_end":137,"column_start":1,"column_end":53}},{"value":"/ player_stats.entry(\"health\").or_insert(100);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120869,"byte_end":120917,"line_start":138,"line_end":138,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120918,"byte_end":120921,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ // insert a key using a function that provides a new value only if it","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120922,"byte_end":120995,"line_start":140,"line_end":140,"column_start":1,"column_end":74}},{"value":"/ // doesn't already exist","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":120996,"byte_end":121024,"line_start":141,"line_end":141,"column_start":1,"column_end":29}},{"value":"/ player_stats.entry(\"defence\").or_insert_with(random_stat_buff);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121025,"byte_end":121092,"line_start":142,"line_end":142,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121093,"byte_end":121096,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ // update a key, guarding against the key possibly not being set","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121097,"byte_end":121165,"line_start":144,"line_end":144,"column_start":1,"column_end":69}},{"value":"/ let stat = player_stats.entry(\"attack\").or_insert(100);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121166,"byte_end":121225,"line_start":145,"line_end":145,"column_start":1,"column_end":60}},{"value":"/ *stat += random_stat_buff();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121226,"byte_end":121258,"line_start":146,"line_end":146,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121259,"byte_end":121266,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121267,"byte_end":121270,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ The easiest way to use `HashMap` with a custom key type is to derive [`Eq`] and [`Hash`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121271,"byte_end":121364,"line_start":149,"line_end":149,"column_start":1,"column_end":94}},{"value":"/ We must also derive [`PartialEq`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121365,"byte_end":121403,"line_start":150,"line_end":150,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121404,"byte_end":121407,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ [`RefCell`]: crate::cell::RefCell","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121408,"byte_end":121445,"line_start":152,"line_end":152,"column_start":1,"column_end":38}},{"value":"/ [`Cell`]: crate::cell::Cell","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121446,"byte_end":121477,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/ [`default`]: Default::default","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121478,"byte_end":121511,"line_start":154,"line_end":154,"column_start":1,"column_end":34}},{"value":"/ [`with_hasher`]: Self::with_hasher","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121512,"byte_end":121550,"line_start":155,"line_end":155,"column_start":1,"column_end":39}},{"value":"/ [`with_capacity_and_hasher`]: Self::with_capacity_and_hasher","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121551,"byte_end":121615,"line_start":156,"line_end":156,"column_start":1,"column_end":65}},{"value":"/ [`fnv`]: https://crates.io/crates/fnv","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121616,"byte_end":121657,"line_start":157,"line_end":157,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121658,"byte_end":121661,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121662,"byte_end":121669,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121670,"byte_end":121704,"line_start":160,"line_end":160,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121705,"byte_end":121708,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ #[derive(Hash, Eq, PartialEq, Debug)]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121709,"byte_end":121750,"line_start":162,"line_end":162,"column_start":1,"column_end":42}},{"value":"/ struct Viking {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121751,"byte_end":121770,"line_start":163,"line_end":163,"column_start":1,"column_end":20}},{"value":"/     name: String,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121771,"byte_end":121792,"line_start":164,"line_end":164,"column_start":1,"column_end":22}},{"value":"/     country: String,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121793,"byte_end":121817,"line_start":165,"line_end":165,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121818,"byte_end":121823,"line_start":166,"line_end":166,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121824,"byte_end":121827,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ impl Viking {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121828,"byte_end":121845,"line_start":168,"line_end":168,"column_start":1,"column_end":18}},{"value":"/     /// Creates a new Viking.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121846,"byte_end":121879,"line_start":169,"line_end":169,"column_start":1,"column_end":34}},{"value":"/     fn new(name: &str, country: &str) -> Viking {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121880,"byte_end":121933,"line_start":170,"line_end":170,"column_start":1,"column_end":54}},{"value":"/         Viking { name: name.to_string(), country: country.to_string() }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":121934,"byte_end":122009,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/     }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122010,"byte_end":122019,"line_start":172,"line_end":172,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122020,"byte_end":122025,"line_start":173,"line_end":173,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122026,"byte_end":122029,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ // Use a HashMap to store the vikings' health points.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122030,"byte_end":122087,"line_start":175,"line_end":175,"column_start":1,"column_end":58}},{"value":"/ let mut vikings = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122088,"byte_end":122125,"line_start":176,"line_end":176,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122126,"byte_end":122129,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ vikings.insert(Viking::new(\"Einar\", \"Norway\"), 25);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122130,"byte_end":122185,"line_start":178,"line_end":178,"column_start":1,"column_end":56}},{"value":"/ vikings.insert(Viking::new(\"Olaf\", \"Denmark\"), 24);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122186,"byte_end":122241,"line_start":179,"line_end":179,"column_start":1,"column_end":56}},{"value":"/ vikings.insert(Viking::new(\"Harald\", \"Iceland\"), 12);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122242,"byte_end":122299,"line_start":180,"line_end":180,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122300,"byte_end":122303,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ // Use derived implementation to print the status of the vikings.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122304,"byte_end":122373,"line_start":182,"line_end":182,"column_start":1,"column_end":70}},{"value":"/ for (viking, health) in &vikings {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122374,"byte_end":122412,"line_start":183,"line_end":183,"column_start":1,"column_end":39}},{"value":"/     println!(\"{:?} has {} hp\", viking, health);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122413,"byte_end":122464,"line_start":184,"line_end":184,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122465,"byte_end":122470,"line_start":185,"line_end":185,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122471,"byte_end":122478,"line_start":186,"line_end":186,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122479,"byte_end":122482,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ A `HashMap` with fixed list of elements can be initialized from an array:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122483,"byte_end":122560,"line_start":188,"line_end":188,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122561,"byte_end":122564,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122565,"byte_end":122572,"line_start":190,"line_end":190,"column_start":1,"column_end":8}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122573,"byte_end":122607,"line_start":191,"line_end":191,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122608,"byte_end":122611,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ let timber_resources: HashMap<&str, i32> = [(\"Norway\", 100), (\"Denmark\", 50), (\"Iceland\", 10)]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122612,"byte_end":122710,"line_start":193,"line_end":193,"column_start":1,"column_end":99}},{"value":"/     .iter().cloned().collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122711,"byte_end":122746,"line_start":194,"line_end":194,"column_start":1,"column_end":36}},{"value":"/ // use the values stored in map","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122747,"byte_end":122782,"line_start":195,"line_end":195,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122783,"byte_end":122790,"line_start":196,"line_end":196,"column_start":1,"column_end":8}},{"value":"rustc_diagnostic_item = \"hashmap_type\"","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":122831,"byte_end":122869,"line_start":199,"line_end":199,"column_start":23,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123447,"byte_end":123450,"line_start":219,"line_end":219,"column_start":12,"column_end":15},"name":"new","qualname":"<HashMap<K, V, RandomState>>::new","value":"pub fn new() -> HashMap<K, V, RandomState>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123045,"byte_end":123076,"line_start":206,"line_end":206,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123081,"byte_end":123084,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ The hash map is initially created with a capacity of 0, so it will not allocate until it","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123089,"byte_end":123181,"line_start":208,"line_end":208,"column_start":5,"column_end":97}},{"value":"/ is first inserted into.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123186,"byte_end":123213,"line_start":209,"line_end":209,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123218,"byte_end":123221,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123226,"byte_end":123240,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123245,"byte_end":123248,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123253,"byte_end":123260,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123265,"byte_end":123299,"line_start":214,"line_end":214,"column_start":5,"column_end":39}},{"value":"/ let mut map: HashMap<&str, i32> = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123304,"byte_end":123357,"line_start":215,"line_end":215,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123362,"byte_end":123369,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123374,"byte_end":123383,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123989,"byte_end":124002,"line_start":236,"line_end":236,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<HashMap<K, V, RandomState>>::with_capacity","value":"pub fn with_capacity(usize) -> HashMap<K, V, RandomState>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` with the specified capacity.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123523,"byte_end":123582,"line_start":223,"line_end":223,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123587,"byte_end":123590,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The hash map will be able to hold at least `capacity` elements without","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123595,"byte_end":123669,"line_start":225,"line_end":225,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash map will not allocate.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123674,"byte_end":123743,"line_start":226,"line_end":226,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123748,"byte_end":123751,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123756,"byte_end":123770,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123775,"byte_end":123778,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123783,"byte_end":123790,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123795,"byte_end":123829,"line_start":231,"line_end":231,"column_start":5,"column_end":39}},{"value":"/ let mut map: HashMap<&str, i32> = HashMap::with_capacity(10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123834,"byte_end":123899,"line_start":232,"line_end":232,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123904,"byte_end":123911,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123916,"byte_end":123925,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":125128,"byte_end":125139,"line_start":267,"line_end":267,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<HashMap<K, V, S>>::with_hasher","value":"pub fn with_hasher(S) -> HashMap<K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` which will use the given hash builder to hash\n keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` which will use the given hash builder to hash","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":124170,"byte_end":124246,"line_start":242,"line_end":242,"column_start":5,"column_end":81}},{"value":"/ keys.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":124251,"byte_end":124260,"line_start":243,"line_end":243,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":124265,"byte_end":124268,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The created map has the default initial capacity.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":124273,"byte_end":124326,"line_start":245,"line_end":245,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":124331,"byte_end":124334,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Warning: `hash_builder` is normally randomly generated, and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":124339,"byte_end":124402,"line_start":247,"line_end":247,"column_start":5,"column_end":68}},{"value":"/ is designed to allow HashMaps to be resistant to attacks that","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":124407,"byte_end":124472,"line_start":248,"line_end":248,"column_start":5,"column_end":70}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":124477,"byte_end":124540,"line_start":249,"line_end":249,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":124545,"byte_end":124609,"line_start":250,"line_end":250,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":124614,"byte_end":124617,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":124622,"byte_end":124698,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":124703,"byte_end":124767,"line_start":253,"line_end":253,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":124772,"byte_end":124775,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":124780,"byte_end":124794,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":124799,"byte_end":124802,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":124807,"byte_end":124814,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":124819,"byte_end":124853,"line_start":258,"line_end":258,"column_start":5,"column_end":39}},{"value":"/ use std::collections::hash_map::RandomState;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":124858,"byte_end":124906,"line_start":259,"line_end":259,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":124911,"byte_end":124914,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let s = RandomState::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":124919,"byte_end":124950,"line_start":261,"line_end":261,"column_start":5,"column_end":36}},{"value":"/ let mut map = HashMap::with_hasher(s);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":124955,"byte_end":124997,"line_start":262,"line_end":262,"column_start":5,"column_end":47}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":125002,"byte_end":125023,"line_start":263,"line_end":263,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":125028,"byte_end":125035,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":125040,"byte_end":125049,"line_start":265,"line_end":265,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":126343,"byte_end":126367,"line_start":297,"line_end":297,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<HashMap<K, V, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> HashMap<K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` with the specified capacity, using `hash_builder`\n to hash the keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` with the specified capacity, using `hash_builder`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":125257,"byte_end":125337,"line_start":271,"line_end":271,"column_start":5,"column_end":85}},{"value":"/ to hash the keys.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":125342,"byte_end":125363,"line_start":272,"line_end":272,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":125368,"byte_end":125371,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The hash map will be able to hold at least `capacity` elements without","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":125376,"byte_end":125450,"line_start":274,"line_end":274,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash map will not allocate.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":125455,"byte_end":125524,"line_start":275,"line_end":275,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":125529,"byte_end":125532,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Warning: `hash_builder` is normally randomly generated, and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":125537,"byte_end":125600,"line_start":277,"line_end":277,"column_start":5,"column_end":68}},{"value":"/ is designed to allow HashMaps to be resistant to attacks that","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":125605,"byte_end":125670,"line_start":278,"line_end":278,"column_start":5,"column_end":70}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":125675,"byte_end":125738,"line_start":279,"line_end":279,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":125743,"byte_end":125807,"line_start":280,"line_end":280,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":125812,"byte_end":125815,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":125820,"byte_end":125896,"line_start":282,"line_end":282,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":125901,"byte_end":125965,"line_start":283,"line_end":283,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":125970,"byte_end":125973,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":125978,"byte_end":125992,"line_start":285,"line_end":285,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":125997,"byte_end":126000,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":126005,"byte_end":126012,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":126017,"byte_end":126051,"line_start":288,"line_end":288,"column_start":5,"column_end":39}},{"value":"/ use std::collections::hash_map::RandomState;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":126056,"byte_end":126104,"line_start":289,"line_end":289,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":126109,"byte_end":126112,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ let s = RandomState::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":126117,"byte_end":126148,"line_start":291,"line_end":291,"column_start":5,"column_end":36}},{"value":"/ let mut map = HashMap::with_capacity_and_hasher(10, s);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":126153,"byte_end":126212,"line_start":292,"line_end":292,"column_start":5,"column_end":64}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":126217,"byte_end":126238,"line_start":293,"line_end":293,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":126243,"byte_end":126250,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":126255,"byte_end":126264,"line_start":295,"line_end":295,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127039,"byte_end":127047,"line_start":315,"line_end":315,"column_start":12,"column_end":20},"name":"capacity","qualname":"<HashMap<K, V, S>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the map can hold without reallocating.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":126525,"byte_end":126598,"line_start":301,"line_end":301,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":126603,"byte_end":126606,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the `HashMap<K, V>` might be able to hold","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":126611,"byte_end":126686,"line_start":303,"line_end":303,"column_start":5,"column_end":80}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":126691,"byte_end":126757,"line_start":304,"line_end":304,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":126762,"byte_end":126765,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":126770,"byte_end":126784,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":126789,"byte_end":126792,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":126797,"byte_end":126804,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":126809,"byte_end":126843,"line_start":309,"line_end":309,"column_start":5,"column_end":39}},{"value":"/ let map: HashMap<i32, i32> = HashMap::with_capacity(100);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":126848,"byte_end":126909,"line_start":310,"line_end":310,"column_start":5,"column_end":66}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":126914,"byte_end":126949,"line_start":311,"line_end":311,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":126954,"byte_end":126961,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":126966,"byte_end":126975,"line_start":313,"line_end":313,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127580,"byte_end":127584,"line_start":337,"line_end":337,"column_start":12,"column_end":16},"name":"keys","qualname":"<HashMap<K, V, S>>::keys","value":"pub fn keys(&Self) -> Keys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all keys in arbitrary order.\n The iterator element type is `&'a K`.","sig":null,"attributes":[{"value":"/ An iterator visiting all keys in arbitrary order.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127106,"byte_end":127159,"line_start":319,"line_end":319,"column_start":5,"column_end":58}},{"value":"/ The iterator element type is `&'a K`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127164,"byte_end":127205,"line_start":320,"line_end":320,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127210,"byte_end":127213,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127218,"byte_end":127232,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127237,"byte_end":127240,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127245,"byte_end":127252,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127257,"byte_end":127291,"line_start":325,"line_end":325,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127296,"byte_end":127299,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127304,"byte_end":127337,"line_start":327,"line_end":327,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127342,"byte_end":127365,"line_start":328,"line_end":328,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127370,"byte_end":127393,"line_start":329,"line_end":329,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127398,"byte_end":127421,"line_start":330,"line_end":330,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127426,"byte_end":127429,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127434,"byte_end":127461,"line_start":332,"line_end":332,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127466,"byte_end":127494,"line_start":333,"line_end":333,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127499,"byte_end":127504,"line_start":334,"line_end":334,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127509,"byte_end":127516,"line_start":335,"line_end":335,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128137,"byte_end":128143,"line_start":359,"line_end":359,"column_start":12,"column_end":18},"name":"values","qualname":"<HashMap<K, V, S>>::values","value":"pub fn values(&Self) -> Values<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.\n The iterator element type is `&'a V`.","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127659,"byte_end":127714,"line_start":341,"line_end":341,"column_start":5,"column_end":60}},{"value":"/ The iterator element type is `&'a V`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127719,"byte_end":127760,"line_start":342,"line_end":342,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127765,"byte_end":127768,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127773,"byte_end":127787,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127792,"byte_end":127795,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127800,"byte_end":127807,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127812,"byte_end":127846,"line_start":347,"line_end":347,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127851,"byte_end":127854,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127859,"byte_end":127892,"line_start":349,"line_end":349,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127897,"byte_end":127920,"line_start":350,"line_end":350,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127925,"byte_end":127948,"line_start":351,"line_end":351,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127953,"byte_end":127976,"line_start":352,"line_end":352,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127981,"byte_end":127984,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":127989,"byte_end":128018,"line_start":354,"line_end":354,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128023,"byte_end":128051,"line_start":355,"line_end":355,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128056,"byte_end":128061,"line_start":356,"line_end":356,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128066,"byte_end":128073,"line_start":357,"line_end":357,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128816,"byte_end":128826,"line_start":386,"line_end":386,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<HashMap<K, V, S>>::values_mut","value":"pub fn values_mut(&mut Self) -> ValuesMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.\n The iterator element type is `&'a mut V`.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128222,"byte_end":128285,"line_start":363,"line_end":363,"column_start":5,"column_end":68}},{"value":"/ The iterator element type is `&'a mut V`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128290,"byte_end":128335,"line_start":364,"line_end":364,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128340,"byte_end":128343,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128348,"byte_end":128362,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128367,"byte_end":128370,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128375,"byte_end":128382,"line_start":368,"line_end":368,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128387,"byte_end":128421,"line_start":369,"line_end":369,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128426,"byte_end":128429,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128434,"byte_end":128467,"line_start":371,"line_end":371,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128472,"byte_end":128475,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128480,"byte_end":128503,"line_start":373,"line_end":373,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128508,"byte_end":128531,"line_start":374,"line_end":374,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128536,"byte_end":128559,"line_start":375,"line_end":375,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128564,"byte_end":128567,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ for val in map.values_mut() {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128572,"byte_end":128605,"line_start":377,"line_end":377,"column_start":5,"column_end":38}},{"value":"/     *val = *val + 10;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128610,"byte_end":128635,"line_start":378,"line_end":378,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128640,"byte_end":128645,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128650,"byte_end":128653,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128658,"byte_end":128687,"line_start":381,"line_end":381,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128692,"byte_end":128720,"line_start":382,"line_end":382,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128725,"byte_end":128730,"line_start":383,"line_end":383,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128735,"byte_end":128742,"line_start":384,"line_end":384,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129438,"byte_end":129442,"line_start":408,"line_end":408,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashMap<K, V, S>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order.\n The iterator element type is `(&'a K, &'a V)`.","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128919,"byte_end":128983,"line_start":390,"line_end":390,"column_start":5,"column_end":69}},{"value":"/ The iterator element type is `(&'a K, &'a V)`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":128988,"byte_end":129038,"line_start":391,"line_end":391,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129043,"byte_end":129046,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129051,"byte_end":129065,"line_start":393,"line_end":393,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129070,"byte_end":129073,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129078,"byte_end":129085,"line_start":395,"line_end":395,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129090,"byte_end":129124,"line_start":396,"line_end":396,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129129,"byte_end":129132,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129137,"byte_end":129170,"line_start":398,"line_end":398,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129175,"byte_end":129198,"line_start":399,"line_end":399,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129203,"byte_end":129226,"line_start":400,"line_end":400,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129231,"byte_end":129254,"line_start":401,"line_end":401,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129259,"byte_end":129262,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in map.iter() {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129267,"byte_end":129301,"line_start":403,"line_end":403,"column_start":5,"column_end":39}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129306,"byte_end":129352,"line_start":404,"line_end":404,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129357,"byte_end":129362,"line_start":405,"line_end":405,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129367,"byte_end":129374,"line_start":406,"line_end":406,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130196,"byte_end":130204,"line_start":436,"line_end":436,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<HashMap<K, V, S>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order,\n with mutable references to the values.\n The iterator element type is `(&'a K, &'a mut V)`.","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129521,"byte_end":129585,"line_start":412,"line_end":412,"column_start":5,"column_end":69}},{"value":"/ with mutable references to the values.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129590,"byte_end":129632,"line_start":413,"line_end":413,"column_start":5,"column_end":47}},{"value":"/ The iterator element type is `(&'a K, &'a mut V)`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129637,"byte_end":129691,"line_start":414,"line_end":414,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129696,"byte_end":129699,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129704,"byte_end":129718,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129723,"byte_end":129726,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129731,"byte_end":129738,"line_start":418,"line_end":418,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129743,"byte_end":129777,"line_start":419,"line_end":419,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129782,"byte_end":129785,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129790,"byte_end":129823,"line_start":421,"line_end":421,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129828,"byte_end":129851,"line_start":422,"line_end":422,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129856,"byte_end":129879,"line_start":423,"line_end":423,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129884,"byte_end":129907,"line_start":424,"line_end":424,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129912,"byte_end":129915,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ // Update all values","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129920,"byte_end":129944,"line_start":426,"line_end":426,"column_start":5,"column_end":29}},{"value":"/ for (_, val) in map.iter_mut() {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129949,"byte_end":129985,"line_start":427,"line_end":427,"column_start":5,"column_end":41}},{"value":"/     *val *= 2;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":129990,"byte_end":130008,"line_start":428,"line_end":428,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130013,"byte_end":130018,"line_start":429,"line_end":429,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130023,"byte_end":130026,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in &map {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130031,"byte_end":130059,"line_start":431,"line_end":431,"column_start":5,"column_end":33}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130064,"byte_end":130110,"line_start":432,"line_end":432,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130115,"byte_end":130120,"line_start":433,"line_end":433,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130125,"byte_end":130132,"line_start":434,"line_end":434,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130639,"byte_end":130642,"line_start":453,"line_end":453,"column_start":12,"column_end":15},"name":"len","qualname":"<HashMap<K, V, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the map.","sig":null,"attributes":[{"value":"/ Returns the number of elements in the map.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130297,"byte_end":130343,"line_start":440,"line_end":440,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130348,"byte_end":130351,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130356,"byte_end":130370,"line_start":442,"line_end":442,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130375,"byte_end":130378,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130383,"byte_end":130390,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130395,"byte_end":130429,"line_start":445,"line_end":445,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130434,"byte_end":130437,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130442,"byte_end":130473,"line_start":447,"line_end":447,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130478,"byte_end":130505,"line_start":448,"line_end":448,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130510,"byte_end":130531,"line_start":449,"line_end":449,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130536,"byte_end":130563,"line_start":450,"line_end":450,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130568,"byte_end":130575,"line_start":451,"line_end":451,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":131056,"byte_end":131064,"line_start":471,"line_end":471,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashMap<K, V, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130696,"byte_end":130747,"line_start":457,"line_end":457,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130752,"byte_end":130755,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130760,"byte_end":130774,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130779,"byte_end":130782,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130787,"byte_end":130794,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130799,"byte_end":130833,"line_start":462,"line_end":462,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130838,"byte_end":130841,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130846,"byte_end":130877,"line_start":464,"line_end":464,"column_start":5,"column_end":36}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130882,"byte_end":130908,"line_start":465,"line_end":465,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130913,"byte_end":130934,"line_start":466,"line_end":466,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130939,"byte_end":130966,"line_start":467,"line_end":467,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130971,"byte_end":130978,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":130983,"byte_end":130992,"line_start":469,"line_end":469,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":131686,"byte_end":131691,"line_start":496,"line_end":496,"column_start":12,"column_end":17},"name":"drain","qualname":"<HashMap<K, V, S>>::drain","value":"pub fn drain(&mut Self) -> Drain<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, returning all key-value pairs as an iterator. Keeps the\n allocated memory for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, returning all key-value pairs as an iterator. Keeps the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":131122,"byte_end":131197,"line_start":475,"line_end":475,"column_start":5,"column_end":80}},{"value":"/ allocated memory for reuse.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":131202,"byte_end":131233,"line_start":476,"line_end":476,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":131238,"byte_end":131241,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":131246,"byte_end":131260,"line_start":478,"line_end":478,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":131265,"byte_end":131268,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":131273,"byte_end":131280,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":131285,"byte_end":131319,"line_start":481,"line_end":481,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":131324,"byte_end":131327,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":131332,"byte_end":131363,"line_start":483,"line_end":483,"column_start":5,"column_end":36}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":131368,"byte_end":131389,"line_start":484,"line_end":484,"column_start":5,"column_end":26}},{"value":"/ a.insert(2, \"b\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":131394,"byte_end":131415,"line_start":485,"line_end":485,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":131420,"byte_end":131423,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ for (k, v) in a.drain().take(1) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":131428,"byte_end":131465,"line_start":487,"line_end":487,"column_start":5,"column_end":42}},{"value":"/     assert!(k == 1 || k == 2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":131470,"byte_end":131504,"line_start":488,"line_end":488,"column_start":5,"column_end":39}},{"value":"/     assert!(v == \"a\" || v == \"b\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":131509,"byte_end":131547,"line_start":489,"line_end":489,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":131552,"byte_end":131557,"line_start":490,"line_end":490,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":131562,"byte_end":131565,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":131570,"byte_end":131596,"line_start":492,"line_end":492,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":131601,"byte_end":131608,"line_start":493,"line_end":493,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":131613,"byte_end":131622,"line_start":494,"line_end":494,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":133424,"byte_end":133436,"line_start":537,"line_end":537,"column_start":12,"column_end":24},"name":"drain_filter","qualname":"<HashMap<K, V, S>>::drain_filter","value":"pub fn drain_filter<F>(&mut Self, F) -> DrainFilter<, K, V, F> where\nF: FnMut(&K, &mut V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator which uses a closure to determine if an element should be removed.","sig":null,"attributes":[{"value":"/ Creates an iterator which uses a closure to determine if an element should be removed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":131777,"byte_end":131867,"line_start":500,"line_end":500,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":131872,"byte_end":131875,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ If the closure returns true, the element is removed from the map and yielded.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":131880,"byte_end":131961,"line_start":502,"line_end":502,"column_start":5,"column_end":86}},{"value":"/ If the closure returns false, or panics, the element remains in the map and will not be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":131966,"byte_end":132057,"line_start":503,"line_end":503,"column_start":5,"column_end":96}},{"value":"/ yielded.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":132062,"byte_end":132074,"line_start":504,"line_end":504,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":132079,"byte_end":132082,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ Note that `drain_filter` lets you mutate every value in the filter closure, regardless of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":132087,"byte_end":132180,"line_start":506,"line_end":506,"column_start":5,"column_end":98}},{"value":"/ whether you choose to keep or remove it.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":132185,"byte_end":132229,"line_start":507,"line_end":507,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":132234,"byte_end":132237,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ If the iterator is only partially consumed or not consumed at all, each of the remaining","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":132242,"byte_end":132334,"line_start":509,"line_end":509,"column_start":5,"column_end":97}},{"value":"/ elements will still be subjected to the closure and removed and dropped if it returns true.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":132339,"byte_end":132434,"line_start":510,"line_end":510,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":132439,"byte_end":132442,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ It is unspecified how many more elements will be subjected to the closure","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":132447,"byte_end":132524,"line_start":512,"line_end":512,"column_start":5,"column_end":82}},{"value":"/ if a panic occurs in the closure, or a panic occurs while dropping an element,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":132529,"byte_end":132611,"line_start":513,"line_end":513,"column_start":5,"column_end":87}},{"value":"/ or if the `DrainFilter` value is leaked.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":132616,"byte_end":132660,"line_start":514,"line_end":514,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":132665,"byte_end":132668,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":132673,"byte_end":132687,"line_start":516,"line_end":516,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":132692,"byte_end":132695,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ Splitting a map into even and odd keys, reusing the original map:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":132700,"byte_end":132769,"line_start":518,"line_end":518,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":132774,"byte_end":132777,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":132782,"byte_end":132789,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/ #![feature(hash_drain_filter)]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":132794,"byte_end":132828,"line_start":521,"line_end":521,"column_start":5,"column_end":39}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":132833,"byte_end":132867,"line_start":522,"line_end":522,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":132872,"byte_end":132875,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = (0..8).map(|x| (x, x)).collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":132880,"byte_end":132950,"line_start":524,"line_end":524,"column_start":5,"column_end":75}},{"value":"/ let drained: HashMap<i32, i32> = map.drain_filter(|k, _v| k % 2 == 0).collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":132955,"byte_end":133039,"line_start":525,"line_end":525,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":133044,"byte_end":133047,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let mut evens = drained.keys().copied().collect::<Vec<_>>();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":133052,"byte_end":133116,"line_start":527,"line_end":527,"column_start":5,"column_end":69}},{"value":"/ let mut odds = map.keys().copied().collect::<Vec<_>>();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":133121,"byte_end":133180,"line_start":528,"line_end":528,"column_start":5,"column_end":64}},{"value":"/ evens.sort();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":133185,"byte_end":133202,"line_start":529,"line_end":529,"column_start":5,"column_end":22}},{"value":"/ odds.sort();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":133207,"byte_end":133223,"line_start":530,"line_end":530,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":133228,"byte_end":133231,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens, vec![0, 2, 4, 6]);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":133236,"byte_end":133276,"line_start":532,"line_end":532,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(odds, vec![1, 3, 5, 7]);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":133281,"byte_end":133320,"line_start":533,"line_end":533,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":133325,"byte_end":133332,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":133337,"byte_end":133346,"line_start":535,"line_end":535,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134003,"byte_end":134008,"line_start":559,"line_end":559,"column_start":12,"column_end":17},"name":"clear","qualname":"<HashMap<K, V, S>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-value pairs. Keeps the allocated memory\n for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-value pairs. Keeps the allocated memory","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":133612,"byte_end":133688,"line_start":544,"line_end":544,"column_start":5,"column_end":81}},{"value":"/ for reuse.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":133693,"byte_end":133707,"line_start":545,"line_end":545,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":133712,"byte_end":133715,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":133720,"byte_end":133734,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":133739,"byte_end":133742,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":133747,"byte_end":133754,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":133759,"byte_end":133793,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":133798,"byte_end":133801,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":133806,"byte_end":133837,"line_start":552,"line_end":552,"column_start":5,"column_end":36}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":133842,"byte_end":133863,"line_start":553,"line_end":553,"column_start":5,"column_end":26}},{"value":"/ a.clear();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":133868,"byte_end":133882,"line_start":554,"line_end":554,"column_start":5,"column_end":19}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":133887,"byte_end":133913,"line_start":555,"line_end":555,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":133918,"byte_end":133925,"line_start":556,"line_end":556,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":133982,"byte_end":133991,"line_start":558,"line_end":558,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134523,"byte_end":134529,"line_start":577,"line_end":577,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashMap<K, V, S>>::hasher","value":"pub fn hasher(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the map's [`BuildHasher`].","sig":null,"attributes":[{"value":"/ Returns a reference to the map's [`BuildHasher`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134060,"byte_end":134113,"line_start":563,"line_end":563,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134118,"byte_end":134121,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134126,"byte_end":134140,"line_start":565,"line_end":565,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134145,"byte_end":134148,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134153,"byte_end":134160,"line_start":567,"line_end":567,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134165,"byte_end":134199,"line_start":568,"line_end":568,"column_start":5,"column_end":39}},{"value":"/ use std::collections::hash_map::RandomState;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134204,"byte_end":134252,"line_start":569,"line_end":569,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134257,"byte_end":134260,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ let hasher = RandomState::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134265,"byte_end":134301,"line_start":571,"line_end":571,"column_start":5,"column_end":41}},{"value":"/ let map: HashMap<i32, i32> = HashMap::with_hasher(hasher);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134306,"byte_end":134368,"line_start":572,"line_end":572,"column_start":5,"column_end":67}},{"value":"/ let hasher: &RandomState = map.hasher();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134373,"byte_end":134417,"line_start":573,"line_end":573,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134422,"byte_end":134429,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134434,"byte_end":134443,"line_start":575,"line_end":575,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":135198,"byte_end":135205,"line_start":604,"line_end":604,"column_start":12,"column_end":19},"name":"reserve","qualname":"<HashMap<K, V, S>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more elements to be inserted\n in the `HashMap`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more elements to be inserted","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134662,"byte_end":134738,"line_start":587,"line_end":587,"column_start":5,"column_end":81}},{"value":"/ in the `HashMap`. The collection may reserve more space to avoid","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134743,"byte_end":134811,"line_start":588,"line_end":588,"column_start":5,"column_end":73}},{"value":"/ frequent reallocations.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134816,"byte_end":134843,"line_start":589,"line_end":589,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134848,"byte_end":134851,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134856,"byte_end":134868,"line_start":591,"line_end":591,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134873,"byte_end":134876,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Panics if the new allocation size overflows [`usize`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134881,"byte_end":134939,"line_start":593,"line_end":593,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134944,"byte_end":134947,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134952,"byte_end":134966,"line_start":595,"line_end":595,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134971,"byte_end":134974,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134979,"byte_end":134986,"line_start":597,"line_end":597,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134991,"byte_end":135025,"line_start":598,"line_end":598,"column_start":5,"column_end":39}},{"value":"/ let mut map: HashMap<&str, i32> = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":135030,"byte_end":135083,"line_start":599,"line_end":599,"column_start":5,"column_end":58}},{"value":"/ map.reserve(10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":135088,"byte_end":135108,"line_start":600,"line_end":600,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":135113,"byte_end":135120,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":135125,"byte_end":135134,"line_start":602,"line_end":602,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":136006,"byte_end":136017,"line_start":627,"line_end":627,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<HashMap<K, V, S>>::try_reserve","value":"pub fn try_reserve(&mut Self, usize) -> Result<(), TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to reserve capacity for at least `additional` more elements to be inserted\n in the given `HashMap<K,V>`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Tries to reserve capacity for at least `additional` more elements to be inserted","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":135287,"byte_end":135371,"line_start":608,"line_end":608,"column_start":5,"column_end":89}},{"value":"/ in the given `HashMap<K,V>`. The collection may reserve more space to avoid","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":135376,"byte_end":135455,"line_start":609,"line_end":609,"column_start":5,"column_end":84}},{"value":"/ frequent reallocations.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":135460,"byte_end":135487,"line_start":610,"line_end":610,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":135492,"byte_end":135495,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":135500,"byte_end":135512,"line_start":612,"line_end":612,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":135517,"byte_end":135520,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ If the capacity overflows, or the allocator reports a failure, then an error","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":135525,"byte_end":135605,"line_start":614,"line_end":614,"column_start":5,"column_end":85}},{"value":"/ is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":135610,"byte_end":135626,"line_start":615,"line_end":615,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":135631,"byte_end":135634,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":135639,"byte_end":135653,"line_start":617,"line_end":617,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":135658,"byte_end":135661,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":135666,"byte_end":135673,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/ #![feature(try_reserve)]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":135678,"byte_end":135706,"line_start":620,"line_end":620,"column_start":5,"column_end":33}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":135711,"byte_end":135745,"line_start":621,"line_end":621,"column_start":5,"column_end":39}},{"value":"/ let mut map: HashMap<&str, isize> = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":135750,"byte_end":135805,"line_start":622,"line_end":622,"column_start":5,"column_end":60}},{"value":"/ map.try_reserve(10).expect(\"why is the test harness OOMing on 10 bytes?\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":135810,"byte_end":135888,"line_start":623,"line_end":623,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":135893,"byte_end":135900,"line_start":624,"line_end":624,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":135905,"byte_end":135914,"line_start":625,"line_end":625,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":136795,"byte_end":136808,"line_start":649,"line_end":649,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<HashMap<K, V, S>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the map as much as possible. It will drop\n down as much as possible while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the map as much as possible. It will drop","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":136165,"byte_end":136234,"line_start":631,"line_end":631,"column_start":5,"column_end":74}},{"value":"/ down as much as possible while maintaining the internal rules","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":136239,"byte_end":136304,"line_start":632,"line_end":632,"column_start":5,"column_end":70}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":136309,"byte_end":136382,"line_start":633,"line_end":633,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":136387,"byte_end":136390,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":136395,"byte_end":136409,"line_start":635,"line_end":635,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":136414,"byte_end":136417,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":136422,"byte_end":136429,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":136434,"byte_end":136468,"line_start":638,"line_end":638,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":136473,"byte_end":136476,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = HashMap::with_capacity(100);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":136481,"byte_end":136546,"line_start":640,"line_end":640,"column_start":5,"column_end":70}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":136551,"byte_end":136572,"line_start":641,"line_end":641,"column_start":5,"column_end":26}},{"value":"/ map.insert(3, 4);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":136577,"byte_end":136598,"line_start":642,"line_end":642,"column_start":5,"column_end":26}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":136603,"byte_end":136638,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/ map.shrink_to_fit();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":136643,"byte_end":136667,"line_start":644,"line_end":644,"column_start":5,"column_end":29}},{"value":"/ assert!(map.capacity() >= 2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":136672,"byte_end":136705,"line_start":645,"line_end":645,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":136710,"byte_end":136717,"line_start":646,"line_end":646,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":136722,"byte_end":136731,"line_start":647,"line_end":647,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":137732,"byte_end":137741,"line_start":677,"line_end":677,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<HashMap<K, V, S>>::shrink_to","value":"pub fn shrink_to(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the map with a lower limit. It will drop\n down no lower than the supplied limit while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the map with a lower limit. It will drop","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":136868,"byte_end":136936,"line_start":653,"line_end":653,"column_start":5,"column_end":73}},{"value":"/ down no lower than the supplied limit while maintaining the internal rules","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":136941,"byte_end":137019,"line_start":654,"line_end":654,"column_start":5,"column_end":83}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":137024,"byte_end":137097,"line_start":655,"line_end":655,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":137102,"byte_end":137105,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ Panics if the current capacity is smaller than the supplied","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":137110,"byte_end":137173,"line_start":657,"line_end":657,"column_start":5,"column_end":68}},{"value":"/ minimum capacity.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":137178,"byte_end":137199,"line_start":658,"line_end":658,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":137204,"byte_end":137207,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":137212,"byte_end":137226,"line_start":660,"line_end":660,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":137231,"byte_end":137234,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":137239,"byte_end":137246,"line_start":662,"line_end":662,"column_start":5,"column_end":12}},{"value":"/ #![feature(shrink_to)]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":137251,"byte_end":137277,"line_start":663,"line_end":663,"column_start":5,"column_end":31}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":137282,"byte_end":137316,"line_start":664,"line_end":664,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":137321,"byte_end":137324,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = HashMap::with_capacity(100);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":137329,"byte_end":137394,"line_start":666,"line_end":666,"column_start":5,"column_end":70}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":137399,"byte_end":137420,"line_start":667,"line_end":667,"column_start":5,"column_end":26}},{"value":"/ map.insert(3, 4);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":137425,"byte_end":137446,"line_start":668,"line_end":668,"column_start":5,"column_end":26}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":137451,"byte_end":137486,"line_start":669,"line_end":669,"column_start":5,"column_end":40}},{"value":"/ map.shrink_to(10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":137491,"byte_end":137513,"line_start":670,"line_end":670,"column_start":5,"column_end":27}},{"value":"/ assert!(map.capacity() >= 10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":137518,"byte_end":137552,"line_start":671,"line_end":671,"column_start":5,"column_end":39}},{"value":"/ map.shrink_to(0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":137557,"byte_end":137578,"line_start":672,"line_end":672,"column_start":5,"column_end":26}},{"value":"/ assert!(map.capacity() >= 2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":137583,"byte_end":137616,"line_start":673,"line_end":673,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":137621,"byte_end":137628,"line_start":674,"line_end":674,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":137633,"byte_end":137642,"line_start":675,"line_end":675,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138554,"byte_end":138559,"line_start":703,"line_end":703,"column_start":12,"column_end":17},"name":"entry","qualname":"<HashMap<K, V, S>>::entry","value":"pub fn entry(&mut Self, K) -> Entry<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry in the map for in-place manipulation.","sig":null,"attributes":[{"value":"/ Gets the given key's corresponding entry in the map for in-place manipulation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":137920,"byte_end":138002,"line_start":682,"line_end":682,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138007,"byte_end":138010,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138015,"byte_end":138029,"line_start":684,"line_end":684,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138034,"byte_end":138037,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138042,"byte_end":138049,"line_start":686,"line_end":686,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138054,"byte_end":138088,"line_start":687,"line_end":687,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138093,"byte_end":138096,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ let mut letters = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138101,"byte_end":138138,"line_start":689,"line_end":689,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138143,"byte_end":138146,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ for ch in \"a short treatise on fungi\".chars() {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138151,"byte_end":138202,"line_start":691,"line_end":691,"column_start":5,"column_end":56}},{"value":"/     let counter = letters.entry(ch).or_insert(0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138207,"byte_end":138260,"line_start":692,"line_end":692,"column_start":5,"column_end":58}},{"value":"/     *counter += 1;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138265,"byte_end":138287,"line_start":693,"line_end":693,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138292,"byte_end":138297,"line_start":694,"line_end":694,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138302,"byte_end":138305,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(letters[&'s'], 2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138310,"byte_end":138343,"line_start":696,"line_end":696,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(letters[&'t'], 3);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138348,"byte_end":138381,"line_start":697,"line_end":697,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(letters[&'u'], 1);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138386,"byte_end":138419,"line_start":698,"line_end":698,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(letters.get(&'y'), None);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138424,"byte_end":138464,"line_start":699,"line_end":699,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138469,"byte_end":138476,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138481,"byte_end":138490,"line_start":701,"line_end":701,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":139223,"byte_end":139226,"line_start":725,"line_end":725,"column_start":12,"column_end":15},"name":"get","qualname":"<HashMap<K, V, S>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&V> where K: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a reference to the value corresponding to the key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138657,"byte_end":138719,"line_start":707,"line_end":707,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138724,"byte_end":138727,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138732,"byte_end":138795,"line_start":709,"line_end":709,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138800,"byte_end":138867,"line_start":710,"line_end":710,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138872,"byte_end":138889,"line_start":711,"line_end":711,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138894,"byte_end":138897,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138902,"byte_end":138916,"line_start":713,"line_end":713,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138921,"byte_end":138924,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138929,"byte_end":138936,"line_start":715,"line_end":715,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138941,"byte_end":138975,"line_start":716,"line_end":716,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138980,"byte_end":138983,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":138988,"byte_end":139021,"line_start":718,"line_end":718,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":139026,"byte_end":139049,"line_start":719,"line_end":719,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.get(&1), Some(&\"a\"));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":139054,"byte_end":139094,"line_start":720,"line_end":720,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map.get(&2), None);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":139099,"byte_end":139133,"line_start":721,"line_end":721,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":139138,"byte_end":139145,"line_start":722,"line_end":722,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":139202,"byte_end":139211,"line_start":724,"line_end":724,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":139979,"byte_end":139992,"line_start":751,"line_end":751,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<HashMap<K, V, S>>::get_key_value","value":"pub fn get_key_value<Q: ?Sized>(&Self, &Q) -> Option<(&K, &V)> where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns the key-value pair corresponding to the supplied key.","sig":null,"attributes":[{"value":"/ Returns the key-value pair corresponding to the supplied key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":139362,"byte_end":139427,"line_start":733,"line_end":733,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":139432,"byte_end":139435,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ The supplied key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":139440,"byte_end":139512,"line_start":735,"line_end":735,"column_start":5,"column_end":77}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":139517,"byte_end":139584,"line_start":736,"line_end":736,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":139589,"byte_end":139606,"line_start":737,"line_end":737,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":139611,"byte_end":139614,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":139619,"byte_end":139633,"line_start":739,"line_end":739,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":139638,"byte_end":139641,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":139646,"byte_end":139653,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":139658,"byte_end":139692,"line_start":742,"line_end":742,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":139697,"byte_end":139700,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":139705,"byte_end":139738,"line_start":744,"line_end":744,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":139743,"byte_end":139766,"line_start":745,"line_end":745,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.get_key_value(&1), Some((&1, &\"a\")));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":139771,"byte_end":139827,"line_start":746,"line_end":746,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(map.get_key_value(&2), None);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":139832,"byte_end":139876,"line_start":747,"line_end":747,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":139881,"byte_end":139888,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":139958,"byte_end":139967,"line_start":750,"line_end":750,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":140730,"byte_end":140742,"line_start":777,"line_end":777,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<HashMap<K, V, S>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a value for the specified key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":140144,"byte_end":140213,"line_start":759,"line_end":759,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":140218,"byte_end":140221,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":140226,"byte_end":140289,"line_start":761,"line_end":761,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":140294,"byte_end":140361,"line_start":762,"line_end":762,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":140366,"byte_end":140383,"line_start":763,"line_end":763,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":140388,"byte_end":140391,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":140396,"byte_end":140410,"line_start":765,"line_end":765,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":140415,"byte_end":140418,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":140423,"byte_end":140430,"line_start":767,"line_end":767,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":140435,"byte_end":140469,"line_start":768,"line_end":768,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":140474,"byte_end":140477,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":140482,"byte_end":140515,"line_start":770,"line_end":770,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":140520,"byte_end":140543,"line_start":771,"line_end":771,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":140548,"byte_end":140591,"line_start":772,"line_end":772,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":140596,"byte_end":140640,"line_start":773,"line_end":773,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":140645,"byte_end":140652,"line_start":774,"line_end":774,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":140709,"byte_end":140718,"line_start":776,"line_end":776,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":141480,"byte_end":141487,"line_start":805,"line_end":805,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<HashMap<K, V, S>>::get_mut","value":"pub fn get_mut<Q: ?Sized>(&mut Self, &Q) -> Option<&mut V> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value corresponding to the key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":140881,"byte_end":140951,"line_start":785,"line_end":785,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":140956,"byte_end":140959,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":140964,"byte_end":141027,"line_start":787,"line_end":787,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":141032,"byte_end":141099,"line_start":788,"line_end":788,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":141104,"byte_end":141121,"line_start":789,"line_end":789,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":141126,"byte_end":141129,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":141134,"byte_end":141148,"line_start":791,"line_end":791,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":141153,"byte_end":141156,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":141161,"byte_end":141168,"line_start":793,"line_end":793,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":141173,"byte_end":141207,"line_start":794,"line_end":794,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":141212,"byte_end":141215,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":141220,"byte_end":141253,"line_start":796,"line_end":796,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":141258,"byte_end":141281,"line_start":797,"line_end":797,"column_start":5,"column_end":28}},{"value":"/ if let Some(x) = map.get_mut(&1) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":141286,"byte_end":141324,"line_start":798,"line_end":798,"column_start":5,"column_end":43}},{"value":"/     *x = \"b\";","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":141329,"byte_end":141346,"line_start":799,"line_end":799,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":141351,"byte_end":141356,"line_start":800,"line_end":800,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[&1], \"b\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":141361,"byte_end":141390,"line_start":801,"line_end":801,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":141395,"byte_end":141402,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":141459,"byte_end":141468,"line_start":804,"line_end":804,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142557,"byte_end":142563,"line_start":839,"line_end":839,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashMap<K, V, S>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the map.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":141635,"byte_end":141677,"line_start":813,"line_end":813,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":141682,"byte_end":141685,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, [`None`] is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":141690,"byte_end":141757,"line_start":815,"line_end":815,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":141762,"byte_end":141765,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the value is updated, and the old","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":141770,"byte_end":141845,"line_start":817,"line_end":817,"column_start":5,"column_end":80}},{"value":"/ value is returned. The key is not updated, though; this matters for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":141850,"byte_end":141921,"line_start":818,"line_end":818,"column_start":5,"column_end":76}},{"value":"/ types that can be `==` without being identical. See the [module-level","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":141926,"byte_end":141999,"line_start":819,"line_end":819,"column_start":5,"column_end":78}},{"value":"/ documentation] for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142004,"byte_end":142032,"line_start":820,"line_end":820,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142037,"byte_end":142040,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ [module-level documentation]: crate::collections#insert-and-complex-keys","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142045,"byte_end":142121,"line_start":822,"line_end":822,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142126,"byte_end":142129,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142134,"byte_end":142148,"line_start":824,"line_end":824,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142153,"byte_end":142156,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142161,"byte_end":142168,"line_start":826,"line_end":826,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142173,"byte_end":142207,"line_start":827,"line_end":827,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142212,"byte_end":142215,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142220,"byte_end":142253,"line_start":829,"line_end":829,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(map.insert(37, \"a\"), None);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142258,"byte_end":142300,"line_start":830,"line_end":830,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.is_empty(), false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142305,"byte_end":142343,"line_start":831,"line_end":831,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142348,"byte_end":142351,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, \"b\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142356,"byte_end":142380,"line_start":833,"line_end":833,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(map.insert(37, \"c\"), Some(\"b\"));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142385,"byte_end":142432,"line_start":834,"line_end":834,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(map[&37], \"c\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142437,"byte_end":142467,"line_start":835,"line_end":835,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142472,"byte_end":142479,"line_start":836,"line_end":836,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142536,"byte_end":142545,"line_start":838,"line_end":838,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143261,"byte_end":143267,"line_start":862,"line_end":862,"column_start":12,"column_end":18},"name":"remove","qualname":"<HashMap<K, V, S>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the value at the key if the key\n was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the value at the key if the key","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142644,"byte_end":142717,"line_start":843,"line_end":843,"column_start":5,"column_end":78}},{"value":"/ was previously in the map.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142722,"byte_end":142752,"line_start":844,"line_end":844,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142757,"byte_end":142760,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142765,"byte_end":142828,"line_start":846,"line_end":846,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142833,"byte_end":142900,"line_start":847,"line_end":847,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142905,"byte_end":142922,"line_start":848,"line_end":848,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142927,"byte_end":142930,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142935,"byte_end":142949,"line_start":850,"line_end":850,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142954,"byte_end":142957,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142962,"byte_end":142969,"line_start":852,"line_end":852,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":142974,"byte_end":143008,"line_start":853,"line_end":853,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143013,"byte_end":143016,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143021,"byte_end":143054,"line_start":855,"line_end":855,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143059,"byte_end":143082,"line_start":856,"line_end":856,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.remove(&1), Some(\"a\"));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143087,"byte_end":143129,"line_start":857,"line_end":857,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.remove(&1), None);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143134,"byte_end":143171,"line_start":858,"line_end":858,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143176,"byte_end":143183,"line_start":859,"line_end":859,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143240,"byte_end":143249,"line_start":861,"line_end":861,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":144092,"byte_end":144104,"line_start":891,"line_end":891,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<HashMap<K, V, S>>::remove_entry","value":"pub fn remove_entry<Q: ?Sized>(&mut Self, &Q) -> Option<(K, V)> where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stored key and value if the\n key was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the stored key and value if the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143409,"byte_end":143482,"line_start":870,"line_end":870,"column_start":5,"column_end":78}},{"value":"/ key was previously in the map.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143487,"byte_end":143521,"line_start":871,"line_end":871,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143526,"byte_end":143529,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143534,"byte_end":143597,"line_start":873,"line_end":873,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143602,"byte_end":143669,"line_start":874,"line_end":874,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143674,"byte_end":143691,"line_start":875,"line_end":875,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143696,"byte_end":143699,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143704,"byte_end":143718,"line_start":877,"line_end":877,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143723,"byte_end":143726,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143731,"byte_end":143738,"line_start":879,"line_end":879,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143743,"byte_end":143777,"line_start":880,"line_end":880,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143782,"byte_end":143785,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143790,"byte_end":143807,"line_start":882,"line_end":882,"column_start":5,"column_end":22}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143812,"byte_end":143845,"line_start":883,"line_end":883,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143850,"byte_end":143873,"line_start":884,"line_end":884,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.remove_entry(&1), Some((1, \"a\")));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143878,"byte_end":143931,"line_start":885,"line_end":885,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.remove(&1), None);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143936,"byte_end":143973,"line_start":886,"line_end":886,"column_start":5,"column_end":42}},{"value":"/ # }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143978,"byte_end":143985,"line_start":887,"line_end":887,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":143990,"byte_end":143997,"line_start":888,"line_end":888,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":144071,"byte_end":144080,"line_start":890,"line_end":890,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":144767,"byte_end":144773,"line_start":914,"line_end":914,"column_start":12,"column_end":18},"name":"retain","qualname":"<HashMap<K, V, S>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&K, &mut V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[{"value":"/ Retains only the elements specified by the predicate.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":144257,"byte_end":144314,"line_start":899,"line_end":899,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":144319,"byte_end":144322,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ In other words, remove all pairs `(k, v)` such that `f(&k,&mut v)` returns `false`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":144327,"byte_end":144414,"line_start":901,"line_end":901,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":144419,"byte_end":144422,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":144427,"byte_end":144441,"line_start":903,"line_end":903,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":144446,"byte_end":144449,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":144454,"byte_end":144461,"line_start":905,"line_end":905,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":144466,"byte_end":144500,"line_start":906,"line_end":906,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":144505,"byte_end":144508,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = (0..8).map(|x|(x, x*10)).collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":144513,"byte_end":144585,"line_start":908,"line_end":908,"column_start":5,"column_end":77}},{"value":"/ map.retain(|&k, _| k % 2 == 0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":144590,"byte_end":144625,"line_start":909,"line_end":909,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(map.len(), 4);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":144630,"byte_end":144659,"line_start":910,"line_end":910,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":144664,"byte_end":144671,"line_start":911,"line_end":911,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":144746,"byte_end":144755,"line_start":913,"line_end":913,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145483,"byte_end":145492,"line_start":940,"line_end":940,"column_start":12,"column_end":21},"name":"into_keys","qualname":"<HashMap<K, V, S>>::into_keys","value":"pub fn into_keys(Self) -> IntoKeys<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates a consuming iterator visiting all the keys in arbitrary order.\n The map cannot be used after calling this.\n The iterator element type is `K`.","sig":null,"attributes":[{"value":"/ Creates a consuming iterator visiting all the keys in arbitrary order.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":144887,"byte_end":144961,"line_start":921,"line_end":921,"column_start":5,"column_end":79}},{"value":"/ The map cannot be used after calling this.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":144966,"byte_end":145012,"line_start":922,"line_end":922,"column_start":5,"column_end":51}},{"value":"/ The iterator element type is `K`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145017,"byte_end":145054,"line_start":923,"line_end":923,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145059,"byte_end":145062,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145067,"byte_end":145081,"line_start":925,"line_end":925,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145086,"byte_end":145089,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145094,"byte_end":145101,"line_start":927,"line_end":927,"column_start":5,"column_end":12}},{"value":"/ #![feature(map_into_keys_values)]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145106,"byte_end":145143,"line_start":928,"line_end":928,"column_start":5,"column_end":42}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145148,"byte_end":145182,"line_start":929,"line_end":929,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145187,"byte_end":145190,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145195,"byte_end":145228,"line_start":931,"line_end":931,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145233,"byte_end":145256,"line_start":932,"line_end":932,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145261,"byte_end":145284,"line_start":933,"line_end":933,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145289,"byte_end":145312,"line_start":934,"line_end":934,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145317,"byte_end":145320,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ let vec: Vec<&str> = map.into_keys().collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145325,"byte_end":145376,"line_start":936,"line_end":936,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145381,"byte_end":145388,"line_start":937,"line_end":937,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145393,"byte_end":145402,"line_start":938,"line_end":938,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":146174,"byte_end":146185,"line_start":963,"line_end":963,"column_start":12,"column_end":23},"name":"into_values","qualname":"<HashMap<K, V, S>>::into_values","value":"pub fn into_values(Self) -> IntoValues<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates a consuming iterator visiting all the values in arbitrary order.\n The map cannot be used after calling this.\n The iterator element type is `V`.","sig":null,"attributes":[{"value":"/ Creates a consuming iterator visiting all the values in arbitrary order.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145575,"byte_end":145651,"line_start":944,"line_end":944,"column_start":5,"column_end":81}},{"value":"/ The map cannot be used after calling this.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145656,"byte_end":145702,"line_start":945,"line_end":945,"column_start":5,"column_end":51}},{"value":"/ The iterator element type is `V`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145707,"byte_end":145744,"line_start":946,"line_end":946,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145749,"byte_end":145752,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145757,"byte_end":145771,"line_start":948,"line_end":948,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145776,"byte_end":145779,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145784,"byte_end":145791,"line_start":950,"line_end":950,"column_start":5,"column_end":12}},{"value":"/ #![feature(map_into_keys_values)]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145796,"byte_end":145833,"line_start":951,"line_end":951,"column_start":5,"column_end":42}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145838,"byte_end":145872,"line_start":952,"line_end":952,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145877,"byte_end":145880,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145885,"byte_end":145918,"line_start":954,"line_end":954,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145923,"byte_end":145946,"line_start":955,"line_end":955,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145951,"byte_end":145974,"line_start":956,"line_end":956,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":145979,"byte_end":146002,"line_start":957,"line_end":957,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":146007,"byte_end":146010,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ let vec: Vec<i32> = map.into_values().collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":146015,"byte_end":146067,"line_start":959,"line_end":959,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":146072,"byte_end":146079,"line_start":960,"line_end":960,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":146084,"byte_end":146093,"line_start":961,"line_end":961,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":148301,"byte_end":148314,"line_start":1005,"line_end":1005,"column_start":12,"column_end":25},"name":"raw_entry_mut","qualname":"<HashMap<K, V, S>>::raw_entry_mut","value":"pub fn raw_entry_mut(&mut Self) -> RawEntryBuilderMut<, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a raw entry builder for the HashMap.","sig":null,"attributes":[{"value":"/ Creates a raw entry builder for the HashMap.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":146333,"byte_end":146381,"line_start":972,"line_end":972,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":146386,"byte_end":146389,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ Raw entries provide the lowest level of control for searching and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":146394,"byte_end":146463,"line_start":974,"line_end":974,"column_start":5,"column_end":74}},{"value":"/ manipulating a map. They must be manually initialized with a hash and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":146468,"byte_end":146541,"line_start":975,"line_end":975,"column_start":5,"column_end":78}},{"value":"/ then manually searched. After this, insertions into a vacant entry","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":146546,"byte_end":146616,"line_start":976,"line_end":976,"column_start":5,"column_end":75}},{"value":"/ still require an owned key to be provided.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":146621,"byte_end":146667,"line_start":977,"line_end":977,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":146672,"byte_end":146675,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ Raw entries are useful for such exotic situations as:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":146680,"byte_end":146737,"line_start":979,"line_end":979,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":146742,"byte_end":146745,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ * Hash memoization","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":146750,"byte_end":146772,"line_start":981,"line_end":981,"column_start":5,"column_end":27}},{"value":"/ * Deferring the creation of an owned key until it is known to be required","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":146777,"byte_end":146854,"line_start":982,"line_end":982,"column_start":5,"column_end":82}},{"value":"/ * Using a search key that doesn't work with the Borrow trait","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":146859,"byte_end":146923,"line_start":983,"line_end":983,"column_start":5,"column_end":69}},{"value":"/ * Using custom comparison logic without newtype wrappers","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":146928,"byte_end":146988,"line_start":984,"line_end":984,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":146993,"byte_end":146996,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ Because raw entries provide much more low-level control, it's much easier","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":147001,"byte_end":147078,"line_start":986,"line_end":986,"column_start":5,"column_end":82}},{"value":"/ to put the HashMap into an inconsistent state which, while memory-safe,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":147083,"byte_end":147158,"line_start":987,"line_end":987,"column_start":5,"column_end":80}},{"value":"/ will cause the map to produce seemingly random results. Higher-level and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":147163,"byte_end":147239,"line_start":988,"line_end":988,"column_start":5,"column_end":81}},{"value":"/ more foolproof APIs like `entry` should be preferred when possible.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":147244,"byte_end":147315,"line_start":989,"line_end":989,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":147320,"byte_end":147323,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ In particular, the hash used to initialized the raw entry must still be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":147328,"byte_end":147403,"line_start":991,"line_end":991,"column_start":5,"column_end":80}},{"value":"/ consistent with the hash of the key that is ultimately stored in the entry.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":147408,"byte_end":147487,"line_start":992,"line_end":992,"column_start":5,"column_end":84}},{"value":"/ This is because implementations of HashMap may need to recompute hashes","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":147492,"byte_end":147567,"line_start":993,"line_end":993,"column_start":5,"column_end":80}},{"value":"/ when resizing, at which point only the keys are available.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":147572,"byte_end":147634,"line_start":994,"line_end":994,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":147639,"byte_end":147642,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ Raw entries give mutable access to the keys. This must not be used","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":147647,"byte_end":147717,"line_start":996,"line_end":996,"column_start":5,"column_end":75}},{"value":"/ to modify how the key would compare or hash, as the map will not re-evaluate","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":147722,"byte_end":147802,"line_start":997,"line_end":997,"column_start":5,"column_end":85}},{"value":"/ where the key should go, meaning the keys may become \"lost\" if their","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":147807,"byte_end":147879,"line_start":998,"line_end":998,"column_start":5,"column_end":77}},{"value":"/ location does not reflect their state. For instance, if you change a key","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":147884,"byte_end":147960,"line_start":999,"line_end":999,"column_start":5,"column_end":81}},{"value":"/ so that the map now contains keys which compare equal, search may start","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":147965,"byte_end":148040,"line_start":1000,"line_end":1000,"column_start":5,"column_end":80}},{"value":"/ acting erratically, with two keys randomly masking each other. Implementations","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":148045,"byte_end":148127,"line_start":1001,"line_end":1001,"column_start":5,"column_end":87}},{"value":"/ are free to assume this doesn't happen (within the limits of memory-safety).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":148132,"byte_end":148212,"line_start":1002,"line_end":1002,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":148217,"byte_end":148226,"line_start":1003,"line_end":1003,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":149180,"byte_end":149189,"line_start":1026,"line_end":1026,"column_start":12,"column_end":21},"name":"raw_entry","qualname":"<HashMap<K, V, S>>::raw_entry","value":"pub fn raw_entry(&Self) -> RawEntryBuilder<, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a raw immutable entry builder for the HashMap.","sig":null,"attributes":[{"value":"/ Creates a raw immutable entry builder for the HashMap.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":148415,"byte_end":148473,"line_start":1009,"line_end":1009,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":148478,"byte_end":148481,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ Raw entries provide the lowest level of control for searching and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":148486,"byte_end":148555,"line_start":1011,"line_end":1011,"column_start":5,"column_end":74}},{"value":"/ manipulating a map. They must be manually initialized with a hash and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":148560,"byte_end":148633,"line_start":1012,"line_end":1012,"column_start":5,"column_end":78}},{"value":"/ then manually searched.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":148638,"byte_end":148665,"line_start":1013,"line_end":1013,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":148670,"byte_end":148673,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ This is useful for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":148678,"byte_end":148700,"line_start":1015,"line_end":1015,"column_start":5,"column_end":27}},{"value":"/ * Hash memoization","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":148705,"byte_end":148727,"line_start":1016,"line_end":1016,"column_start":5,"column_end":27}},{"value":"/ * Using a search key that doesn't work with the Borrow trait","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":148732,"byte_end":148796,"line_start":1017,"line_end":1017,"column_start":5,"column_end":69}},{"value":"/ * Using custom comparison logic without newtype wrappers","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":148801,"byte_end":148861,"line_start":1018,"line_end":1018,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":148866,"byte_end":148869,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ Unless you are in such a situation, higher-level and more foolproof APIs like","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":148874,"byte_end":148955,"line_start":1020,"line_end":1020,"column_start":5,"column_end":86}},{"value":"/ `get` should be preferred.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":148960,"byte_end":148990,"line_start":1021,"line_end":1021,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":148995,"byte_end":148998,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ Immutable raw entries have very limited use; you might instead want `raw_entry_mut`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":149003,"byte_end":149091,"line_start":1023,"line_end":1023,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":149096,"byte_end":149105,"line_start":1024,"line_end":1024,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":521},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":151100,"byte_end":151104,"line_start":1106,"line_end":1106,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::hash::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":525}],"decl_id":null,"docs":" An iterator over the entries of a `HashMap`.","sig":null,"attributes":[{"value":"/ An iterator over the entries of a `HashMap`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":150852,"byte_end":150900,"line_start":1099,"line_end":1099,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":150901,"byte_end":150904,"line_start":1100,"line_end":1100,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`HashMap`]. See its","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":150905,"byte_end":150980,"line_start":1101,"line_end":1101,"column_start":1,"column_end":76}},{"value":"/ documentation for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":150981,"byte_end":151008,"line_start":1102,"line_end":1102,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":151009,"byte_end":151012,"line_start":1103,"line_end":1103,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: HashMap::iter","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":151013,"byte_end":151040,"line_start":1104,"line_end":1104,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":534},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":151898,"byte_end":151905,"line_start":1133,"line_end":1133,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::hash::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":538}],"decl_id":null,"docs":" A mutable iterator over the entries of a `HashMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the entries of a `HashMap`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":151631,"byte_end":151686,"line_start":1126,"line_end":1126,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":151687,"byte_end":151690,"line_start":1127,"line_end":1127,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter_mut`] method on [`HashMap`]. See its","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":151691,"byte_end":151770,"line_start":1128,"line_end":1128,"column_start":1,"column_end":80}},{"value":"/ documentation for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":151771,"byte_end":151798,"line_start":1129,"line_end":1129,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":151799,"byte_end":151802,"line_start":1130,"line_end":1130,"column_start":1,"column_end":4}},{"value":"/ [`iter_mut`]: HashMap::iter_mut","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":151803,"byte_end":151838,"line_start":1131,"line_end":1131,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":544},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":152499,"byte_end":152507,"line_start":1152,"line_end":1152,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::hash::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":547}],"decl_id":null,"docs":" An owning iterator over the entries of a `HashMap`.","sig":null,"attributes":[{"value":"/ An owning iterator over the entries of a `HashMap`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":152185,"byte_end":152240,"line_start":1145,"line_end":1145,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":152241,"byte_end":152244,"line_start":1146,"line_end":1146,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`HashMap`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":152245,"byte_end":152316,"line_start":1147,"line_end":1147,"column_start":1,"column_end":72}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":152317,"byte_end":152392,"line_start":1148,"line_end":1148,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":152393,"byte_end":152396,"line_start":1149,"line_end":1149,"column_start":1,"column_end":4}},{"value":"/ [`into_iter`]: IntoIterator::into_iter","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":152397,"byte_end":152439,"line_start":1150,"line_end":1150,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":552},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":153010,"byte_end":153014,"line_start":1171,"line_end":1171,"column_start":12,"column_end":16},"name":"Keys","qualname":"::collections::hash::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":556}],"decl_id":null,"docs":" An iterator over the keys of a `HashMap`.","sig":null,"attributes":[{"value":"/ An iterator over the keys of a `HashMap`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":152765,"byte_end":152810,"line_start":1164,"line_end":1164,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":152811,"byte_end":152814,"line_start":1165,"line_end":1165,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`keys`] method on [`HashMap`]. See its","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":152815,"byte_end":152890,"line_start":1166,"line_end":1166,"column_start":1,"column_end":76}},{"value":"/ documentation for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":152891,"byte_end":152918,"line_start":1167,"line_end":1167,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":152919,"byte_end":152922,"line_start":1168,"line_end":1168,"column_start":1,"column_end":4}},{"value":"/ [`keys`]: HashMap::keys","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":152923,"byte_end":152950,"line_start":1169,"line_end":1169,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":565},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":153784,"byte_end":153790,"line_start":1198,"line_end":1198,"column_start":12,"column_end":18},"name":"Values","qualname":"::collections::hash::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":569}],"decl_id":null,"docs":" An iterator over the values of a `HashMap`.","sig":null,"attributes":[{"value":"/ An iterator over the values of a `HashMap`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":153531,"byte_end":153578,"line_start":1191,"line_end":1191,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":153579,"byte_end":153582,"line_start":1192,"line_end":1192,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values`] method on [`HashMap`]. See its","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":153583,"byte_end":153660,"line_start":1193,"line_end":1193,"column_start":1,"column_end":78}},{"value":"/ documentation for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":153661,"byte_end":153688,"line_start":1194,"line_end":1194,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":153689,"byte_end":153692,"line_start":1195,"line_end":1195,"column_start":1,"column_end":4}},{"value":"/ [`values`]: HashMap::values","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":153693,"byte_end":153724,"line_start":1196,"line_end":1196,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":578},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":154572,"byte_end":154577,"line_start":1225,"line_end":1225,"column_start":12,"column_end":17},"name":"Drain","qualname":"::collections::hash::map::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":582}],"decl_id":null,"docs":" A draining iterator over the entries of a `HashMap`.","sig":null,"attributes":[{"value":"/ A draining iterator over the entries of a `HashMap`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":154313,"byte_end":154369,"line_start":1218,"line_end":1218,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":154370,"byte_end":154373,"line_start":1219,"line_end":1219,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`HashMap`]. See its","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":154374,"byte_end":154450,"line_start":1220,"line_end":1220,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":154451,"byte_end":154478,"line_start":1221,"line_end":1221,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":154479,"byte_end":154482,"line_start":1222,"line_end":1222,"column_start":1,"column_end":4}},{"value":"/ [`drain`]: HashMap::drain","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":154483,"byte_end":154512,"line_start":1223,"line_end":1223,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":588},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":155122,"byte_end":155133,"line_start":1243,"line_end":1243,"column_start":12,"column_end":23},"name":"DrainFilter","qualname":"::collections::hash::map::DrainFilter","value":"DrainFilter {  }","parent":null,"children":[{"krate":0,"index":593}],"decl_id":null,"docs":" A draining, filtering iterator over the entries of a `HashMap`.","sig":null,"attributes":[{"value":"/ A draining, filtering iterator over the entries of a `HashMap`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":154853,"byte_end":154920,"line_start":1237,"line_end":1237,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":154921,"byte_end":154924,"line_start":1238,"line_end":1238,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain_filter`] method on [`HashMap`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":154925,"byte_end":155000,"line_start":1239,"line_end":1239,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":155001,"byte_end":155004,"line_start":1240,"line_end":1240,"column_start":1,"column_end":4}},{"value":"/ [`drain_filter`]: HashMap::drain_filter","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":155005,"byte_end":155048,"line_start":1241,"line_end":1241,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":594},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":155516,"byte_end":155525,"line_start":1257,"line_end":1257,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::collections::hash::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":598}],"decl_id":null,"docs":" A mutable iterator over the values of a `HashMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the values of a `HashMap`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":155234,"byte_end":155288,"line_start":1250,"line_end":1250,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":155289,"byte_end":155292,"line_start":1251,"line_end":1251,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values_mut`] method on [`HashMap`]. See its","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":155293,"byte_end":155374,"line_start":1252,"line_end":1252,"column_start":1,"column_end":82}},{"value":"/ documentation for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":155375,"byte_end":155402,"line_start":1253,"line_end":1253,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":155403,"byte_end":155406,"line_start":1254,"line_end":1254,"column_start":1,"column_end":4}},{"value":"/ [`values_mut`]: HashMap::values_mut","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":155407,"byte_end":155446,"line_start":1255,"line_end":1255,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":599},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":155863,"byte_end":155871,"line_start":1268,"line_end":1268,"column_start":12,"column_end":20},"name":"IntoKeys","qualname":"::collections::hash::map::IntoKeys","value":"IntoKeys {  }","parent":null,"children":[{"krate":0,"index":602}],"decl_id":null,"docs":" An owning iterator over the keys of a `HashMap`.","sig":null,"attributes":[{"value":"/ An owning iterator over the keys of a `HashMap`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":155579,"byte_end":155631,"line_start":1261,"line_end":1261,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":155632,"byte_end":155635,"line_start":1262,"line_end":1262,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_keys`] method on [`HashMap`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":155636,"byte_end":155708,"line_start":1263,"line_end":1263,"column_start":1,"column_end":73}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":155709,"byte_end":155744,"line_start":1264,"line_end":1264,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":155745,"byte_end":155748,"line_start":1265,"line_end":1265,"column_start":1,"column_end":4}},{"value":"/ [`into_keys`]: HashMap::into_keys","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":155749,"byte_end":155786,"line_start":1266,"line_end":1266,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":603},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":156202,"byte_end":156212,"line_start":1279,"line_end":1279,"column_start":12,"column_end":22},"name":"IntoValues","qualname":"::collections::hash::map::IntoValues","value":"IntoValues {  }","parent":null,"children":[{"krate":0,"index":606}],"decl_id":null,"docs":" An owning iterator over the values of a `HashMap`.","sig":null,"attributes":[{"value":"/ An owning iterator over the values of a `HashMap`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":155910,"byte_end":155964,"line_start":1272,"line_end":1272,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":155965,"byte_end":155968,"line_start":1273,"line_end":1273,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_values`] method on [`HashMap`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":155969,"byte_end":156043,"line_start":1274,"line_end":1274,"column_start":1,"column_end":75}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":156044,"byte_end":156079,"line_start":1275,"line_end":1275,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":156080,"byte_end":156083,"line_start":1276,"line_end":1276,"column_start":1,"column_end":4}},{"value":"/ [`into_values`]: HashMap::into_values","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":156084,"byte_end":156125,"line_start":1277,"line_end":1277,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":607},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":156530,"byte_end":156548,"line_start":1290,"line_end":1290,"column_start":12,"column_end":30},"name":"RawEntryBuilderMut","qualname":"::collections::hash::map::RawEntryBuilderMut","value":"RawEntryBuilderMut {  }","parent":null,"children":[{"krate":0,"index":612}],"decl_id":null,"docs":" A builder for computing where in a HashMap a key-value pair would be stored.","sig":null,"attributes":[{"value":"/ A builder for computing where in a HashMap a key-value pair would be stored.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":156251,"byte_end":156331,"line_start":1283,"line_end":1283,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":156332,"byte_end":156335,"line_start":1284,"line_end":1284,"column_start":1,"column_end":4}},{"value":"/ See the [`HashMap::raw_entry_mut`] docs for usage examples.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":156336,"byte_end":156399,"line_start":1285,"line_end":1285,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":156400,"byte_end":156403,"line_start":1286,"line_end":1286,"column_start":1,"column_end":4}},{"value":"/ [`HashMap::raw_entry_mut`]: HashMap::raw_entry_mut","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":156404,"byte_end":156458,"line_start":1287,"line_end":1287,"column_start":1,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":618},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":157181,"byte_end":157189,"line_start":1307,"line_end":1307,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::collections::hash::map::RawEntryMut::Occupied","value":"RawEntryMut::Occupied(RawOccupiedEntryMut)","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" An occupied entry.\n","sig":null,"attributes":[{"value":"/ An occupied entry.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":157154,"byte_end":157176,"line_start":1306,"line_end":1306,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":621},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":157253,"byte_end":157259,"line_start":1309,"line_end":1309,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::collections::hash::map::RawEntryMut::Vacant","value":"RawEntryMut::Vacant(RawVacantEntryMut)","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" A vacant entry.\n","sig":null,"attributes":[{"value":"/ A vacant entry.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":157229,"byte_end":157248,"line_start":1308,"line_end":1308,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":613},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":157111,"byte_end":157122,"line_start":1305,"line_end":1305,"column_start":10,"column_end":21},"name":"RawEntryMut","qualname":"::collections::hash::map::RawEntryMut","value":"pub enum RawEntryMut<'a, K: 'a, V: 'a, S: 'a> {\n\n    /// An occupied entry.\n    Occupied(RawOccupiedEntryMut),\n\n    /// A vacant entry.\n    Vacant(RawVacantEntryMut),\n}","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":621}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":156614,"byte_end":156694,"line_start":1294,"line_end":1294,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":156695,"byte_end":156698,"line_start":1295,"line_end":1295,"column_start":1,"column_end":4}},{"value":"/ This is a lower-level version of [`Entry`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":156699,"byte_end":156746,"line_start":1296,"line_end":1296,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":156747,"byte_end":156750,"line_start":1297,"line_end":1297,"column_start":1,"column_end":4}},{"value":"/ This `enum` is constructed through the [`raw_entry_mut`] method on [`HashMap`],","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":156751,"byte_end":156834,"line_start":1298,"line_end":1298,"column_start":1,"column_end":84}},{"value":"/ then calling one of the methods of that [`RawEntryBuilderMut`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":156835,"byte_end":156902,"line_start":1299,"line_end":1299,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":156903,"byte_end":156906,"line_start":1300,"line_end":1300,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":156907,"byte_end":156937,"line_start":1301,"line_end":1301,"column_start":1,"column_end":31}},{"value":"/ [`raw_entry_mut`]: HashMap::raw_entry_mut","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":156938,"byte_end":156983,"line_start":1302,"line_end":1302,"column_start":1,"column_end":46}},{"value":"/ [`RawEntryBuilderMut`]: struct.RawEntryBuilderMut.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":156984,"byte_end":157042,"line_start":1303,"line_end":1303,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":624},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":157460,"byte_end":157479,"line_start":1315,"line_end":1315,"column_start":12,"column_end":31},"name":"RawOccupiedEntryMut","qualname":"::collections::hash::map::RawOccupiedEntryMut","value":"RawOccupiedEntryMut {  }","parent":null,"children":[{"krate":0,"index":629}],"decl_id":null,"docs":" A view into an occupied entry in a `HashMap`.\n It is part of the [`RawEntryMut`] enum.\n","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `HashMap`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":157296,"byte_end":157345,"line_start":1312,"line_end":1312,"column_start":1,"column_end":50}},{"value":"/ It is part of the [`RawEntryMut`] enum.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":157346,"byte_end":157389,"line_start":1313,"line_end":1313,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":630},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":157721,"byte_end":157738,"line_start":1322,"line_end":1322,"column_start":12,"column_end":29},"name":"RawVacantEntryMut","qualname":"::collections::hash::map::RawVacantEntryMut","value":"RawVacantEntryMut {  }","parent":null,"children":[{"krate":0,"index":635}],"decl_id":null,"docs":" A view into a vacant entry in a `HashMap`.\n It is part of the [`RawEntryMut`] enum.\n","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `HashMap`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":157560,"byte_end":157606,"line_start":1319,"line_end":1319,"column_start":1,"column_end":47}},{"value":"/ It is part of the [`RawEntryMut`] enum.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":157607,"byte_end":157650,"line_start":1320,"line_end":1320,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":636},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":158083,"byte_end":158098,"line_start":1332,"line_end":1332,"column_start":12,"column_end":27},"name":"RawEntryBuilder","qualname":"::collections::hash::map::RawEntryBuilder","value":"RawEntryBuilder {  }","parent":null,"children":[{"krate":0,"index":641}],"decl_id":null,"docs":" A builder for computing where in a HashMap a key-value pair would be stored.","sig":null,"attributes":[{"value":"/ A builder for computing where in a HashMap a key-value pair would be stored.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":157817,"byte_end":157897,"line_start":1326,"line_end":1326,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":157898,"byte_end":157901,"line_start":1327,"line_end":1327,"column_start":1,"column_end":4}},{"value":"/ See the [`HashMap::raw_entry`] docs for usage examples.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":157902,"byte_end":157961,"line_start":1328,"line_end":1328,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":157962,"byte_end":157965,"line_start":1329,"line_end":1329,"column_start":1,"column_end":4}},{"value":"/ [`HashMap::raw_entry`]: HashMap::raw_entry","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":157966,"byte_end":158012,"line_start":1330,"line_end":1330,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":158378,"byte_end":158386,"line_start":1343,"line_end":1343,"column_start":12,"column_end":20},"name":"from_key","qualname":"<RawEntryBuilderMut>::from_key","value":"pub fn from_key<Q: ?Sized>(Self, &Q) -> RawEntryMut where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given key.\n","sig":null,"attributes":[{"value":"/ Creates a `RawEntryMut` from the given key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":158242,"byte_end":158289,"line_start":1340,"line_end":1340,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":158294,"byte_end":158303,"line_start":1341,"line_end":1341,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":158724,"byte_end":158747,"line_start":1354,"line_end":1354,"column_start":12,"column_end":35},"name":"from_key_hashed_nocheck","qualname":"<RawEntryBuilderMut>::from_key_hashed_nocheck","value":"pub fn from_key_hashed_nocheck<Q: ?Sized>(Self, u64, &Q) -> RawEntryMut where\nK: Borrow<Q>, Q: Eq","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given key and its hash.\n","sig":null,"attributes":[{"value":"/ Creates a `RawEntryMut` from the given key and its hash.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":158575,"byte_end":158635,"line_start":1351,"line_end":1351,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":158640,"byte_end":158649,"line_start":1352,"line_end":1352,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":159098,"byte_end":159107,"line_start":1365,"line_end":1365,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RawEntryBuilderMut>::from_hash","value":"pub fn from_hash<F>(Self, u64, F) -> RawEntryMut where for<'b> F: FnMut(&'b K)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given hash.\n","sig":null,"attributes":[{"value":"/ Creates a `RawEntryMut` from the given hash.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":158961,"byte_end":159009,"line_start":1362,"line_end":1362,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":159014,"byte_end":159023,"line_start":1363,"line_end":1363,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":159509,"byte_end":159517,"line_start":1380,"line_end":1380,"column_start":12,"column_end":20},"name":"from_key","qualname":"<RawEntryBuilder>::from_key","value":"pub fn from_key<Q: ?Sized>(Self, &Q) -> Option<(&'a K, &'a V)> where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by key.\n","sig":null,"attributes":[{"value":"/ Access an entry by key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":159393,"byte_end":159420,"line_start":1377,"line_end":1377,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":159425,"byte_end":159434,"line_start":1378,"line_end":1378,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":159816,"byte_end":159839,"line_start":1391,"line_end":1391,"column_start":12,"column_end":35},"name":"from_key_hashed_nocheck","qualname":"<RawEntryBuilder>::from_key_hashed_nocheck","value":"pub fn from_key_hashed_nocheck<Q: ?Sized>(Self, u64, &Q)\n-> Option<(&'a K, &'a V)> where K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by a key and its hash.\n","sig":null,"attributes":[{"value":"/ Access an entry by a key and its hash.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":159685,"byte_end":159727,"line_start":1388,"line_end":1388,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":159732,"byte_end":159741,"line_start":1389,"line_end":1389,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":160156,"byte_end":160165,"line_start":1402,"line_end":1402,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RawEntryBuilder>::from_hash","value":"pub fn from_hash<F>(Self, u64, F) -> Option<(&'a K, &'a V)> where F: FnMut(&K)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by hash.\n","sig":null,"attributes":[{"value":"/ Access an entry by hash.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":160039,"byte_end":160067,"line_start":1399,"line_end":1399,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":160072,"byte_end":160081,"line_start":1400,"line_end":1400,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":161083,"byte_end":161092,"line_start":1430,"line_end":1430,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<RawEntryMut>::or_insert","value":"pub fn or_insert(Self, K, V) -> (&'a mut K, &'a mut V) where K: Hash,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n mutable references to the key and value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":160389,"byte_end":160471,"line_start":1411,"line_end":1411,"column_start":5,"column_end":87}},{"value":"/ mutable references to the key and value in the entry.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":160476,"byte_end":160533,"line_start":1412,"line_end":1412,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":160538,"byte_end":160541,"line_start":1413,"line_end":1413,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":160546,"byte_end":160560,"line_start":1414,"line_end":1414,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":160565,"byte_end":160568,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":160573,"byte_end":160580,"line_start":1416,"line_end":1416,"column_start":5,"column_end":12}},{"value":"/ #![feature(hash_raw_entry)]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":160585,"byte_end":160616,"line_start":1417,"line_end":1417,"column_start":5,"column_end":36}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":160621,"byte_end":160655,"line_start":1418,"line_end":1418,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":160660,"byte_end":160663,"line_start":1419,"line_end":1419,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":160668,"byte_end":160721,"line_start":1420,"line_end":1420,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":160726,"byte_end":160729,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut().from_key(\"poneyland\").or_insert(\"poneyland\", 3);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":160734,"byte_end":160806,"line_start":1422,"line_end":1422,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(map[\"poneyland\"], 3);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":160811,"byte_end":160847,"line_start":1423,"line_end":1423,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":160852,"byte_end":160855,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ *map.raw_entry_mut().from_key(\"poneyland\").or_insert(\"poneyland\", 10).1 *= 2;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":160860,"byte_end":160941,"line_start":1425,"line_end":1425,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(map[\"poneyland\"], 6);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":160946,"byte_end":160982,"line_start":1426,"line_end":1426,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":160987,"byte_end":160994,"line_start":1427,"line_end":1427,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":160999,"byte_end":161008,"line_start":1428,"line_end":1428,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":162067,"byte_end":162081,"line_start":1460,"line_end":1460,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<RawEntryMut>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> (&'a mut K, &'a mut V) where F: FnOnce()\n-> (K, V), K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns mutable references to the key and value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":161406,"byte_end":161499,"line_start":1441,"line_end":1441,"column_start":5,"column_end":98}},{"value":"/ and returns mutable references to the key and value in the entry.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":161504,"byte_end":161573,"line_start":1442,"line_end":1442,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":161578,"byte_end":161581,"line_start":1443,"line_end":1443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":161586,"byte_end":161600,"line_start":1444,"line_end":1444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":161605,"byte_end":161608,"line_start":1445,"line_end":1445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":161613,"byte_end":161620,"line_start":1446,"line_end":1446,"column_start":5,"column_end":12}},{"value":"/ #![feature(hash_raw_entry)]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":161625,"byte_end":161656,"line_start":1447,"line_end":1447,"column_start":5,"column_end":36}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":161661,"byte_end":161695,"line_start":1448,"line_end":1448,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":161700,"byte_end":161703,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, String> = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":161708,"byte_end":161764,"line_start":1450,"line_end":1450,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":161769,"byte_end":161772,"line_start":1451,"line_end":1451,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut().from_key(\"poneyland\").or_insert_with(|| {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":161777,"byte_end":161842,"line_start":1452,"line_end":1452,"column_start":5,"column_end":70}},{"value":"/     (\"poneyland\", \"hoho\".to_string())","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":161847,"byte_end":161888,"line_start":1453,"line_end":1453,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":161893,"byte_end":161900,"line_start":1454,"line_end":1454,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":161905,"byte_end":161908,"line_start":1455,"line_end":1455,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], \"hoho\".to_string());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":161913,"byte_end":161966,"line_start":1456,"line_end":1456,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":161971,"byte_end":161978,"line_start":1457,"line_end":1457,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":161983,"byte_end":161992,"line_start":1458,"line_end":1458,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":163248,"byte_end":163258,"line_start":1500,"line_end":1500,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<RawEntryMut>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut K, &mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.","sig":null,"attributes":[{"value":"/ Provides in-place mutable access to an occupied entry before any","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":162460,"byte_end":162528,"line_start":1475,"line_end":1475,"column_start":5,"column_end":73}},{"value":"/ potential inserts into the map.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":162533,"byte_end":162568,"line_start":1476,"line_end":1476,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":162573,"byte_end":162576,"line_start":1477,"line_end":1477,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":162581,"byte_end":162595,"line_start":1478,"line_end":1478,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":162600,"byte_end":162603,"line_start":1479,"line_end":1479,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":162608,"byte_end":162615,"line_start":1480,"line_end":1480,"column_start":5,"column_end":12}},{"value":"/ #![feature(hash_raw_entry)]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":162620,"byte_end":162651,"line_start":1481,"line_end":1481,"column_start":5,"column_end":36}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":162656,"byte_end":162690,"line_start":1482,"line_end":1482,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":162695,"byte_end":162698,"line_start":1483,"line_end":1483,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":162703,"byte_end":162756,"line_start":1484,"line_end":1484,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":162761,"byte_end":162764,"line_start":1485,"line_end":1485,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut()","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":162769,"byte_end":162792,"line_start":1486,"line_end":1486,"column_start":5,"column_end":28}},{"value":"/    .from_key(\"poneyland\")","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":162797,"byte_end":162826,"line_start":1487,"line_end":1487,"column_start":5,"column_end":34}},{"value":"/    .and_modify(|_k, v| { *v += 1 })","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":162831,"byte_end":162870,"line_start":1488,"line_end":1488,"column_start":5,"column_end":44}},{"value":"/    .or_insert(\"poneyland\", 42);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":162875,"byte_end":162910,"line_start":1489,"line_end":1489,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(map[\"poneyland\"], 42);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":162915,"byte_end":162952,"line_start":1490,"line_end":1490,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":162957,"byte_end":162960,"line_start":1491,"line_end":1491,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut()","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":162965,"byte_end":162988,"line_start":1492,"line_end":1492,"column_start":5,"column_end":28}},{"value":"/    .from_key(\"poneyland\")","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":162993,"byte_end":163022,"line_start":1493,"line_end":1493,"column_start":5,"column_end":34}},{"value":"/    .and_modify(|_k, v| { *v += 1 })","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":163027,"byte_end":163066,"line_start":1494,"line_end":1494,"column_start":5,"column_end":44}},{"value":"/    .or_insert(\"poneyland\", 0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":163071,"byte_end":163105,"line_start":1495,"line_end":1495,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":163110,"byte_end":163147,"line_start":1496,"line_end":1496,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":163152,"byte_end":163159,"line_start":1497,"line_end":1497,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":163164,"byte_end":163173,"line_start":1498,"line_end":1498,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":163868,"byte_end":163871,"line_start":1521,"line_end":1521,"column_start":12,"column_end":15},"name":"key","qualname":"<RawOccupiedEntryMut>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":163734,"byte_end":163779,"line_start":1518,"line_end":1518,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":163784,"byte_end":163793,"line_start":1519,"line_end":1519,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":164064,"byte_end":164071,"line_start":1528,"line_end":1528,"column_start":12,"column_end":19},"name":"key_mut","qualname":"<RawOccupiedEntryMut>::key_mut","value":"pub fn key_mut(&mut Self) -> &mut K","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the key in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the key in the entry.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":163922,"byte_end":163975,"line_start":1525,"line_end":1525,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":163980,"byte_end":163989,"line_start":1526,"line_end":1526,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":164343,"byte_end":164351,"line_start":1536,"line_end":1536,"column_start":12,"column_end":20},"name":"into_key","qualname":"<RawOccupiedEntryMut>::into_key","value":"pub fn into_key(Self) -> &'a mut K","parent":null,"children":[],"decl_id":null,"docs":" Converts the entry into a mutable reference to the key in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts the entry into a mutable reference to the key in the entry","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":164134,"byte_end":164205,"line_start":1532,"line_end":1532,"column_start":5,"column_end":76}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":164210,"byte_end":164254,"line_start":1533,"line_end":1533,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":164259,"byte_end":164268,"line_start":1534,"line_end":1534,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":164549,"byte_end":164552,"line_start":1543,"line_end":1543,"column_start":12,"column_end":15},"name":"get","qualname":"<RawOccupiedEntryMut>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":164413,"byte_end":164460,"line_start":1540,"line_end":1540,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":164465,"byte_end":164474,"line_start":1541,"line_end":1541,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":164822,"byte_end":164830,"line_start":1551,"line_end":1551,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<RawOccupiedEntryMut>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the value in the entry","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":164603,"byte_end":164684,"line_start":1547,"line_end":1547,"column_start":5,"column_end":86}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":164689,"byte_end":164733,"line_start":1548,"line_end":1548,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":164738,"byte_end":164747,"line_start":1549,"line_end":1549,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":165036,"byte_end":165043,"line_start":1558,"line_end":1558,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RawOccupiedEntryMut>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":164892,"byte_end":164947,"line_start":1555,"line_end":1555,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":164952,"byte_end":164961,"line_start":1556,"line_end":1556,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":165250,"byte_end":165263,"line_start":1565,"line_end":1565,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<RawOccupiedEntryMut>::get_key_value","value":"pub fn get_key_value(&mut Self) -> (&K, &V)","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key and value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key and value in the entry.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":165106,"byte_end":165161,"line_start":1562,"line_end":1562,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":165166,"byte_end":165175,"line_start":1563,"line_end":1563,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":165486,"byte_end":165503,"line_start":1572,"line_end":1572,"column_start":12,"column_end":29},"name":"get_key_value_mut","qualname":"<RawOccupiedEntryMut>::get_key_value_mut","value":"pub fn get_key_value_mut(&mut Self) -> (&mut K, &mut V)","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the key and value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the key and value in the entry.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":165334,"byte_end":165397,"line_start":1569,"line_end":1569,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":165402,"byte_end":165411,"line_start":1570,"line_end":1570,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":165813,"byte_end":165827,"line_start":1580,"line_end":1580,"column_start":12,"column_end":26},"name":"into_key_value","qualname":"<RawOccupiedEntryMut>::into_key_value","value":"pub fn into_key_value(Self) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the key and value in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the key and value in the entry","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":165586,"byte_end":165675,"line_start":1576,"line_end":1576,"column_start":5,"column_end":94}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":165680,"byte_end":165724,"line_start":1577,"line_end":1577,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":165729,"byte_end":165738,"line_start":1578,"line_end":1578,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":166064,"byte_end":166070,"line_start":1587,"line_end":1587,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawOccupiedEntryMut>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":165908,"byte_end":165975,"line_start":1584,"line_end":1584,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":165980,"byte_end":165989,"line_start":1585,"line_end":1585,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":166298,"byte_end":166308,"line_start":1594,"line_end":1594,"column_start":12,"column_end":22},"name":"insert_key","qualname":"<RawOccupiedEntryMut>::insert_key","value":"pub fn insert_key(&mut Self, K) -> K","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":166142,"byte_end":166209,"line_start":1591,"line_end":1591,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":166214,"byte_end":166223,"line_start":1592,"line_end":1592,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":166522,"byte_end":166528,"line_start":1601,"line_end":1601,"column_start":12,"column_end":18},"name":"remove","qualname":"<RawOccupiedEntryMut>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.\n","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":166380,"byte_end":166433,"line_start":1598,"line_end":1598,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":166438,"byte_end":166447,"line_start":1599,"line_end":1599,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":166726,"byte_end":166738,"line_start":1608,"line_end":1608,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<RawOccupiedEntryMut>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.\n","sig":null,"attributes":[{"value":"/ Take the ownership of the key and value from the map.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":166580,"byte_end":166637,"line_start":1605,"line_end":1605,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":166642,"byte_end":166651,"line_start":1606,"line_end":1606,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":167049,"byte_end":167055,"line_start":1618,"line_end":1618,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawVacantEntryMut>::insert","value":"pub fn insert(Self, K, V) -> (&'a mut K, &'a mut V) where K: Hash,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":166854,"byte_end":166913,"line_start":1614,"line_end":1614,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":166918,"byte_end":166960,"line_start":1615,"line_end":1615,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":166965,"byte_end":166974,"line_start":1616,"line_end":1616,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":167406,"byte_end":167427,"line_start":1630,"line_end":1630,"column_start":12,"column_end":33},"name":"insert_hashed_nocheck","qualname":"<RawVacantEntryMut>::insert_hashed_nocheck","value":"pub fn insert_hashed_nocheck(Self, u64, K, V) -> (&'a mut K, &'a mut V) where\nK: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":167211,"byte_end":167270,"line_start":1626,"line_end":1626,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":167275,"byte_end":167317,"line_start":1627,"line_end":1627,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":167322,"byte_end":167331,"line_start":1628,"line_end":1628,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":729},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":169443,"byte_end":169451,"line_start":1689,"line_end":1689,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::collections::hash::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":725},"children":[],"decl_id":null,"docs":" An occupied entry.\n","sig":null,"attributes":[{"value":"/ An occupied entry.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":169364,"byte_end":169386,"line_start":1687,"line_end":1687,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":732},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":169559,"byte_end":169565,"line_start":1693,"line_end":1693,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::collections::hash::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":725},"children":[],"decl_id":null,"docs":" A vacant entry.\n","sig":null,"attributes":[{"value":"/ A vacant entry.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":169483,"byte_end":169502,"line_start":1691,"line_end":1691,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":725},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":169334,"byte_end":169339,"line_start":1686,"line_end":1686,"column_start":10,"column_end":15},"name":"Entry","qualname":"::collections::hash::map::Entry","value":"pub enum Entry<'a, K: 'a, V: 'a> {\n\n    /// An occupied entry.\n    Occupied(OccupiedEntry),\n\n    /// A vacant entry.\n    Vacant(VacantEntry),\n}","parent":null,"children":[{"krate":0,"index":729},{"krate":0,"index":732}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":169085,"byte_end":169165,"line_start":1680,"line_end":1680,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":169166,"byte_end":169169,"line_start":1681,"line_end":1681,"column_start":1,"column_end":4}},{"value":"/ This `enum` is constructed from the [`entry`] method on [`HashMap`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":169170,"byte_end":169242,"line_start":1682,"line_end":1682,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":169243,"byte_end":169246,"line_start":1683,"line_end":1683,"column_start":1,"column_end":4}},{"value":"/ [`entry`]: HashMap::entry","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":169247,"byte_end":169276,"line_start":1684,"line_end":1684,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":739},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":170134,"byte_end":170147,"line_start":1711,"line_end":1711,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::collections::hash::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":743}],"decl_id":null,"docs":" A view into an occupied entry in a `HashMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `HashMap`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":169952,"byte_end":170001,"line_start":1706,"line_end":1706,"column_start":1,"column_end":50}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":170002,"byte_end":170039,"line_start":1707,"line_end":1707,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":170040,"byte_end":170043,"line_start":1708,"line_end":1708,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":170044,"byte_end":170074,"line_start":1709,"line_end":1709,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":748},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":170688,"byte_end":170699,"line_start":1727,"line_end":1727,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::collections::hash::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":752}],"decl_id":null,"docs":" A view into a vacant entry in a `HashMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `HashMap`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":170509,"byte_end":170555,"line_start":1722,"line_end":1722,"column_start":1,"column_end":47}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":170556,"byte_end":170593,"line_start":1723,"line_end":1723,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":170594,"byte_end":170597,"line_start":1724,"line_end":1724,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":170598,"byte_end":170628,"line_start":1725,"line_end":1725,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":180822,"byte_end":180831,"line_start":2099,"line_end":2099,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":180300,"byte_end":180382,"line_start":2082,"line_end":2082,"column_start":5,"column_end":87}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":180387,"byte_end":180437,"line_start":2083,"line_end":2083,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":180442,"byte_end":180445,"line_start":2084,"line_end":2084,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":180450,"byte_end":180464,"line_start":2085,"line_end":2085,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":180469,"byte_end":180472,"line_start":2086,"line_end":2086,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":180477,"byte_end":180484,"line_start":2087,"line_end":2087,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":180489,"byte_end":180523,"line_start":2088,"line_end":2088,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":180528,"byte_end":180531,"line_start":2089,"line_end":2089,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":180536,"byte_end":180589,"line_start":2090,"line_end":2090,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":180594,"byte_end":180597,"line_start":2091,"line_end":2091,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\").or_insert(3);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":180602,"byte_end":180642,"line_start":2092,"line_end":2092,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map[\"poneyland\"], 3);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":180647,"byte_end":180683,"line_start":2093,"line_end":2093,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":180688,"byte_end":180691,"line_start":2094,"line_end":2094,"column_start":5,"column_end":8}},{"value":"/ *map.entry(\"poneyland\").or_insert(10) *= 2;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":180696,"byte_end":180743,"line_start":2095,"line_end":2095,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(map[\"poneyland\"], 6);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":180748,"byte_end":180784,"line_start":2096,"line_end":2096,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":180789,"byte_end":180796,"line_start":2097,"line_end":2097,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":180801,"byte_end":180810,"line_start":2098,"line_end":2098,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":181576,"byte_end":181590,"line_start":2123,"line_end":2123,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F: FnOnce() -> V>(Self, F) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":181060,"byte_end":181153,"line_start":2107,"line_end":2107,"column_start":5,"column_end":98}},{"value":"/ and returns a mutable reference to the value in the entry.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":181158,"byte_end":181220,"line_start":2108,"line_end":2108,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":181225,"byte_end":181228,"line_start":2109,"line_end":2109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":181233,"byte_end":181247,"line_start":2110,"line_end":2110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":181252,"byte_end":181255,"line_start":2111,"line_end":2111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":181260,"byte_end":181267,"line_start":2112,"line_end":2112,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":181272,"byte_end":181306,"line_start":2113,"line_end":2113,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":181311,"byte_end":181314,"line_start":2114,"line_end":2114,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, String> = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":181319,"byte_end":181375,"line_start":2115,"line_end":2115,"column_start":5,"column_end":61}},{"value":"/ let s = \"hoho\".to_string();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":181380,"byte_end":181411,"line_start":2116,"line_end":2116,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":181416,"byte_end":181419,"line_start":2117,"line_end":2117,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\").or_insert_with(|| s);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":181424,"byte_end":181472,"line_start":2118,"line_end":2118,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":181477,"byte_end":181480,"line_start":2119,"line_end":2119,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], \"hoho\".to_string());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":181485,"byte_end":181538,"line_start":2120,"line_end":2120,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":181543,"byte_end":181550,"line_start":2121,"line_end":2121,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":181555,"byte_end":181564,"line_start":2122,"line_end":2122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182428,"byte_end":182446,"line_start":2148,"line_end":2148,"column_start":12,"column_end":30},"name":"or_insert_with_key","qualname":"<Entry>::or_insert_with_key","value":"pub fn or_insert_with_key<F: FnOnce(&K) -> V>(Self, F) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting, if empty, the result of the default function,\n which takes the key as its argument, and returns a mutable reference to the value in the\n entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting, if empty, the result of the default function,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":181854,"byte_end":181949,"line_start":2131,"line_end":2131,"column_start":5,"column_end":100}},{"value":"/ which takes the key as its argument, and returns a mutable reference to the value in the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":181954,"byte_end":182046,"line_start":2132,"line_end":2132,"column_start":5,"column_end":97}},{"value":"/ entry.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182051,"byte_end":182061,"line_start":2133,"line_end":2133,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182066,"byte_end":182069,"line_start":2134,"line_end":2134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182074,"byte_end":182088,"line_start":2135,"line_end":2135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182093,"byte_end":182096,"line_start":2136,"line_end":2136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182101,"byte_end":182108,"line_start":2137,"line_end":2137,"column_start":5,"column_end":12}},{"value":"/ #![feature(or_insert_with_key)]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182113,"byte_end":182148,"line_start":2138,"line_end":2138,"column_start":5,"column_end":40}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182153,"byte_end":182187,"line_start":2139,"line_end":2139,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182192,"byte_end":182195,"line_start":2140,"line_end":2140,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, usize> = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182200,"byte_end":182255,"line_start":2141,"line_end":2141,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182260,"byte_end":182263,"line_start":2142,"line_end":2142,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\").or_insert_with_key(|key| key.chars().count());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182268,"byte_end":182341,"line_start":2143,"line_end":2143,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182346,"byte_end":182349,"line_start":2144,"line_end":2144,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 9);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182354,"byte_end":182390,"line_start":2145,"line_end":2145,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182395,"byte_end":182402,"line_start":2146,"line_end":2146,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182407,"byte_end":182416,"line_start":2147,"line_end":2147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":183082,"byte_end":183085,"line_start":2170,"line_end":2170,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this entry's key.","sig":null,"attributes":[{"value":"/ Returns a reference to this entry's key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182722,"byte_end":182766,"line_start":2158,"line_end":2158,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182771,"byte_end":182774,"line_start":2159,"line_end":2159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182779,"byte_end":182793,"line_start":2160,"line_end":2160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182798,"byte_end":182801,"line_start":2161,"line_end":2161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182806,"byte_end":182813,"line_start":2162,"line_end":2162,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182818,"byte_end":182852,"line_start":2163,"line_end":2163,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182857,"byte_end":182860,"line_start":2164,"line_end":2164,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182865,"byte_end":182918,"line_start":2165,"line_end":2165,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182923,"byte_end":182982,"line_start":2166,"line_end":2166,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182987,"byte_end":182994,"line_start":2167,"line_end":2167,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":182999,"byte_end":183008,"line_start":2168,"line_end":2168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":183896,"byte_end":183906,"line_start":2199,"line_end":2199,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.","sig":null,"attributes":[{"value":"/ Provides in-place mutable access to an occupied entry before any","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":183238,"byte_end":183306,"line_start":2177,"line_end":2177,"column_start":5,"column_end":73}},{"value":"/ potential inserts into the map.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":183311,"byte_end":183346,"line_start":2178,"line_end":2178,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":183351,"byte_end":183354,"line_start":2179,"line_end":2179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":183359,"byte_end":183373,"line_start":2180,"line_end":2180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":183378,"byte_end":183381,"line_start":2181,"line_end":2181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":183386,"byte_end":183393,"line_start":2182,"line_end":2182,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":183398,"byte_end":183432,"line_start":2183,"line_end":2183,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":183437,"byte_end":183440,"line_start":2184,"line_end":2184,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":183445,"byte_end":183498,"line_start":2185,"line_end":2185,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":183503,"byte_end":183506,"line_start":2186,"line_end":2186,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\")","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":183511,"byte_end":183537,"line_start":2187,"line_end":2187,"column_start":5,"column_end":31}},{"value":"/    .and_modify(|e| { *e += 1 })","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":183542,"byte_end":183577,"line_start":2188,"line_end":2188,"column_start":5,"column_end":40}},{"value":"/    .or_insert(42);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":183582,"byte_end":183604,"line_start":2189,"line_end":2189,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map[\"poneyland\"], 42);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":183609,"byte_end":183646,"line_start":2190,"line_end":2190,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":183651,"byte_end":183654,"line_start":2191,"line_end":2191,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\")","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":183659,"byte_end":183685,"line_start":2192,"line_end":2192,"column_start":5,"column_end":31}},{"value":"/    .and_modify(|e| { *e += 1 })","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":183690,"byte_end":183725,"line_start":2193,"line_end":2193,"column_start":5,"column_end":40}},{"value":"/    .or_insert(42);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":183730,"byte_end":183752,"line_start":2194,"line_end":2194,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":183757,"byte_end":183794,"line_start":2195,"line_end":2195,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":183799,"byte_end":183806,"line_start":2196,"line_end":2196,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":183811,"byte_end":183820,"line_start":2197,"line_end":2197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":184654,"byte_end":184660,"line_start":2227,"line_end":2227,"column_start":12,"column_end":18},"name":"insert","qualname":"<Entry>::insert","value":"pub fn insert(Self, V) -> OccupiedEntry","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns an OccupiedEntry.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns an OccupiedEntry.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":184178,"byte_end":184240,"line_start":2212,"line_end":2212,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":184245,"byte_end":184248,"line_start":2213,"line_end":2213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":184253,"byte_end":184267,"line_start":2214,"line_end":2214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":184272,"byte_end":184275,"line_start":2215,"line_end":2215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":184280,"byte_end":184287,"line_start":2216,"line_end":2216,"column_start":5,"column_end":12}},{"value":"/ #![feature(entry_insert)]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":184292,"byte_end":184321,"line_start":2217,"line_end":2217,"column_start":5,"column_end":34}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":184326,"byte_end":184360,"line_start":2218,"line_end":2218,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":184365,"byte_end":184368,"line_start":2219,"line_end":2219,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, String> = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":184373,"byte_end":184429,"line_start":2220,"line_end":2220,"column_start":5,"column_end":61}},{"value":"/ let entry = map.entry(\"poneyland\").insert(\"hoho\".to_string());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":184434,"byte_end":184500,"line_start":2221,"line_end":2221,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":184505,"byte_end":184508,"line_start":2222,"line_end":2222,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(entry.key(), &\"poneyland\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":184513,"byte_end":184555,"line_start":2223,"line_end":2223,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":184560,"byte_end":184567,"line_start":2224,"line_end":2224,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":184572,"byte_end":184581,"line_start":2225,"line_end":2225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185494,"byte_end":185504,"line_start":2256,"line_end":2256,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"pub fn or_default(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default value if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default value if empty,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185022,"byte_end":185098,"line_start":2240,"line_end":2240,"column_start":5,"column_end":81}},{"value":"/ and returns a mutable reference to the value in the entry.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185103,"byte_end":185165,"line_start":2241,"line_end":2241,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185170,"byte_end":185173,"line_start":2242,"line_end":2242,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185178,"byte_end":185192,"line_start":2243,"line_end":2243,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185197,"byte_end":185200,"line_start":2244,"line_end":2244,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185205,"byte_end":185212,"line_start":2245,"line_end":2245,"column_start":5,"column_end":12}},{"value":"/ # fn main() {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185217,"byte_end":185234,"line_start":2246,"line_end":2246,"column_start":5,"column_end":22}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185239,"byte_end":185273,"line_start":2247,"line_end":2247,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185278,"byte_end":185281,"line_start":2248,"line_end":2248,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, Option<u32>> = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185286,"byte_end":185347,"line_start":2249,"line_end":2249,"column_start":5,"column_end":66}},{"value":"/ map.entry(\"poneyland\").or_default();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185352,"byte_end":185392,"line_start":2250,"line_end":2250,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185397,"byte_end":185400,"line_start":2251,"line_end":2251,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], None);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185405,"byte_end":185444,"line_start":2252,"line_end":2252,"column_start":5,"column_end":44}},{"value":"/ # }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185449,"byte_end":185456,"line_start":2253,"line_end":2253,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185461,"byte_end":185468,"line_start":2254,"line_end":2254,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185473,"byte_end":185482,"line_start":2255,"line_end":2255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186130,"byte_end":186133,"line_start":2278,"line_end":2278,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185723,"byte_end":185768,"line_start":2265,"line_end":2265,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185773,"byte_end":185776,"line_start":2266,"line_end":2266,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185781,"byte_end":185795,"line_start":2267,"line_end":2267,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185800,"byte_end":185803,"line_start":2268,"line_end":2268,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185808,"byte_end":185815,"line_start":2269,"line_end":2269,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185820,"byte_end":185854,"line_start":2270,"line_end":2270,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185859,"byte_end":185862,"line_start":2271,"line_end":2271,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185867,"byte_end":185920,"line_start":2272,"line_end":2272,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185925,"byte_end":185966,"line_start":2273,"line_end":2273,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185971,"byte_end":186030,"line_start":2274,"line_end":2274,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186035,"byte_end":186042,"line_start":2275,"line_end":2275,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186047,"byte_end":186056,"line_start":2276,"line_end":2276,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186819,"byte_end":186831,"line_start":2302,"line_end":2302,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.","sig":null,"attributes":[{"value":"/ Take the ownership of the key and value from the map.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186184,"byte_end":186241,"line_start":2282,"line_end":2282,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186246,"byte_end":186249,"line_start":2283,"line_end":2283,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186254,"byte_end":186268,"line_start":2284,"line_end":2284,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186273,"byte_end":186276,"line_start":2285,"line_end":2285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186281,"byte_end":186288,"line_start":2286,"line_end":2286,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186293,"byte_end":186327,"line_start":2287,"line_end":2287,"column_start":5,"column_end":39}},{"value":"/ use std::collections::hash_map::Entry;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186332,"byte_end":186374,"line_start":2288,"line_end":2288,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186379,"byte_end":186382,"line_start":2289,"line_end":2289,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186387,"byte_end":186440,"line_start":2290,"line_end":2290,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186445,"byte_end":186486,"line_start":2291,"line_end":2291,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186491,"byte_end":186494,"line_start":2292,"line_end":2292,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186499,"byte_end":186555,"line_start":2293,"line_end":2293,"column_start":5,"column_end":61}},{"value":"/     // We delete the entry from the map.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186560,"byte_end":186604,"line_start":2294,"line_end":2294,"column_start":5,"column_end":49}},{"value":"/     o.remove_entry();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186609,"byte_end":186634,"line_start":2295,"line_end":2295,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186639,"byte_end":186644,"line_start":2296,"line_end":2296,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186649,"byte_end":186652,"line_start":2297,"line_end":2297,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.contains_key(\"poneyland\"), false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186657,"byte_end":186710,"line_start":2298,"line_end":2298,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186715,"byte_end":186722,"line_start":2299,"line_end":2299,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186727,"byte_end":186736,"line_start":2300,"line_end":2300,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":975},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187393,"byte_end":187396,"line_start":2323,"line_end":2323,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186894,"byte_end":186941,"line_start":2306,"line_end":2306,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186946,"byte_end":186949,"line_start":2307,"line_end":2307,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186954,"byte_end":186968,"line_start":2308,"line_end":2308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186973,"byte_end":186976,"line_start":2309,"line_end":2309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186981,"byte_end":186988,"line_start":2310,"line_end":2310,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":186993,"byte_end":187027,"line_start":2311,"line_end":2311,"column_start":5,"column_end":39}},{"value":"/ use std::collections::hash_map::Entry;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187032,"byte_end":187074,"line_start":2312,"line_end":2312,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187079,"byte_end":187082,"line_start":2313,"line_end":2313,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187087,"byte_end":187140,"line_start":2314,"line_end":2314,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187145,"byte_end":187186,"line_start":2315,"line_end":2315,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187191,"byte_end":187194,"line_start":2316,"line_end":2316,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187199,"byte_end":187255,"line_start":2317,"line_end":2317,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(o.get(), &12);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187260,"byte_end":187293,"line_start":2318,"line_end":2318,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187298,"byte_end":187303,"line_start":2319,"line_end":2319,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187308,"byte_end":187315,"line_start":2320,"line_end":2320,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187320,"byte_end":187329,"line_start":2321,"line_end":2321,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188368,"byte_end":188375,"line_start":2356,"line_end":2356,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187447,"byte_end":187502,"line_start":2327,"line_end":2327,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187507,"byte_end":187510,"line_start":2328,"line_end":2328,"column_start":5,"column_end":8}},{"value":"/ If you need a reference to the `OccupiedEntry` which may outlive the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187515,"byte_end":187587,"line_start":2329,"line_end":2329,"column_start":5,"column_end":77}},{"value":"/ destruction of the `Entry` value, see [`into_mut`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187592,"byte_end":187647,"line_start":2330,"line_end":2330,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187652,"byte_end":187655,"line_start":2331,"line_end":2331,"column_start":5,"column_end":8}},{"value":"/ [`into_mut`]: Self::into_mut","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187660,"byte_end":187692,"line_start":2332,"line_end":2332,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187697,"byte_end":187700,"line_start":2333,"line_end":2333,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187705,"byte_end":187719,"line_start":2334,"line_end":2334,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187724,"byte_end":187727,"line_start":2335,"line_end":2335,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187732,"byte_end":187739,"line_start":2336,"line_end":2336,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187744,"byte_end":187778,"line_start":2337,"line_end":2337,"column_start":5,"column_end":39}},{"value":"/ use std::collections::hash_map::Entry;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187783,"byte_end":187825,"line_start":2338,"line_end":2338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187830,"byte_end":187833,"line_start":2339,"line_end":2339,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187838,"byte_end":187891,"line_start":2340,"line_end":2340,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187896,"byte_end":187937,"line_start":2341,"line_end":2341,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187942,"byte_end":187945,"line_start":2342,"line_end":2342,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 12);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187950,"byte_end":187987,"line_start":2343,"line_end":2343,"column_start":5,"column_end":42}},{"value":"/ if let Entry::Occupied(mut o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":187992,"byte_end":188052,"line_start":2344,"line_end":2344,"column_start":5,"column_end":65}},{"value":"/     *o.get_mut() += 10;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188057,"byte_end":188084,"line_start":2345,"line_end":2345,"column_start":5,"column_end":32}},{"value":"/     assert_eq!(*o.get(), 22);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188089,"byte_end":188122,"line_start":2346,"line_end":2346,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188127,"byte_end":188130,"line_start":2347,"line_end":2347,"column_start":5,"column_end":8}},{"value":"/     // We can use the same Entry multiple times.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188135,"byte_end":188187,"line_start":2348,"line_end":2348,"column_start":5,"column_end":57}},{"value":"/     *o.get_mut() += 2;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188192,"byte_end":188218,"line_start":2349,"line_end":2349,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188223,"byte_end":188228,"line_start":2350,"line_end":2350,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188233,"byte_end":188236,"line_start":2351,"line_end":2351,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 24);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188241,"byte_end":188278,"line_start":2352,"line_end":2352,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188283,"byte_end":188290,"line_start":2353,"line_end":2353,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188295,"byte_end":188304,"line_start":2354,"line_end":2354,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189239,"byte_end":189247,"line_start":2385,"line_end":2385,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the value in the entry","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188438,"byte_end":188519,"line_start":2360,"line_end":2360,"column_start":5,"column_end":86}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188524,"byte_end":188568,"line_start":2361,"line_end":2361,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188573,"byte_end":188576,"line_start":2362,"line_end":2362,"column_start":5,"column_end":8}},{"value":"/ If you need multiple references to the `OccupiedEntry`, see [`get_mut`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188581,"byte_end":188657,"line_start":2363,"line_end":2363,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188662,"byte_end":188665,"line_start":2364,"line_end":2364,"column_start":5,"column_end":8}},{"value":"/ [`get_mut`]: Self::get_mut","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188670,"byte_end":188700,"line_start":2365,"line_end":2365,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188705,"byte_end":188708,"line_start":2366,"line_end":2366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188713,"byte_end":188727,"line_start":2367,"line_end":2367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188732,"byte_end":188735,"line_start":2368,"line_end":2368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188740,"byte_end":188747,"line_start":2369,"line_end":2369,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188752,"byte_end":188786,"line_start":2370,"line_end":2370,"column_start":5,"column_end":39}},{"value":"/ use std::collections::hash_map::Entry;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188791,"byte_end":188833,"line_start":2371,"line_end":2371,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188838,"byte_end":188841,"line_start":2372,"line_end":2372,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188846,"byte_end":188899,"line_start":2373,"line_end":2373,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188904,"byte_end":188945,"line_start":2374,"line_end":2374,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188950,"byte_end":188953,"line_start":2375,"line_end":2375,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 12);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":188958,"byte_end":188995,"line_start":2376,"line_end":2376,"column_start":5,"column_end":42}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189000,"byte_end":189056,"line_start":2377,"line_end":2377,"column_start":5,"column_end":61}},{"value":"/     *o.into_mut() += 10;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189061,"byte_end":189089,"line_start":2378,"line_end":2378,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189094,"byte_end":189099,"line_start":2379,"line_end":2379,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189104,"byte_end":189107,"line_start":2380,"line_end":2380,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 22);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189112,"byte_end":189149,"line_start":2381,"line_end":2381,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189154,"byte_end":189161,"line_start":2382,"line_end":2382,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189166,"byte_end":189175,"line_start":2383,"line_end":2383,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189886,"byte_end":189892,"line_start":2408,"line_end":2408,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189309,"byte_end":189376,"line_start":2389,"line_end":2389,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189381,"byte_end":189384,"line_start":2390,"line_end":2390,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189389,"byte_end":189403,"line_start":2391,"line_end":2391,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189408,"byte_end":189411,"line_start":2392,"line_end":2392,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189416,"byte_end":189423,"line_start":2393,"line_end":2393,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189428,"byte_end":189462,"line_start":2394,"line_end":2394,"column_start":5,"column_end":39}},{"value":"/ use std::collections::hash_map::Entry;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189467,"byte_end":189509,"line_start":2395,"line_end":2395,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189514,"byte_end":189517,"line_start":2396,"line_end":2396,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189522,"byte_end":189575,"line_start":2397,"line_end":2397,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189580,"byte_end":189621,"line_start":2398,"line_end":2398,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189626,"byte_end":189629,"line_start":2399,"line_end":2399,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189634,"byte_end":189694,"line_start":2400,"line_end":2400,"column_start":5,"column_end":65}},{"value":"/     assert_eq!(o.insert(15), 12);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189699,"byte_end":189736,"line_start":2401,"line_end":2401,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189741,"byte_end":189746,"line_start":2402,"line_end":2402,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189751,"byte_end":189754,"line_start":2403,"line_end":2403,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 15);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189759,"byte_end":189796,"line_start":2404,"line_end":2404,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189801,"byte_end":189808,"line_start":2405,"line_end":2405,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189813,"byte_end":189822,"line_start":2406,"line_end":2406,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190537,"byte_end":190543,"line_start":2431,"line_end":2431,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":189964,"byte_end":190017,"line_start":2412,"line_end":2412,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190022,"byte_end":190025,"line_start":2413,"line_end":2413,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190030,"byte_end":190044,"line_start":2414,"line_end":2414,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190049,"byte_end":190052,"line_start":2415,"line_end":2415,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190057,"byte_end":190064,"line_start":2416,"line_end":2416,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190069,"byte_end":190103,"line_start":2417,"line_end":2417,"column_start":5,"column_end":39}},{"value":"/ use std::collections::hash_map::Entry;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190108,"byte_end":190150,"line_start":2418,"line_end":2418,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190155,"byte_end":190158,"line_start":2419,"line_end":2419,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190163,"byte_end":190216,"line_start":2420,"line_end":2420,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190221,"byte_end":190262,"line_start":2421,"line_end":2421,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190267,"byte_end":190270,"line_start":2422,"line_end":2422,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190275,"byte_end":190331,"line_start":2423,"line_end":2423,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(o.remove(), 12);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190336,"byte_end":190371,"line_start":2424,"line_end":2424,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190376,"byte_end":190381,"line_start":2425,"line_end":2425,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190386,"byte_end":190389,"line_start":2426,"line_end":2426,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.contains_key(\"poneyland\"), false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190394,"byte_end":190447,"line_start":2427,"line_end":2427,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190452,"byte_end":190459,"line_start":2428,"line_end":2428,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190464,"byte_end":190473,"line_start":2429,"line_end":2429,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":191437,"byte_end":191450,"line_start":2458,"line_end":2458,"column_start":12,"column_end":25},"name":"replace_entry","qualname":"<OccupiedEntry>::replace_entry","value":"pub fn replace_entry(Self, V) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Replaces the entry, returning the old key and value. The new key in the hash map will be\n the key used to create this entry.","sig":null,"attributes":[{"value":"/ Replaces the entry, returning the old key and value. The new key in the hash map will be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190595,"byte_end":190687,"line_start":2435,"line_end":2435,"column_start":5,"column_end":97}},{"value":"/ the key used to create this entry.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190692,"byte_end":190730,"line_start":2436,"line_end":2436,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190735,"byte_end":190738,"line_start":2437,"line_end":2437,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190743,"byte_end":190757,"line_start":2438,"line_end":2438,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190762,"byte_end":190765,"line_start":2439,"line_end":2439,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190770,"byte_end":190777,"line_start":2440,"line_end":2440,"column_start":5,"column_end":12}},{"value":"/ #![feature(map_entry_replace)]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190782,"byte_end":190816,"line_start":2441,"line_end":2441,"column_start":5,"column_end":39}},{"value":"/ use std::collections::hash_map::{Entry, HashMap};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190821,"byte_end":190874,"line_start":2442,"line_end":2442,"column_start":5,"column_end":58}},{"value":"/ use std::rc::Rc;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190879,"byte_end":190899,"line_start":2443,"line_end":2443,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190904,"byte_end":190907,"line_start":2444,"line_end":2444,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<String>, u32> = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190912,"byte_end":190971,"line_start":2445,"line_end":2445,"column_start":5,"column_end":64}},{"value":"/ map.insert(Rc::new(\"Stringthing\".to_string()), 15);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":190976,"byte_end":191031,"line_start":2446,"line_end":2446,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":191036,"byte_end":191039,"line_start":2447,"line_end":2447,"column_start":5,"column_end":8}},{"value":"/ let my_key = Rc::new(\"Stringthing\".to_string());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":191044,"byte_end":191096,"line_start":2448,"line_end":2448,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":191101,"byte_end":191104,"line_start":2449,"line_end":2449,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(entry) = map.entry(my_key) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":191109,"byte_end":191164,"line_start":2450,"line_end":2450,"column_start":5,"column_end":60}},{"value":"/     // Also replace the key with a handle to our other key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":191169,"byte_end":191232,"line_start":2451,"line_end":2451,"column_start":5,"column_end":68}},{"value":"/     let (old_key, old_value): (Rc<String>, u32) = entry.replace_entry(16);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":191237,"byte_end":191315,"line_start":2452,"line_end":2452,"column_start":5,"column_end":83}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":191320,"byte_end":191325,"line_start":2453,"line_end":2453,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":191330,"byte_end":191333,"line_start":2454,"line_end":2454,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":191338,"byte_end":191345,"line_start":2455,"line_end":2455,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":191350,"byte_end":191359,"line_start":2456,"line_end":2456,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":192516,"byte_end":192527,"line_start":2489,"line_end":2489,"column_start":12,"column_end":23},"name":"replace_key","qualname":"<OccupiedEntry>::replace_key","value":"pub fn replace_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Replaces the key in the hash map with the key used to create this entry.","sig":null,"attributes":[{"value":"/ Replaces the key in the hash map with the key used to create this entry.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":191529,"byte_end":191605,"line_start":2462,"line_end":2462,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":191610,"byte_end":191613,"line_start":2463,"line_end":2463,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":191618,"byte_end":191632,"line_start":2464,"line_end":2464,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":191637,"byte_end":191640,"line_start":2465,"line_end":2465,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":191645,"byte_end":191652,"line_start":2466,"line_end":2466,"column_start":5,"column_end":12}},{"value":"/ #![feature(map_entry_replace)]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":191657,"byte_end":191691,"line_start":2467,"line_end":2467,"column_start":5,"column_end":39}},{"value":"/ use std::collections::hash_map::{Entry, HashMap};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":191696,"byte_end":191749,"line_start":2468,"line_end":2468,"column_start":5,"column_end":58}},{"value":"/ use std::rc::Rc;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":191754,"byte_end":191774,"line_start":2469,"line_end":2469,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":191779,"byte_end":191782,"line_start":2470,"line_end":2470,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<String>, u32> = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":191787,"byte_end":191846,"line_start":2471,"line_end":2471,"column_start":5,"column_end":64}},{"value":"/ let known_strings: Vec<Rc<String>> = Vec::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":191851,"byte_end":191903,"line_start":2472,"line_end":2472,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":191908,"byte_end":191911,"line_start":2473,"line_end":2473,"column_start":5,"column_end":8}},{"value":"/ // Initialise known strings, run program, etc.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":191916,"byte_end":191966,"line_start":2474,"line_end":2474,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":191971,"byte_end":191974,"line_start":2475,"line_end":2475,"column_start":5,"column_end":8}},{"value":"/ reclaim_memory(&mut map, &known_strings);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":191979,"byte_end":192024,"line_start":2476,"line_end":2476,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":192029,"byte_end":192032,"line_start":2477,"line_end":2477,"column_start":5,"column_end":8}},{"value":"/ fn reclaim_memory(map: &mut HashMap<Rc<String>, u32>, known_strings: &[Rc<String>] ) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":192037,"byte_end":192127,"line_start":2478,"line_end":2478,"column_start":5,"column_end":95}},{"value":"/     for s in known_strings {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":192132,"byte_end":192164,"line_start":2479,"line_end":2479,"column_start":5,"column_end":37}},{"value":"/         if let Entry::Occupied(entry) = map.entry(Rc::clone(s)) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":192169,"byte_end":192238,"line_start":2480,"line_end":2480,"column_start":5,"column_end":74}},{"value":"/             // Replaces the entry's key with our version of it in `known_strings`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":192243,"byte_end":192329,"line_start":2481,"line_end":2481,"column_start":5,"column_end":91}},{"value":"/             entry.replace_key();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":192334,"byte_end":192370,"line_start":2482,"line_end":2482,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":192375,"byte_end":192388,"line_start":2483,"line_end":2483,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":192393,"byte_end":192402,"line_start":2484,"line_end":2484,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":192407,"byte_end":192412,"line_start":2485,"line_end":2485,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":192417,"byte_end":192424,"line_start":2486,"line_end":2486,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":192429,"byte_end":192438,"line_start":2487,"line_end":2487,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193057,"byte_end":193060,"line_start":2508,"line_end":2508,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that would be used when inserting a value\n through the `VacantEntry`.","sig":null,"attributes":[{"value":"/ Gets a reference to the key that would be used when inserting a value","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":192633,"byte_end":192706,"line_start":2495,"line_end":2495,"column_start":5,"column_end":78}},{"value":"/ through the `VacantEntry`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":192711,"byte_end":192741,"line_start":2496,"line_end":2496,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":192746,"byte_end":192749,"line_start":2497,"line_end":2497,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":192754,"byte_end":192768,"line_start":2498,"line_end":2498,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":192773,"byte_end":192776,"line_start":2499,"line_end":2499,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":192781,"byte_end":192788,"line_start":2500,"line_end":2500,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":192793,"byte_end":192827,"line_start":2501,"line_end":2501,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":192832,"byte_end":192835,"line_start":2502,"line_end":2502,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":192840,"byte_end":192893,"line_start":2503,"line_end":2503,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":192898,"byte_end":192957,"line_start":2504,"line_end":2504,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":192962,"byte_end":192969,"line_start":2505,"line_end":2505,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":192974,"byte_end":192983,"line_start":2506,"line_end":2506,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193552,"byte_end":193560,"line_start":2528,"line_end":2528,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"pub fn into_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Take ownership of the key.","sig":null,"attributes":[{"value":"/ Take ownership of the key.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193111,"byte_end":193141,"line_start":2512,"line_end":2512,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193146,"byte_end":193149,"line_start":2513,"line_end":2513,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193154,"byte_end":193168,"line_start":2514,"line_end":2514,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193173,"byte_end":193176,"line_start":2515,"line_end":2515,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193181,"byte_end":193188,"line_start":2516,"line_end":2516,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193193,"byte_end":193227,"line_start":2517,"line_end":2517,"column_start":5,"column_end":39}},{"value":"/ use std::collections::hash_map::Entry;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193232,"byte_end":193274,"line_start":2518,"line_end":2518,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193279,"byte_end":193282,"line_start":2519,"line_end":2519,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193287,"byte_end":193340,"line_start":2520,"line_end":2520,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193345,"byte_end":193348,"line_start":2521,"line_end":2521,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(v) = map.entry(\"poneyland\") {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193353,"byte_end":193407,"line_start":2522,"line_end":2522,"column_start":5,"column_end":59}},{"value":"/     v.into_key();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193412,"byte_end":193433,"line_start":2523,"line_end":2523,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193438,"byte_end":193443,"line_start":2524,"line_end":2524,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193448,"byte_end":193455,"line_start":2525,"line_end":2525,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193460,"byte_end":193469,"line_start":2526,"line_end":2526,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":194154,"byte_end":194160,"line_start":2550,"line_end":2550,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193614,"byte_end":193673,"line_start":2532,"line_end":2532,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193678,"byte_end":193720,"line_start":2533,"line_end":2533,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193725,"byte_end":193728,"line_start":2534,"line_end":2534,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193733,"byte_end":193747,"line_start":2535,"line_end":2535,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193752,"byte_end":193755,"line_start":2536,"line_end":2536,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193760,"byte_end":193767,"line_start":2537,"line_end":2537,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193772,"byte_end":193806,"line_start":2538,"line_end":2538,"column_start":5,"column_end":39}},{"value":"/ use std::collections::hash_map::Entry;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193811,"byte_end":193853,"line_start":2539,"line_end":2539,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193858,"byte_end":193861,"line_start":2540,"line_end":2540,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193866,"byte_end":193919,"line_start":2541,"line_end":2541,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193924,"byte_end":193927,"line_start":2542,"line_end":2542,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193932,"byte_end":193986,"line_start":2543,"line_end":2543,"column_start":5,"column_end":59}},{"value":"/     o.insert(37);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":193991,"byte_end":194012,"line_start":2544,"line_end":2544,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":194017,"byte_end":194022,"line_start":2545,"line_end":2545,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[\"poneyland\"], 37);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":194027,"byte_end":194064,"line_start":2546,"line_end":2546,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":194069,"byte_end":194076,"line_start":2547,"line_end":2547,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":194081,"byte_end":194090,"line_start":2548,"line_end":2548,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7095},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197435,"byte_end":197446,"line_start":2663,"line_end":2663,"column_start":12,"column_end":23},"name":"RandomState","qualname":"::collections::hash::map::RandomState","value":"RandomState {  }","parent":null,"children":[{"krate":0,"index":7096},{"krate":0,"index":7097}],"decl_id":null,"docs":" `RandomState` is the default state for [`HashMap`] types.","sig":null,"attributes":[{"value":"/ `RandomState` is the default state for [`HashMap`] types.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":196834,"byte_end":196895,"line_start":2645,"line_end":2645,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":196896,"byte_end":196899,"line_start":2646,"line_end":2646,"column_start":1,"column_end":4}},{"value":"/ A particular instance `RandomState` will create the same instances of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":196900,"byte_end":196973,"line_start":2647,"line_end":2647,"column_start":1,"column_end":74}},{"value":"/ [`Hasher`], but the hashers created by two different `RandomState`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":196974,"byte_end":197044,"line_start":2648,"line_end":2648,"column_start":1,"column_end":71}},{"value":"/ instances are unlikely to produce the same result for the same values.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197045,"byte_end":197119,"line_start":2649,"line_end":2649,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197120,"byte_end":197123,"line_start":2650,"line_end":2650,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197124,"byte_end":197138,"line_start":2651,"line_end":2651,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197139,"byte_end":197142,"line_start":2652,"line_end":2652,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197143,"byte_end":197150,"line_start":2653,"line_end":2653,"column_start":1,"column_end":8}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197151,"byte_end":197185,"line_start":2654,"line_end":2654,"column_start":1,"column_end":35}},{"value":"/ use std::collections::hash_map::RandomState;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197186,"byte_end":197234,"line_start":2655,"line_end":2655,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197235,"byte_end":197238,"line_start":2656,"line_end":2656,"column_start":1,"column_end":4}},{"value":"/ let s = RandomState::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197239,"byte_end":197270,"line_start":2657,"line_end":2657,"column_start":1,"column_end":32}},{"value":"/ let mut map = HashMap::with_hasher(s);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197271,"byte_end":197313,"line_start":2658,"line_end":2658,"column_start":1,"column_end":43}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197314,"byte_end":197335,"line_start":2659,"line_end":2659,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197336,"byte_end":197343,"line_start":2660,"line_end":2660,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197859,"byte_end":197862,"line_start":2682,"line_end":2682,"column_start":12,"column_end":15},"name":"new","qualname":"<RandomState>::new","value":"pub fn new() -> RandomState","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `RandomState` that is initialized with random keys.","sig":null,"attributes":[{"value":"/ Constructs a new `RandomState` that is initialized with random keys.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197501,"byte_end":197573,"line_start":2669,"line_end":2669,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197578,"byte_end":197581,"line_start":2670,"line_end":2670,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197586,"byte_end":197600,"line_start":2671,"line_end":2671,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197605,"byte_end":197608,"line_start":2672,"line_end":2672,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197613,"byte_end":197620,"line_start":2673,"line_end":2673,"column_start":5,"column_end":12}},{"value":"/ use std::collections::hash_map::RandomState;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197625,"byte_end":197673,"line_start":2674,"line_end":2674,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197678,"byte_end":197681,"line_start":2675,"line_end":2675,"column_start":5,"column_end":8}},{"value":"/ let s = RandomState::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197686,"byte_end":197717,"line_start":2676,"line_end":2676,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197722,"byte_end":197729,"line_start":2677,"line_end":2677,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197734,"byte_end":197743,"line_start":2678,"line_end":2678,"column_start":5,"column_end":14}},{"value":"allow(deprecated)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197748,"byte_end":197768,"line_start":2679,"line_end":2679,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":7104},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":199537,"byte_end":199550,"line_start":2723,"line_end":2723,"column_start":12,"column_end":25},"name":"DefaultHasher","qualname":"::collections::hash::map::DefaultHasher","value":"","parent":null,"children":[],"decl_id":null,"docs":" The default [`Hasher`] used by [`RandomState`].","sig":null,"attributes":[{"value":"/ The default [`Hasher`] used by [`RandomState`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":199244,"byte_end":199295,"line_start":2716,"line_end":2716,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":199296,"byte_end":199299,"line_start":2717,"line_end":2717,"column_start":1,"column_end":4}},{"value":"/ The internal algorithm is not specified, and so it and its hashes should","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":199300,"byte_end":199376,"line_start":2718,"line_end":2718,"column_start":1,"column_end":77}},{"value":"/ not be relied upon over releases.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":199377,"byte_end":199414,"line_start":2719,"line_end":2719,"column_start":1,"column_end":38}},{"value":"allow(deprecated)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":199481,"byte_end":199501,"line_start":2721,"line_end":2721,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":199940,"byte_end":199943,"line_start":2733,"line_end":2733,"column_start":12,"column_end":15},"name":"new","qualname":"<DefaultHasher>::new","value":"pub fn new() -> DefaultHasher","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `DefaultHasher`.","sig":null,"attributes":[{"value":"/ Creates a new `DefaultHasher`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":199591,"byte_end":199625,"line_start":2726,"line_end":2726,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":199630,"byte_end":199633,"line_start":2727,"line_end":2727,"column_start":5,"column_end":8}},{"value":"/ This hasher is not guaranteed to be the same as all other","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":199638,"byte_end":199699,"line_start":2728,"line_end":2728,"column_start":5,"column_end":66}},{"value":"/ `DefaultHasher` instances, but is the same as all other `DefaultHasher`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":199704,"byte_end":199779,"line_start":2729,"line_end":2729,"column_start":5,"column_end":80}},{"value":"/ instances created through `new` or `default`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":199784,"byte_end":199833,"line_start":2730,"line_end":2730,"column_start":5,"column_end":54}},{"value":"allow(deprecated)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":199908,"byte_end":199928,"line_start":2732,"line_end":2732,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":7111},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206921,"byte_end":206928,"line_start":112,"line_end":112,"column_start":12,"column_end":19},"name":"HashSet","qualname":"::collections::hash::set::HashSet","value":"HashSet {  }","parent":null,"children":[{"krate":0,"index":7114}],"decl_id":null,"docs":" A hash set implemented as a `HashMap` where the value is `()`.","sig":null,"attributes":[{"value":"/ A hash set implemented as a `HashMap` where the value is `()`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":203949,"byte_end":204015,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204016,"byte_end":204019,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ As with the [`HashMap`] type, a `HashSet` requires that the elements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204020,"byte_end":204092,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ implement the [`Eq`] and [`Hash`] traits. This can frequently be achieved by","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204093,"byte_end":204173,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ using `#[derive(PartialEq, Eq, Hash)]`. If you implement these yourself,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204174,"byte_end":204250,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ it is important that the following property holds:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204251,"byte_end":204305,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204306,"byte_end":204309,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204310,"byte_end":204321,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/ k1 == k2 -> hash(k1) == hash(k2)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204322,"byte_end":204358,"line_start":30,"line_end":30,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204359,"byte_end":204366,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204367,"byte_end":204370,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In other words, if two keys are equal, their hashes must be equal.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204371,"byte_end":204441,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204442,"byte_end":204445,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204446,"byte_end":204449,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ It is a logic error for an item to be modified in such a way that the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204450,"byte_end":204523,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/ item's hash, as determined by the [`Hash`] trait, or its equality, as","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204524,"byte_end":204597,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/ determined by the [`Eq`] trait, changes while it is in the set. This is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204598,"byte_end":204673,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ normally only possible through [`Cell`], [`RefCell`], global state, I/O, or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204674,"byte_end":204753,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ unsafe code.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204754,"byte_end":204770,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204771,"byte_end":204774,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204775,"byte_end":204789,"line_start":42,"line_end":42,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204790,"byte_end":204793,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204794,"byte_end":204801,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204802,"byte_end":204836,"line_start":45,"line_end":45,"column_start":1,"column_end":35}},{"value":"/ // Type inference lets us omit an explicit type signature (which","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204837,"byte_end":204905,"line_start":46,"line_end":46,"column_start":1,"column_end":69}},{"value":"/ // would be `HashSet<String>` in this example).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204906,"byte_end":204957,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/ let mut books = HashSet::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204958,"byte_end":204993,"line_start":48,"line_end":48,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204994,"byte_end":204997,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Add some books.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":204998,"byte_end":205020,"line_start":50,"line_end":50,"column_start":1,"column_end":23}},{"value":"/ books.insert(\"A Dance With Dragons\".to_string());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205021,"byte_end":205074,"line_start":51,"line_end":51,"column_start":1,"column_end":54}},{"value":"/ books.insert(\"To Kill a Mockingbird\".to_string());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205075,"byte_end":205129,"line_start":52,"line_end":52,"column_start":1,"column_end":55}},{"value":"/ books.insert(\"The Odyssey\".to_string());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205130,"byte_end":205174,"line_start":53,"line_end":53,"column_start":1,"column_end":45}},{"value":"/ books.insert(\"The Great Gatsby\".to_string());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205175,"byte_end":205224,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205225,"byte_end":205228,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Check for a specific one.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205229,"byte_end":205261,"line_start":56,"line_end":56,"column_start":1,"column_end":33}},{"value":"/ if !books.contains(\"The Winds of Winter\") {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205262,"byte_end":205309,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"/     println!(\"We have {} books, but The Winds of Winter ain't one.\",","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205310,"byte_end":205382,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/              books.len());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205383,"byte_end":205413,"line_start":59,"line_end":59,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205414,"byte_end":205419,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205420,"byte_end":205423,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // Remove a book.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205424,"byte_end":205445,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/ books.remove(\"The Odyssey\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205446,"byte_end":205478,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205479,"byte_end":205482,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ // Iterate over everything.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205483,"byte_end":205514,"line_start":65,"line_end":65,"column_start":1,"column_end":32}},{"value":"/ for book in &books {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205515,"byte_end":205539,"line_start":66,"line_end":66,"column_start":1,"column_end":25}},{"value":"/     println!(\"{}\", book);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205540,"byte_end":205569,"line_start":67,"line_end":67,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205570,"byte_end":205575,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205576,"byte_end":205583,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205584,"byte_end":205587,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ The easiest way to use `HashSet` with a custom type is to derive","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205588,"byte_end":205656,"line_start":71,"line_end":71,"column_start":1,"column_end":69}},{"value":"/ [`Eq`] and [`Hash`]. We must also derive [`PartialEq`], this will in the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205657,"byte_end":205733,"line_start":72,"line_end":72,"column_start":1,"column_end":77}},{"value":"/ future be implied by [`Eq`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205734,"byte_end":205766,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205767,"byte_end":205770,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205771,"byte_end":205778,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205779,"byte_end":205813,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/ #[derive(Hash, Eq, PartialEq, Debug)]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205814,"byte_end":205855,"line_start":77,"line_end":77,"column_start":1,"column_end":42}},{"value":"/ struct Viking {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205856,"byte_end":205875,"line_start":78,"line_end":78,"column_start":1,"column_end":20}},{"value":"/     name: String,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205876,"byte_end":205897,"line_start":79,"line_end":79,"column_start":1,"column_end":22}},{"value":"/     power: usize,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205898,"byte_end":205919,"line_start":80,"line_end":80,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205920,"byte_end":205925,"line_start":81,"line_end":81,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205926,"byte_end":205929,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ let mut vikings = HashSet::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205930,"byte_end":205967,"line_start":83,"line_end":83,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205968,"byte_end":205971,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ vikings.insert(Viking { name: \"Einar\".to_string(), power: 9 });","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":205972,"byte_end":206039,"line_start":85,"line_end":85,"column_start":1,"column_end":68}},{"value":"/ vikings.insert(Viking { name: \"Einar\".to_string(), power: 9 });","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206040,"byte_end":206107,"line_start":86,"line_end":86,"column_start":1,"column_end":68}},{"value":"/ vikings.insert(Viking { name: \"Olaf\".to_string(), power: 4 });","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206108,"byte_end":206174,"line_start":87,"line_end":87,"column_start":1,"column_end":67}},{"value":"/ vikings.insert(Viking { name: \"Harald\".to_string(), power: 8 });","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206175,"byte_end":206243,"line_start":88,"line_end":88,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206244,"byte_end":206247,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ // Use derived implementation to print the vikings.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206248,"byte_end":206303,"line_start":90,"line_end":90,"column_start":1,"column_end":56}},{"value":"/ for x in &vikings {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206304,"byte_end":206327,"line_start":91,"line_end":91,"column_start":1,"column_end":24}},{"value":"/     println!(\"{:?}\", x);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206328,"byte_end":206356,"line_start":92,"line_end":92,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206357,"byte_end":206362,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206363,"byte_end":206370,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206371,"byte_end":206374,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ A `HashSet` with fixed list of elements can be initialized from an array:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206375,"byte_end":206452,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206453,"byte_end":206456,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206457,"byte_end":206464,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206465,"byte_end":206499,"line_start":99,"line_end":99,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206500,"byte_end":206503,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ let viking_names: HashSet<&'static str> =","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206504,"byte_end":206549,"line_start":101,"line_end":101,"column_start":1,"column_end":46}},{"value":"/     [ \"Einar\", \"Olaf\", \"Harald\" ].iter().cloned().collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206550,"byte_end":206614,"line_start":102,"line_end":102,"column_start":1,"column_end":65}},{"value":"/ // use the values stored in the set","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206615,"byte_end":206654,"line_start":103,"line_end":103,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206655,"byte_end":206662,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206663,"byte_end":206666,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: crate::collections::HashMap","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206667,"byte_end":206711,"line_start":106,"line_end":106,"column_start":1,"column_end":45}},{"value":"/ [`RefCell`]: crate::cell::RefCell","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206712,"byte_end":206749,"line_start":107,"line_end":107,"column_start":1,"column_end":38}},{"value":"/ [`Cell`]: crate::cell::Cell","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206750,"byte_end":206781,"line_start":108,"line_end":108,"column_start":1,"column_end":32}},{"value":"rustc_diagnostic_item = \"hashset_type\"","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206821,"byte_end":206859,"line_start":110,"line_end":110,"column_start":23,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207415,"byte_end":207418,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"new","qualname":"<HashSet<T, RandomState>>::new","value":"pub fn new() -> HashSet<T, RandomState>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet`.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207023,"byte_end":207054,"line_start":117,"line_end":117,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207059,"byte_end":207062,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The hash set is initially created with a capacity of 0, so it will not allocate until it","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207067,"byte_end":207159,"line_start":119,"line_end":119,"column_start":5,"column_end":97}},{"value":"/ is first inserted into.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207164,"byte_end":207191,"line_start":120,"line_end":120,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207196,"byte_end":207199,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207204,"byte_end":207218,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207223,"byte_end":207226,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207231,"byte_end":207238,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207243,"byte_end":207277,"line_start":125,"line_end":125,"column_start":5,"column_end":39}},{"value":"/ let set: HashSet<i32> = HashSet::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207282,"byte_end":207325,"line_start":126,"line_end":126,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207330,"byte_end":207337,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207342,"byte_end":207351,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207983,"byte_end":207996,"line_start":148,"line_end":148,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<HashSet<T, RandomState>>::with_capacity","value":"pub fn with_capacity(usize) -> HashSet<T, RandomState>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet` with the specified capacity.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207488,"byte_end":207547,"line_start":134,"line_end":134,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207552,"byte_end":207555,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ The hash set will be able to hold at least `capacity` elements without","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207560,"byte_end":207634,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash set will not allocate.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207639,"byte_end":207708,"line_start":137,"line_end":137,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207713,"byte_end":207716,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207721,"byte_end":207735,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207740,"byte_end":207743,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207748,"byte_end":207755,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207760,"byte_end":207794,"line_start":142,"line_end":142,"column_start":5,"column_end":39}},{"value":"/ let set: HashSet<i32> = HashSet::with_capacity(10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207799,"byte_end":207854,"line_start":143,"line_end":143,"column_start":5,"column_end":60}},{"value":"/ assert!(set.capacity() >= 10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207859,"byte_end":207893,"line_start":144,"line_end":144,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207898,"byte_end":207905,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":207910,"byte_end":207919,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208529,"byte_end":208537,"line_start":165,"line_end":165,"column_start":12,"column_end":20},"name":"capacity","qualname":"<HashSet<T, S>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the set can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the set can hold without reallocating.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208179,"byte_end":208252,"line_start":154,"line_end":154,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208257,"byte_end":208260,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208265,"byte_end":208279,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208284,"byte_end":208287,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208292,"byte_end":208299,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208304,"byte_end":208338,"line_start":159,"line_end":159,"column_start":5,"column_end":39}},{"value":"/ let set: HashSet<i32> = HashSet::with_capacity(100);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208343,"byte_end":208399,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/ assert!(set.capacity() >= 100);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208404,"byte_end":208439,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208444,"byte_end":208451,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208456,"byte_end":208465,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209087,"byte_end":209091,"line_start":187,"line_end":187,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashSet<T, S>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all elements in arbitrary order.\n The iterator element type is `&'a T`.","sig":null,"attributes":[{"value":"/ An iterator visiting all elements in arbitrary order.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208596,"byte_end":208653,"line_start":169,"line_end":169,"column_start":5,"column_end":62}},{"value":"/ The iterator element type is `&'a T`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208658,"byte_end":208699,"line_start":170,"line_end":170,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208704,"byte_end":208707,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208712,"byte_end":208726,"line_start":172,"line_end":172,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208731,"byte_end":208734,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208739,"byte_end":208746,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208751,"byte_end":208785,"line_start":175,"line_end":175,"column_start":5,"column_end":39}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208790,"byte_end":208823,"line_start":176,"line_end":176,"column_start":5,"column_end":38}},{"value":"/ set.insert(\"a\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208828,"byte_end":208848,"line_start":177,"line_end":177,"column_start":5,"column_end":25}},{"value":"/ set.insert(\"b\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208853,"byte_end":208873,"line_start":178,"line_end":178,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208878,"byte_end":208881,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ // Will print in an arbitrary order.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208886,"byte_end":208926,"line_start":180,"line_end":180,"column_start":5,"column_end":45}},{"value":"/ for x in set.iter() {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208931,"byte_end":208956,"line_start":181,"line_end":181,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208961,"byte_end":208987,"line_start":182,"line_end":182,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208992,"byte_end":208997,"line_start":183,"line_end":183,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209002,"byte_end":209009,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209014,"byte_end":209023,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209518,"byte_end":209521,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"len","qualname":"<HashSet<T, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the set.","sig":null,"attributes":[{"value":"/ Returns the number of elements in the set.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209167,"byte_end":209213,"line_start":191,"line_end":191,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209218,"byte_end":209221,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209226,"byte_end":209240,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209245,"byte_end":209248,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209253,"byte_end":209260,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209265,"byte_end":209299,"line_start":196,"line_end":196,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209304,"byte_end":209307,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ let mut v = HashSet::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209312,"byte_end":209343,"line_start":198,"line_end":198,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(v.len(), 0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209348,"byte_end":209375,"line_start":199,"line_end":199,"column_start":5,"column_end":32}},{"value":"/ v.insert(1);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209380,"byte_end":209396,"line_start":200,"line_end":200,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(v.len(), 1);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209401,"byte_end":209428,"line_start":201,"line_end":201,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209433,"byte_end":209440,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209445,"byte_end":209454,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209930,"byte_end":209938,"line_start":223,"line_end":223,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashSet<T, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no elements.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209575,"byte_end":209626,"line_start":209,"line_end":209,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209631,"byte_end":209634,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209639,"byte_end":209653,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209658,"byte_end":209661,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209666,"byte_end":209673,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209678,"byte_end":209712,"line_start":214,"line_end":214,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209717,"byte_end":209720,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let mut v = HashSet::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209725,"byte_end":209756,"line_start":216,"line_end":216,"column_start":5,"column_end":36}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209761,"byte_end":209787,"line_start":217,"line_end":217,"column_start":5,"column_end":31}},{"value":"/ v.insert(1);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209792,"byte_end":209808,"line_start":218,"line_end":218,"column_start":5,"column_end":21}},{"value":"/ assert!(!v.is_empty());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209813,"byte_end":209840,"line_start":219,"line_end":219,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209845,"byte_end":209852,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209857,"byte_end":209866,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":210511,"byte_end":210516,"line_start":246,"line_end":246,"column_start":12,"column_end":17},"name":"drain","qualname":"<HashSet<T, S>>::drain","value":"pub fn drain(&mut Self) -> Drain<, T>","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, returning all elements in an iterator.","sig":null,"attributes":[{"value":"/ Clears the set, returning all elements in an iterator.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":209996,"byte_end":210054,"line_start":227,"line_end":227,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":210059,"byte_end":210062,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":210067,"byte_end":210081,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":210086,"byte_end":210089,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":210094,"byte_end":210101,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":210106,"byte_end":210140,"line_start":232,"line_end":232,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":210145,"byte_end":210148,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":210153,"byte_end":210219,"line_start":234,"line_end":234,"column_start":5,"column_end":71}},{"value":"/ assert!(!set.is_empty());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":210224,"byte_end":210253,"line_start":235,"line_end":235,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":210258,"byte_end":210261,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ // print 1, 2, 3 in an arbitrary order","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":210266,"byte_end":210308,"line_start":237,"line_end":237,"column_start":5,"column_end":47}},{"value":"/ for i in set.drain() {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":210313,"byte_end":210339,"line_start":238,"line_end":238,"column_start":5,"column_end":31}},{"value":"/     println!(\"{}\", i);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":210344,"byte_end":210370,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":210375,"byte_end":210380,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":210385,"byte_end":210388,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ assert!(set.is_empty());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":210393,"byte_end":210421,"line_start":242,"line_end":242,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":210426,"byte_end":210433,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":210438,"byte_end":210447,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":212047,"byte_end":212059,"line_start":284,"line_end":284,"column_start":12,"column_end":24},"name":"drain_filter","qualname":"<HashSet<T, S>>::drain_filter","value":"pub fn drain_filter<F>(&mut Self, F) -> DrainFilter<, T, F> where F: FnMut(&T)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator which uses a closure to determine if a value should be removed.","sig":null,"attributes":[{"value":"/ Creates an iterator which uses a closure to determine if a value should be removed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":210599,"byte_end":210686,"line_start":250,"line_end":250,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":210691,"byte_end":210694,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ If the closure returns true, then the value is removed and yielded.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":210699,"byte_end":210770,"line_start":252,"line_end":252,"column_start":5,"column_end":76}},{"value":"/ If the closure returns false, the value will remain in the list and will not be yielded","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":210775,"byte_end":210866,"line_start":253,"line_end":253,"column_start":5,"column_end":96}},{"value":"/ by the iterator.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":210871,"byte_end":210891,"line_start":254,"line_end":254,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":210896,"byte_end":210899,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ If the iterator is only partially consumed or not consumed at all, each of the remaining","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":210904,"byte_end":210996,"line_start":256,"line_end":256,"column_start":5,"column_end":97}},{"value":"/ values will still be subjected to the closure and removed and dropped if it returns true.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":211001,"byte_end":211094,"line_start":257,"line_end":257,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":211099,"byte_end":211102,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ It is unspecified how many more values will be subjected to the closure","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":211107,"byte_end":211182,"line_start":259,"line_end":259,"column_start":5,"column_end":80}},{"value":"/ if a panic occurs in the closure, or if a panic occurs while dropping a value, or if the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":211187,"byte_end":211279,"line_start":260,"line_end":260,"column_start":5,"column_end":97}},{"value":"/ `DrainFilter` itself is leaked.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":211284,"byte_end":211319,"line_start":261,"line_end":261,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":211324,"byte_end":211327,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":211332,"byte_end":211346,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":211351,"byte_end":211354,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ Splitting a set into even and odd values, reusing the original set:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":211359,"byte_end":211430,"line_start":265,"line_end":265,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":211435,"byte_end":211438,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":211443,"byte_end":211450,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ #![feature(hash_drain_filter)]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":211455,"byte_end":211489,"line_start":268,"line_end":268,"column_start":5,"column_end":39}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":211494,"byte_end":211528,"line_start":269,"line_end":269,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":211533,"byte_end":211536,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<i32> = (0..8).collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":211541,"byte_end":211590,"line_start":271,"line_end":271,"column_start":5,"column_end":54}},{"value":"/ let drained: HashSet<i32> = set.drain_filter(|v| v % 2 == 0).collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":211595,"byte_end":211670,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":211675,"byte_end":211678,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let mut evens = drained.into_iter().collect::<Vec<_>>();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":211683,"byte_end":211743,"line_start":274,"line_end":274,"column_start":5,"column_end":65}},{"value":"/ let mut odds = set.into_iter().collect::<Vec<_>>();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":211748,"byte_end":211803,"line_start":275,"line_end":275,"column_start":5,"column_end":60}},{"value":"/ evens.sort();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":211808,"byte_end":211825,"line_start":276,"line_end":276,"column_start":5,"column_end":22}},{"value":"/ odds.sort();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":211830,"byte_end":211846,"line_start":277,"line_end":277,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":211851,"byte_end":211854,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens, vec![0, 2, 4, 6]);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":211859,"byte_end":211899,"line_start":279,"line_end":279,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(odds, vec![1, 3, 5, 7]);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":211904,"byte_end":211943,"line_start":280,"line_end":280,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":211948,"byte_end":211955,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":211960,"byte_end":211969,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":212555,"byte_end":212560,"line_start":305,"line_end":305,"column_start":12,"column_end":17},"name":"clear","qualname":"<HashSet<T, S>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all values.","sig":null,"attributes":[{"value":"/ Clears the set, removing all values.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":212224,"byte_end":212264,"line_start":291,"line_end":291,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":212269,"byte_end":212272,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":212277,"byte_end":212291,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":212296,"byte_end":212299,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":212304,"byte_end":212311,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":212316,"byte_end":212350,"line_start":296,"line_end":296,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":212355,"byte_end":212358,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let mut v = HashSet::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":212363,"byte_end":212394,"line_start":298,"line_end":298,"column_start":5,"column_end":36}},{"value":"/ v.insert(1);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":212399,"byte_end":212415,"line_start":299,"line_end":299,"column_start":5,"column_end":21}},{"value":"/ v.clear();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":212420,"byte_end":212434,"line_start":300,"line_end":300,"column_start":5,"column_end":19}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":212439,"byte_end":212465,"line_start":301,"line_end":301,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":212470,"byte_end":212477,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":212482,"byte_end":212491,"line_start":303,"line_end":303,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":213572,"byte_end":213583,"line_start":334,"line_end":334,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<HashSet<T, S>>::with_hasher","value":"pub fn with_hasher(S) -> HashSet<T, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty hash set which will use the given hasher to hash\n keys.","sig":null,"attributes":[{"value":"/ Creates a new empty hash set which will use the given hasher to hash","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":212611,"byte_end":212683,"line_start":309,"line_end":309,"column_start":5,"column_end":77}},{"value":"/ keys.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":212688,"byte_end":212697,"line_start":310,"line_end":310,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":212702,"byte_end":212705,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ The hash set is also created with the default initial capacity.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":212710,"byte_end":212777,"line_start":312,"line_end":312,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":212782,"byte_end":212785,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Warning: `hasher` is normally randomly generated, and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":212790,"byte_end":212847,"line_start":314,"line_end":314,"column_start":5,"column_end":62}},{"value":"/ is designed to allow `HashSet`s to be resistant to attacks that","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":212852,"byte_end":212919,"line_start":315,"line_end":315,"column_start":5,"column_end":72}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":212924,"byte_end":212987,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":212992,"byte_end":213056,"line_start":317,"line_end":317,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":213061,"byte_end":213064,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":213069,"byte_end":213145,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":213150,"byte_end":213214,"line_start":320,"line_end":320,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":213219,"byte_end":213222,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":213227,"byte_end":213241,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":213246,"byte_end":213249,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":213254,"byte_end":213261,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":213266,"byte_end":213300,"line_start":325,"line_end":325,"column_start":5,"column_end":39}},{"value":"/ use std::collections::hash_map::RandomState;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":213305,"byte_end":213353,"line_start":326,"line_end":326,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":213358,"byte_end":213361,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ let s = RandomState::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":213366,"byte_end":213397,"line_start":328,"line_end":328,"column_start":5,"column_end":36}},{"value":"/ let mut set = HashSet::with_hasher(s);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":213402,"byte_end":213444,"line_start":329,"line_end":329,"column_start":5,"column_end":47}},{"value":"/ set.insert(2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":213449,"byte_end":213467,"line_start":330,"line_end":330,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":213472,"byte_end":213479,"line_start":331,"line_end":331,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":213484,"byte_end":213493,"line_start":332,"line_end":332,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":214759,"byte_end":214783,"line_start":364,"line_end":364,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<HashSet<T, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> HashSet<T, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet` with the specified capacity, using\n `hasher` to hash the keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet` with the specified capacity, using","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":213686,"byte_end":213751,"line_start":338,"line_end":338,"column_start":5,"column_end":70}},{"value":"/ `hasher` to hash the keys.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":213756,"byte_end":213786,"line_start":339,"line_end":339,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":213791,"byte_end":213794,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ The hash set will be able to hold at least `capacity` elements without","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":213799,"byte_end":213873,"line_start":341,"line_end":341,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash set will not allocate.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":213878,"byte_end":213947,"line_start":342,"line_end":342,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":213952,"byte_end":213955,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Warning: `hasher` is normally randomly generated, and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":213960,"byte_end":214017,"line_start":344,"line_end":344,"column_start":5,"column_end":62}},{"value":"/ is designed to allow `HashSet`s to be resistant to attacks that","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":214022,"byte_end":214089,"line_start":345,"line_end":345,"column_start":5,"column_end":72}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":214094,"byte_end":214157,"line_start":346,"line_end":346,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":214162,"byte_end":214226,"line_start":347,"line_end":347,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":214231,"byte_end":214234,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":214239,"byte_end":214315,"line_start":349,"line_end":349,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":214320,"byte_end":214384,"line_start":350,"line_end":350,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":214389,"byte_end":214392,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":214397,"byte_end":214411,"line_start":352,"line_end":352,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":214416,"byte_end":214419,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":214424,"byte_end":214431,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":214436,"byte_end":214470,"line_start":355,"line_end":355,"column_start":5,"column_end":39}},{"value":"/ use std::collections::hash_map::RandomState;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":214475,"byte_end":214523,"line_start":356,"line_end":356,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":214528,"byte_end":214531,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ let s = RandomState::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":214536,"byte_end":214567,"line_start":358,"line_end":358,"column_start":5,"column_end":36}},{"value":"/ let mut set = HashSet::with_capacity_and_hasher(10, s);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":214572,"byte_end":214631,"line_start":359,"line_end":359,"column_start":5,"column_end":64}},{"value":"/ set.insert(1);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":214636,"byte_end":214654,"line_start":360,"line_end":360,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":214659,"byte_end":214666,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":214671,"byte_end":214680,"line_start":362,"line_end":362,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215384,"byte_end":215390,"line_start":382,"line_end":382,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashSet<T, S>>::hasher","value":"pub fn hasher(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the set's [`BuildHasher`].","sig":null,"attributes":[{"value":"/ Returns a reference to the set's [`BuildHasher`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":214926,"byte_end":214979,"line_start":368,"line_end":368,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":214984,"byte_end":214987,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":214992,"byte_end":215006,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215011,"byte_end":215014,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215019,"byte_end":215026,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215031,"byte_end":215065,"line_start":373,"line_end":373,"column_start":5,"column_end":39}},{"value":"/ use std::collections::hash_map::RandomState;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215070,"byte_end":215118,"line_start":374,"line_end":374,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215123,"byte_end":215126,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ let hasher = RandomState::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215131,"byte_end":215167,"line_start":376,"line_end":376,"column_start":5,"column_end":41}},{"value":"/ let set: HashSet<i32> = HashSet::with_hasher(hasher);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215172,"byte_end":215229,"line_start":377,"line_end":377,"column_start":5,"column_end":62}},{"value":"/ let hasher: &RandomState = set.hasher();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215234,"byte_end":215278,"line_start":378,"line_end":378,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215283,"byte_end":215290,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215295,"byte_end":215304,"line_start":380,"line_end":380,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":216084,"byte_end":216091,"line_start":410,"line_end":410,"column_start":12,"column_end":19},"name":"reserve","qualname":"<HashSet<T, S>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more elements to be inserted\n in the `HashSet`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more elements to be inserted","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215517,"byte_end":215593,"line_start":392,"line_end":392,"column_start":5,"column_end":81}},{"value":"/ in the `HashSet`. The collection may reserve more space to avoid","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215598,"byte_end":215666,"line_start":393,"line_end":393,"column_start":5,"column_end":73}},{"value":"/ frequent reallocations.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215671,"byte_end":215698,"line_start":394,"line_end":394,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215703,"byte_end":215706,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215711,"byte_end":215723,"line_start":396,"line_end":396,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215728,"byte_end":215731,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ Panics if the new allocation size overflows `usize`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215736,"byte_end":215792,"line_start":398,"line_end":398,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215797,"byte_end":215800,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215805,"byte_end":215819,"line_start":400,"line_end":400,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215824,"byte_end":215827,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215832,"byte_end":215839,"line_start":402,"line_end":402,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215844,"byte_end":215878,"line_start":403,"line_end":403,"column_start":5,"column_end":39}},{"value":"/ let mut set: HashSet<i32> = HashSet::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215883,"byte_end":215930,"line_start":404,"line_end":404,"column_start":5,"column_end":52}},{"value":"/ set.reserve(10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215935,"byte_end":215955,"line_start":405,"line_end":405,"column_start":5,"column_end":25}},{"value":"/ assert!(set.capacity() >= 10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215960,"byte_end":215994,"line_start":406,"line_end":406,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215999,"byte_end":216006,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":216011,"byte_end":216020,"line_start":408,"line_end":408,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":216884,"byte_end":216895,"line_start":433,"line_end":433,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<HashSet<T, S>>::try_reserve","value":"pub fn try_reserve(&mut Self, usize) -> Result<(), TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to reserve capacity for at least `additional` more elements to be inserted\n in the given `HashSet<K,V>`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Tries to reserve capacity for at least `additional` more elements to be inserted","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":216173,"byte_end":216257,"line_start":414,"line_end":414,"column_start":5,"column_end":89}},{"value":"/ in the given `HashSet<K,V>`. The collection may reserve more space to avoid","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":216262,"byte_end":216341,"line_start":415,"line_end":415,"column_start":5,"column_end":84}},{"value":"/ frequent reallocations.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":216346,"byte_end":216373,"line_start":416,"line_end":416,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":216378,"byte_end":216381,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":216386,"byte_end":216398,"line_start":418,"line_end":418,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":216403,"byte_end":216406,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ If the capacity overflows, or the allocator reports a failure, then an error","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":216411,"byte_end":216491,"line_start":420,"line_end":420,"column_start":5,"column_end":85}},{"value":"/ is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":216496,"byte_end":216512,"line_start":421,"line_end":421,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":216517,"byte_end":216520,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":216525,"byte_end":216539,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":216544,"byte_end":216547,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":216552,"byte_end":216559,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ #![feature(try_reserve)]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":216564,"byte_end":216592,"line_start":426,"line_end":426,"column_start":5,"column_end":33}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":216597,"byte_end":216631,"line_start":427,"line_end":427,"column_start":5,"column_end":39}},{"value":"/ let mut set: HashSet<i32> = HashSet::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":216636,"byte_end":216683,"line_start":428,"line_end":428,"column_start":5,"column_end":52}},{"value":"/ set.try_reserve(10).expect(\"why is the test harness OOMing on 10 bytes?\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":216688,"byte_end":216766,"line_start":429,"line_end":429,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":216771,"byte_end":216778,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":216783,"byte_end":216792,"line_start":431,"line_end":431,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":217648,"byte_end":217661,"line_start":455,"line_end":455,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<HashSet<T, S>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the set as much as possible. It will drop\n down as much as possible while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the set as much as possible. It will drop","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":217043,"byte_end":217112,"line_start":437,"line_end":437,"column_start":5,"column_end":74}},{"value":"/ down as much as possible while maintaining the internal rules","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":217117,"byte_end":217182,"line_start":438,"line_end":438,"column_start":5,"column_end":70}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":217187,"byte_end":217260,"line_start":439,"line_end":439,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":217265,"byte_end":217268,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":217273,"byte_end":217287,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":217292,"byte_end":217295,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":217300,"byte_end":217307,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":217312,"byte_end":217346,"line_start":444,"line_end":444,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":217351,"byte_end":217354,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::with_capacity(100);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":217359,"byte_end":217405,"line_start":446,"line_end":446,"column_start":5,"column_end":51}},{"value":"/ set.insert(1);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":217410,"byte_end":217428,"line_start":447,"line_end":447,"column_start":5,"column_end":23}},{"value":"/ set.insert(2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":217433,"byte_end":217451,"line_start":448,"line_end":448,"column_start":5,"column_end":23}},{"value":"/ assert!(set.capacity() >= 100);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":217456,"byte_end":217491,"line_start":449,"line_end":449,"column_start":5,"column_end":40}},{"value":"/ set.shrink_to_fit();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":217496,"byte_end":217520,"line_start":450,"line_end":450,"column_start":5,"column_end":29}},{"value":"/ assert!(set.capacity() >= 2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":217525,"byte_end":217558,"line_start":451,"line_end":451,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":217563,"byte_end":217570,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":217575,"byte_end":217584,"line_start":453,"line_end":453,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218559,"byte_end":218568,"line_start":483,"line_end":483,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<HashSet<T, S>>::shrink_to","value":"pub fn shrink_to(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the set with a lower limit. It will drop\n down no lower than the supplied limit while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the set with a lower limit. It will drop","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":217720,"byte_end":217788,"line_start":459,"line_end":459,"column_start":5,"column_end":73}},{"value":"/ down no lower than the supplied limit while maintaining the internal rules","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":217793,"byte_end":217871,"line_start":460,"line_end":460,"column_start":5,"column_end":83}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":217876,"byte_end":217949,"line_start":461,"line_end":461,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":217954,"byte_end":217957,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ Panics if the current capacity is smaller than the supplied","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":217962,"byte_end":218025,"line_start":463,"line_end":463,"column_start":5,"column_end":68}},{"value":"/ minimum capacity.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218030,"byte_end":218051,"line_start":464,"line_end":464,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218056,"byte_end":218059,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218064,"byte_end":218078,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218083,"byte_end":218086,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218091,"byte_end":218098,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ #![feature(shrink_to)]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218103,"byte_end":218129,"line_start":469,"line_end":469,"column_start":5,"column_end":31}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218134,"byte_end":218168,"line_start":470,"line_end":470,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218173,"byte_end":218176,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::with_capacity(100);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218181,"byte_end":218227,"line_start":472,"line_end":472,"column_start":5,"column_end":51}},{"value":"/ set.insert(1);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218232,"byte_end":218250,"line_start":473,"line_end":473,"column_start":5,"column_end":23}},{"value":"/ set.insert(2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218255,"byte_end":218273,"line_start":474,"line_end":474,"column_start":5,"column_end":23}},{"value":"/ assert!(set.capacity() >= 100);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218278,"byte_end":218313,"line_start":475,"line_end":475,"column_start":5,"column_end":40}},{"value":"/ set.shrink_to(10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218318,"byte_end":218340,"line_start":476,"line_end":476,"column_start":5,"column_end":27}},{"value":"/ assert!(set.capacity() >= 10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218345,"byte_end":218379,"line_start":477,"line_end":477,"column_start":5,"column_end":39}},{"value":"/ set.shrink_to(0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218384,"byte_end":218405,"line_start":478,"line_end":478,"column_start":5,"column_end":26}},{"value":"/ assert!(set.capacity() >= 2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218410,"byte_end":218443,"line_start":479,"line_end":479,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218448,"byte_end":218455,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218460,"byte_end":218469,"line_start":481,"line_end":481,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":219535,"byte_end":219545,"line_start":512,"line_end":512,"column_start":12,"column_end":22},"name":"difference","qualname":"<HashSet<T, S>>::difference","value":"pub fn difference<'a>(&'a Self, &'a HashSet<T, S>) -> Difference","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the difference,\n i.e., the values that are in `self` but not in `other`.","sig":null,"attributes":[{"value":"/ Visits the values representing the difference,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218656,"byte_end":218706,"line_start":487,"line_end":487,"column_start":5,"column_end":55}},{"value":"/ i.e., the values that are in `self` but not in `other`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218711,"byte_end":218770,"line_start":488,"line_end":488,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218775,"byte_end":218778,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218783,"byte_end":218797,"line_start":490,"line_end":490,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218802,"byte_end":218805,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218810,"byte_end":218817,"line_start":492,"line_end":492,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218822,"byte_end":218856,"line_start":493,"line_end":493,"column_start":5,"column_end":39}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218861,"byte_end":218921,"line_start":494,"line_end":494,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218926,"byte_end":218989,"line_start":495,"line_end":495,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":218994,"byte_end":218997,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ // Can be seen as `a - b`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":219002,"byte_end":219032,"line_start":497,"line_end":497,"column_start":5,"column_end":35}},{"value":"/ for x in a.difference(&b) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":219037,"byte_end":219068,"line_start":498,"line_end":498,"column_start":5,"column_end":36}},{"value":"/     println!(\"{}\", x); // Print 1","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":219073,"byte_end":219110,"line_start":499,"line_end":499,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":219115,"byte_end":219120,"line_start":500,"line_end":500,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":219125,"byte_end":219128,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ let diff: HashSet<_> = a.difference(&b).collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":219133,"byte_end":219187,"line_start":502,"line_end":502,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(diff, [1].iter().collect());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":219192,"byte_end":219235,"line_start":503,"line_end":503,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":219240,"byte_end":219243,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ // Note that difference is not symmetric,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":219248,"byte_end":219293,"line_start":505,"line_end":505,"column_start":5,"column_end":50}},{"value":"/ // and `b - a` means something else:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":219298,"byte_end":219338,"line_start":506,"line_end":506,"column_start":5,"column_end":45}},{"value":"/ let diff: HashSet<_> = b.difference(&a).collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":219343,"byte_end":219397,"line_start":507,"line_end":507,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(diff, [4].iter().collect());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":219402,"byte_end":219445,"line_start":508,"line_end":508,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":219450,"byte_end":219457,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":219462,"byte_end":219471,"line_start":510,"line_end":510,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":220494,"byte_end":220514,"line_start":539,"line_end":539,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<HashSet<T, S>>::symmetric_difference","value":"pub fn symmetric_difference<'a>(&'a Self, &'a HashSet<T, S>)\n-> SymmetricDifference","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the symmetric difference,\n i.e., the values that are in `self` or in `other` but not in both.","sig":null,"attributes":[{"value":"/ Visits the values representing the symmetric difference,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":219671,"byte_end":219731,"line_start":516,"line_end":516,"column_start":5,"column_end":65}},{"value":"/ i.e., the values that are in `self` or in `other` but not in both.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":219736,"byte_end":219806,"line_start":517,"line_end":517,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":219811,"byte_end":219814,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":219819,"byte_end":219833,"line_start":519,"line_end":519,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":219838,"byte_end":219841,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":219846,"byte_end":219853,"line_start":521,"line_end":521,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":219858,"byte_end":219892,"line_start":522,"line_end":522,"column_start":5,"column_end":39}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":219897,"byte_end":219957,"line_start":523,"line_end":523,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":219962,"byte_end":220025,"line_start":524,"line_end":524,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":220030,"byte_end":220033,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ // Print 1, 4 in arbitrary order.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":220038,"byte_end":220075,"line_start":526,"line_end":526,"column_start":5,"column_end":42}},{"value":"/ for x in a.symmetric_difference(&b) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":220080,"byte_end":220121,"line_start":527,"line_end":527,"column_start":5,"column_end":46}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":220126,"byte_end":220152,"line_start":528,"line_end":528,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":220157,"byte_end":220162,"line_start":529,"line_end":529,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":220167,"byte_end":220170,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ let diff1: HashSet<_> = a.symmetric_difference(&b).collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":220175,"byte_end":220240,"line_start":531,"line_end":531,"column_start":5,"column_end":70}},{"value":"/ let diff2: HashSet<_> = b.symmetric_difference(&a).collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":220245,"byte_end":220310,"line_start":532,"line_end":532,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":220315,"byte_end":220318,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(diff1, diff2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":220323,"byte_end":220352,"line_start":534,"line_end":534,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(diff1, [1, 4].iter().collect());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":220357,"byte_end":220404,"line_start":535,"line_end":535,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":220409,"byte_end":220416,"line_start":536,"line_end":536,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":220421,"byte_end":220430,"line_start":537,"line_end":537,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":221403,"byte_end":221415,"line_start":566,"line_end":566,"column_start":12,"column_end":24},"name":"intersection","qualname":"<HashSet<T, S>>::intersection","value":"pub fn intersection<'a>(&'a Self, &'a HashSet<T, S>) -> Intersection","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the intersection,\n i.e., the values that are both in `self` and `other`.","sig":null,"attributes":[{"value":"/ Visits the values representing the intersection,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":220715,"byte_end":220767,"line_start":546,"line_end":546,"column_start":5,"column_end":57}},{"value":"/ i.e., the values that are both in `self` and `other`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":220772,"byte_end":220829,"line_start":547,"line_end":547,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":220834,"byte_end":220837,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":220842,"byte_end":220856,"line_start":549,"line_end":549,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":220861,"byte_end":220864,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":220869,"byte_end":220876,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":220881,"byte_end":220915,"line_start":552,"line_end":552,"column_start":5,"column_end":39}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":220920,"byte_end":220980,"line_start":553,"line_end":553,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":220985,"byte_end":221048,"line_start":554,"line_end":554,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":221053,"byte_end":221056,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ // Print 2, 3 in arbitrary order.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":221061,"byte_end":221098,"line_start":556,"line_end":556,"column_start":5,"column_end":42}},{"value":"/ for x in a.intersection(&b) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":221103,"byte_end":221136,"line_start":557,"line_end":557,"column_start":5,"column_end":38}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":221141,"byte_end":221167,"line_start":558,"line_end":558,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":221172,"byte_end":221177,"line_start":559,"line_end":559,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":221182,"byte_end":221185,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ let intersection: HashSet<_> = a.intersection(&b).collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":221190,"byte_end":221254,"line_start":561,"line_end":561,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(intersection, [2, 3].iter().collect());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":221259,"byte_end":221313,"line_start":562,"line_end":562,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":221318,"byte_end":221325,"line_start":563,"line_end":563,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":221330,"byte_end":221339,"line_start":564,"line_end":564,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":222350,"byte_end":222355,"line_start":594,"line_end":594,"column_start":12,"column_end":17},"name":"union","qualname":"<HashSet<T, S>>::union","value":"pub fn union<'a>(&'a Self, &'a HashSet<T, S>) -> Union","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the union,\n i.e., all the values in `self` or `other`, without duplicates.","sig":null,"attributes":[{"value":"/ Visits the values representing the union,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":221676,"byte_end":221721,"line_start":574,"line_end":574,"column_start":5,"column_end":50}},{"value":"/ i.e., all the values in `self` or `other`, without duplicates.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":221726,"byte_end":221792,"line_start":575,"line_end":575,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":221797,"byte_end":221800,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":221805,"byte_end":221819,"line_start":577,"line_end":577,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":221824,"byte_end":221827,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":221832,"byte_end":221839,"line_start":579,"line_end":579,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":221844,"byte_end":221878,"line_start":580,"line_end":580,"column_start":5,"column_end":39}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":221883,"byte_end":221943,"line_start":581,"line_end":581,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":221948,"byte_end":222011,"line_start":582,"line_end":582,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":222016,"byte_end":222019,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ // Print 1, 2, 3, 4 in arbitrary order.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":222024,"byte_end":222067,"line_start":584,"line_end":584,"column_start":5,"column_end":48}},{"value":"/ for x in a.union(&b) {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":222072,"byte_end":222098,"line_start":585,"line_end":585,"column_start":5,"column_end":31}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":222103,"byte_end":222129,"line_start":586,"line_end":586,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":222134,"byte_end":222139,"line_start":587,"line_end":587,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":222144,"byte_end":222147,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ let union: HashSet<_> = a.union(&b).collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":222152,"byte_end":222202,"line_start":589,"line_end":589,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(union, [1, 2, 3, 4].iter().collect());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":222207,"byte_end":222260,"line_start":590,"line_end":590,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":222265,"byte_end":222272,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":222277,"byte_end":222286,"line_start":592,"line_end":592,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":223198,"byte_end":223206,"line_start":619,"line_end":619,"column_start":12,"column_end":20},"name":"contains","qualname":"<HashSet<T, S>>::contains","value":"pub fn contains<Q: ?Sized>(&Self, &Q) -> bool where T: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains a value.","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains a value.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":222635,"byte_end":222682,"line_start":602,"line_end":602,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":222687,"byte_end":222690,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":222695,"byte_end":222762,"line_start":604,"line_end":604,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":222767,"byte_end":222834,"line_start":605,"line_end":605,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":222839,"byte_end":222858,"line_start":606,"line_end":606,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":222863,"byte_end":222866,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":222871,"byte_end":222885,"line_start":608,"line_end":608,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":222890,"byte_end":222893,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":222898,"byte_end":222905,"line_start":610,"line_end":610,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":222910,"byte_end":222944,"line_start":611,"line_end":611,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":222949,"byte_end":222952,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ let set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":222957,"byte_end":223019,"line_start":613,"line_end":613,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(set.contains(&1), true);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":223024,"byte_end":223063,"line_start":614,"line_end":614,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(set.contains(&4), false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":223068,"byte_end":223108,"line_start":615,"line_end":615,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":223113,"byte_end":223120,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":223125,"byte_end":223134,"line_start":617,"line_end":617,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":223955,"byte_end":223958,"line_start":644,"line_end":644,"column_start":12,"column_end":15},"name":"get","qualname":"<HashSet<T, S>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&T> where T: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value in the set, if any, that is equal to the given value.","sig":null,"attributes":[{"value":"/ Returns a reference to the value in the set, if any, that is equal to the given value.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":223349,"byte_end":223439,"line_start":627,"line_end":627,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":223444,"byte_end":223447,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":223452,"byte_end":223519,"line_start":629,"line_end":629,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":223524,"byte_end":223591,"line_start":630,"line_end":630,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":223596,"byte_end":223615,"line_start":631,"line_end":631,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":223620,"byte_end":223623,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":223628,"byte_end":223642,"line_start":633,"line_end":633,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":223647,"byte_end":223650,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":223655,"byte_end":223662,"line_start":635,"line_end":635,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":223667,"byte_end":223701,"line_start":636,"line_end":636,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":223706,"byte_end":223709,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ let set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":223714,"byte_end":223776,"line_start":638,"line_end":638,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(set.get(&2), Some(&2));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":223781,"byte_end":223819,"line_start":639,"line_end":639,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(set.get(&4), None);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":223824,"byte_end":223858,"line_start":640,"line_end":640,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":223863,"byte_end":223870,"line_start":641,"line_end":641,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":223875,"byte_end":223884,"line_start":642,"line_end":642,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":224718,"byte_end":224731,"line_start":670,"line_end":670,"column_start":12,"column_end":25},"name":"get_or_insert","qualname":"<HashSet<T, S>>::get_or_insert","value":"pub fn get_or_insert(&mut Self, T) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Inserts the given `value` into the set if it is not present, then\n returns a reference to the value in the set.","sig":null,"attributes":[{"value":"/ Inserts the given `value` into the set if it is not present, then","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":224102,"byte_end":224171,"line_start":652,"line_end":652,"column_start":5,"column_end":74}},{"value":"/ returns a reference to the value in the set.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":224176,"byte_end":224224,"line_start":653,"line_end":653,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":224229,"byte_end":224232,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":224237,"byte_end":224251,"line_start":655,"line_end":655,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":224256,"byte_end":224259,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":224264,"byte_end":224271,"line_start":657,"line_end":657,"column_start":5,"column_end":12}},{"value":"/ #![feature(hash_set_entry)]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":224276,"byte_end":224307,"line_start":658,"line_end":658,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":224312,"byte_end":224315,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":224320,"byte_end":224354,"line_start":660,"line_end":660,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":224359,"byte_end":224362,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":224367,"byte_end":224433,"line_start":662,"line_end":662,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":224438,"byte_end":224467,"line_start":663,"line_end":663,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(set.get_or_insert(2), &2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":224472,"byte_end":224513,"line_start":664,"line_end":664,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(set.get_or_insert(100), &100);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":224518,"byte_end":224563,"line_start":665,"line_end":665,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(set.len(), 4); // 100 was inserted","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":224568,"byte_end":224617,"line_start":666,"line_end":666,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":224622,"byte_end":224629,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":224634,"byte_end":224643,"line_start":668,"line_end":668,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":225750,"byte_end":225769,"line_start":698,"line_end":698,"column_start":12,"column_end":31},"name":"get_or_insert_owned","qualname":"<HashSet<T, S>>::get_or_insert_owned","value":"pub fn get_or_insert_owned<Q: ?Sized>(&mut Self, &Q) -> &T where T: Borrow<Q>,\nQ: Hash + Eq + ToOwned<Owned = T>","parent":null,"children":[],"decl_id":null,"docs":" Inserts an owned copy of the given `value` into the set if it is not\n present, then returns a reference to the value in the set.","sig":null,"attributes":[{"value":"/ Inserts an owned copy of the given `value` into the set if it is not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":225000,"byte_end":225072,"line_start":676,"line_end":676,"column_start":5,"column_end":77}},{"value":"/ present, then returns a reference to the value in the set.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":225077,"byte_end":225139,"line_start":677,"line_end":677,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":225144,"byte_end":225147,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":225152,"byte_end":225166,"line_start":679,"line_end":679,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":225171,"byte_end":225174,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":225179,"byte_end":225186,"line_start":681,"line_end":681,"column_start":5,"column_end":12}},{"value":"/ #![feature(hash_set_entry)]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":225191,"byte_end":225222,"line_start":682,"line_end":682,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":225227,"byte_end":225230,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":225235,"byte_end":225269,"line_start":684,"line_end":684,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":225274,"byte_end":225277,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<String> = [\"cat\", \"dog\", \"horse\"]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":225282,"byte_end":225340,"line_start":686,"line_end":686,"column_start":5,"column_end":63}},{"value":"/     .iter().map(|&pet| pet.to_owned()).collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":225345,"byte_end":225398,"line_start":687,"line_end":687,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":225403,"byte_end":225406,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":225411,"byte_end":225440,"line_start":689,"line_end":689,"column_start":5,"column_end":34}},{"value":"/ for &pet in &[\"cat\", \"dog\", \"fish\"] {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":225445,"byte_end":225486,"line_start":690,"line_end":690,"column_start":5,"column_end":46}},{"value":"/     let value = set.get_or_insert_owned(pet);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":225491,"byte_end":225540,"line_start":691,"line_end":691,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(value, pet);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":225545,"byte_end":225576,"line_start":692,"line_end":692,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":225581,"byte_end":225586,"line_start":693,"line_end":693,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(set.len(), 4); // a new \"fish\" was inserted","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":225591,"byte_end":225649,"line_start":694,"line_end":694,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":225654,"byte_end":225661,"line_start":695,"line_end":695,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":225666,"byte_end":225675,"line_start":696,"line_end":696,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":226905,"byte_end":226923,"line_start":730,"line_end":730,"column_start":12,"column_end":30},"name":"get_or_insert_with","qualname":"<HashSet<T, S>>::get_or_insert_with","value":"pub fn get_or_insert_with<Q: ?Sized, F>(&mut Self, &Q, F) -> &T where\nT: Borrow<Q>, Q: Hash + Eq, F: FnOnce(&Q) -> T","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value computed from `f` into the set if the given `value` is\n not present, then returns a reference to the value in the set.","sig":null,"attributes":[{"value":"/ Inserts a value computed from `f` into the set if the given `value` is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":226135,"byte_end":226209,"line_start":708,"line_end":708,"column_start":5,"column_end":79}},{"value":"/ not present, then returns a reference to the value in the set.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":226214,"byte_end":226280,"line_start":709,"line_end":709,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":226285,"byte_end":226288,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":226293,"byte_end":226307,"line_start":711,"line_end":711,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":226312,"byte_end":226315,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":226320,"byte_end":226327,"line_start":713,"line_end":713,"column_start":5,"column_end":12}},{"value":"/ #![feature(hash_set_entry)]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":226332,"byte_end":226363,"line_start":714,"line_end":714,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":226368,"byte_end":226371,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":226376,"byte_end":226410,"line_start":716,"line_end":716,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":226415,"byte_end":226418,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<String> = [\"cat\", \"dog\", \"horse\"]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":226423,"byte_end":226481,"line_start":718,"line_end":718,"column_start":5,"column_end":63}},{"value":"/     .iter().map(|&pet| pet.to_owned()).collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":226486,"byte_end":226539,"line_start":719,"line_end":719,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":226544,"byte_end":226547,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":226552,"byte_end":226581,"line_start":721,"line_end":721,"column_start":5,"column_end":34}},{"value":"/ for &pet in &[\"cat\", \"dog\", \"fish\"] {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":226586,"byte_end":226627,"line_start":722,"line_end":722,"column_start":5,"column_end":46}},{"value":"/     let value = set.get_or_insert_with(pet, str::to_owned);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":226632,"byte_end":226695,"line_start":723,"line_end":723,"column_start":5,"column_end":68}},{"value":"/     assert_eq!(value, pet);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":226700,"byte_end":226731,"line_start":724,"line_end":724,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":226736,"byte_end":226741,"line_start":725,"line_end":725,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(set.len(), 4); // a new \"fish\" was inserted","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":226746,"byte_end":226804,"line_start":726,"line_end":726,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":226809,"byte_end":226816,"line_start":727,"line_end":727,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":226821,"byte_end":226830,"line_start":728,"line_end":728,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":227898,"byte_end":227909,"line_start":759,"line_end":759,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<HashSet<T, S>>::is_disjoint","value":"pub fn is_disjoint(&Self, &HashSet<T, S>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`.\n This is equivalent to checking for an empty intersection.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":227307,"byte_end":227375,"line_start":741,"line_end":741,"column_start":5,"column_end":73}},{"value":"/ This is equivalent to checking for an empty intersection.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":227380,"byte_end":227441,"line_start":742,"line_end":742,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":227446,"byte_end":227449,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":227454,"byte_end":227468,"line_start":744,"line_end":744,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":227473,"byte_end":227476,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":227481,"byte_end":227488,"line_start":746,"line_end":746,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":227493,"byte_end":227527,"line_start":747,"line_end":747,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":227532,"byte_end":227535,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":227540,"byte_end":227600,"line_start":749,"line_end":749,"column_start":5,"column_end":65}},{"value":"/ let mut b = HashSet::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":227605,"byte_end":227636,"line_start":750,"line_end":750,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":227641,"byte_end":227644,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.is_disjoint(&b), true);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":227649,"byte_end":227689,"line_start":752,"line_end":752,"column_start":5,"column_end":45}},{"value":"/ b.insert(4);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":227694,"byte_end":227710,"line_start":753,"line_end":753,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(a.is_disjoint(&b), true);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":227715,"byte_end":227755,"line_start":754,"line_end":754,"column_start":5,"column_end":45}},{"value":"/ b.insert(1);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":227760,"byte_end":227776,"line_start":755,"line_end":755,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(a.is_disjoint(&b), false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":227781,"byte_end":227822,"line_start":756,"line_end":756,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":227827,"byte_end":227834,"line_start":757,"line_end":757,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":228721,"byte_end":228730,"line_start":785,"line_end":785,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<HashSet<T, S>>::is_subset","value":"pub fn is_subset(&Self, &HashSet<T, S>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a subset of another,\n i.e., `other` contains at least all the values in `self`.","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a subset of another,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":228131,"byte_end":228184,"line_start":767,"line_end":767,"column_start":5,"column_end":58}},{"value":"/ i.e., `other` contains at least all the values in `self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":228189,"byte_end":228250,"line_start":768,"line_end":768,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":228255,"byte_end":228258,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":228263,"byte_end":228277,"line_start":770,"line_end":770,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":228282,"byte_end":228285,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":228290,"byte_end":228297,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":228302,"byte_end":228336,"line_start":773,"line_end":773,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":228341,"byte_end":228344,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ let sup: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":228349,"byte_end":228411,"line_start":775,"line_end":775,"column_start":5,"column_end":67}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":228416,"byte_end":228449,"line_start":776,"line_end":776,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":228454,"byte_end":228457,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.is_subset(&sup), true);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":228462,"byte_end":228504,"line_start":778,"line_end":778,"column_start":5,"column_end":47}},{"value":"/ set.insert(2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":228509,"byte_end":228527,"line_start":779,"line_end":779,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_subset(&sup), true);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":228532,"byte_end":228574,"line_start":780,"line_end":780,"column_start":5,"column_end":47}},{"value":"/ set.insert(4);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":228579,"byte_end":228597,"line_start":781,"line_end":781,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_subset(&sup), false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":228602,"byte_end":228645,"line_start":782,"line_end":782,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":228650,"byte_end":228657,"line_start":783,"line_end":783,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229526,"byte_end":229537,"line_start":811,"line_end":811,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<HashSet<T, S>>::is_superset","value":"pub fn is_superset(&Self, &HashSet<T, S>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a superset of another,\n i.e., `self` contains at least all the values in `other`.","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a superset of another,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":228877,"byte_end":228932,"line_start":789,"line_end":789,"column_start":5,"column_end":60}},{"value":"/ i.e., `self` contains at least all the values in `other`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":228937,"byte_end":228998,"line_start":790,"line_end":790,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229003,"byte_end":229006,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229011,"byte_end":229025,"line_start":792,"line_end":792,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229030,"byte_end":229033,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229038,"byte_end":229045,"line_start":794,"line_end":794,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229050,"byte_end":229084,"line_start":795,"line_end":795,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229089,"byte_end":229092,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ let sub: HashSet<_> = [1, 2].iter().cloned().collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229097,"byte_end":229156,"line_start":797,"line_end":797,"column_start":5,"column_end":64}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229161,"byte_end":229194,"line_start":798,"line_end":798,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229199,"byte_end":229202,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.is_superset(&sub), false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229207,"byte_end":229252,"line_start":800,"line_end":800,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229257,"byte_end":229260,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ set.insert(0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229265,"byte_end":229283,"line_start":802,"line_end":802,"column_start":5,"column_end":23}},{"value":"/ set.insert(1);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229288,"byte_end":229306,"line_start":803,"line_end":803,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_superset(&sub), false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229311,"byte_end":229356,"line_start":804,"line_end":804,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229361,"byte_end":229364,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ set.insert(2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229369,"byte_end":229387,"line_start":806,"line_end":806,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_superset(&sub), true);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229392,"byte_end":229436,"line_start":807,"line_end":807,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229441,"byte_end":229448,"line_start":808,"line_end":808,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229453,"byte_end":229462,"line_start":809,"line_end":809,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":230151,"byte_end":230157,"line_start":834,"line_end":834,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashSet<T, S>>::insert","value":"pub fn insert(&mut Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set.","sig":null,"attributes":[{"value":"/ Adds a value to the set.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229619,"byte_end":229647,"line_start":815,"line_end":815,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229652,"byte_end":229655,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ If the set did not have this value present, `true` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229660,"byte_end":229727,"line_start":817,"line_end":817,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229732,"byte_end":229735,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ If the set did have this value present, `false` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229740,"byte_end":229804,"line_start":819,"line_end":819,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229809,"byte_end":229812,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229817,"byte_end":229831,"line_start":821,"line_end":821,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229836,"byte_end":229839,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229844,"byte_end":229851,"line_start":823,"line_end":823,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229856,"byte_end":229890,"line_start":824,"line_end":824,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229895,"byte_end":229898,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229903,"byte_end":229936,"line_start":826,"line_end":826,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229941,"byte_end":229944,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.insert(2), true);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229949,"byte_end":229985,"line_start":828,"line_end":828,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(set.insert(2), false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":229990,"byte_end":230027,"line_start":829,"line_end":829,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(set.len(), 1);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":230032,"byte_end":230061,"line_start":830,"line_end":830,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":230066,"byte_end":230073,"line_start":831,"line_end":831,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":230078,"byte_end":230087,"line_start":832,"line_end":832,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":230810,"byte_end":230817,"line_start":855,"line_end":855,"column_start":12,"column_end":19},"name":"replace","qualname":"<HashSet<T, S>>::replace","value":"pub fn replace(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is equal to the given\n one. Returns the replaced value.","sig":null,"attributes":[{"value":"/ Adds a value to the set, replacing the existing value, if any, that is equal to the given","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":230232,"byte_end":230325,"line_start":838,"line_end":838,"column_start":5,"column_end":98}},{"value":"/ one. Returns the replaced value.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":230330,"byte_end":230366,"line_start":839,"line_end":839,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":230371,"byte_end":230374,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":230379,"byte_end":230393,"line_start":841,"line_end":841,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":230398,"byte_end":230401,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":230406,"byte_end":230413,"line_start":843,"line_end":843,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":230418,"byte_end":230452,"line_start":844,"line_end":844,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":230457,"byte_end":230460,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":230465,"byte_end":230498,"line_start":846,"line_end":846,"column_start":5,"column_end":38}},{"value":"/ set.insert(Vec::<i32>::new());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":230503,"byte_end":230537,"line_start":847,"line_end":847,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":230542,"byte_end":230545,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.get(&[][..]).unwrap().capacity(), 0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":230550,"byte_end":230606,"line_start":849,"line_end":849,"column_start":5,"column_end":61}},{"value":"/ set.replace(Vec::with_capacity(10));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":230611,"byte_end":230651,"line_start":850,"line_end":850,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(set.get(&[][..]).unwrap().capacity(), 10);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":230656,"byte_end":230713,"line_start":851,"line_end":851,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":230718,"byte_end":230725,"line_start":852,"line_end":852,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":230730,"byte_end":230739,"line_start":853,"line_end":853,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231503,"byte_end":231509,"line_start":879,"line_end":879,"column_start":12,"column_end":18},"name":"remove","qualname":"<HashSet<T, S>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> bool where T: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Removes a value from the set. Returns whether the value was\n present in the set.","sig":null,"attributes":[{"value":"/ Removes a value from the set. Returns whether the value was","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":230898,"byte_end":230961,"line_start":859,"line_end":859,"column_start":5,"column_end":68}},{"value":"/ present in the set.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":230966,"byte_end":230989,"line_start":860,"line_end":860,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":230994,"byte_end":230997,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231002,"byte_end":231069,"line_start":862,"line_end":862,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231074,"byte_end":231141,"line_start":863,"line_end":863,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231146,"byte_end":231165,"line_start":864,"line_end":864,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231170,"byte_end":231173,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231178,"byte_end":231192,"line_start":866,"line_end":866,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231197,"byte_end":231200,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231205,"byte_end":231212,"line_start":868,"line_end":868,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231217,"byte_end":231251,"line_start":869,"line_end":869,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231256,"byte_end":231259,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231264,"byte_end":231297,"line_start":871,"line_end":871,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231302,"byte_end":231305,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ set.insert(2);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231310,"byte_end":231328,"line_start":873,"line_end":873,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.remove(&2), true);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231333,"byte_end":231370,"line_start":874,"line_end":874,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(set.remove(&2), false);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231375,"byte_end":231413,"line_start":875,"line_end":875,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231418,"byte_end":231425,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231430,"byte_end":231439,"line_start":877,"line_end":877,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":232260,"byte_end":232264,"line_start":904,"line_end":904,"column_start":12,"column_end":16},"name":"take","qualname":"<HashSet<T, S>>::take","value":"pub fn take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where T: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the given one.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231654,"byte_end":231739,"line_start":887,"line_end":887,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231744,"byte_end":231747,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231752,"byte_end":231819,"line_start":889,"line_end":889,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231824,"byte_end":231891,"line_start":890,"line_end":890,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231896,"byte_end":231915,"line_start":891,"line_end":891,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231920,"byte_end":231923,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231928,"byte_end":231942,"line_start":893,"line_end":893,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231947,"byte_end":231950,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231955,"byte_end":231962,"line_start":895,"line_end":895,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":231967,"byte_end":232001,"line_start":896,"line_end":896,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":232006,"byte_end":232009,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":232014,"byte_end":232080,"line_start":898,"line_end":898,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(set.take(&2), Some(2));","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":232085,"byte_end":232123,"line_start":899,"line_end":899,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(set.take(&2), None);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":232128,"byte_end":232163,"line_start":900,"line_end":900,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":232168,"byte_end":232175,"line_start":901,"line_end":901,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":232180,"byte_end":232189,"line_start":902,"line_end":902,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1144},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":232917,"byte_end":232923,"line_start":927,"line_end":927,"column_start":12,"column_end":18},"name":"retain","qualname":"<HashSet<T, S>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[{"value":"/ Retains only the elements specified by the predicate.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":232412,"byte_end":232469,"line_start":912,"line_end":912,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":232474,"byte_end":232477,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ In other words, remove all elements `e` such that `f(&e)` returns `false`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":232482,"byte_end":232560,"line_start":914,"line_end":914,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":232565,"byte_end":232568,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":232573,"byte_end":232587,"line_start":916,"line_end":916,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":232592,"byte_end":232595,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":232600,"byte_end":232607,"line_start":918,"line_end":918,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":232612,"byte_end":232646,"line_start":919,"line_end":919,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":232651,"byte_end":232654,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ let xs = [1,2,3,4,5,6];","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":232659,"byte_end":232686,"line_start":921,"line_end":921,"column_start":5,"column_end":32}},{"value":"/ let mut set: HashSet<i32> = xs.iter().cloned().collect();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":232691,"byte_end":232752,"line_start":922,"line_end":922,"column_start":5,"column_end":66}},{"value":"/ set.retain(|&k| k % 2 == 0);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":232757,"byte_end":232789,"line_start":923,"line_end":923,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":232794,"byte_end":232823,"line_start":924,"line_end":924,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":232828,"byte_end":232835,"line_start":925,"line_end":925,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1202},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":239064,"byte_end":239068,"line_start":1177,"line_end":1177,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::hash::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1205}],"decl_id":null,"docs":" An iterator over the items of a `HashSet`.","sig":null,"attributes":[{"value":"/ An iterator over the items of a `HashSet`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":238818,"byte_end":238864,"line_start":1170,"line_end":1170,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":238865,"byte_end":238868,"line_start":1171,"line_end":1171,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`HashSet`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":238869,"byte_end":238936,"line_start":1172,"line_end":1172,"column_start":1,"column_end":68}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":238937,"byte_end":238972,"line_start":1173,"line_end":1173,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":238973,"byte_end":238976,"line_start":1174,"line_end":1174,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: HashSet::iter","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":238977,"byte_end":239004,"line_start":1175,"line_end":1175,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":1206},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":239426,"byte_end":239434,"line_start":1188,"line_end":1188,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::hash::set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":1208}],"decl_id":null,"docs":" An owning iterator over the items of a `HashSet`.","sig":null,"attributes":[{"value":"/ An owning iterator over the items of a `HashSet`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":239114,"byte_end":239167,"line_start":1181,"line_end":1181,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":239168,"byte_end":239171,"line_start":1182,"line_end":1182,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`HashSet`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":239172,"byte_end":239243,"line_start":1183,"line_end":1183,"column_start":1,"column_end":72}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":239244,"byte_end":239319,"line_start":1184,"line_end":1184,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":239320,"byte_end":239323,"line_start":1185,"line_end":1185,"column_start":1,"column_end":4}},{"value":"/ [`into_iter`]: IntoIterator::into_iter","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":239324,"byte_end":239366,"line_start":1186,"line_end":1186,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1209},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":239729,"byte_end":239734,"line_start":1199,"line_end":1199,"column_start":12,"column_end":17},"name":"Drain","qualname":"::collections::hash::set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":1212}],"decl_id":null,"docs":" A draining iterator over the items of a `HashSet`.","sig":null,"attributes":[{"value":"/ A draining iterator over the items of a `HashSet`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":239472,"byte_end":239526,"line_start":1192,"line_end":1192,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":239527,"byte_end":239530,"line_start":1193,"line_end":1193,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`HashSet`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":239531,"byte_end":239599,"line_start":1194,"line_end":1194,"column_start":1,"column_end":69}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":239600,"byte_end":239635,"line_start":1195,"line_end":1195,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":239636,"byte_end":239639,"line_start":1196,"line_end":1196,"column_start":1,"column_end":4}},{"value":"/ [`drain`]: HashSet::drain","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":239640,"byte_end":239669,"line_start":1197,"line_end":1197,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1213},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":240048,"byte_end":240059,"line_start":1209,"line_end":1209,"column_start":12,"column_end":23},"name":"DrainFilter","qualname":"::collections::hash::set::DrainFilter","value":"DrainFilter {  }","parent":null,"children":[{"krate":0,"index":1217}],"decl_id":null,"docs":" A draining, filtering iterator over the items of a `HashSet`.","sig":null,"attributes":[{"value":"/ A draining, filtering iterator over the items of a `HashSet`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":239781,"byte_end":239846,"line_start":1203,"line_end":1203,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":239847,"byte_end":239850,"line_start":1204,"line_end":1204,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain_filter`] method on [`HashSet`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":239851,"byte_end":239926,"line_start":1205,"line_end":1205,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":239927,"byte_end":239930,"line_start":1206,"line_end":1206,"column_start":1,"column_end":4}},{"value":"/ [`drain_filter`]: HashSet::drain_filter","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":239931,"byte_end":239974,"line_start":1207,"line_end":1207,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1218},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":240443,"byte_end":240455,"line_start":1223,"line_end":1223,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::collections::hash::set::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":1222},{"krate":0,"index":1223}],"decl_id":null,"docs":" A lazy iterator producing elements in the intersection of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the intersection of `HashSet`s.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":240146,"byte_end":240219,"line_start":1216,"line_end":1216,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":240220,"byte_end":240223,"line_start":1217,"line_end":1217,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`intersection`] method on [`HashSet`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":240224,"byte_end":240299,"line_start":1218,"line_end":1218,"column_start":1,"column_end":76}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":240300,"byte_end":240335,"line_start":1219,"line_end":1219,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":240336,"byte_end":240339,"line_start":1220,"line_end":1220,"column_start":1,"column_end":4}},{"value":"/ [`intersection`]: HashSet::intersection","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":240340,"byte_end":240383,"line_start":1221,"line_end":1221,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1224},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":240876,"byte_end":240886,"line_start":1237,"line_end":1237,"column_start":12,"column_end":22},"name":"Difference","qualname":"::collections::hash::set::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":1228},{"krate":0,"index":1229}],"decl_id":null,"docs":" A lazy iterator producing elements in the difference of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the difference of `HashSet`s.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":240587,"byte_end":240658,"line_start":1230,"line_end":1230,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":240659,"byte_end":240662,"line_start":1231,"line_end":1231,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`difference`] method on [`HashSet`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":240663,"byte_end":240736,"line_start":1232,"line_end":1232,"column_start":1,"column_end":74}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":240737,"byte_end":240772,"line_start":1233,"line_end":1233,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":240773,"byte_end":240776,"line_start":1234,"line_end":1234,"column_start":1,"column_end":4}},{"value":"/ [`difference`]: HashSet::difference","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":240777,"byte_end":240816,"line_start":1235,"line_end":1235,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1230},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":241347,"byte_end":241366,"line_start":1251,"line_end":1251,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::collections::hash::set::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":1234}],"decl_id":null,"docs":" A lazy iterator producing elements in the symmetric difference of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the symmetric difference of `HashSet`s.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":241018,"byte_end":241099,"line_start":1244,"line_end":1244,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":241100,"byte_end":241103,"line_start":1245,"line_end":1245,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`symmetric_difference`] method on","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":241104,"byte_end":241174,"line_start":1246,"line_end":1246,"column_start":1,"column_end":71}},{"value":"/ [`HashSet`]. See its documentation for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":241175,"byte_end":241223,"line_start":1247,"line_end":1247,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":241224,"byte_end":241227,"line_start":1248,"line_end":1248,"column_start":1,"column_end":4}},{"value":"/ [`symmetric_difference`]: HashSet::symmetric_difference","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":241228,"byte_end":241287,"line_start":1249,"line_end":1249,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1235},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":241720,"byte_end":241725,"line_start":1262,"line_end":1262,"column_start":12,"column_end":17},"name":"Union","qualname":"::collections::hash::set::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":1239}],"decl_id":null,"docs":" A lazy iterator producing elements in the union of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the union of `HashSet`s.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":241451,"byte_end":241517,"line_start":1255,"line_end":1255,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":241518,"byte_end":241521,"line_start":1256,"line_end":1256,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`union`] method on [`HashSet`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":241522,"byte_end":241590,"line_start":1257,"line_end":1257,"column_start":1,"column_end":69}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":241591,"byte_end":241626,"line_start":1258,"line_end":1258,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":241627,"byte_end":241630,"line_start":1259,"line_end":1259,"column_start":1,"column_end":4}},{"value":"/ [`union`]: HashSet::union","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":241631,"byte_end":241660,"line_start":1260,"line_end":1260,"column_start":1,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":1405},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":115219,"byte_end":115227,"line_start":439,"line_end":439,"column_start":9,"column_end":17},"name":"hash_map","qualname":"::collections::hash_map","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","parent":null,"children":[{"krate":0,"index":1406}],"decl_id":null,"docs":" A hash map implemented with quadratic probing and SIMD lookup.\n","sig":null,"attributes":[{"value":"/ A hash map implemented with quadratic probing and SIMD lookup.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":115234,"byte_end":115300,"line_start":440,"line_end":440,"column_start":5,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":1407},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":115345,"byte_end":115353,"line_start":444,"line_end":444,"column_start":9,"column_end":17},"name":"hash_set","qualname":"::collections::hash_set","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","parent":null,"children":[{"krate":0,"index":1408}],"decl_id":null,"docs":" A hash set implemented as a `HashMap` where the value is `()`.\n","sig":null,"attributes":[{"value":"/ A hash set implemented as a `HashMap` where the value is `()`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/mod.rs","byte_start":115360,"byte_end":115426,"line_start":445,"line_end":445,"column_start":5,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":1409},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"env","qualname":"::env","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","parent":null,"children":[{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1423},{"krate":0,"index":1425},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1434},{"krate":0,"index":1436},{"krate":0,"index":1440},{"krate":0,"index":1442},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1447},{"krate":0,"index":7119},{"krate":0,"index":7134},{"krate":0,"index":7130},{"krate":0,"index":7131},{"krate":0,"index":7127},{"krate":0,"index":7128},{"krate":0,"index":7125},{"krate":0,"index":1449},{"krate":0,"index":1451},{"krate":0,"index":1453},{"krate":0,"index":1456},{"krate":0,"index":1458},{"krate":0,"index":1460},{"krate":0,"index":1462},{"krate":0,"index":1465},{"krate":0,"index":1467},{"krate":0,"index":1472},{"krate":0,"index":7136},{"krate":0,"index":7138},{"krate":0,"index":1474},{"krate":0,"index":1478},{"krate":0,"index":1480},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1495}],"decl_id":null,"docs":" Inspection and manipulation of the process's environment.\n","sig":null,"attributes":[{"value":"/ Inspection and manipulation of the process's environment.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":252323,"byte_end":252384,"line_start":18,"line_end":18,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":1420},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":252959,"byte_end":252970,"line_start":40,"line_end":40,"column_start":8,"column_end":19},"name":"current_dir","qualname":"::env::current_dir","value":"pub fn current_dir() -> io::Result<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current working directory as a [`PathBuf`].","sig":null,"attributes":[{"value":"/ Returns the current working directory as a [`PathBuf`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":252541,"byte_end":252600,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":252601,"byte_end":252604,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":252605,"byte_end":252617,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":252618,"byte_end":252621,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Returns an [`Err`] if the current working directory value is invalid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":252622,"byte_end":252695,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ Possible cases:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":252696,"byte_end":252715,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":252716,"byte_end":252719,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ * Current directory does not exist.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":252720,"byte_end":252759,"line_start":34,"line_end":34,"column_start":1,"column_end":40}},{"value":"/ * There are insufficient permissions to access the current directory.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":252760,"byte_end":252833,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":252834,"byte_end":252837,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`PathBuf`]: ../../std/path/struct.PathBuf.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":252838,"byte_end":252889,"line_start":37,"line_end":37,"column_start":1,"column_end":52}},{"value":"/ [`Err`]: ../../std/result/enum.Result.html#method.err","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":252890,"byte_end":252947,"line_start":38,"line_end":38,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":252948,"byte_end":252951,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1421},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":253211,"byte_end":253226,"line_start":50,"line_end":50,"column_start":8,"column_end":23},"name":"set_current_dir","qualname":"::env::set_current_dir","value":"pub fn set_current_dir<P: AsRef<Path>>(P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Changes the current working directory to the specified path.","sig":null,"attributes":[{"value":"/ Changes the current working directory to the specified path.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":253022,"byte_end":253086,"line_start":44,"line_end":44,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":253087,"byte_end":253090,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Returns an [`Err`] if the operation fails.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":253091,"byte_end":253137,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":253138,"byte_end":253141,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`Err`]: ../../std/result/enum.Result.html#method.err","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":253142,"byte_end":253199,"line_start":48,"line_end":48,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":253200,"byte_end":253203,"line_start":49,"line_end":49,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1423},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":253544,"byte_end":253548,"line_start":60,"line_end":60,"column_start":12,"column_end":16},"name":"Vars","qualname":"::env::Vars","value":"Vars {  }","parent":null,"children":[{"krate":0,"index":1424}],"decl_id":null,"docs":" An iterator over a snapshot of the environment variables of this process.","sig":null,"attributes":[{"value":"/ An iterator over a snapshot of the environment variables of this process.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":253308,"byte_end":253385,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":253386,"byte_end":253389,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`std::env::vars`] function. See its","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":253390,"byte_end":253463,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/ documentation for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":253464,"byte_end":253491,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":253492,"byte_end":253495,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ [`std::env::vars`]: fn.vars.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":253496,"byte_end":253532,"line_start":59,"line_end":59,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1425},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":253818,"byte_end":253824,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"VarsOs","qualname":"::env::VarsOs","value":"VarsOs {  }","parent":null,"children":[{"krate":0,"index":1426}],"decl_id":null,"docs":" An iterator over a snapshot of the environment variables of this process.","sig":null,"attributes":[{"value":"/ An iterator over a snapshot of the environment variables of this process.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":253573,"byte_end":253650,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":253651,"byte_end":253654,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`std::env::vars_os`] function. See","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":253655,"byte_end":253727,"line_start":66,"line_end":66,"column_start":1,"column_end":73}},{"value":"/ its documentation for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":253728,"byte_end":253759,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":253760,"byte_end":253763,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`std::env::vars_os`]: fn.vars_os.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":253764,"byte_end":253806,"line_start":69,"line_end":69,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":1427},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":254469,"byte_end":254473,"line_start":88,"line_end":88,"column_start":8,"column_end":12},"name":"vars","qualname":"::env::vars","value":"pub fn vars() -> Vars","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of (variable, value) pairs of strings, for all the\n environment variables of the current process.","sig":null,"attributes":[{"value":"/ Returns an iterator of (variable, value) pairs of strings, for all the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":253854,"byte_end":253928,"line_start":74,"line_end":74,"column_start":1,"column_end":75}},{"value":"/ environment variables of the current process.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":253929,"byte_end":253978,"line_start":75,"line_end":75,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":253979,"byte_end":253982,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ The returned iterator contains a snapshot of the process's environment","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":253983,"byte_end":254057,"line_start":77,"line_end":77,"column_start":1,"column_end":75}},{"value":"/ variables at the time of this invocation. Modifications to environment","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":254058,"byte_end":254132,"line_start":78,"line_end":78,"column_start":1,"column_end":75}},{"value":"/ variables afterwards will not be reflected in the returned iterator.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":254133,"byte_end":254205,"line_start":79,"line_end":79,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":254206,"byte_end":254209,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":254210,"byte_end":254222,"line_start":81,"line_end":81,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":254223,"byte_end":254226,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ While iterating, the returned iterator will panic if any key or value in the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":254227,"byte_end":254307,"line_start":83,"line_end":83,"column_start":1,"column_end":81}},{"value":"/ environment is not valid unicode. If this is not desired, consider using the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":254308,"byte_end":254388,"line_start":84,"line_end":84,"column_start":1,"column_end":81}},{"value":"/ [`env::vars_os`] function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":254389,"byte_end":254419,"line_start":85,"line_end":85,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":254420,"byte_end":254423,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ [`env::vars_os`]: fn.vars_os.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":254424,"byte_end":254461,"line_start":87,"line_end":87,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1428},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":254885,"byte_end":254892,"line_start":99,"line_end":99,"column_start":8,"column_end":15},"name":"vars_os","qualname":"::env::vars_os","value":"pub fn vars_os() -> VarsOs","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of (variable, value) pairs of OS strings, for all the\n environment variables of the current process.","sig":null,"attributes":[{"value":"/ Returns an iterator of (variable, value) pairs of OS strings, for all the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":254519,"byte_end":254596,"line_start":92,"line_end":92,"column_start":1,"column_end":78}},{"value":"/ environment variables of the current process.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":254597,"byte_end":254646,"line_start":93,"line_end":93,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":254647,"byte_end":254650,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The returned iterator contains a snapshot of the process's environment","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":254651,"byte_end":254725,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"/ variables at the time of this invocation. Modifications to environment","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":254726,"byte_end":254800,"line_start":96,"line_end":96,"column_start":1,"column_end":75}},{"value":"/ variables afterwards will not be reflected in the returned iterator.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":254801,"byte_end":254873,"line_start":97,"line_end":97,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":254874,"byte_end":254877,"line_start":98,"line_end":98,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1442},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":256133,"byte_end":256136,"line_start":148,"line_end":148,"column_start":8,"column_end":11},"name":"var","qualname":"::env::var","value":"pub fn var<K: AsRef<OsStr>>(K) -> Result<String, VarError>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the environment variable `key` from the current process.","sig":null,"attributes":[{"value":"/ Fetches the environment variable `key` from the current process.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":255755,"byte_end":255823,"line_start":135,"line_end":135,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":255824,"byte_end":255827,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":255828,"byte_end":255840,"line_start":137,"line_end":137,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":255841,"byte_end":255844,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ * Environment variable is not present","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":255845,"byte_end":255886,"line_start":139,"line_end":139,"column_start":1,"column_end":42}},{"value":"/ * Environment variable is not valid unicode","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":255887,"byte_end":255934,"line_start":140,"line_end":140,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":255935,"byte_end":255938,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":255939,"byte_end":255951,"line_start":142,"line_end":142,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":255952,"byte_end":255955,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ This function may panic if `key` is empty, contains an ASCII equals sign","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":255956,"byte_end":256032,"line_start":144,"line_end":144,"column_start":1,"column_end":77}},{"value":"/ `'='` or the NUL character `'\\0'`, or when the value contains the NUL","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":256033,"byte_end":256106,"line_start":145,"line_end":145,"column_start":1,"column_end":74}},{"value":"/ character.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":256107,"byte_end":256121,"line_start":146,"line_end":146,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":256122,"byte_end":256125,"line_start":147,"line_end":147,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1445},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":256786,"byte_end":256792,"line_start":170,"line_end":170,"column_start":8,"column_end":14},"name":"var_os","qualname":"::env::var_os","value":"pub fn var_os<K: AsRef<OsStr>>(K) -> Option<OsString>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the environment variable `key` from the current process, returning\n [`None`] if the variable isn't set.","sig":null,"attributes":[{"value":"/ Fetches the environment variable `key` from the current process, returning","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":256411,"byte_end":256489,"line_start":159,"line_end":159,"column_start":1,"column_end":79}},{"value":"/ [`None`] if the variable isn't set.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":256490,"byte_end":256529,"line_start":160,"line_end":160,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":256530,"byte_end":256533,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ [`None`]: ../option/enum.Option.html#variant.None","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":256534,"byte_end":256587,"line_start":162,"line_end":162,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":256588,"byte_end":256591,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":256592,"byte_end":256604,"line_start":164,"line_end":164,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":256605,"byte_end":256608,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ This function may panic if `key` is empty, contains an ASCII equals sign","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":256609,"byte_end":256685,"line_start":166,"line_end":166,"column_start":1,"column_end":77}},{"value":"/ `'='` or the NUL character `'\\0'`, or when the value contains the NUL","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":256686,"byte_end":256759,"line_start":167,"line_end":167,"column_start":1,"column_end":74}},{"value":"/ character.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":256760,"byte_end":256774,"line_start":168,"line_end":168,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":256775,"byte_end":256778,"line_start":169,"line_end":169,"column_start":1,"column_end":4}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7120},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":257365,"byte_end":257375,"line_start":187,"line_end":187,"column_start":5,"column_end":15},"name":"NotPresent","qualname":"::env::VarError::NotPresent","value":"VarError::NotPresent","parent":{"krate":0,"index":7119},"children":[],"decl_id":null,"docs":" The specified environment variable was not present in the current\n process's environment.\n","sig":null,"attributes":[{"value":"/ The specified environment variable was not present in the current","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":257260,"byte_end":257329,"line_start":185,"line_end":185,"column_start":5,"column_end":74}},{"value":"/ process's environment.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":257334,"byte_end":257360,"line_start":186,"line_end":186,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7122},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":257552,"byte_end":257562,"line_start":192,"line_end":192,"column_start":5,"column_end":15},"name":"NotUnicode","qualname":"::env::VarError::NotUnicode","value":"VarError::NotUnicode(OsString)","parent":{"krate":0,"index":7119},"children":[],"decl_id":null,"docs":" The specified environment variable was found, but it did not contain\n valid unicode data. The found data is returned as a payload of this\n variant.\n","sig":null,"attributes":[{"value":"/ The specified environment variable was found, but it did not contain","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":257382,"byte_end":257454,"line_start":189,"line_end":189,"column_start":5,"column_end":77}},{"value":"/ valid unicode data. The found data is returned as a payload of this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":257459,"byte_end":257530,"line_start":190,"line_end":190,"column_start":5,"column_end":76}},{"value":"/ variant.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":257535,"byte_end":257547,"line_start":191,"line_end":191,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":7119},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":257245,"byte_end":257253,"line_start":184,"line_end":184,"column_start":10,"column_end":18},"name":"VarError","qualname":"::env::VarError","value":"pub enum VarError {\n\n    /// The specified environment variable was not present in the current\n    /// process's environment.\n    NotPresent,\n\n    /// The specified environment variable was found, but it did not contain\n    /// valid unicode data. The found data is returned as a payload of this\n    /// variant.\n    NotUnicode(OsString),\n}","parent":null,"children":[{"krate":0,"index":7120},{"krate":0,"index":7122}],"decl_id":null,"docs":" The error type for operations interacting with environment variables.\n Possibly returned from the [`env::var`] function.","sig":null,"attributes":[{"value":"/ The error type for operations interacting with environment variables.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":257035,"byte_end":257108,"line_start":179,"line_end":179,"column_start":1,"column_end":74}},{"value":"/ Possibly returned from the [`env::var`] function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":257109,"byte_end":257162,"line_start":180,"line_end":180,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":257163,"byte_end":257166,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ [`env::var`]: fn.var.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":257167,"byte_end":257196,"line_start":182,"line_end":182,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":1453},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":259106,"byte_end":259113,"line_start":235,"line_end":235,"column_start":8,"column_end":15},"name":"set_var","qualname":"::env::set_var","value":"pub fn set_var<K: AsRef<OsStr>, V: AsRef<OsStr>>(K, V)","parent":null,"children":[],"decl_id":null,"docs":" Sets the environment variable `k` to the value `v` for the currently running\n process.","sig":null,"attributes":[{"value":"/ Sets the environment variable `k` to the value `v` for the currently running","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":258194,"byte_end":258274,"line_start":215,"line_end":215,"column_start":1,"column_end":81}},{"value":"/ process.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":258275,"byte_end":258287,"line_start":216,"line_end":216,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":258288,"byte_end":258291,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ Note that while concurrent access to environment variables is safe in Rust,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":258292,"byte_end":258371,"line_start":218,"line_end":218,"column_start":1,"column_end":80}},{"value":"/ some platforms only expose inherently unsafe non-threadsafe APIs for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":258372,"byte_end":258444,"line_start":219,"line_end":219,"column_start":1,"column_end":73}},{"value":"/ inspecting the environment. As a result, extra care needs to be taken when","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":258445,"byte_end":258523,"line_start":220,"line_end":220,"column_start":1,"column_end":79}},{"value":"/ auditing calls to unsafe external FFI functions to ensure that any external","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":258524,"byte_end":258603,"line_start":221,"line_end":221,"column_start":1,"column_end":80}},{"value":"/ environment accesses are properly synchronized with accesses in Rust.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":258604,"byte_end":258677,"line_start":222,"line_end":222,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":258678,"byte_end":258681,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ Discussion of this unsafety on Unix may be found in:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":258682,"byte_end":258738,"line_start":224,"line_end":224,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":258739,"byte_end":258742,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/  - [Austin Group Bugzilla](http://austingroupbugs.net/view.php?id=188)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":258743,"byte_end":258817,"line_start":226,"line_end":226,"column_start":1,"column_end":75}},{"value":"/  - [GNU C library Bugzilla](https://sourceware.org/bugzilla/show_bug.cgi?id=15607#c2)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":258818,"byte_end":258907,"line_start":227,"line_end":227,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":258908,"byte_end":258911,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":258912,"byte_end":258924,"line_start":229,"line_end":229,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":258925,"byte_end":258928,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ This function may panic if `key` is empty, contains an ASCII equals sign","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":258929,"byte_end":259005,"line_start":231,"line_end":231,"column_start":1,"column_end":77}},{"value":"/ `'='` or the NUL character `'\\0'`, or when the value contains the NUL","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":259006,"byte_end":259079,"line_start":232,"line_end":232,"column_start":1,"column_end":74}},{"value":"/ character.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":259080,"byte_end":259094,"line_start":233,"line_end":233,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":259095,"byte_end":259098,"line_start":234,"line_end":234,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1458},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":260285,"byte_end":260295,"line_start":264,"line_end":264,"column_start":8,"column_end":18},"name":"remove_var","qualname":"::env::remove_var","value":"pub fn remove_var<K: AsRef<OsStr>>(K)","parent":null,"children":[],"decl_id":null,"docs":" Removes an environment variable from the environment of the currently running process.","sig":null,"attributes":[{"value":"/ Removes an environment variable from the environment of the currently running process.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":259377,"byte_end":259467,"line_start":245,"line_end":245,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":259468,"byte_end":259471,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ Note that while concurrent access to environment variables is safe in Rust,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":259472,"byte_end":259551,"line_start":247,"line_end":247,"column_start":1,"column_end":80}},{"value":"/ some platforms only expose inherently unsafe non-threadsafe APIs for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":259552,"byte_end":259624,"line_start":248,"line_end":248,"column_start":1,"column_end":73}},{"value":"/ inspecting the environment. As a result extra care needs to be taken when","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":259625,"byte_end":259702,"line_start":249,"line_end":249,"column_start":1,"column_end":78}},{"value":"/ auditing calls to unsafe external FFI functions to ensure that any external","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":259703,"byte_end":259782,"line_start":250,"line_end":250,"column_start":1,"column_end":80}},{"value":"/ environment accesses are properly synchronized with accesses in Rust.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":259783,"byte_end":259856,"line_start":251,"line_end":251,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":259857,"byte_end":259860,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ Discussion of this unsafety on Unix may be found in:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":259861,"byte_end":259917,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":259918,"byte_end":259921,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/  - [Austin Group Bugzilla](http://austingroupbugs.net/view.php?id=188)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":259922,"byte_end":259996,"line_start":255,"line_end":255,"column_start":1,"column_end":75}},{"value":"/  - [GNU C library Bugzilla](https://sourceware.org/bugzilla/show_bug.cgi?id=15607#c2)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":259997,"byte_end":260086,"line_start":256,"line_end":256,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":260087,"byte_end":260090,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":260091,"byte_end":260103,"line_start":258,"line_end":258,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":260104,"byte_end":260107,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ This function may panic if `key` is empty, contains an ASCII equals sign","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":260108,"byte_end":260184,"line_start":260,"line_end":260,"column_start":1,"column_end":77}},{"value":"/ `'='` or the NUL character `'\\0'`, or when the value contains the NUL","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":260185,"byte_end":260258,"line_start":261,"line_end":261,"column_start":1,"column_end":74}},{"value":"/ character.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":260259,"byte_end":260273,"line_start":262,"line_end":262,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":260274,"byte_end":260277,"line_start":263,"line_end":263,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1462},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":260893,"byte_end":260903,"line_start":283,"line_end":283,"column_start":12,"column_end":22},"name":"SplitPaths","qualname":"::env::SplitPaths","value":"SplitPaths {  }","parent":null,"children":[{"krate":0,"index":1464}],"decl_id":null,"docs":" An iterator that splits an environment variable into paths according to\n platform-specific conventions.","sig":null,"attributes":[{"value":"/ An iterator that splits an environment variable into paths according to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":260501,"byte_end":260576,"line_start":273,"line_end":273,"column_start":1,"column_end":76}},{"value":"/ platform-specific conventions.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":260577,"byte_end":260611,"line_start":274,"line_end":274,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":260612,"byte_end":260615,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ The iterator element type is [`PathBuf`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":260616,"byte_end":260661,"line_start":276,"line_end":276,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":260662,"byte_end":260665,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`std::env::split_paths`] function. See its","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":260666,"byte_end":260746,"line_start":278,"line_end":278,"column_start":1,"column_end":81}},{"value":"/ documentation for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":260747,"byte_end":260774,"line_start":279,"line_end":279,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":260775,"byte_end":260778,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ [`PathBuf`]: ../../std/path/struct.PathBuf.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":260779,"byte_end":260830,"line_start":281,"line_end":281,"column_start":1,"column_end":52}},{"value":"/ [`std::env::split_paths`]: fn.split_paths.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":260831,"byte_end":260881,"line_start":282,"line_end":282,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":1465},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":261165,"byte_end":261176,"line_start":293,"line_end":293,"column_start":8,"column_end":19},"name":"split_paths","qualname":"::env::split_paths","value":"pub fn split_paths<T: AsRef<OsStr> + ?Sized>(&T) -> SplitPaths","parent":null,"children":[],"decl_id":null,"docs":" Parses input according to platform conventions for the `PATH`\n environment variable.","sig":null,"attributes":[{"value":"/ Parses input according to platform conventions for the `PATH`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":260948,"byte_end":261013,"line_start":287,"line_end":287,"column_start":1,"column_end":66}},{"value":"/ environment variable.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":261014,"byte_end":261039,"line_start":288,"line_end":288,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":261040,"byte_end":261043,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ Returns an iterator over the paths contained in `unparsed`. The iterator","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":261044,"byte_end":261120,"line_start":290,"line_end":290,"column_start":1,"column_end":77}},{"value":"/ element type is [`PathBuf`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":261121,"byte_end":261153,"line_start":291,"line_end":291,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":261154,"byte_end":261157,"line_start":292,"line_end":292,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":7136},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":261876,"byte_end":261890,"line_start":318,"line_end":318,"column_start":12,"column_end":26},"name":"JoinPathsError","qualname":"::env::JoinPathsError","value":"JoinPathsError {  }","parent":null,"children":[{"krate":0,"index":7137}],"decl_id":null,"docs":" The error type for operations on the `PATH` variable. Possibly returned from\n the [`env::join_paths`] function.","sig":null,"attributes":[{"value":"/ The error type for operations on the `PATH` variable. Possibly returned from","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":261681,"byte_end":261761,"line_start":313,"line_end":313,"column_start":1,"column_end":81}},{"value":"/ the [`env::join_paths`] function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":261762,"byte_end":261799,"line_start":314,"line_end":314,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":261800,"byte_end":261803,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ [`env::join_paths`]: fn.join_paths.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":261804,"byte_end":261847,"line_start":316,"line_end":316,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":1474},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":262425,"byte_end":262435,"line_start":335,"line_end":335,"column_start":8,"column_end":18},"name":"join_paths","qualname":"::env::join_paths","value":"pub fn join_paths<I, T>(I) -> Result<OsString, JoinPathsError> where\nI: IntoIterator<Item = T>, T: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Joins a collection of [`Path`]s appropriately for the `PATH`\n environment variable.","sig":null,"attributes":[{"value":"/ Joins a collection of [`Path`]s appropriately for the `PATH`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":261931,"byte_end":261995,"line_start":322,"line_end":322,"column_start":1,"column_end":65}},{"value":"/ environment variable.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":261996,"byte_end":262021,"line_start":323,"line_end":323,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":262022,"byte_end":262025,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":262026,"byte_end":262038,"line_start":325,"line_end":325,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":262039,"byte_end":262042,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ Returns an [`Err`][err] (containing an error message) if one of the input","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":262043,"byte_end":262120,"line_start":327,"line_end":327,"column_start":1,"column_end":78}},{"value":"/ [`Path`]s contains an invalid character for constructing the `PATH`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":262121,"byte_end":262192,"line_start":328,"line_end":328,"column_start":1,"column_end":72}},{"value":"/ variable (a double quote on Windows or a colon on Unix).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":262193,"byte_end":262253,"line_start":329,"line_end":329,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":262254,"byte_end":262257,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ [`Path`]: ../../std/path/struct.Path.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":262258,"byte_end":262303,"line_start":331,"line_end":331,"column_start":1,"column_end":46}},{"value":"/ [`OsString`]: ../../std/ffi/struct.OsString.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":262304,"byte_end":262356,"line_start":332,"line_end":332,"column_start":1,"column_end":53}},{"value":"/ [err]: ../../std/result/enum.Result.html#variant.Err","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":262357,"byte_end":262413,"line_start":333,"line_end":333,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":262414,"byte_end":262417,"line_start":334,"line_end":334,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1482},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":263877,"byte_end":263885,"line_start":376,"line_end":376,"column_start":8,"column_end":16},"name":"home_dir","qualname":"::env::home_dir","value":"pub fn home_dir() -> Option<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path of the current user's home directory if known.","sig":null,"attributes":[{"value":"/ Returns the path of the current user's home directory if known.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":262881,"byte_end":262948,"line_start":355,"line_end":355,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":262949,"byte_end":262952,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ # Unix","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":262953,"byte_end":262963,"line_start":357,"line_end":357,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":262964,"byte_end":262967,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ - Returns the value of the 'HOME' environment variable if it is set","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":262968,"byte_end":263039,"line_start":359,"line_end":359,"column_start":1,"column_end":72}},{"value":"/   (including to an empty string).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":263040,"byte_end":263077,"line_start":360,"line_end":360,"column_start":1,"column_end":38}},{"value":"/ - Otherwise, it tries to determine the home directory by invoking the `getpwuid_r` function","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":263078,"byte_end":263173,"line_start":361,"line_end":361,"column_start":1,"column_end":96}},{"value":"/   using the UID of the current user. An empty home directory field returned from the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":263174,"byte_end":263262,"line_start":362,"line_end":362,"column_start":1,"column_end":89}},{"value":"/   `getpwuid_r` function is considered to be a valid value.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":263263,"byte_end":263325,"line_start":363,"line_end":363,"column_start":1,"column_end":63}},{"value":"/ - Returns `None` if the current user has no entry in the /etc/passwd file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":263326,"byte_end":263404,"line_start":364,"line_end":364,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":263405,"byte_end":263408,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ # Windows","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":263409,"byte_end":263422,"line_start":366,"line_end":366,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":263423,"byte_end":263426,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ - Returns the value of the 'HOME' environment variable if it is set","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":263427,"byte_end":263498,"line_start":368,"line_end":368,"column_start":1,"column_end":72}},{"value":"/   (including to an empty string).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":263499,"byte_end":263536,"line_start":369,"line_end":369,"column_start":1,"column_end":38}},{"value":"/ - Otherwise, returns the value of the 'USERPROFILE' environment variable if it is set","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":263537,"byte_end":263626,"line_start":370,"line_end":370,"column_start":1,"column_end":90}},{"value":"/   (including to an empty string).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":263627,"byte_end":263664,"line_start":371,"line_end":371,"column_start":1,"column_end":38}},{"value":"/ - If both do not exist, [`GetUserProfileDirectory`][msdn] is used to return the path.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":263665,"byte_end":263754,"line_start":372,"line_end":372,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":263755,"byte_end":263758,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ [msdn]: https://docs.microsoft.com/en-us/windows/win32/api/userenv/nf-userenv-getuserprofiledirectorya","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":263759,"byte_end":263865,"line_start":374,"line_end":374,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":263866,"byte_end":263869,"line_start":375,"line_end":375,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1483},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":264692,"byte_end":264700,"line_start":399,"line_end":399,"column_start":8,"column_end":16},"name":"temp_dir","qualname":"::env::temp_dir","value":"pub fn temp_dir() -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the path of a temporary directory.","sig":null,"attributes":[{"value":"/ Returns the path of a temporary directory.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":263935,"byte_end":263981,"line_start":380,"line_end":380,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":263982,"byte_end":263985,"line_start":381,"line_end":381,"column_start":1,"column_end":4}},{"value":"/ # Unix","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":263986,"byte_end":263996,"line_start":382,"line_end":382,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":263997,"byte_end":264000,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ Returns the value of the `TMPDIR` environment variable if it is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":264001,"byte_end":264068,"line_start":384,"line_end":384,"column_start":1,"column_end":68}},{"value":"/ set, otherwise for non-Android it returns `/tmp`. If Android, since there","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":264069,"byte_end":264146,"line_start":385,"line_end":385,"column_start":1,"column_end":78}},{"value":"/ is no global temporary folder (it is usually allocated per-app), it returns","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":264147,"byte_end":264226,"line_start":386,"line_end":386,"column_start":1,"column_end":80}},{"value":"/ `/data/local/tmp`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":264227,"byte_end":264249,"line_start":387,"line_end":387,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":264250,"byte_end":264253,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ # Windows","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":264254,"byte_end":264267,"line_start":389,"line_end":389,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":264268,"byte_end":264271,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ Returns the value of, in order, the `TMP`, `TEMP`,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":264272,"byte_end":264326,"line_start":391,"line_end":391,"column_start":1,"column_end":55}},{"value":"/ `USERPROFILE` environment variable if any are set and not the empty","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":264327,"byte_end":264398,"line_start":392,"line_end":392,"column_start":1,"column_end":72}},{"value":"/ string. Otherwise, `temp_dir` returns the path of the Windows directory.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":264399,"byte_end":264475,"line_start":393,"line_end":393,"column_start":1,"column_end":77}},{"value":"/ This behavior is identical to that of [`GetTempPath`][msdn], which this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":264476,"byte_end":264551,"line_start":394,"line_end":394,"column_start":1,"column_end":76}},{"value":"/ function uses internally.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":264552,"byte_end":264581,"line_start":395,"line_end":395,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":264582,"byte_end":264585,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ [msdn]: https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-gettemppatha","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":264586,"byte_end":264680,"line_start":397,"line_end":397,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":264681,"byte_end":264684,"line_start":398,"line_end":398,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1484},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266160,"byte_end":266171,"line_start":455,"line_end":455,"column_start":8,"column_end":19},"name":"current_exe","qualname":"::env::current_exe","value":"pub fn current_exe() -> io::Result<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Returns the full filesystem path of the current running executable.","sig":null,"attributes":[{"value":"/ Returns the full filesystem path of the current running executable.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":264742,"byte_end":264813,"line_start":403,"line_end":403,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":264814,"byte_end":264817,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":264818,"byte_end":264850,"line_start":405,"line_end":405,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":264851,"byte_end":264854,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ If the executable was invoked through a symbolic link, some platforms will","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":264855,"byte_end":264933,"line_start":407,"line_end":407,"column_start":1,"column_end":79}},{"value":"/ return the path of the symbolic link and other platforms will return the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":264934,"byte_end":265010,"line_start":408,"line_end":408,"column_start":1,"column_end":77}},{"value":"/ path of the symbolic link’s target.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265011,"byte_end":265052,"line_start":409,"line_end":409,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265053,"byte_end":265056,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265057,"byte_end":265069,"line_start":411,"line_end":411,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265070,"byte_end":265073,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ Acquiring the path of the current executable is a platform-specific operation","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265074,"byte_end":265155,"line_start":413,"line_end":413,"column_start":1,"column_end":82}},{"value":"/ that can fail for a good number of reasons. Some errors can include, but not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265156,"byte_end":265236,"line_start":414,"line_end":414,"column_start":1,"column_end":81}},{"value":"/ be limited to, filesystem operations failing or general syscall failures.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265237,"byte_end":265314,"line_start":415,"line_end":415,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265315,"byte_end":265318,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ # Security","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265319,"byte_end":265333,"line_start":417,"line_end":417,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265334,"byte_end":265337,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/ The output of this function should not be used in anything that might have","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265338,"byte_end":265416,"line_start":419,"line_end":419,"column_start":1,"column_end":79}},{"value":"/ security implications. For example:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265417,"byte_end":265456,"line_start":420,"line_end":420,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265457,"byte_end":265460,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265461,"byte_end":265468,"line_start":422,"line_end":422,"column_start":1,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265469,"byte_end":265484,"line_start":423,"line_end":423,"column_start":1,"column_end":16}},{"value":"/     println!(\"{:?}\", std::env::current_exe());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265485,"byte_end":265535,"line_start":424,"line_end":424,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265536,"byte_end":265541,"line_start":425,"line_end":425,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265542,"byte_end":265549,"line_start":426,"line_end":426,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265550,"byte_end":265553,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ On Linux systems, if this is compiled as `foo`:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265554,"byte_end":265605,"line_start":428,"line_end":428,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265606,"byte_end":265609,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ ```bash","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265610,"byte_end":265621,"line_start":430,"line_end":430,"column_start":1,"column_end":12}},{"value":"/ $ rustc foo.rs","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265622,"byte_end":265640,"line_start":431,"line_end":431,"column_start":1,"column_end":19}},{"value":"/ $ ./foo","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265641,"byte_end":265652,"line_start":432,"line_end":432,"column_start":1,"column_end":12}},{"value":"/ Ok(\"/home/alex/foo\")","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265653,"byte_end":265677,"line_start":433,"line_end":433,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265678,"byte_end":265685,"line_start":434,"line_end":434,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265686,"byte_end":265689,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ And you make a hard link of the program:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265690,"byte_end":265734,"line_start":436,"line_end":436,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265735,"byte_end":265738,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ ```bash","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265739,"byte_end":265750,"line_start":438,"line_end":438,"column_start":1,"column_end":12}},{"value":"/ $ ln foo bar","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265751,"byte_end":265767,"line_start":439,"line_end":439,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265768,"byte_end":265775,"line_start":440,"line_end":440,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265776,"byte_end":265779,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ When you run it, you won’t get the path of the original executable, you’ll","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265780,"byte_end":265862,"line_start":442,"line_end":442,"column_start":1,"column_end":79}},{"value":"/ get the path of the hard link:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265863,"byte_end":265897,"line_start":443,"line_end":443,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265898,"byte_end":265901,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ ```bash","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265902,"byte_end":265913,"line_start":445,"line_end":445,"column_start":1,"column_end":12}},{"value":"/ $ ./bar","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265914,"byte_end":265925,"line_start":446,"line_end":446,"column_start":1,"column_end":12}},{"value":"/ Ok(\"/home/alex/bar\")","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265926,"byte_end":265950,"line_start":447,"line_end":447,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265951,"byte_end":265958,"line_start":448,"line_end":448,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265959,"byte_end":265962,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ This sort of behavior has been known to [lead to privilege escalation] when","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":265963,"byte_end":266042,"line_start":450,"line_end":450,"column_start":1,"column_end":80}},{"value":"/ used incorrectly.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266043,"byte_end":266064,"line_start":451,"line_end":451,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266065,"byte_end":266068,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ [lead to privilege escalation]: https://securityvulns.com/Wdocument183.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266069,"byte_end":266148,"line_start":453,"line_end":453,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266149,"byte_end":266152,"line_start":454,"line_end":454,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":1485},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266285,"byte_end":266291,"line_start":460,"line_end":460,"column_start":9,"column_end":15},"name":"consts","qualname":"::env::consts","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","parent":null,"children":[{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1494}],"decl_id":null,"docs":" Constants associated with the current target\n","sig":null,"attributes":[{"value":"/ Constants associated with the current target","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266228,"byte_end":266276,"line_start":459,"line_end":459,"column_start":1,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":1487},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266659,"byte_end":266663,"line_start":479,"line_end":479,"column_start":15,"column_end":19},"name":"ARCH","qualname":"::env::consts::ARCH","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" A string describing the architecture of the CPU that is currently\n in use.","sig":null,"attributes":[{"value":"/ A string describing the architecture of the CPU that is currently","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266328,"byte_end":266397,"line_start":463,"line_end":463,"column_start":5,"column_end":74}},{"value":"/ in use.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266402,"byte_end":266413,"line_start":464,"line_end":464,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266418,"byte_end":266421,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ Some possible values:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266426,"byte_end":266451,"line_start":466,"line_end":466,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266456,"byte_end":266459,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ - x86","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266464,"byte_end":266473,"line_start":468,"line_end":468,"column_start":5,"column_end":14}},{"value":"/ - x86_64","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266478,"byte_end":266490,"line_start":469,"line_end":469,"column_start":5,"column_end":17}},{"value":"/ - arm","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266495,"byte_end":266504,"line_start":470,"line_end":470,"column_start":5,"column_end":14}},{"value":"/ - aarch64","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266509,"byte_end":266522,"line_start":471,"line_end":471,"column_start":5,"column_end":18}},{"value":"/ - mips","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266527,"byte_end":266537,"line_start":472,"line_end":472,"column_start":5,"column_end":15}},{"value":"/ - mips64","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266542,"byte_end":266554,"line_start":473,"line_end":473,"column_start":5,"column_end":17}},{"value":"/ - powerpc","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266559,"byte_end":266572,"line_start":474,"line_end":474,"column_start":5,"column_end":18}},{"value":"/ - powerpc64","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266577,"byte_end":266592,"line_start":475,"line_end":475,"column_start":5,"column_end":20}},{"value":"/ - riscv64","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266597,"byte_end":266610,"line_start":476,"line_end":476,"column_start":5,"column_end":18}},{"value":"/ - s390x","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266615,"byte_end":266626,"line_start":477,"line_end":477,"column_start":5,"column_end":16}},{"value":"/ - sparc64","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266631,"byte_end":266644,"line_start":478,"line_end":478,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":1488},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266854,"byte_end":266860,"line_start":487,"line_end":487,"column_start":15,"column_end":21},"name":"FAMILY","qualname":"::env::consts::FAMILY","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The family of the operating system. Example value is `unix`.","sig":null,"attributes":[{"value":"/ The family of the operating system. Example value is `unix`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266696,"byte_end":266760,"line_start":481,"line_end":481,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266765,"byte_end":266768,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ Some possible values:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266773,"byte_end":266798,"line_start":483,"line_end":483,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266803,"byte_end":266806,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ - unix","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266811,"byte_end":266821,"line_start":485,"line_end":485,"column_start":5,"column_end":15}},{"value":"/ - windows","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266826,"byte_end":266839,"line_start":486,"line_end":486,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":1489},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267215,"byte_end":267217,"line_start":504,"line_end":504,"column_start":15,"column_end":17},"name":"OS","qualname":"::env::consts::OS","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" A string describing the specific operating system in use.\n Example value is `linux`.","sig":null,"attributes":[{"value":"/ A string describing the specific operating system in use.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266886,"byte_end":266947,"line_start":489,"line_end":489,"column_start":5,"column_end":66}},{"value":"/ Example value is `linux`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266952,"byte_end":266981,"line_start":490,"line_end":490,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266986,"byte_end":266989,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ Some possible values:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":266994,"byte_end":267019,"line_start":492,"line_end":492,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267024,"byte_end":267027,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ - linux","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267032,"byte_end":267043,"line_start":494,"line_end":494,"column_start":5,"column_end":16}},{"value":"/ - macos","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267048,"byte_end":267059,"line_start":495,"line_end":495,"column_start":5,"column_end":16}},{"value":"/ - ios","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267064,"byte_end":267073,"line_start":496,"line_end":496,"column_start":5,"column_end":14}},{"value":"/ - freebsd","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267078,"byte_end":267091,"line_start":497,"line_end":497,"column_start":5,"column_end":18}},{"value":"/ - dragonfly","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267096,"byte_end":267111,"line_start":498,"line_end":498,"column_start":5,"column_end":20}},{"value":"/ - netbsd","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267116,"byte_end":267128,"line_start":499,"line_end":499,"column_start":5,"column_end":17}},{"value":"/ - openbsd","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267133,"byte_end":267146,"line_start":500,"line_end":500,"column_start":5,"column_end":18}},{"value":"/ - solaris","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267151,"byte_end":267164,"line_start":501,"line_end":501,"column_start":5,"column_end":18}},{"value":"/ - android","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267169,"byte_end":267182,"line_start":502,"line_end":502,"column_start":5,"column_end":18}},{"value":"/ - windows","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267187,"byte_end":267200,"line_start":503,"line_end":503,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":1490},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267456,"byte_end":267466,"line_start":513,"line_end":513,"column_start":15,"column_end":25},"name":"DLL_PREFIX","qualname":"::env::consts::DLL_PREFIX","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Specifies the filename prefix used for shared libraries on this\n platform. Example value is `lib`.","sig":null,"attributes":[{"value":"/ Specifies the filename prefix used for shared libraries on this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267239,"byte_end":267306,"line_start":506,"line_end":506,"column_start":5,"column_end":72}},{"value":"/ platform. Example value is `lib`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267311,"byte_end":267348,"line_start":507,"line_end":507,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267353,"byte_end":267356,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ Some possible values:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267361,"byte_end":267386,"line_start":509,"line_end":509,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267391,"byte_end":267394,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ - lib","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267399,"byte_end":267408,"line_start":511,"line_end":511,"column_start":5,"column_end":14}},{"value":"/ - `\"\"` (an empty string)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267413,"byte_end":267441,"line_start":512,"line_end":512,"column_start":5,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":1491},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267712,"byte_end":267722,"line_start":523,"line_end":523,"column_start":15,"column_end":25},"name":"DLL_SUFFIX","qualname":"::env::consts::DLL_SUFFIX","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Specifies the filename suffix used for shared libraries on this\n platform. Example value is `.so`.","sig":null,"attributes":[{"value":"/ Specifies the filename suffix used for shared libraries on this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267496,"byte_end":267563,"line_start":515,"line_end":515,"column_start":5,"column_end":72}},{"value":"/ platform. Example value is `.so`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267568,"byte_end":267605,"line_start":516,"line_end":516,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267610,"byte_end":267613,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ Some possible values:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267618,"byte_end":267643,"line_start":518,"line_end":518,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267648,"byte_end":267651,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ - .so","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267656,"byte_end":267665,"line_start":520,"line_end":520,"column_start":5,"column_end":14}},{"value":"/ - .dylib","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267670,"byte_end":267682,"line_start":521,"line_end":521,"column_start":5,"column_end":17}},{"value":"/ - .dll","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267687,"byte_end":267697,"line_start":522,"line_end":522,"column_start":5,"column_end":15}}]},{"kind":"Const","id":{"krate":0,"index":1492},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267987,"byte_end":268000,"line_start":533,"line_end":533,"column_start":15,"column_end":28},"name":"DLL_EXTENSION","qualname":"::env::consts::DLL_EXTENSION","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Specifies the file extension used for shared libraries on this\n platform that goes after the dot. Example value is `so`.","sig":null,"attributes":[{"value":"/ Specifies the file extension used for shared libraries on this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267752,"byte_end":267818,"line_start":525,"line_end":525,"column_start":5,"column_end":71}},{"value":"/ platform that goes after the dot. Example value is `so`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267823,"byte_end":267883,"line_start":526,"line_end":526,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267888,"byte_end":267891,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ Some possible values:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267896,"byte_end":267921,"line_start":528,"line_end":528,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267926,"byte_end":267929,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ - so","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267934,"byte_end":267942,"line_start":530,"line_end":530,"column_start":5,"column_end":13}},{"value":"/ - dylib","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267947,"byte_end":267958,"line_start":531,"line_end":531,"column_start":5,"column_end":16}},{"value":"/ - dll","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":267963,"byte_end":267972,"line_start":532,"line_end":532,"column_start":5,"column_end":14}}]},{"kind":"Const","id":{"krate":0,"index":1493},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":268287,"byte_end":268297,"line_start":544,"line_end":544,"column_start":15,"column_end":25},"name":"EXE_SUFFIX","qualname":"::env::consts::EXE_SUFFIX","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Specifies the filename suffix used for executable binaries on this\n platform. Example value is `.exe`.","sig":null,"attributes":[{"value":"/ Specifies the filename suffix used for executable binaries on this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":268033,"byte_end":268103,"line_start":535,"line_end":535,"column_start":5,"column_end":75}},{"value":"/ platform. Example value is `.exe`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":268108,"byte_end":268146,"line_start":536,"line_end":536,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":268151,"byte_end":268154,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ Some possible values:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":268159,"byte_end":268184,"line_start":538,"line_end":538,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":268189,"byte_end":268192,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ - .exe","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":268197,"byte_end":268207,"line_start":540,"line_end":540,"column_start":5,"column_end":15}},{"value":"/ - .nexe","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":268212,"byte_end":268223,"line_start":541,"line_end":541,"column_start":5,"column_end":16}},{"value":"/ - .pexe","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":268228,"byte_end":268239,"line_start":542,"line_end":542,"column_start":5,"column_end":16}},{"value":"/ - `\"\"` (an empty string)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":268244,"byte_end":268272,"line_start":543,"line_end":543,"column_start":5,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":1494},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":268555,"byte_end":268568,"line_start":553,"line_end":553,"column_start":15,"column_end":28},"name":"EXE_EXTENSION","qualname":"::env::consts::EXE_EXTENSION","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Specifies the file extension, if any, used for executable binaries\n on this platform. Example value is `exe`.","sig":null,"attributes":[{"value":"/ Specifies the file extension, if any, used for executable binaries","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":268327,"byte_end":268397,"line_start":546,"line_end":546,"column_start":5,"column_end":75}},{"value":"/ on this platform. Example value is `exe`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":268402,"byte_end":268447,"line_start":547,"line_end":547,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":268452,"byte_end":268455,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Some possible values:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":268460,"byte_end":268485,"line_start":549,"line_end":549,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":268490,"byte_end":268493,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ - exe","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":268498,"byte_end":268507,"line_start":551,"line_end":551,"column_start":5,"column_end":14}},{"value":"/ - `\"\"` (an empty string)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":268512,"byte_end":268540,"line_start":552,"line_end":552,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":1497},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","parent":null,"children":[{"krate":0,"index":1498},{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":8978},{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":8992},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1530},{"krate":0,"index":1534},{"krate":0,"index":1545},{"krate":0,"index":1547},{"krate":0,"index":1550},{"krate":0,"index":1552},{"krate":0,"index":1556},{"krate":0,"index":1559},{"krate":0,"index":1561},{"krate":0,"index":1563},{"krate":0,"index":1565},{"krate":0,"index":1567},{"krate":0,"index":1569},{"krate":0,"index":1571},{"krate":0,"index":1573},{"krate":0,"index":1575},{"krate":0,"index":1577},{"krate":0,"index":1579},{"krate":0,"index":1581},{"krate":0,"index":1583},{"krate":0,"index":1585},{"krate":0,"index":1590},{"krate":0,"index":1592},{"krate":0,"index":1594},{"krate":0,"index":1596},{"krate":0,"index":1598},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1608},{"krate":0,"index":1615},{"krate":0,"index":1622},{"krate":0,"index":7144},{"krate":0,"index":7150},{"krate":0,"index":7147},{"krate":0,"index":1628},{"krate":0,"index":7153},{"krate":0,"index":7162},{"krate":0,"index":7159},{"krate":0,"index":7156},{"krate":0,"index":1632},{"krate":0,"index":1636},{"krate":0,"index":1640}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1519},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":270837,"byte_end":270842,"line_start":50,"line_end":50,"column_start":11,"column_end":16},"name":"Error","qualname":"::error::Error","value":"Error: Debug + Display","parent":null,"children":[{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1524}],"decl_id":null,"docs":" `Error` is a trait representing the basic expectations for error values,\n i.e., values of type `E` in [`Result<T, E>`]. Errors must describe\n themselves through the [`Display`] and [`Debug`] traits, and may provide\n cause chain information:","sig":null,"attributes":[{"value":"/ `Error` is a trait representing the basic expectations for error values,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":269969,"byte_end":270045,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ i.e., values of type `E` in [`Result<T, E>`]. Errors must describe","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":270046,"byte_end":270116,"line_start":35,"line_end":35,"column_start":1,"column_end":71}},{"value":"/ themselves through the [`Display`] and [`Debug`] traits, and may provide","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":270117,"byte_end":270193,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ cause chain information:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":270194,"byte_end":270222,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":270223,"byte_end":270226,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The [`source`] method is generally used when errors cross \"abstraction","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":270227,"byte_end":270301,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ boundaries\". If one module must report an error that is caused by an error","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":270302,"byte_end":270380,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ from a lower-level module, it can allow access to that error via the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":270381,"byte_end":270453,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/ [`source`] method. This makes it possible for the high-level module to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":270454,"byte_end":270528,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ provide its own errors while also revealing some of the implementation for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":270529,"byte_end":270607,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ debugging via [`source`] chains.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":270608,"byte_end":270644,"line_start":44,"line_end":44,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":270645,"byte_end":270648,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`Result<T, E>`]: ../result/enum.Result.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":270649,"byte_end":270697,"line_start":46,"line_end":46,"column_start":1,"column_end":49}},{"value":"/ [`Display`]: ../fmt/trait.Display.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":270698,"byte_end":270740,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ [`Debug`]: ../fmt/trait.Debug.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":270741,"byte_end":270779,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/ [`source`]: trait.Error.html#method.source","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":270780,"byte_end":270826,"line_start":49,"line_end":49,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":270931,"byte_end":270937,"line_start":53,"line_end":53,"column_start":8,"column_end":14},"name":"source","qualname":"::error::Error::source","value":"pub fn source(&Self) -> Option<&Error + 'static>","parent":{"krate":0,"index":1519},"children":[],"decl_id":null,"docs":" The lower-level source of this error, if any.","sig":null,"attributes":[{"value":"/ The lower-level source of this error, if any.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":270866,"byte_end":270915,"line_start":51,"line_end":51,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":270920,"byte_end":270923,"line_start":52,"line_end":52,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1521},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":271045,"byte_end":271052,"line_start":58,"line_end":58,"column_start":8,"column_end":15},"name":"type_id","qualname":"::error::Error::type_id","value":"pub fn type_id(&Self, private::Internal) -> TypeId where Self: 'static","parent":{"krate":0,"index":1519},"children":[],"decl_id":null,"docs":" Gets the `TypeId` of `self`.\n","sig":null,"attributes":[{"value":"/ Gets the `TypeId` of `self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":271005,"byte_end":271037,"line_start":57,"line_end":57,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":271726,"byte_end":271735,"line_start":75,"line_end":75,"column_start":8,"column_end":17},"name":"backtrace","qualname":"::error::Error::backtrace","value":"pub fn backtrace(&Self) -> Option<&Backtrace>","parent":{"krate":0,"index":1519},"children":[],"decl_id":null,"docs":" Returns a stack backtrace, if available, of where this error occurred.","sig":null,"attributes":[{"value":"/ Returns a stack backtrace, if available, of where this error occurred.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":271171,"byte_end":271245,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":271250,"byte_end":271253,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This function allows inspecting the location, in code, of where an error","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":271258,"byte_end":271334,"line_start":67,"line_end":67,"column_start":5,"column_end":81}},{"value":"/ happened. The returned `Backtrace` contains information about the stack","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":271339,"byte_end":271414,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ trace of the OS thread of execution of where the error originated from.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":271419,"byte_end":271494,"line_start":69,"line_end":69,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":271499,"byte_end":271502,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that not all errors contain a `Backtrace`. Also note that a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":271507,"byte_end":271575,"line_start":71,"line_end":71,"column_start":5,"column_end":73}},{"value":"/ `Backtrace` may actually be empty. For more information consult the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":271580,"byte_end":271651,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ `Backtrace` type itself.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":271656,"byte_end":271684,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"cfg(feature = \"backtrace\")","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":271689,"byte_end":271718,"line_start":74,"line_end":74,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1523},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":271973,"byte_end":271984,"line_start":85,"line_end":85,"column_start":8,"column_end":19},"name":"description","qualname":"::error::Error::description","value":"pub fn description(&Self) -> &str","parent":{"krate":0,"index":1519},"children":[],"decl_id":null,"docs":" ```\n if let Err(e) = \"xc\".parse::<u32>() {\n     // Print `e` itself, no need for description().\n     eprintln!(\"Error: {}\", e);\n }\n ```\n","sig":null,"attributes":[{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":271791,"byte_end":271798,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ if let Err(e) = \"xc\".parse::<u32>() {","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":271803,"byte_end":271844,"line_start":80,"line_end":80,"column_start":5,"column_end":46}},{"value":"/     // Print `e` itself, no need for description().","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":271849,"byte_end":271904,"line_start":81,"line_end":81,"column_start":5,"column_end":60}},{"value":"/     eprintln!(\"Error: {}\", e);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":271909,"byte_end":271943,"line_start":82,"line_end":82,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":271948,"byte_end":271953,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":271958,"byte_end":271965,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":272067,"byte_end":272072,"line_start":89,"line_end":89,"column_start":8,"column_end":13},"name":"cause","qualname":"::error::Error::cause","value":"pub fn cause(&Self) -> Option<&Error>","parent":{"krate":0,"index":1519},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7140},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":272328,"byte_end":272336,"line_start":98,"line_end":98,"column_start":16,"column_end":24},"name":"Internal","qualname":"::error::private::Internal","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1602},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":277737,"byte_end":277739,"line_start":329,"line_end":329,"column_start":12,"column_end":14},"name":"is","qualname":"<Error + 'static>::is","value":"pub fn is<T: Error + 'static>(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the boxed type is the same as `T`\n","sig":null,"attributes":[{"value":"/ Returns `true` if the boxed type is the same as `T`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":277656,"byte_end":277711,"line_start":327,"line_end":327,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":277716,"byte_end":277725,"line_start":328,"line_end":328,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1604},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":278197,"byte_end":278209,"line_start":343,"line_end":343,"column_start":12,"column_end":24},"name":"downcast_ref","qualname":"<Error + 'static>::downcast_ref","value":"pub fn downcast_ref<T: Error + 'static>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns some reference to the boxed value if it is of type `T`, or\n `None` if it isn't.\n","sig":null,"attributes":[{"value":"/ Returns some reference to the boxed value if it is of type `T`, or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":278073,"byte_end":278143,"line_start":340,"line_end":340,"column_start":5,"column_end":75}},{"value":"/ `None` if it isn't.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":278148,"byte_end":278171,"line_start":341,"line_end":341,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":278176,"byte_end":278185,"line_start":342,"line_end":342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":278538,"byte_end":278550,"line_start":354,"line_end":354,"column_start":12,"column_end":24},"name":"downcast_mut","qualname":"<Error + 'static>::downcast_mut","value":"pub fn downcast_mut<T: Error + 'static>(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns some mutable reference to the boxed value if it is of type `T`, or\n `None` if it isn't.\n","sig":null,"attributes":[{"value":"/ Returns some mutable reference to the boxed value if it is of type `T`, or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":278406,"byte_end":278484,"line_start":351,"line_end":351,"column_start":5,"column_end":83}},{"value":"/ `None` if it isn't.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":278489,"byte_end":278512,"line_start":352,"line_end":352,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":278517,"byte_end":278526,"line_start":353,"line_end":353,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1609},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":278876,"byte_end":278878,"line_start":366,"line_end":366,"column_start":12,"column_end":14},"name":"is","qualname":"<Error + Send + 'static>::is","value":"pub fn is<T: Error + 'static>(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Forwards to the method defined on the type `dyn Error`.\n","sig":null,"attributes":[{"value":"/ Forwards to the method defined on the type `dyn Error`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":278791,"byte_end":278850,"line_start":364,"line_end":364,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":278855,"byte_end":278864,"line_start":365,"line_end":365,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1611},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":279057,"byte_end":279069,"line_start":372,"line_end":372,"column_start":12,"column_end":24},"name":"downcast_ref","qualname":"<Error + Send + 'static>::downcast_ref","value":"pub fn downcast_ref<T: Error + 'static>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Forwards to the method defined on the type `dyn Error`.\n","sig":null,"attributes":[{"value":"/ Forwards to the method defined on the type `dyn Error`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":278972,"byte_end":279031,"line_start":370,"line_end":370,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":279036,"byte_end":279045,"line_start":371,"line_end":371,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":279264,"byte_end":279276,"line_start":378,"line_end":378,"column_start":12,"column_end":24},"name":"downcast_mut","qualname":"<Error + Send + 'static>::downcast_mut","value":"pub fn downcast_mut<T: Error + 'static>(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Forwards to the method defined on the type `dyn Error`.\n","sig":null,"attributes":[{"value":"/ Forwards to the method defined on the type `dyn Error`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":279179,"byte_end":279238,"line_start":376,"line_end":376,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":279243,"byte_end":279252,"line_start":377,"line_end":377,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1616},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":279522,"byte_end":279524,"line_start":386,"line_end":386,"column_start":12,"column_end":14},"name":"is","qualname":"<Error + Send + Sync + 'static>::is","value":"pub fn is<T: Error + 'static>(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Forwards to the method defined on the type `dyn Error`.\n","sig":null,"attributes":[{"value":"/ Forwards to the method defined on the type `dyn Error`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":279437,"byte_end":279496,"line_start":384,"line_end":384,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":279501,"byte_end":279510,"line_start":385,"line_end":385,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1618},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":279703,"byte_end":279715,"line_start":392,"line_end":392,"column_start":12,"column_end":24},"name":"downcast_ref","qualname":"<Error + Send + Sync + 'static>::downcast_ref","value":"pub fn downcast_ref<T: Error + 'static>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Forwards to the method defined on the type `dyn Error`.\n","sig":null,"attributes":[{"value":"/ Forwards to the method defined on the type `dyn Error`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":279618,"byte_end":279677,"line_start":390,"line_end":390,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":279682,"byte_end":279691,"line_start":391,"line_end":391,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1620},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":279910,"byte_end":279922,"line_start":398,"line_end":398,"column_start":12,"column_end":24},"name":"downcast_mut","qualname":"<Error + Send + Sync + 'static>::downcast_mut","value":"pub fn downcast_mut<T: Error + 'static>(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Forwards to the method defined on the type `dyn Error`.\n","sig":null,"attributes":[{"value":"/ Forwards to the method defined on the type `dyn Error`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":279825,"byte_end":279884,"line_start":396,"line_end":396,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":279889,"byte_end":279898,"line_start":397,"line_end":397,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1623},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":280137,"byte_end":280145,"line_start":406,"line_end":406,"column_start":12,"column_end":20},"name":"downcast","qualname":"<Error>::downcast","value":"pub fn downcast<T: Error + 'static>(Box<Self>) -> Result<Box<T>, Box<Error>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to downcast the box to a concrete type.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":280059,"byte_end":280068,"line_start":404,"line_end":404,"column_start":5,"column_end":14}},{"value":"/ Attempts to downcast the box to a concrete type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":280073,"byte_end":280125,"line_start":405,"line_end":405,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1625},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":280706,"byte_end":280711,"line_start":424,"line_end":424,"column_start":12,"column_end":17},"name":"chain","qualname":"<Error>::chain","value":"pub fn chain(&Self) -> Chain","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator starting with the current error and continuing with\n recursively calling [`source`].","sig":null,"attributes":[{"value":"/ Returns an iterator starting with the current error and continuing with","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":280454,"byte_end":280529,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ recursively calling [`source`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":280534,"byte_end":280569,"line_start":418,"line_end":418,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":280574,"byte_end":280577,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ If you want to omit the current error and only use its sources,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":280582,"byte_end":280649,"line_start":420,"line_end":420,"column_start":5,"column_end":72}},{"value":"/ use `skip(1)`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":280654,"byte_end":280672,"line_start":421,"line_end":421,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":280677,"byte_end":280680,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":280685,"byte_end":280694,"line_start":423,"line_end":423,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1626},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":280932,"byte_end":280942,"line_start":432,"line_end":432,"column_start":12,"column_end":22},"name":"iter_chain","qualname":"<Error>::iter_chain","value":"pub fn iter_chain(&Self) -> ErrorIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator starting with the current error and continuing with\n recursively calling [`source`].","sig":null,"attributes":[{"value":"/ Returns an iterator starting with the current error and continuing with","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":280783,"byte_end":280858,"line_start":428,"line_end":428,"column_start":5,"column_end":80}},{"value":"/ recursively calling [`source`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":280863,"byte_end":280898,"line_start":429,"line_end":429,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":280903,"byte_end":280906,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":280911,"byte_end":280920,"line_start":431,"line_end":431,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1627},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":281203,"byte_end":281215,"line_start":442,"line_end":442,"column_start":12,"column_end":24},"name":"iter_sources","qualname":"<Error>::iter_sources","value":"pub fn iter_sources(&Self) -> ErrorIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator starting with the [`source`] of this error\n and continuing with recursively calling [`source`].","sig":null,"attributes":[{"value":"/ Returns an iterator starting with the [`source`] of this error","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":281043,"byte_end":281109,"line_start":438,"line_end":438,"column_start":5,"column_end":71}},{"value":"/ and continuing with recursively calling [`source`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":281114,"byte_end":281169,"line_start":439,"line_end":439,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":281174,"byte_end":281177,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":281182,"byte_end":281191,"line_start":441,"line_end":441,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7144},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":281534,"byte_end":281539,"line_start":456,"line_end":456,"column_start":12,"column_end":17},"name":"Chain","qualname":"::error::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":7146}],"decl_id":null,"docs":" An iterator over an [`Error`] and its sources.","sig":null,"attributes":[{"value":"/ An iterator over an [`Error`] and its sources.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":281317,"byte_end":281367,"line_start":449,"line_end":449,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":281368,"byte_end":281371,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ If you want to omit the initial error and only process","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":281372,"byte_end":281430,"line_start":451,"line_end":451,"column_start":1,"column_end":59}},{"value":"/ its sources, use `skip(1)`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":281431,"byte_end":281462,"line_start":452,"line_end":452,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":281463,"byte_end":281466,"line_start":453,"line_end":453,"column_start":1,"column_end":4}},{"value":"/ [`Error`]: trait.Error.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":281467,"byte_end":281498,"line_start":454,"line_end":454,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":7153},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":281972,"byte_end":281981,"line_start":474,"line_end":474,"column_start":12,"column_end":21},"name":"ErrorIter","qualname":"::error::ErrorIter","value":"ErrorIter {  }","parent":null,"children":[{"krate":0,"index":7155}],"decl_id":null,"docs":" An iterator over an [`Error`] and its sources.","sig":null,"attributes":[{"value":"/ An iterator over an [`Error`] and its sources.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":281844,"byte_end":281894,"line_start":470,"line_end":470,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":281895,"byte_end":281898,"line_start":471,"line_end":471,"column_start":1,"column_end":4}},{"value":"/ [`Error`]: trait.Error.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":281899,"byte_end":281930,"line_start":472,"line_end":472,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1637},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":282396,"byte_end":282404,"line_start":491,"line_end":491,"column_start":12,"column_end":20},"name":"downcast","qualname":"<Error + Send>::downcast","value":"pub fn downcast<T: Error + 'static>(Box<Self>)\n-> Result<Box<T>, Box<Error + Send>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to downcast the box to a concrete type.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":282318,"byte_end":282327,"line_start":489,"line_end":489,"column_start":5,"column_end":14}},{"value":"/ Attempts to downcast the box to a concrete type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":282332,"byte_end":282384,"line_start":490,"line_end":490,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1641},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":282822,"byte_end":282830,"line_start":503,"line_end":503,"column_start":12,"column_end":20},"name":"downcast","qualname":"<Error + Send + Sync>::downcast","value":"pub fn downcast<T: Error + 'static>(Box<Self>) -> Result<Box<T>, Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to downcast the box to a concrete type.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":282744,"byte_end":282753,"line_start":501,"line_end":501,"column_start":5,"column_end":14}},{"value":"/ Attempts to downcast the box to a concrete type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":282758,"byte_end":282810,"line_start":502,"line_end":502,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":1644},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ffi","qualname":"::ffi","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","parent":null,"children":[{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1651},{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1655},{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1659},{"krate":0,"index":1672}],"decl_id":null,"docs":" Utilities related to FFI bindings.","sig":null,"attributes":[{"value":"/ Utilities related to FFI bindings.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":283941,"byte_end":283979,"line_start":18,"line_end":18,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":283980,"byte_end":283983,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This module provides utilities to handle data across non-Rust","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":283984,"byte_end":284049,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ interfaces, like other programming languages and the underlying","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":284050,"byte_end":284117,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/ operating system. It is mainly of use for FFI (Foreign Function","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":284118,"byte_end":284185,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/ Interface) bindings and code that needs to exchange C-like strings","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":284186,"byte_end":284256,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/ with other languages.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":284257,"byte_end":284282,"line_start":24,"line_end":24,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":284283,"byte_end":284286,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":284287,"byte_end":284301,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":284302,"byte_end":284305,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Rust represents owned strings with the [`String`] type, and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":284306,"byte_end":284369,"line_start":28,"line_end":28,"column_start":1,"column_end":64}},{"value":"/ borrowed slices of strings with the [`str`] primitive. Both are","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":284370,"byte_end":284437,"line_start":29,"line_end":29,"column_start":1,"column_end":68}},{"value":"/ always in UTF-8 encoding, and may contain nul bytes in the middle,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":284438,"byte_end":284508,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ i.e., if you look at the bytes that make up the string, there may","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":284509,"byte_end":284578,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ be a `\\0` among them. Both `String` and `str` store their length","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":284579,"byte_end":284647,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"/ explicitly; there are no nul terminators at the end of strings","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":284648,"byte_end":284714,"line_start":33,"line_end":33,"column_start":1,"column_end":67}},{"value":"/ like in C.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":284715,"byte_end":284729,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":284730,"byte_end":284733,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ C strings are different from Rust strings:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":284734,"byte_end":284780,"line_start":36,"line_end":36,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":284781,"byte_end":284784,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ * **Encodings** - Rust strings are UTF-8, but C strings may use","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":284785,"byte_end":284852,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/ other encodings. If you are using a string from C, you should","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":284853,"byte_end":284918,"line_start":39,"line_end":39,"column_start":1,"column_end":66}},{"value":"/ check its encoding explicitly, rather than just assuming that it","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":284919,"byte_end":284987,"line_start":40,"line_end":40,"column_start":1,"column_end":69}},{"value":"/ is UTF-8 like you can do in Rust.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":284988,"byte_end":285025,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":285026,"byte_end":285029,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ * **Character size** - C strings may use `char` or `wchar_t`-sized","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":285030,"byte_end":285100,"line_start":43,"line_end":43,"column_start":1,"column_end":71}},{"value":"/ characters; please **note** that C's `char` is different from Rust's.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":285101,"byte_end":285174,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"/ The C standard leaves the actual sizes of those types open to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":285175,"byte_end":285240,"line_start":45,"line_end":45,"column_start":1,"column_end":66}},{"value":"/ interpretation, but defines different APIs for strings made up of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":285241,"byte_end":285310,"line_start":46,"line_end":46,"column_start":1,"column_end":70}},{"value":"/ each character type. Rust strings are always UTF-8, so different","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":285311,"byte_end":285379,"line_start":47,"line_end":47,"column_start":1,"column_end":69}},{"value":"/ Unicode characters will be encoded in a variable number of bytes","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":285380,"byte_end":285448,"line_start":48,"line_end":48,"column_start":1,"column_end":69}},{"value":"/ each. The Rust type [`char`] represents a '[Unicode scalar","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":285449,"byte_end":285511,"line_start":49,"line_end":49,"column_start":1,"column_end":63}},{"value":"/ value]', which is similar to, but not the same as, a '[Unicode","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":285512,"byte_end":285578,"line_start":50,"line_end":50,"column_start":1,"column_end":67}},{"value":"/ code point]'.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":285579,"byte_end":285596,"line_start":51,"line_end":51,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":285597,"byte_end":285600,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ * **Nul terminators and implicit string lengths** - Often, C","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":285601,"byte_end":285665,"line_start":53,"line_end":53,"column_start":1,"column_end":65}},{"value":"/ strings are nul-terminated, i.e., they have a `\\0` character at the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":285666,"byte_end":285737,"line_start":54,"line_end":54,"column_start":1,"column_end":72}},{"value":"/ end. The length of a string buffer is not stored, but has to be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":285738,"byte_end":285805,"line_start":55,"line_end":55,"column_start":1,"column_end":68}},{"value":"/ calculated; to compute the length of a string, C code must","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":285806,"byte_end":285868,"line_start":56,"line_end":56,"column_start":1,"column_end":63}},{"value":"/ manually call a function like `strlen()` for `char`-based strings,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":285869,"byte_end":285939,"line_start":57,"line_end":57,"column_start":1,"column_end":71}},{"value":"/ or `wcslen()` for `wchar_t`-based ones. Those functions return","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":285940,"byte_end":286006,"line_start":58,"line_end":58,"column_start":1,"column_end":67}},{"value":"/ the number of characters in the string excluding the nul","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":286007,"byte_end":286067,"line_start":59,"line_end":59,"column_start":1,"column_end":61}},{"value":"/ terminator, so the buffer length is really `len+1` characters.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":286068,"byte_end":286134,"line_start":60,"line_end":60,"column_start":1,"column_end":67}},{"value":"/ Rust strings don't have a nul terminator; their length is always","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":286135,"byte_end":286203,"line_start":61,"line_end":61,"column_start":1,"column_end":69}},{"value":"/ stored and does not need to be calculated. While in Rust","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":286204,"byte_end":286264,"line_start":62,"line_end":62,"column_start":1,"column_end":61}},{"value":"/ accessing a string's length is a O(1) operation (because the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":286265,"byte_end":286329,"line_start":63,"line_end":63,"column_start":1,"column_end":65}},{"value":"/ length is stored); in C it is an O(length) operation because the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":286330,"byte_end":286398,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"/ length needs to be computed by scanning the string for the nul","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":286399,"byte_end":286465,"line_start":65,"line_end":65,"column_start":1,"column_end":67}},{"value":"/ terminator.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":286466,"byte_end":286481,"line_start":66,"line_end":66,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":286482,"byte_end":286485,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ * **Internal nul characters** - When C strings have a nul","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":286486,"byte_end":286547,"line_start":68,"line_end":68,"column_start":1,"column_end":62}},{"value":"/ terminator character, this usually means that they cannot have nul","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":286548,"byte_end":286618,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ characters in the middle a nul character would essentially","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":286619,"byte_end":286681,"line_start":70,"line_end":70,"column_start":1,"column_end":63}},{"value":"/ truncate the string. Rust strings *can* have nul characters in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":286682,"byte_end":286748,"line_start":71,"line_end":71,"column_start":1,"column_end":67}},{"value":"/ the middle, because nul does not have to mark the end of the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":286749,"byte_end":286813,"line_start":72,"line_end":72,"column_start":1,"column_end":65}},{"value":"/ string in Rust.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":286814,"byte_end":286833,"line_start":73,"line_end":73,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":286834,"byte_end":286837,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ # Representations of non-Rust strings","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":286838,"byte_end":286879,"line_start":75,"line_end":75,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":286880,"byte_end":286883,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ [`CString`] and [`CStr`] are useful when you need to transfer","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":286884,"byte_end":286949,"line_start":77,"line_end":77,"column_start":1,"column_end":66}},{"value":"/ UTF-8 strings to and from languages with a C ABI, like Python.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":286950,"byte_end":287016,"line_start":78,"line_end":78,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":287017,"byte_end":287020,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ * **From Rust to C:** [`CString`] represents an owned, C-friendly","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":287021,"byte_end":287090,"line_start":80,"line_end":80,"column_start":1,"column_end":70}},{"value":"/ string: it is nul-terminated, and has no internal nul characters.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":287091,"byte_end":287160,"line_start":81,"line_end":81,"column_start":1,"column_end":70}},{"value":"/ Rust code can create a [`CString`] out of a normal string (provided","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":287161,"byte_end":287232,"line_start":82,"line_end":82,"column_start":1,"column_end":72}},{"value":"/ that the string doesn't have nul characters in the middle), and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":287233,"byte_end":287300,"line_start":83,"line_end":83,"column_start":1,"column_end":68}},{"value":"/ then use a variety of methods to obtain a raw `*mut `[`u8`] that can","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":287301,"byte_end":287373,"line_start":84,"line_end":84,"column_start":1,"column_end":73}},{"value":"/ then be passed as an argument to functions which use the C","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":287374,"byte_end":287436,"line_start":85,"line_end":85,"column_start":1,"column_end":63}},{"value":"/ conventions for strings.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":287437,"byte_end":287465,"line_start":86,"line_end":86,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":287466,"byte_end":287469,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ * **From C to Rust:** [`CStr`] represents a borrowed C string; it","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":287470,"byte_end":287539,"line_start":88,"line_end":88,"column_start":1,"column_end":70}},{"value":"/ is what you would use to wrap a raw `*const `[`u8`] that you got from","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":287540,"byte_end":287613,"line_start":89,"line_end":89,"column_start":1,"column_end":74}},{"value":"/ a C function. A [`CStr`] is guaranteed to be a nul-terminated array","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":287614,"byte_end":287685,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/ of bytes. Once you have a [`CStr`], you can convert it to a Rust","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":287686,"byte_end":287754,"line_start":91,"line_end":91,"column_start":1,"column_end":69}},{"value":"/ [`&str`][`str`] if it's valid UTF-8, or lossily convert it by adding","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":287755,"byte_end":287827,"line_start":92,"line_end":92,"column_start":1,"column_end":73}},{"value":"/ replacement characters.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":287828,"byte_end":287855,"line_start":93,"line_end":93,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":287856,"byte_end":287859,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`OsString`] and [`OsStr`] are useful when you need to transfer","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":287860,"byte_end":287927,"line_start":95,"line_end":95,"column_start":1,"column_end":68}},{"value":"/ strings to and from the operating system itself, or when capturing","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":287928,"byte_end":287998,"line_start":96,"line_end":96,"column_start":1,"column_end":71}},{"value":"/ the output of external commands. Conversions between [`OsString`],","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":287999,"byte_end":288069,"line_start":97,"line_end":97,"column_start":1,"column_end":71}},{"value":"/ [`OsStr`] and Rust strings work similarly to those for [`CString`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":288070,"byte_end":288140,"line_start":98,"line_end":98,"column_start":1,"column_end":71}},{"value":"/ and [`CStr`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":288141,"byte_end":288158,"line_start":99,"line_end":99,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":288159,"byte_end":288162,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ * [`OsString`] represents an owned string in whatever","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":288163,"byte_end":288220,"line_start":101,"line_end":101,"column_start":1,"column_end":58}},{"value":"/ representation the operating system prefers. In the Rust standard","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":288221,"byte_end":288290,"line_start":102,"line_end":102,"column_start":1,"column_end":70}},{"value":"/ library, various APIs that transfer strings to/from the operating","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":288291,"byte_end":288360,"line_start":103,"line_end":103,"column_start":1,"column_end":70}},{"value":"/ system use [`OsString`] instead of plain strings. For example,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":288361,"byte_end":288427,"line_start":104,"line_end":104,"column_start":1,"column_end":67}},{"value":"/ [`env::var_os()`] is used to query environment variables; it","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":288428,"byte_end":288492,"line_start":105,"line_end":105,"column_start":1,"column_end":65}},{"value":"/ returns an [`Option`]`<`[`OsString`]`>`. If the environment variable","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":288493,"byte_end":288565,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ exists you will get a [`Some`]`(os_string)`, which you can *then* try to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":288566,"byte_end":288642,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ convert to a Rust string. This yields a [`Result<>`], so that","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":288643,"byte_end":288708,"line_start":108,"line_end":108,"column_start":1,"column_end":66}},{"value":"/ your code can detect errors in case the environment variable did","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":288709,"byte_end":288777,"line_start":109,"line_end":109,"column_start":1,"column_end":69}},{"value":"/ not in fact contain valid Unicode data.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":288778,"byte_end":288821,"line_start":110,"line_end":110,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":288822,"byte_end":288825,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ * [`OsStr`] represents a borrowed reference to a string in a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":288826,"byte_end":288890,"line_start":112,"line_end":112,"column_start":1,"column_end":65}},{"value":"/ format that can be passed to the operating system. It can be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":288891,"byte_end":288955,"line_start":113,"line_end":113,"column_start":1,"column_end":65}},{"value":"/ converted into an UTF-8 Rust string slice in a similar way to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":288956,"byte_end":289021,"line_start":114,"line_end":114,"column_start":1,"column_end":66}},{"value":"/ [`OsString`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":289022,"byte_end":289039,"line_start":115,"line_end":115,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":289040,"byte_end":289043,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Conversions","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":289044,"byte_end":289061,"line_start":117,"line_end":117,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":289062,"byte_end":289065,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ ## On Unix","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":289066,"byte_end":289080,"line_start":119,"line_end":119,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":289081,"byte_end":289084,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ On Unix, [`OsStr`] implements the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":289085,"byte_end":289122,"line_start":121,"line_end":121,"column_start":1,"column_end":38}},{"value":"/ `std::os::unix::ffi::`[`OsStrExt`][unix.OsStrExt] trait, which","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":289123,"byte_end":289189,"line_start":122,"line_end":122,"column_start":1,"column_end":67}},{"value":"/ augments it with two methods, [`from_bytes`] and [`as_bytes`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":289190,"byte_end":289256,"line_start":123,"line_end":123,"column_start":1,"column_end":67}},{"value":"/ These do inexpensive conversions from and to UTF-8 byte slices.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":289257,"byte_end":289324,"line_start":124,"line_end":124,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":289325,"byte_end":289328,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Additionally, on Unix [`OsString`] implements the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":289329,"byte_end":289382,"line_start":126,"line_end":126,"column_start":1,"column_end":54}},{"value":"/ `std::os::unix::ffi::`[`OsStringExt`][unix.OsStringExt] trait,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":289383,"byte_end":289449,"line_start":127,"line_end":127,"column_start":1,"column_end":67}},{"value":"/ which provides [`from_vec`] and [`into_vec`] methods that consume","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":289450,"byte_end":289519,"line_start":128,"line_end":128,"column_start":1,"column_end":70}},{"value":"/ their arguments, and take or produce vectors of [`u8`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":289520,"byte_end":289579,"line_start":129,"line_end":129,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":289580,"byte_end":289583,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ## On Windows","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":289584,"byte_end":289601,"line_start":131,"line_end":131,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":289602,"byte_end":289605,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ On Windows, [`OsStr`] implements the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":289606,"byte_end":289646,"line_start":133,"line_end":133,"column_start":1,"column_end":41}},{"value":"/ `std::os::windows::ffi::`[`OsStrExt`][windows.OsStrExt] trait,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":289647,"byte_end":289713,"line_start":134,"line_end":134,"column_start":1,"column_end":67}},{"value":"/ which provides an [`encode_wide`] method. This provides an","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":289714,"byte_end":289776,"line_start":135,"line_end":135,"column_start":1,"column_end":63}},{"value":"/ iterator that can be [`collect`]ed into a vector of [`u16`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":289777,"byte_end":289841,"line_start":136,"line_end":136,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":289842,"byte_end":289845,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Additionally, on Windows [`OsString`] implements the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":289846,"byte_end":289902,"line_start":138,"line_end":138,"column_start":1,"column_end":57}},{"value":"/ `std::os::windows:ffi::`[`OsStringExt`][windows.OsStringExt]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":289903,"byte_end":289967,"line_start":139,"line_end":139,"column_start":1,"column_end":65}},{"value":"/ trait, which provides a [`from_wide`] method. The result of this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":289968,"byte_end":290036,"line_start":140,"line_end":140,"column_start":1,"column_end":69}},{"value":"/ method is an [`OsString`] which can be round-tripped to a Windows","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":290037,"byte_end":290106,"line_start":141,"line_end":141,"column_start":1,"column_end":70}},{"value":"/ string losslessly.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":290107,"byte_end":290129,"line_start":142,"line_end":142,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":290130,"byte_end":290133,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ [`String`]: ../string/struct.String.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":290134,"byte_end":290178,"line_start":144,"line_end":144,"column_start":1,"column_end":45}},{"value":"/ [`str`]: ../primitive.str.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":290179,"byte_end":290213,"line_start":145,"line_end":145,"column_start":1,"column_end":35}},{"value":"/ [`char`]: ../primitive.char.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":290214,"byte_end":290250,"line_start":146,"line_end":146,"column_start":1,"column_end":37}},{"value":"/ [`u8`]: ../primitive.u8.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":290251,"byte_end":290283,"line_start":147,"line_end":147,"column_start":1,"column_end":33}},{"value":"/ [`u16`]: ../primitive.u16.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":290284,"byte_end":290318,"line_start":148,"line_end":148,"column_start":1,"column_end":35}},{"value":"/ [Unicode scalar value]: http://www.unicode.org/glossary/#unicode_scalar_value","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":290319,"byte_end":290400,"line_start":149,"line_end":149,"column_start":1,"column_end":82}},{"value":"/ [Unicode code point]: http://www.unicode.org/glossary/#code_point","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":290401,"byte_end":290470,"line_start":150,"line_end":150,"column_start":1,"column_end":70}},{"value":"/ [`CString`]: struct.CString.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":290471,"byte_end":290507,"line_start":151,"line_end":151,"column_start":1,"column_end":37}},{"value":"/ [`CStr`]: struct.CStr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":290508,"byte_end":290538,"line_start":152,"line_end":152,"column_start":1,"column_end":31}},{"value":"/ [`OsString`]: struct.OsString.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":290539,"byte_end":290577,"line_start":153,"line_end":153,"column_start":1,"column_end":39}},{"value":"/ [`OsStr`]: struct.OsStr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":290578,"byte_end":290610,"line_start":154,"line_end":154,"column_start":1,"column_end":33}},{"value":"/ [`env::set_var()`]: ../env/fn.set_var.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":290611,"byte_end":290657,"line_start":155,"line_end":155,"column_start":1,"column_end":47}},{"value":"/ [`env::var_os()`]: ../env/fn.var_os.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":290658,"byte_end":290702,"line_start":156,"line_end":156,"column_start":1,"column_end":45}},{"value":"/ [`Result<>`]: ../result/enum.Result.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":290703,"byte_end":290747,"line_start":157,"line_end":157,"column_start":1,"column_end":45}},{"value":"/ [unix.OsStringExt]: ../os/unix/ffi/trait.OsStringExt.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":290748,"byte_end":290809,"line_start":158,"line_end":158,"column_start":1,"column_end":62}},{"value":"/ [`from_vec`]: ../os/unix/ffi/trait.OsStringExt.html#tymethod.from_vec","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":290810,"byte_end":290883,"line_start":159,"line_end":159,"column_start":1,"column_end":74}},{"value":"/ [`into_vec`]: ../os/unix/ffi/trait.OsStringExt.html#tymethod.into_vec","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":290884,"byte_end":290957,"line_start":160,"line_end":160,"column_start":1,"column_end":74}},{"value":"/ [unix.OsStrExt]: ../os/unix/ffi/trait.OsStrExt.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":290958,"byte_end":291013,"line_start":161,"line_end":161,"column_start":1,"column_end":56}},{"value":"/ [`from_bytes`]: ../os/unix/ffi/trait.OsStrExt.html#tymethod.from_bytes","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":291014,"byte_end":291088,"line_start":162,"line_end":162,"column_start":1,"column_end":75}},{"value":"/ [`as_bytes`]: ../os/unix/ffi/trait.OsStrExt.html#tymethod.as_bytes","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":291089,"byte_end":291159,"line_start":163,"line_end":163,"column_start":1,"column_end":71}},{"value":"/ [`OsStrExt`]: ../os/unix/ffi/trait.OsStrExt.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":291160,"byte_end":291212,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ [windows.OsStrExt]: ../os/windows/ffi/trait.OsStrExt.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":291213,"byte_end":291274,"line_start":165,"line_end":165,"column_start":1,"column_end":62}},{"value":"/ [`encode_wide`]: ../os/windows/ffi/trait.OsStrExt.html#tymethod.encode_wide","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":291275,"byte_end":291354,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ [`collect`]: ../iter/trait.Iterator.html#method.collect","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":291355,"byte_end":291414,"line_start":167,"line_end":167,"column_start":1,"column_end":60}},{"value":"/ [windows.OsStringExt]: ../os/windows/ffi/trait.OsStringExt.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":291415,"byte_end":291482,"line_start":168,"line_end":168,"column_start":1,"column_end":68}},{"value":"/ [`from_wide`]: ../os/windows/ffi/trait.OsStringExt.html#tymethod.from_wide","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":291483,"byte_end":291561,"line_start":169,"line_end":169,"column_start":1,"column_end":79}},{"value":"/ [`Option`]: ../option/enum.Option.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":291562,"byte_end":291604,"line_start":170,"line_end":170,"column_start":1,"column_end":43}},{"value":"/ [`Some`]: ../option/enum.Option.html#variant.Some","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/mod.rs","byte_start":291605,"byte_end":291658,"line_start":171,"line_end":171,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":7164},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":294828,"byte_end":294836,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"OsString","qualname":"::ffi::os_str::OsString","value":"OsString {  }","parent":null,"children":[{"krate":0,"index":7165}],"decl_id":null,"docs":" A type that can represent owned, mutable platform-native strings, but is\n cheaply inter-convertible with Rust strings.","sig":null,"attributes":[{"value":"/ A type that can represent owned, mutable platform-native strings, but is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":294670,"byte_end":294746,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ cheaply inter-convertible with Rust strings.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":294747,"byte_end":294795,"line_start":32,"line_end":32,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":294796,"byte_end":294799,"line_start":33,"line_end":33,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1694},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":295552,"byte_end":295557,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"OsStr","qualname":"::ffi::os_str::OsStr","value":"OsStr {  }","parent":null,"children":[{"krate":0,"index":1695}],"decl_id":null,"docs":" Borrowed reference to an OS string (see [`OsString`]).","sig":null,"attributes":[{"value":"/ Borrowed reference to an OS string (see [`OsString`]).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":294858,"byte_end":294916,"line_start":39,"line_end":39,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":294917,"byte_end":294920,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This type represents a borrowed reference to a string in the operating system's preferred","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":294921,"byte_end":295014,"line_start":41,"line_end":41,"column_start":1,"column_end":94}},{"value":"/ representation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":295015,"byte_end":295034,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":295035,"byte_end":295038,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ `&OsStr` is to [`OsString`] as [`&str`] is to [`String`]: the former in each pair are borrowed","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":295039,"byte_end":295137,"line_start":44,"line_end":44,"column_start":1,"column_end":99}},{"value":"/ references; the latter are owned strings.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":295138,"byte_end":295183,"line_start":45,"line_end":45,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":295184,"byte_end":295187,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ See the [module's toplevel documentation about conversions][conversions] for a discussion on","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":295188,"byte_end":295284,"line_start":47,"line_end":47,"column_start":1,"column_end":97}},{"value":"/ the traits which `OsStr` implements for [conversions] from/to native representations.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":295285,"byte_end":295374,"line_start":48,"line_end":48,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":295375,"byte_end":295378,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`OsString`]: struct.OsString.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":295379,"byte_end":295417,"line_start":50,"line_end":50,"column_start":1,"column_end":39}},{"value":"/ [`&str`]: ../primitive.str.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":295418,"byte_end":295453,"line_start":51,"line_end":51,"column_start":1,"column_end":36}},{"value":"/ [`String`]: ../string/struct.String.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":295454,"byte_end":295498,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/ [conversions]: index.html#conversions","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":295499,"byte_end":295540,"line_start":53,"line_end":53,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":295659,"byte_end":295662,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"new","qualname":"<OsString>::new","value":"pub fn new() -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new empty `OsString`.","sig":null,"attributes":[{"value":"/ Constructs a new empty `OsString`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":295601,"byte_end":295639,"line_start":59,"line_end":59,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":295644,"byte_end":295647,"line_start":60,"line_end":60,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":295850,"byte_end":295859,"line_start":69,"line_end":69,"column_start":12,"column_end":21},"name":"as_os_str","qualname":"<OsString>::as_os_str","value":"pub fn as_os_str(&Self) -> &OsStr","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`OsStr`] slice.","sig":null,"attributes":[{"value":"/ Converts to an [`OsStr`] slice.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":295750,"byte_end":295785,"line_start":65,"line_end":65,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":295790,"byte_end":295793,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ [`OsStr`]: struct.OsStr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":295798,"byte_end":295830,"line_start":67,"line_end":67,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":295835,"byte_end":295838,"line_start":68,"line_end":68,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":296145,"byte_end":296156,"line_start":79,"line_end":79,"column_start":12,"column_end":23},"name":"into_string","qualname":"<OsString>::into_string","value":"pub fn into_string(Self) -> Result<String, OsString>","parent":null,"children":[],"decl_id":null,"docs":" Converts the `OsString` into a [`String`] if it contains valid Unicode data.","sig":null,"attributes":[{"value":"/ Converts the `OsString` into a [`String`] if it contains valid Unicode data.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":295903,"byte_end":295983,"line_start":73,"line_end":73,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":295988,"byte_end":295991,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ On failure, ownership of the original `OsString` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":295996,"byte_end":296061,"line_start":75,"line_end":75,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":296066,"byte_end":296069,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ [`String`]: ../../std/string/struct.String.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":296074,"byte_end":296125,"line_start":77,"line_end":77,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":296130,"byte_end":296133,"line_start":78,"line_end":78,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":296397,"byte_end":296401,"line_start":87,"line_end":87,"column_start":12,"column_end":16},"name":"push","qualname":"<OsString>::push","value":"pub fn push<T: AsRef<OsStr>>(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Extends the string with the given [`&OsStr`] slice.","sig":null,"attributes":[{"value":"/ Extends the string with the given [`&OsStr`] slice.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":296276,"byte_end":296331,"line_start":83,"line_end":83,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":296336,"byte_end":296339,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`&OsStr`]: struct.OsStr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":296344,"byte_end":296377,"line_start":85,"line_end":85,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":296382,"byte_end":296385,"line_start":86,"line_end":86,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1703},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":296837,"byte_end":296850,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<OsString>::with_capacity","value":"pub fn with_capacity(usize) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `OsString` with the given capacity.","sig":null,"attributes":[{"value":"/ Creates a new `OsString` with the given capacity.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":296498,"byte_end":296551,"line_start":91,"line_end":91,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":296556,"byte_end":296559,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ The string will be able to hold exactly `capacity` length units of other","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":296564,"byte_end":296640,"line_start":93,"line_end":93,"column_start":5,"column_end":81}},{"value":"/ OS strings without reallocating. If `capacity` is 0, the string will not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":296645,"byte_end":296721,"line_start":94,"line_end":94,"column_start":5,"column_end":81}},{"value":"/ allocate.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":296726,"byte_end":296739,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":296744,"byte_end":296747,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ See main `OsString` documentation information about encoding.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":296752,"byte_end":296817,"line_start":97,"line_end":97,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":296822,"byte_end":296825,"line_start":98,"line_end":98,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":297014,"byte_end":297019,"line_start":105,"line_end":105,"column_start":12,"column_end":17},"name":"clear","qualname":"<OsString>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Truncates the `OsString` to zero length.","sig":null,"attributes":[{"value":"/ Truncates the `OsString` to zero length.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":296950,"byte_end":296994,"line_start":103,"line_end":103,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":296999,"byte_end":297002,"line_start":104,"line_end":104,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":297238,"byte_end":297246,"line_start":113,"line_end":113,"column_start":12,"column_end":20},"name":"capacity","qualname":"<OsString>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the capacity this `OsString` can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the capacity this `OsString` can hold without reallocating.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":297071,"byte_end":297142,"line_start":109,"line_end":109,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":297147,"byte_end":297150,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ See `OsString` introduction for information about encoding.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":297155,"byte_end":297218,"line_start":111,"line_end":111,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":297223,"byte_end":297226,"line_start":112,"line_end":112,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":297522,"byte_end":297529,"line_start":122,"line_end":122,"column_start":12,"column_end":19},"name":"reserve","qualname":"<OsString>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more capacity to be inserted\n in the given `OsString`.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more capacity to be inserted","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":297306,"byte_end":297382,"line_start":117,"line_end":117,"column_start":5,"column_end":81}},{"value":"/ in the given `OsString`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":297387,"byte_end":297415,"line_start":118,"line_end":118,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":297420,"byte_end":297423,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The collection may reserve more space to avoid frequent reallocations.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":297428,"byte_end":297502,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":297507,"byte_end":297510,"line_start":121,"line_end":121,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1707},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":298039,"byte_end":298052,"line_start":134,"line_end":134,"column_start":12,"column_end":25},"name":"reserve_exact","qualname":"<OsString>::reserve_exact","value":"pub fn reserve_exact(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for exactly `additional` more capacity to\n be inserted in the given `OsString`. Does nothing if the capacity is\n already sufficient.","sig":null,"attributes":[{"value":"/ Reserves the minimum capacity for exactly `additional` more capacity to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":297612,"byte_end":297687,"line_start":126,"line_end":126,"column_start":5,"column_end":80}},{"value":"/ be inserted in the given `OsString`. Does nothing if the capacity is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":297692,"byte_end":297764,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"/ already sufficient.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":297769,"byte_end":297792,"line_start":128,"line_end":128,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":297797,"byte_end":297800,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Note that the allocator may give the collection more space than it","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":297805,"byte_end":297875,"line_start":130,"line_end":130,"column_start":5,"column_end":75}},{"value":"/ requests. Therefore, capacity can not be relied upon to be precisely","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":297880,"byte_end":297952,"line_start":131,"line_end":131,"column_start":5,"column_end":77}},{"value":"/ minimal. Prefer reserve if future insertions are expected.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":297957,"byte_end":298019,"line_start":132,"line_end":132,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":298024,"byte_end":298027,"line_start":133,"line_end":133,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1708},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":298224,"byte_end":298237,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<OsString>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the `OsString` to match its length.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the `OsString` to match its length.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":298141,"byte_end":298204,"line_start":138,"line_end":138,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":298209,"byte_end":298212,"line_start":139,"line_end":139,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1709},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":298605,"byte_end":298614,"line_start":153,"line_end":153,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<OsString>::shrink_to","value":"pub fn shrink_to(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the `OsString` with a lower bound.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the `OsString` with a lower bound.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":298297,"byte_end":298359,"line_start":144,"line_end":144,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":298364,"byte_end":298367,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ The capacity will remain at least as large as both the length","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":298372,"byte_end":298437,"line_start":146,"line_end":146,"column_start":5,"column_end":70}},{"value":"/ and the supplied value.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":298442,"byte_end":298469,"line_start":147,"line_end":147,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":298474,"byte_end":298477,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Panics if the current capacity is smaller than the supplied","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":298482,"byte_end":298545,"line_start":149,"line_end":149,"column_start":5,"column_end":68}},{"value":"/ minimum capacity.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":298550,"byte_end":298571,"line_start":150,"line_end":150,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":298576,"byte_end":298579,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":298584,"byte_end":298593,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1710},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":298820,"byte_end":298837,"line_start":161,"line_end":161,"column_start":12,"column_end":29},"name":"into_boxed_os_str","qualname":"<OsString>::into_boxed_os_str","value":"pub fn into_boxed_os_str(Self) -> Box<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `OsString` into a boxed [`OsStr`].","sig":null,"attributes":[{"value":"/ Converts this `OsString` into a boxed [`OsStr`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":298703,"byte_end":298755,"line_start":157,"line_end":157,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":298760,"byte_end":298763,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ [`OsStr`]: struct.OsStr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":298768,"byte_end":298800,"line_start":159,"line_end":159,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":298805,"byte_end":298808,"line_start":160,"line_end":160,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":302012,"byte_end":302015,"line_start":309,"line_end":309,"column_start":12,"column_end":15},"name":"new","qualname":"<OsStr>::new","value":"pub fn new<S: AsRef<OsStr> + ?Sized>(&S) -> &OsStr","parent":null,"children":[],"decl_id":null,"docs":" Coerces into an `OsStr` slice.","sig":null,"attributes":[{"value":"/ Coerces into an `OsStr` slice.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":301958,"byte_end":301992,"line_start":307,"line_end":307,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":301997,"byte_end":302000,"line_start":308,"line_end":308,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1760},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":302939,"byte_end":302945,"line_start":335,"line_end":335,"column_start":12,"column_end":18},"name":"to_str","qualname":"<OsStr>::to_str","value":"pub fn to_str(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Yields a [`&str`] slice if the `OsStr` is valid Unicode.","sig":null,"attributes":[{"value":"/ Yields a [`&str`] slice if the `OsStr` is valid Unicode.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":302727,"byte_end":302787,"line_start":329,"line_end":329,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":302792,"byte_end":302795,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This conversion may entail doing a check for UTF-8 validity.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":302800,"byte_end":302864,"line_start":331,"line_end":331,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":302869,"byte_end":302872,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ [`&str`]: ../../std/primitive.str.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":302877,"byte_end":302919,"line_start":333,"line_end":333,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":302924,"byte_end":302927,"line_start":334,"line_end":334,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1761},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":303361,"byte_end":303376,"line_start":348,"line_end":348,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<OsStr>::to_string_lossy","value":"pub fn to_string_lossy(&Self) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Converts an `OsStr` to a [`Cow`]`<`[`str`]`>`.","sig":null,"attributes":[{"value":"/ Converts an `OsStr` to a [`Cow`]`<`[`str`]`>`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":303010,"byte_end":303060,"line_start":339,"line_end":339,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":303065,"byte_end":303068,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":303073,"byte_end":303120,"line_start":341,"line_end":341,"column_start":5,"column_end":52}},{"value":"/ [`U+FFFD REPLACEMENT CHARACTER`][U+FFFD].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":303125,"byte_end":303170,"line_start":342,"line_end":342,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":303175,"byte_end":303178,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ [`Cow`]: ../../std/borrow/enum.Cow.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":303183,"byte_end":303226,"line_start":344,"line_end":344,"column_start":5,"column_end":48}},{"value":"/ [`str`]: ../../std/primitive.str.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":303231,"byte_end":303272,"line_start":345,"line_end":345,"column_start":5,"column_end":46}},{"value":"/ [U+FFFD]: ../../std/char/constant.REPLACEMENT_CHARACTER.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":303277,"byte_end":303341,"line_start":346,"line_end":346,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":303346,"byte_end":303349,"line_start":347,"line_end":347,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":303569,"byte_end":303581,"line_start":356,"line_end":356,"column_start":12,"column_end":24},"name":"to_os_string","qualname":"<OsStr>::to_os_string","value":"pub fn to_os_string(&Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Copies the slice into an owned [`OsString`].","sig":null,"attributes":[{"value":"/ Copies the slice into an owned [`OsString`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":303450,"byte_end":303498,"line_start":352,"line_end":352,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":303503,"byte_end":303506,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ [`OsString`]: struct.OsString.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":303511,"byte_end":303549,"line_start":354,"line_end":354,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":303554,"byte_end":303557,"line_start":355,"line_end":355,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1763},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":303724,"byte_end":303732,"line_start":362,"line_end":362,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<OsStr>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the `OsStr` is empty.","sig":null,"attributes":[{"value":"/ Checks whether the `OsStr` is empty.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":303664,"byte_end":303704,"line_start":360,"line_end":360,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":303709,"byte_end":303712,"line_start":361,"line_end":361,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1764},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":304629,"byte_end":304632,"line_start":383,"line_end":383,"column_start":12,"column_end":15},"name":"len","qualname":"<OsStr>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of this `OsStr`.","sig":null,"attributes":[{"value":"/ Returns the length of this `OsStr`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":303797,"byte_end":303836,"line_start":366,"line_end":366,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":303841,"byte_end":303844,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Note that this does **not** return the number of bytes in the string in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":303849,"byte_end":303924,"line_start":368,"line_end":368,"column_start":5,"column_end":80}},{"value":"/ OS string form.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":303929,"byte_end":303948,"line_start":369,"line_end":369,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":303953,"byte_end":303956,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ The length returned is that of the underlying storage used by `OsStr`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":303961,"byte_end":304035,"line_start":371,"line_end":371,"column_start":5,"column_end":79}},{"value":"/ As discussed in the [`OsString`] introduction, [`OsString`] and `OsStr`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":304040,"byte_end":304115,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ store strings in a form best suited for cheap inter-conversion between","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":304120,"byte_end":304194,"line_start":373,"line_end":373,"column_start":5,"column_end":79}},{"value":"/ native-platform and Rust string forms, which may differ significantly","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":304199,"byte_end":304272,"line_start":374,"line_end":374,"column_start":5,"column_end":78}},{"value":"/ from both of them, including in storage size and encoding.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":304277,"byte_end":304339,"line_start":375,"line_end":375,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":304344,"byte_end":304347,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ This number is simply useful for passing to other methods, like","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":304352,"byte_end":304419,"line_start":377,"line_end":377,"column_start":5,"column_end":72}},{"value":"/ [`OsString::with_capacity`] to avoid reallocations.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":304424,"byte_end":304479,"line_start":378,"line_end":378,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":304484,"byte_end":304487,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ [`OsString`]: struct.OsString.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":304492,"byte_end":304530,"line_start":380,"line_end":380,"column_start":5,"column_end":43}},{"value":"/ [`OsString::with_capacity`]: struct.OsString.html#method.with_capacity","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":304535,"byte_end":304609,"line_start":381,"line_end":381,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":304614,"byte_end":304617,"line_start":382,"line_end":382,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1765},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":304881,"byte_end":304895,"line_start":391,"line_end":391,"column_start":12,"column_end":26},"name":"into_os_string","qualname":"<OsStr>::into_os_string","value":"pub fn into_os_string(Box<OsStr>) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`Box`]`<OsStr>` into an [`OsString`] without copying or allocating.","sig":null,"attributes":[{"value":"/ Converts a [`Box`]`<OsStr>` into an [`OsString`] without copying or allocating.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":304693,"byte_end":304776,"line_start":387,"line_end":387,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":304781,"byte_end":304784,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ [`Box`]: ../boxed/struct.Box.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":304789,"byte_end":304826,"line_start":389,"line_end":389,"column_start":5,"column_end":42}},{"value":"/ [`OsString`]: struct.OsString.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":304831,"byte_end":304869,"line_start":390,"line_end":390,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1767},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":305755,"byte_end":305775,"line_start":415,"line_end":415,"column_start":12,"column_end":32},"name":"make_ascii_lowercase","qualname":"<OsStr>::make_ascii_lowercase","value":"pub fn make_ascii_lowercase(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Converts this string to its ASCII lower case equivalent in-place.","sig":null,"attributes":[{"value":"/ Converts this string to its ASCII lower case equivalent in-place.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":305366,"byte_end":305435,"line_start":405,"line_end":405,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":305440,"byte_end":305443,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ASCII letters 'A' to 'Z' are mapped to 'a' to 'z',","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":305448,"byte_end":305502,"line_start":407,"line_end":407,"column_start":5,"column_end":59}},{"value":"/ but non-ASCII letters are unchanged.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":305507,"byte_end":305547,"line_start":408,"line_end":408,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":305552,"byte_end":305555,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ To return a new lowercased value without modifying the existing one, use","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":305560,"byte_end":305636,"line_start":410,"line_end":410,"column_start":5,"column_end":81}},{"value":"/ [`to_ascii_lowercase`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":305641,"byte_end":305668,"line_start":411,"line_end":411,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":305673,"byte_end":305676,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ [`to_ascii_lowercase`]: #method.to_ascii_lowercase","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":305681,"byte_end":305735,"line_start":413,"line_end":413,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":305740,"byte_end":305743,"line_start":414,"line_end":414,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1768},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":306231,"byte_end":306251,"line_start":429,"line_end":429,"column_start":12,"column_end":32},"name":"make_ascii_uppercase","qualname":"<OsStr>::make_ascii_uppercase","value":"pub fn make_ascii_uppercase(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Converts this string to its ASCII upper case equivalent in-place.","sig":null,"attributes":[{"value":"/ Converts this string to its ASCII upper case equivalent in-place.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":305842,"byte_end":305911,"line_start":419,"line_end":419,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":305916,"byte_end":305919,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ASCII letters 'a' to 'z' are mapped to 'A' to 'Z',","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":305924,"byte_end":305978,"line_start":421,"line_end":421,"column_start":5,"column_end":59}},{"value":"/ but non-ASCII letters are unchanged.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":305983,"byte_end":306023,"line_start":422,"line_end":422,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":306028,"byte_end":306031,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ To return a new uppercased value without modifying the existing one, use","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":306036,"byte_end":306112,"line_start":424,"line_end":424,"column_start":5,"column_end":81}},{"value":"/ [`to_ascii_uppercase`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":306117,"byte_end":306144,"line_start":425,"line_end":425,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":306149,"byte_end":306152,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ [`to_ascii_uppercase`]: #method.to_ascii_uppercase","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":306157,"byte_end":306211,"line_start":427,"line_end":427,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":306216,"byte_end":306219,"line_start":428,"line_end":428,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1769},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":306708,"byte_end":306726,"line_start":443,"line_end":443,"column_start":12,"column_end":30},"name":"to_ascii_lowercase","qualname":"<OsStr>::to_ascii_lowercase","value":"pub fn to_ascii_lowercase(&Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this string where each character is mapped to its\n ASCII lower case equivalent.","sig":null,"attributes":[{"value":"/ Returns a copy of this string where each character is mapped to its","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":306318,"byte_end":306389,"line_start":433,"line_end":433,"column_start":5,"column_end":76}},{"value":"/ ASCII lower case equivalent.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":306394,"byte_end":306426,"line_start":434,"line_end":434,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":306431,"byte_end":306434,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ ASCII letters 'A' to 'Z' are mapped to 'a' to 'z',","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":306439,"byte_end":306493,"line_start":436,"line_end":436,"column_start":5,"column_end":59}},{"value":"/ but non-ASCII letters are unchanged.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":306498,"byte_end":306538,"line_start":437,"line_end":437,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":306543,"byte_end":306546,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ To lowercase the value in-place, use [`make_ascii_lowercase`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":306551,"byte_end":306617,"line_start":439,"line_end":439,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":306622,"byte_end":306625,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ [`make_ascii_lowercase`]: #method.make_ascii_lowercase","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":306630,"byte_end":306688,"line_start":441,"line_end":441,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":306693,"byte_end":306696,"line_start":442,"line_end":442,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1770},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":307211,"byte_end":307229,"line_start":457,"line_end":457,"column_start":12,"column_end":30},"name":"to_ascii_uppercase","qualname":"<OsStr>::to_ascii_uppercase","value":"pub fn to_ascii_uppercase(&Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this string where each character is mapped to its\n ASCII upper case equivalent.","sig":null,"attributes":[{"value":"/ Returns a copy of this string where each character is mapped to its","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":306821,"byte_end":306892,"line_start":447,"line_end":447,"column_start":5,"column_end":76}},{"value":"/ ASCII upper case equivalent.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":306897,"byte_end":306929,"line_start":448,"line_end":448,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":306934,"byte_end":306937,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ASCII letters 'a' to 'z' are mapped to 'A' to 'Z',","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":306942,"byte_end":306996,"line_start":450,"line_end":450,"column_start":5,"column_end":59}},{"value":"/ but non-ASCII letters are unchanged.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":307001,"byte_end":307041,"line_start":451,"line_end":451,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":307046,"byte_end":307049,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ To uppercase the value in-place, use [`make_ascii_uppercase`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":307054,"byte_end":307120,"line_start":453,"line_end":453,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":307125,"byte_end":307128,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ [`make_ascii_uppercase`]: #method.make_ascii_uppercase","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":307133,"byte_end":307191,"line_start":455,"line_end":455,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":307196,"byte_end":307199,"line_start":456,"line_end":456,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1771},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":307415,"byte_end":307423,"line_start":463,"line_end":463,"column_start":12,"column_end":20},"name":"is_ascii","qualname":"<OsStr>::is_ascii","value":"pub fn is_ascii(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if all characters in this string are within the ASCII range.","sig":null,"attributes":[{"value":"/ Checks if all characters in this string are within the ASCII range.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":307324,"byte_end":307395,"line_start":461,"line_end":461,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":307400,"byte_end":307403,"line_start":462,"line_end":462,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1772},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":307696,"byte_end":307716,"line_start":472,"line_end":472,"column_start":12,"column_end":32},"name":"eq_ignore_ascii_case","qualname":"<OsStr>::eq_ignore_ascii_case","value":"pub fn eq_ignore_ascii_case<S: ?Sized + AsRef<OsStr>>(&Self, &S) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that two strings are an ASCII case-insensitive match.","sig":null,"attributes":[{"value":"/ Checks that two strings are an ASCII case-insensitive match.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":307482,"byte_end":307546,"line_start":467,"line_end":467,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":307551,"byte_end":307554,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ Same as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":307559,"byte_end":307620,"line_start":469,"line_end":469,"column_start":5,"column_end":66}},{"value":"/ but without allocating and copying temporaries.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":307625,"byte_end":307676,"line_start":470,"line_end":470,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":307681,"byte_end":307684,"line_start":471,"line_end":471,"column_start":5,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1851},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sgxfs","qualname":"::sgxfs","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","parent":null,"children":[{"krate":0,"index":1852},{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1860},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":7248},{"krate":0,"index":7253},{"krate":0,"index":7251},{"krate":0,"index":1871},{"krate":0,"index":1873},{"krate":0,"index":1875},{"krate":0,"index":1878},{"krate":0,"index":1890},{"krate":0,"index":1892},{"krate":0,"index":1894},{"krate":0,"index":1896},{"krate":0,"index":1899},{"krate":0,"index":1902},{"krate":0,"index":1904},{"krate":0,"index":1908},{"krate":0,"index":1912},{"krate":0,"index":1915},{"krate":0,"index":1928},{"krate":0,"index":1930},{"krate":0,"index":1932},{"krate":0,"index":1934},{"krate":0,"index":1936},{"krate":0,"index":1938}],"decl_id":null,"docs":" Filesystem manipulation operations.\n","sig":null,"attributes":[{"value":"/ Filesystem manipulation operations.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":315634,"byte_end":315673,"line_start":18,"line_end":18,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1869},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":316258,"byte_end":316265,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"SgxFile","qualname":"::sgxfs::SgxFile","value":"SgxFile {  }","parent":null,"children":[{"krate":0,"index":1870}],"decl_id":null,"docs":" A reference to an open file on the filesystem.","sig":null,"attributes":[{"value":"/ A reference to an open file on the filesystem.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":315924,"byte_end":315974,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":315975,"byte_end":315978,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ An instance of a `File` can be read and/or written depending on what options","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":315979,"byte_end":316059,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ it was opened with. Files also implement [`Seek`] to alter the logical cursor","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":316060,"byte_end":316141,"line_start":29,"line_end":29,"column_start":1,"column_end":82}},{"value":"/ that the file contains internally.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":316142,"byte_end":316180,"line_start":30,"line_end":30,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":316181,"byte_end":316184,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Files are automatically closed when they go out of scope.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":316185,"byte_end":316246,"line_start":32,"line_end":32,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":7248},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":316659,"byte_end":316670,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"name":"OpenOptions","qualname":"::sgxfs::OpenOptions","value":"","parent":null,"children":[],"decl_id":null,"docs":" Options and flags which can be used to configure how a file is opened.","sig":null,"attributes":[{"value":"/ Options and flags which can be used to configure how a file is opened.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":316299,"byte_end":316373,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":316374,"byte_end":316377,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ This builder exposes the ability to configure how a SgxFile is opened and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":316378,"byte_end":316455,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ what operations are permitted on the open file. The SgxFile::open and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":316456,"byte_end":316529,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/ SgxFile::create methods are aliases for commonly used options using this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":316530,"byte_end":316606,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ builder.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":316607,"byte_end":316619,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":316620,"byte_end":316623,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1871},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":317195,"byte_end":317199,"line_start":60,"line_end":60,"column_start":8,"column_end":12},"name":"read","qualname":"::sgxfs::read","value":"pub fn read<P: AsRef<Path>>(P) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Read the entire contents of a file into a bytes vector.","sig":null,"attributes":[{"value":"/ Read the entire contents of a file into a bytes vector.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":316694,"byte_end":316753,"line_start":47,"line_end":47,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":316754,"byte_end":316757,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for using SgxFile::open and read_to_end","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":316758,"byte_end":316832,"line_start":49,"line_end":49,"column_start":1,"column_end":75}},{"value":"/ with fewer imports and without an intermediate variable.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":316833,"byte_end":316893,"line_start":50,"line_end":50,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":316894,"byte_end":316897,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":316898,"byte_end":316910,"line_start":52,"line_end":52,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":316911,"byte_end":316914,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ This function will return an error if `path` does not already exist.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":316915,"byte_end":316987,"line_start":54,"line_end":54,"column_start":1,"column_end":73}},{"value":"/ Other errors may also be returned according to OpenOptions::open.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":316988,"byte_end":317057,"line_start":55,"line_end":55,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":317058,"byte_end":317061,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ It will also return an error if it encounters while reading an error","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":317062,"byte_end":317134,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/ of a kind other than ErrorKind::Interrupted.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":317135,"byte_end":317183,"line_start":58,"line_end":58,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":317184,"byte_end":317187,"line_start":59,"line_end":59,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1873},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":317904,"byte_end":317918,"line_start":80,"line_end":80,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::sgxfs::read_to_string","value":"pub fn read_to_string<P: AsRef<Path>>(P) -> io::Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Read the entire contents of a file into a string.","sig":null,"attributes":[{"value":"/ Read the entire contents of a file into a string.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":317350,"byte_end":317403,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":317404,"byte_end":317407,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for using SgxFile::open and read_to_string","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":317408,"byte_end":317485,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/ with fewer imports and without an intermediate variable.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":317486,"byte_end":317546,"line_start":69,"line_end":69,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":317547,"byte_end":317550,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":317551,"byte_end":317563,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":317564,"byte_end":317567,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This function will return an error if `path` does not already exist.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":317568,"byte_end":317640,"line_start":73,"line_end":73,"column_start":1,"column_end":73}},{"value":"/ Other errors may also be returned according to OpenOptions::open.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":317641,"byte_end":317710,"line_start":74,"line_end":74,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":317711,"byte_end":317714,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ It will also return an error if it encounters while reading an error","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":317715,"byte_end":317787,"line_start":76,"line_end":76,"column_start":1,"column_end":73}},{"value":"/ of a kind other than ErrorKind::Interrupted,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":317788,"byte_end":317836,"line_start":77,"line_end":77,"column_start":1,"column_end":49}},{"value":"/ or if the contents of the file are not valid UTF-8.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":317837,"byte_end":317892,"line_start":78,"line_end":78,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":317893,"byte_end":317896,"line_start":79,"line_end":79,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1875},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":318361,"byte_end":318366,"line_start":94,"line_end":94,"column_start":8,"column_end":13},"name":"write","qualname":"::sgxfs::write","value":"pub fn write<P: AsRef<Path>, C: AsRef<[u8]>>(P, C) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a slice as the entire contents of a file.","sig":null,"attributes":[{"value":"/ Write a slice as the entire contents of a file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":318077,"byte_end":318128,"line_start":86,"line_end":86,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":318129,"byte_end":318132,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ This function will create a file if it does not exist,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":318133,"byte_end":318191,"line_start":88,"line_end":88,"column_start":1,"column_end":59}},{"value":"/ and will entirely replace its contents if it does.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":318192,"byte_end":318246,"line_start":89,"line_end":89,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":318247,"byte_end":318250,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for using SgxFile::create and write_all","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":318251,"byte_end":318325,"line_start":91,"line_end":91,"column_start":1,"column_end":75}},{"value":"/ with fewer imports.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":318326,"byte_end":318349,"line_start":92,"line_end":92,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":318350,"byte_end":318353,"line_start":93,"line_end":93,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":318844,"byte_end":318848,"line_start":108,"line_end":108,"column_start":12,"column_end":16},"name":"open","qualname":"<SgxFile>::open","value":"pub fn open<P: AsRef<Path>>(P) -> io::Result<SgxFile>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to open a file in read-only mode.","sig":null,"attributes":[{"value":"/ Attempts to open a file in read-only mode.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":318519,"byte_end":318565,"line_start":99,"line_end":99,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":318570,"byte_end":318573,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ See the [`OpenOptions::open`] method for more details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":318578,"byte_end":318636,"line_start":101,"line_end":101,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":318641,"byte_end":318644,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":318649,"byte_end":318661,"line_start":103,"line_end":103,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":318666,"byte_end":318669,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if `path` does not already exist.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":318674,"byte_end":318746,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ Other errors may also be returned according to [`OpenOptions::open`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":318751,"byte_end":318824,"line_start":106,"line_end":106,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":318829,"byte_end":318832,"line_start":107,"line_end":107,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1881},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":319136,"byte_end":319142,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"name":"create","qualname":"<SgxFile>::create","value":"pub fn create<P: AsRef<Path>>(P) -> io::Result<SgxFile>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in write-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in write-only mode.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":318968,"byte_end":319004,"line_start":112,"line_end":112,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":319009,"byte_end":319012,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ This function will create a file if it does not exist,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":319017,"byte_end":319075,"line_start":114,"line_end":114,"column_start":5,"column_end":63}},{"value":"/ and will truncate it if it does.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":319080,"byte_end":319116,"line_start":115,"line_end":115,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":319121,"byte_end":319124,"line_start":116,"line_end":116,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1883},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":319270,"byte_end":319277,"line_start":121,"line_end":121,"column_start":12,"column_end":19},"name":"open_ex","qualname":"<SgxFile>::open_ex","value":"pub fn open_ex<P: AsRef<Path>>(P, &sgx_key_128bit_t) -> io::Result<SgxFile>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1885},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":319436,"byte_end":319445,"line_start":125,"line_end":125,"column_start":12,"column_end":21},"name":"create_ex","qualname":"<SgxFile>::create_ex","value":"pub fn create_ex<P: AsRef<Path>>(P, &sgx_key_128bit_t) -> io::Result<SgxFile>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1887},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":319605,"byte_end":319611,"line_start":129,"line_end":129,"column_start":12,"column_end":18},"name":"is_eof","qualname":"<SgxFile>::is_eof","value":"pub fn is_eof(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1888},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":319675,"byte_end":319683,"line_start":133,"line_end":133,"column_start":12,"column_end":20},"name":"clearerr","qualname":"<SgxFile>::clearerr","value":"pub fn clearerr(&Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1889},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":319741,"byte_end":319752,"line_start":137,"line_end":137,"column_start":12,"column_end":23},"name":"clear_cache","qualname":"<SgxFile>::clear_cache","value":"pub fn clear_cache(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1916},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":321430,"byte_end":321433,"line_start":209,"line_end":209,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenOptions>::new","value":"pub fn new() -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank new set of options ready for configuration.","sig":null,"attributes":[{"value":"/ Creates a blank new set of options ready for configuration.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":321289,"byte_end":321352,"line_start":205,"line_end":205,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":321357,"byte_end":321360,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ All options are initially set to `false`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":321365,"byte_end":321410,"line_start":207,"line_end":207,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":321415,"byte_end":321418,"line_start":208,"line_end":208,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1917},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":321677,"byte_end":321681,"line_start":218,"line_end":218,"column_start":12,"column_end":16},"name":"read","qualname":"<OpenOptions>::read","value":"pub fn read(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for read access.","sig":null,"attributes":[{"value":"/ Sets the option for read access.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":321512,"byte_end":321548,"line_start":213,"line_end":213,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":321553,"byte_end":321556,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ This option, when true, will indicate that the file should be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":321561,"byte_end":321626,"line_start":215,"line_end":215,"column_start":5,"column_end":70}},{"value":"/ `read`-able if opened.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":321631,"byte_end":321657,"line_start":216,"line_end":216,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":321662,"byte_end":321665,"line_start":217,"line_end":217,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1918},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":321937,"byte_end":321942,"line_start":227,"line_end":227,"column_start":12,"column_end":17},"name":"write","qualname":"<OpenOptions>::write","value":"pub fn write(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for write access.","sig":null,"attributes":[{"value":"/ Sets the option for write access.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":321770,"byte_end":321807,"line_start":222,"line_end":222,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":321812,"byte_end":321815,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This option, when true, will indicate that the file should be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":321820,"byte_end":321885,"line_start":224,"line_end":224,"column_start":5,"column_end":70}},{"value":"/ `write`-able if opened.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":321890,"byte_end":321917,"line_start":225,"line_end":225,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":321922,"byte_end":321925,"line_start":226,"line_end":226,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1919},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":323219,"byte_end":323225,"line_start":253,"line_end":253,"column_start":12,"column_end":18},"name":"append","qualname":"<OpenOptions>::append","value":"pub fn append(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for the append mode.","sig":null,"attributes":[{"value":"/ Sets the option for the append mode.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":322034,"byte_end":322074,"line_start":231,"line_end":231,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":322079,"byte_end":322082,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This option, when true, means that writes will append to a file instead","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":322087,"byte_end":322162,"line_start":233,"line_end":233,"column_start":5,"column_end":80}},{"value":"/ of overwriting previous contents.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":322167,"byte_end":322204,"line_start":234,"line_end":234,"column_start":5,"column_end":42}},{"value":"/ Note that setting `.write(true).append(true)` has the same effect as","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":322209,"byte_end":322281,"line_start":235,"line_end":235,"column_start":5,"column_end":77}},{"value":"/ setting only `.append(true)`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":322286,"byte_end":322319,"line_start":236,"line_end":236,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":322324,"byte_end":322327,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ For most filesystems, the operating system guarantees that all writes are","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":322332,"byte_end":322409,"line_start":238,"line_end":238,"column_start":5,"column_end":82}},{"value":"/ atomic: no writes get mangled because another process writes at the same","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":322414,"byte_end":322490,"line_start":239,"line_end":239,"column_start":5,"column_end":81}},{"value":"/ time.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":322495,"byte_end":322504,"line_start":240,"line_end":240,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":322509,"byte_end":322512,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ One maybe obvious note when using append-mode: make sure that all data","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":322517,"byte_end":322591,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/ that belongs together is written to the file in one operation. This","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":322596,"byte_end":322667,"line_start":243,"line_end":243,"column_start":5,"column_end":76}},{"value":"/ can be done by concatenating strings before passing them to `write()`,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":322672,"byte_end":322746,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/ or using a buffered writer (with a buffer of adequate size),","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":322751,"byte_end":322815,"line_start":245,"line_end":245,"column_start":5,"column_end":69}},{"value":"/ and calling `flush()` when the message is complete.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":322820,"byte_end":322875,"line_start":246,"line_end":246,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":322880,"byte_end":322883,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ If a file is opened with both read and append access, beware that after","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":322888,"byte_end":322963,"line_start":248,"line_end":248,"column_start":5,"column_end":80}},{"value":"/ opening, and after every write, the position for reading may be set at the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":322968,"byte_end":323046,"line_start":249,"line_end":249,"column_start":5,"column_end":83}},{"value":"/ end of the file. So, before writing, save the current position (using","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":323051,"byte_end":323124,"line_start":250,"line_end":250,"column_start":5,"column_end":78}},{"value":"/ `seek(SeekFrom::Current(0))`, and restore it before the next read.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":323129,"byte_end":323199,"line_start":251,"line_end":251,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":323204,"byte_end":323207,"line_start":252,"line_end":252,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1920},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":323379,"byte_end":323385,"line_start":258,"line_end":258,"column_start":12,"column_end":18},"name":"update","qualname":"<OpenOptions>::update","value":"pub fn update(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for update a previous file.\n","sig":null,"attributes":[{"value":"/ Sets the option for update a previous file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":323320,"byte_end":323367,"line_start":257,"line_end":257,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1921},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":323530,"byte_end":323536,"line_start":263,"line_end":263,"column_start":12,"column_end":18},"name":"binary","qualname":"<OpenOptions>::binary","value":"pub fn binary(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for binary a file.\n","sig":null,"attributes":[{"value":"/ Sets the option for binary a file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":323480,"byte_end":323518,"line_start":262,"line_end":262,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1922},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":323707,"byte_end":323711,"line_start":268,"line_end":268,"column_start":12,"column_end":16},"name":"open","qualname":"<OpenOptions>::open","value":"pub fn open<P: AsRef<Path>>(&Self, P) -> io::Result<SgxFile>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file at `path` with the options specified by `self`.\n","sig":null,"attributes":[{"value":"/ Opens a file at `path` with the options specified by `self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":323631,"byte_end":323695,"line_start":267,"line_end":267,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1924},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":323821,"byte_end":323828,"line_start":272,"line_end":272,"column_start":12,"column_end":19},"name":"open_ex","qualname":"<OpenOptions>::open_ex","value":"pub fn open_ex<P: AsRef<Path>>(&Self, P, &sgx_key_128bit_t)\n-> io::Result<SgxFile>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1930},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":324458,"byte_end":324464,"line_start":291,"line_end":291,"column_start":8,"column_end":14},"name":"remove","qualname":"::sgxfs::remove","value":"pub fn remove<P: AsRef<Path>>(P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1932},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":324554,"byte_end":324569,"line_start":295,"line_end":295,"column_start":8,"column_end":23},"name":"export_auto_key","qualname":"::sgxfs::export_auto_key","value":"pub fn export_auto_key<P: AsRef<Path>>(P) -> io::Result<sgx_key_128bit_t>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1934},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":324682,"byte_end":324703,"line_start":299,"line_end":299,"column_start":8,"column_end":29},"name":"export_align_auto_key","qualname":"::sgxfs::export_align_auto_key","value":"pub fn export_align_auto_key<P: AsRef<Path>>(P)\n-> io::Result<sgx_align_key_128bit_t>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1936},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":324828,"byte_end":324843,"line_start":303,"line_end":303,"column_start":8,"column_end":23},"name":"import_auto_key","qualname":"::sgxfs::import_auto_key","value":"pub fn import_auto_key<P: AsRef<Path>>(P, &sgx_key_128bit_t) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1938},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":325277,"byte_end":325281,"line_start":315,"line_end":315,"column_start":8,"column_end":12},"name":"copy","qualname":"::sgxfs::copy","value":"pub fn copy<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> io::Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Copies the contents of one file to another.\n This function will **overwrite** the contents of `to`.","sig":null,"attributes":[{"value":"/ Copies the contents of one file to another.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":324964,"byte_end":325011,"line_start":307,"line_end":307,"column_start":1,"column_end":48}},{"value":"/ This function will **overwrite** the contents of `to`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":325012,"byte_end":325070,"line_start":308,"line_end":308,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":325071,"byte_end":325074,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ Note that if `from` and `to` both point to the same file, then the file","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":325075,"byte_end":325150,"line_start":310,"line_end":310,"column_start":1,"column_end":76}},{"value":"/ will likely get truncated by this operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":325151,"byte_end":325199,"line_start":311,"line_end":311,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":325200,"byte_end":325203,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ On success, the total number of bytes copied is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":325204,"byte_end":325265,"line_start":313,"line_end":313,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":325266,"byte_end":325269,"line_start":314,"line_end":314,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":1941},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1957},{"krate":0,"index":1958},{"krate":0,"index":1959},{"krate":0,"index":1960},{"krate":0,"index":1961},{"krate":0,"index":1962},{"krate":0,"index":1963},{"krate":0,"index":1964},{"krate":0,"index":1965},{"krate":0,"index":1966},{"krate":0,"index":1967},{"krate":0,"index":1968},{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1972},{"krate":0,"index":1973},{"krate":0,"index":1974},{"krate":0,"index":1975},{"krate":0,"index":1976},{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1981},{"krate":0,"index":1982},{"krate":0,"index":1983},{"krate":0,"index":1984},{"krate":0,"index":1985},{"krate":0,"index":1986},{"krate":0,"index":1987},{"krate":0,"index":1988},{"krate":0,"index":1989},{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":1993},{"krate":0,"index":1999},{"krate":0,"index":2119},{"krate":0,"index":2175},{"krate":0,"index":2235},{"krate":0,"index":2319},{"krate":0,"index":2356},{"krate":0,"index":2502},{"krate":0,"index":2548},{"krate":0,"index":2549},{"krate":0,"index":2553},{"krate":0,"index":2555},{"krate":0,"index":2558},{"krate":0,"index":2561},{"krate":0,"index":2564},{"krate":0,"index":2568},{"krate":0,"index":2572},{"krate":0,"index":2586},{"krate":0,"index":2590},{"krate":0,"index":2592},{"krate":0,"index":2594},{"krate":0,"index":2597},{"krate":0,"index":2602},{"krate":0,"index":2606},{"krate":0,"index":7349},{"krate":0,"index":7356},{"krate":0,"index":7353},{"krate":0,"index":2609},{"krate":0,"index":2611},{"krate":0,"index":2613},{"krate":0,"index":2616},{"krate":0,"index":2621},{"krate":0,"index":7358},{"krate":0,"index":7361},{"krate":0,"index":2625},{"krate":0,"index":2630},{"krate":0,"index":2647},{"krate":0,"index":7363},{"krate":0,"index":7384},{"krate":0,"index":7380},{"krate":0,"index":7381},{"krate":0,"index":7377},{"krate":0,"index":7378},{"krate":0,"index":7375},{"krate":0,"index":7373},{"krate":0,"index":2651},{"krate":0,"index":2653},{"krate":0,"index":2661},{"krate":0,"index":2667},{"krate":0,"index":2673},{"krate":0,"index":2677},{"krate":0,"index":2684},{"krate":0,"index":7385},{"krate":0,"index":7389},{"krate":0,"index":2689},{"krate":0,"index":2696},{"krate":0,"index":2702},{"krate":0,"index":7392},{"krate":0,"index":7395},{"krate":0,"index":2706},{"krate":0,"index":7398},{"krate":0,"index":7402},{"krate":0,"index":2710},{"krate":0,"index":7405},{"krate":0,"index":7408},{"krate":0,"index":2714}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1993},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::io::prelude","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/prelude.rs","parent":null,"children":[{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998}],"decl_id":null,"docs":" The I/O Prelude","sig":null,"attributes":[{"value":"/ The I/O Prelude","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/prelude.rs","byte_start":375046,"byte_end":375065,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/prelude.rs","byte_start":375066,"byte_end":375069,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The purpose of this module is to alleviate imports of many common I/O traits","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/prelude.rs","byte_start":375070,"byte_end":375150,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ by adding a glob import to the top of I/O heavy modules:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/prelude.rs","byte_start":375151,"byte_end":375211,"line_start":21,"line_end":21,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/prelude.rs","byte_start":375212,"byte_end":375215,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/prelude.rs","byte_start":375216,"byte_end":375223,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # #![allow(unused_imports)]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/prelude.rs","byte_start":375224,"byte_end":375255,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/prelude.rs","byte_start":375256,"byte_end":375284,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/prelude.rs","byte_start":375285,"byte_end":375292,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2014},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":377618,"byte_end":377627,"line_start":52,"line_end":52,"column_start":12,"column_end":21},"name":"BufReader","qualname":"::io::buffered::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":2016},{"krate":0,"index":2017},{"krate":0,"index":2018},{"krate":0,"index":2019}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[{"value":"/ The `BufReader` struct adds buffering to any reader.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":376386,"byte_end":376442,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":376443,"byte_end":376446,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ It can be excessively inefficient to work directly with a [`Read`] instance.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":376447,"byte_end":376527,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/ For example, every call to [`read`][`TcpStream::read`] on [`TcpStream`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":376528,"byte_end":376603,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ results in a system call. A `BufReader` performs large, infrequent reads on","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":376604,"byte_end":376683,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ the underlying [`Read`] and maintains an in-memory buffer of the results.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":376684,"byte_end":376761,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":376762,"byte_end":376765,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ `BufReader` can improve the speed of programs that make *small* and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":376766,"byte_end":376837,"line_start":36,"line_end":36,"column_start":1,"column_end":72}},{"value":"/ *repeated* read calls to the same file or network socket. It does not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":376838,"byte_end":376911,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/ help when reading very large amounts at once, or reading just one or a few","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":376912,"byte_end":376990,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ times. It also provides no advantage when reading from a source that is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":376991,"byte_end":377066,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"/ already in memory, like a `Vec<u8>`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":377067,"byte_end":377107,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":377108,"byte_end":377111,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ When the `BufReader<R>` is dropped, the contents of its buffer will be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":377112,"byte_end":377186,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ discarded. Creating multiple instances of a `BufReader<R>` on the same","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":377187,"byte_end":377261,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ stream can cause data loss. Reading from the underlying reader after","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":377262,"byte_end":377334,"line_start":44,"line_end":44,"column_start":1,"column_end":73}},{"value":"/ unwrapping the `BufReader<R>` with `BufReader::into_inner` can also cause","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":377335,"byte_end":377412,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ data loss.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":377413,"byte_end":377427,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":377428,"byte_end":377431,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: ../../std/io/trait.Read.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":377432,"byte_end":377474,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/ [`TcpStream::read`]: ../../std/net/struct.TcpStream.html#method.read","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":377475,"byte_end":377547,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"/ [`TcpStream`]: ../../std/net/struct.TcpStream.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":377548,"byte_end":377602,"line_start":50,"line_end":50,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":377603,"byte_end":377606,"line_start":51,"line_end":51,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":2022},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":377888,"byte_end":377891,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> BufReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader<R>` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.","sig":null,"attributes":[{"value":"/ Creates a new `BufReader<R>` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":377735,"byte_end":377830,"line_start":60,"line_end":60,"column_start":5,"column_end":100}},{"value":"/ but may change in the future.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":377835,"byte_end":377868,"line_start":61,"line_end":61,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":377873,"byte_end":377876,"line_start":62,"line_end":62,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2023},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":378077,"byte_end":378090,"line_start":69,"line_end":69,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> BufReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader<R>` with the specified buffer capacity.","sig":null,"attributes":[{"value":"/ Creates a new `BufReader<R>` with the specified buffer capacity.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":377989,"byte_end":378057,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":378062,"byte_end":378065,"line_start":68,"line_end":68,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2026},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":378578,"byte_end":378585,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":378433,"byte_end":378479,"line_start":80,"line_end":80,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":378484,"byte_end":378487,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":378492,"byte_end":378558,"line_start":82,"line_end":82,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":378563,"byte_end":378566,"line_start":83,"line_end":83,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2027},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":378785,"byte_end":378792,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":378632,"byte_end":378686,"line_start":88,"line_end":88,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":378691,"byte_end":378694,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":378699,"byte_end":378765,"line_start":90,"line_end":90,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":378770,"byte_end":378773,"line_start":91,"line_end":91,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2028},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":379019,"byte_end":379025,"line_start":100,"line_end":100,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":378851,"byte_end":378907,"line_start":96,"line_end":96,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":378912,"byte_end":378915,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":378920,"byte_end":378999,"line_start":98,"line_end":98,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":379004,"byte_end":379007,"line_start":99,"line_end":99,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2029},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":379182,"byte_end":379190,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"capacity","qualname":"<BufReader<R>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes the internal buffer can hold at once.","sig":null,"attributes":[{"value":"/ Returns the number of bytes the internal buffer can hold at once.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":379093,"byte_end":379162,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":379167,"byte_end":379170,"line_start":105,"line_end":105,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2030},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":379490,"byte_end":379500,"line_start":115,"line_end":115,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `BufReader<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `BufReader<R>`, returning the underlying reader.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":379243,"byte_end":379308,"line_start":110,"line_end":110,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":379313,"byte_end":379316,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost. Therefore,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":379321,"byte_end":379395,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ a following read from the underlying reader may lead to data loss.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":379400,"byte_end":379470,"line_start":113,"line_end":113,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":379475,"byte_end":379478,"line_start":114,"line_end":114,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2034},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":380057,"byte_end":380070,"line_start":132,"line_end":132,"column_start":12,"column_end":25},"name":"seek_relative","qualname":"<BufReader<R>>::seek_relative","value":"pub fn seek_relative(&mut Self, i64) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Seeks relative to the current position. If the new position lies within the buffer,\n the buffer will not be flushed, allowing for more efficient seeks.\n This method does not return the location of the underlying reader, so the caller\n must track this information themselves if it is required.\n","sig":null,"attributes":[{"value":"/ Seeks relative to the current position. If the new position lies within the buffer,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":379728,"byte_end":379815,"line_start":128,"line_end":128,"column_start":5,"column_end":92}},{"value":"/ the buffer will not be flushed, allowing for more efficient seeks.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":379820,"byte_end":379890,"line_start":129,"line_end":129,"column_start":5,"column_end":75}},{"value":"/ This method does not return the location of the underlying reader, so the caller","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":379895,"byte_end":379979,"line_start":130,"line_end":130,"column_start":5,"column_end":89}},{"value":"/ must track this information themselves if it is required.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":379984,"byte_end":380045,"line_start":131,"line_end":131,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2051},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":386795,"byte_end":386804,"line_start":297,"line_end":297,"column_start":12,"column_end":21},"name":"BufWriter","qualname":"::io::buffered::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2055}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[{"value":"/ Wraps a writer and buffers its output.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":385321,"byte_end":385363,"line_start":269,"line_end":269,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":385364,"byte_end":385367,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ It can be excessively inefficient to work directly with something that","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":385368,"byte_end":385442,"line_start":271,"line_end":271,"column_start":1,"column_end":75}},{"value":"/ implements [`Write`]. For example, every call to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":385443,"byte_end":385495,"line_start":272,"line_end":272,"column_start":1,"column_end":53}},{"value":"/ [`write`][`TcpStream::write`] on [`TcpStream`] results in a system call. A","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":385496,"byte_end":385574,"line_start":273,"line_end":273,"column_start":1,"column_end":79}},{"value":"/ `BufWriter<W>` keeps an in-memory buffer of data and writes it to an underlying","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":385575,"byte_end":385658,"line_start":274,"line_end":274,"column_start":1,"column_end":84}},{"value":"/ writer in large, infrequent batches.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":385659,"byte_end":385699,"line_start":275,"line_end":275,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":385700,"byte_end":385703,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ `BufWriter<W>` can improve the speed of programs that make *small* and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":385704,"byte_end":385778,"line_start":277,"line_end":277,"column_start":1,"column_end":75}},{"value":"/ *repeated* write calls to the same file or network socket. It does not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":385779,"byte_end":385853,"line_start":278,"line_end":278,"column_start":1,"column_end":75}},{"value":"/ help when writing very large amounts at once, or writing just one or a few","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":385854,"byte_end":385932,"line_start":279,"line_end":279,"column_start":1,"column_end":79}},{"value":"/ times. It also provides no advantage when writing to a destination that is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":385933,"byte_end":386011,"line_start":280,"line_end":280,"column_start":1,"column_end":79}},{"value":"/ in memory, like a `Vec<u8>`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":386012,"byte_end":386044,"line_start":281,"line_end":281,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":386045,"byte_end":386048,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ It is critical to call [`flush`] before `BufWriter<W>` is dropped. Though","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":386049,"byte_end":386126,"line_start":283,"line_end":283,"column_start":1,"column_end":78}},{"value":"/ dropping will attempt to flush the the contents of the buffer, any errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":386127,"byte_end":386204,"line_start":284,"line_end":284,"column_start":1,"column_end":78}},{"value":"/ that happen in the process of dropping will be ignored. Calling [`flush`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":386205,"byte_end":386282,"line_start":285,"line_end":285,"column_start":1,"column_end":78}},{"value":"/ ensures that the buffer is empty and thus dropping will not even attempt","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":386283,"byte_end":386359,"line_start":286,"line_end":286,"column_start":1,"column_end":77}},{"value":"/ file operations.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":386360,"byte_end":386380,"line_start":287,"line_end":287,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":386381,"byte_end":386384,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ By wrapping the stream with a `BufWriter<W>`, these ten writes are all grouped","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":386385,"byte_end":386467,"line_start":289,"line_end":289,"column_start":1,"column_end":83}},{"value":"/ together by the buffer and will all be written out in one system call when","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":386468,"byte_end":386546,"line_start":290,"line_end":290,"column_start":1,"column_end":79}},{"value":"/ the `stream` is flushed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":386547,"byte_end":386575,"line_start":291,"line_end":291,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":386576,"byte_end":386579,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: ../../std/io/trait.Write.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":386580,"byte_end":386624,"line_start":293,"line_end":293,"column_start":1,"column_end":45}},{"value":"/ [`TcpStream::write`]: ../../std/net/struct.TcpStream.html#method.write","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":386625,"byte_end":386699,"line_start":294,"line_end":294,"column_start":1,"column_end":75}},{"value":"/ [`TcpStream`]: ../../std/net/struct.TcpStream.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":386700,"byte_end":386754,"line_start":295,"line_end":295,"column_start":1,"column_end":55}},{"value":"/ [`flush`]: #method.flush","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":386755,"byte_end":386783,"line_start":296,"line_end":296,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":7255},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":387323,"byte_end":387337,"line_start":311,"line_end":311,"column_start":12,"column_end":26},"name":"IntoInnerError","qualname":"::io::buffered::IntoInnerError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error returned by `into_inner` which combines an error that\n happened while writing out the buffer, and the buffered writer object\n which may be used to recover from the condition.","sig":null,"attributes":[{"value":"/ An error returned by `into_inner` which combines an error that","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":387097,"byte_end":387163,"line_start":306,"line_end":306,"column_start":1,"column_end":67}},{"value":"/ happened while writing out the buffer, and the buffered writer object","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":387164,"byte_end":387237,"line_start":307,"line_end":307,"column_start":1,"column_end":74}},{"value":"/ which may be used to recover from the condition.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":387238,"byte_end":387290,"line_start":308,"line_end":308,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":387291,"byte_end":387294,"line_start":309,"line_end":309,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":2058},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":387540,"byte_end":387543,"line_start":317,"line_end":317,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> BufWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter<W>` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter<W>` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":387387,"byte_end":387482,"line_start":314,"line_end":314,"column_start":5,"column_end":100}},{"value":"/ but may change in the future.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":387487,"byte_end":387520,"line_start":315,"line_end":315,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":387525,"byte_end":387528,"line_start":316,"line_end":316,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":387729,"byte_end":387742,"line_start":323,"line_end":323,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> BufWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter<W>` with the specified buffer capacity.","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter<W>` with the specified buffer capacity.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":387641,"byte_end":387709,"line_start":321,"line_end":321,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":387714,"byte_end":387717,"line_start":322,"line_end":322,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2061},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":388835,"byte_end":388842,"line_start":358,"line_end":358,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":388769,"byte_end":388815,"line_start":356,"line_end":356,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":388820,"byte_end":388823,"line_start":357,"line_end":357,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":389058,"byte_end":389065,"line_start":366,"line_end":366,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":388906,"byte_end":388960,"line_start":362,"line_end":362,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":388965,"byte_end":388968,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":388973,"byte_end":389038,"line_start":364,"line_end":364,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":389043,"byte_end":389046,"line_start":365,"line_end":365,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":389213,"byte_end":389219,"line_start":372,"line_end":372,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":389137,"byte_end":389193,"line_start":370,"line_end":370,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":389198,"byte_end":389201,"line_start":371,"line_end":371,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2064},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":389365,"byte_end":389373,"line_start":378,"line_end":378,"column_start":12,"column_end":20},"name":"capacity","qualname":"<BufWriter<W>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes the internal buffer can hold without flushing.","sig":null,"attributes":[{"value":"/ Returns the number of bytes the internal buffer can hold without flushing.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":389267,"byte_end":389345,"line_start":376,"line_end":376,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":389350,"byte_end":389353,"line_start":377,"line_end":377,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2065},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":389700,"byte_end":389710,"line_start":390,"line_end":390,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> Result<W, IntoInnerError<BufWriter<W>>>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `BufWriter<W>`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Unwraps this `BufWriter<W>`, returning the underlying writer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":389431,"byte_end":389496,"line_start":382,"line_end":382,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":389501,"byte_end":389504,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ The buffer is written out before returning the writer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":389509,"byte_end":389567,"line_start":384,"line_end":384,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":389572,"byte_end":389575,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":389580,"byte_end":389592,"line_start":386,"line_end":386,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":389597,"byte_end":389600,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ An `Err` will be returned if an error occurs while flushing the buffer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":389605,"byte_end":389680,"line_start":388,"line_end":388,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":389685,"byte_end":389688,"line_start":389,"line_end":389,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":392119,"byte_end":392124,"line_start":468,"line_end":468,"column_start":12,"column_end":17},"name":"error","qualname":"<IntoInnerError<W>>::error","value":"pub fn error(&Self) -> &Error","parent":null,"children":[],"decl_id":null,"docs":" Returns the error which caused the call to `into_inner()` to fail.","sig":null,"attributes":[{"value":"/ Returns the error which caused the call to `into_inner()` to fail.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":391943,"byte_end":392013,"line_start":464,"line_end":464,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":392018,"byte_end":392021,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ This error was returned when attempting to write the internal buffer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":392026,"byte_end":392099,"line_start":466,"line_end":466,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":392104,"byte_end":392107,"line_start":467,"line_end":467,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":392368,"byte_end":392378,"line_start":477,"line_end":477,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<IntoInnerError<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Returns the buffered writer instance which generated the error.","sig":null,"attributes":[{"value":"/ Returns the buffered writer instance which generated the error.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":392171,"byte_end":392238,"line_start":472,"line_end":472,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":392243,"byte_end":392246,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ The returned object can be used for error recovery, such as","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":392251,"byte_end":392314,"line_start":474,"line_end":474,"column_start":5,"column_end":68}},{"value":"/ re-inspecting the buffer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":392319,"byte_end":392348,"line_start":475,"line_end":475,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":392353,"byte_end":392356,"line_start":476,"line_end":476,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2096},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":393628,"byte_end":393638,"line_start":517,"line_end":517,"column_start":12,"column_end":22},"name":"LineWriter","qualname":"::io::buffered::LineWriter","value":"LineWriter {  }","parent":null,"children":[{"krate":0,"index":2098},{"krate":0,"index":2099}],"decl_id":null,"docs":" Wraps a writer and buffers output to it, flushing whenever a newline\n (`0x0a`, `'\\n'`) is detected.","sig":null,"attributes":[{"value":"/ Wraps a writer and buffers output to it, flushing whenever a newline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":392832,"byte_end":392904,"line_start":500,"line_end":500,"column_start":1,"column_end":73}},{"value":"/ (`0x0a`, `'\\n'`) is detected.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":392905,"byte_end":392938,"line_start":501,"line_end":501,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":392939,"byte_end":392942,"line_start":502,"line_end":502,"column_start":1,"column_end":4}},{"value":"/ The [`BufWriter`][bufwriter] struct wraps a writer and buffers its output.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":392943,"byte_end":393021,"line_start":503,"line_end":503,"column_start":1,"column_end":79}},{"value":"/ But it only does this batched write when it goes out of scope, or when the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":393022,"byte_end":393100,"line_start":504,"line_end":504,"column_start":1,"column_end":79}},{"value":"/ internal buffer is full. Sometimes, you'd prefer to write each line as it's","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":393101,"byte_end":393180,"line_start":505,"line_end":505,"column_start":1,"column_end":80}},{"value":"/ completed, rather than the entire buffer at once. Enter `LineWriter`. It","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":393181,"byte_end":393257,"line_start":506,"line_end":506,"column_start":1,"column_end":77}},{"value":"/ does exactly that.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":393258,"byte_end":393280,"line_start":507,"line_end":507,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":393281,"byte_end":393284,"line_start":508,"line_end":508,"column_start":1,"column_end":4}},{"value":"/ Like [`BufWriter`][bufwriter], a `LineWriter`’s buffer will also be flushed when the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":393285,"byte_end":393375,"line_start":509,"line_end":509,"column_start":1,"column_end":89}},{"value":"/ `LineWriter` goes out of scope or when its internal buffer is full.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":393376,"byte_end":393447,"line_start":510,"line_end":510,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":393448,"byte_end":393451,"line_start":511,"line_end":511,"column_start":1,"column_end":4}},{"value":"/ [bufwriter]: struct.BufWriter.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":393452,"byte_end":393490,"line_start":512,"line_end":512,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":393491,"byte_end":393494,"line_start":513,"line_end":513,"column_start":1,"column_end":4}},{"value":"/ If there's still a partial line in the buffer when the `LineWriter` is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":393495,"byte_end":393569,"line_start":514,"line_end":514,"column_start":1,"column_end":75}},{"value":"/ dropped, it will flush those contents.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":393570,"byte_end":393612,"line_start":515,"line_end":515,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":393613,"byte_end":393616,"line_start":516,"line_end":516,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":2102},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":393787,"byte_end":393790,"line_start":525,"line_end":525,"column_start":12,"column_end":15},"name":"new","qualname":"<LineWriter<W>>::new","value":"pub fn new(W) -> LineWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LineWriter`.","sig":null,"attributes":[{"value":"/ Creates a new `LineWriter`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":393736,"byte_end":393767,"line_start":523,"line_end":523,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":393772,"byte_end":393775,"line_start":524,"line_end":524,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":394057,"byte_end":394070,"line_start":533,"line_end":533,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<LineWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> LineWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LineWriter` with a specified capacity for the internal\n buffer.","sig":null,"attributes":[{"value":"/ Creates a new `LineWriter` with a specified capacity for the internal","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":393948,"byte_end":394021,"line_start":530,"line_end":530,"column_start":5,"column_end":78}},{"value":"/ buffer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":394026,"byte_end":394037,"line_start":531,"line_end":531,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":394042,"byte_end":394045,"line_start":532,"line_end":532,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":394285,"byte_end":394292,"line_start":539,"line_end":539,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<LineWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":394219,"byte_end":394265,"line_start":537,"line_end":537,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":394270,"byte_end":394273,"line_start":538,"line_end":538,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2105},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":394572,"byte_end":394579,"line_start":548,"line_end":548,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<LineWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":394348,"byte_end":394402,"line_start":543,"line_end":543,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":394407,"byte_end":394410,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ Caution must be taken when calling methods on the mutable reference","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":394415,"byte_end":394486,"line_start":545,"line_end":545,"column_start":5,"column_end":76}},{"value":"/ returned as extra writes could corrupt the output stream.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":394491,"byte_end":394552,"line_start":546,"line_end":546,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":394557,"byte_end":394560,"line_start":547,"line_end":547,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":394919,"byte_end":394929,"line_start":560,"line_end":560,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<LineWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> Result<W, IntoInnerError<LineWriter<W>>>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `LineWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Unwraps this `LineWriter`, returning the underlying writer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":394643,"byte_end":394706,"line_start":552,"line_end":552,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":394711,"byte_end":394714,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ The internal buffer is written out before returning the writer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":394719,"byte_end":394786,"line_start":554,"line_end":554,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":394791,"byte_end":394794,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":394799,"byte_end":394811,"line_start":556,"line_end":556,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":394816,"byte_end":394819,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ An `Err` will be returned if an error occurs while flushing the buffer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":394824,"byte_end":394899,"line_start":558,"line_end":558,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":394904,"byte_end":394907,"line_start":559,"line_end":559,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7263},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":400860,"byte_end":400866,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":7265},{"krate":0,"index":7266}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`Seek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":400270,"byte_end":400333,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ [`Seek`] implementation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":400334,"byte_end":400362,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":400363,"byte_end":400366,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":400367,"byte_end":400435,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`Read`] and/or [`Write`],","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":400436,"byte_end":400508,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":400509,"byte_end":400588,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":400589,"byte_end":400614,"line_start":29,"line_end":29,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":400615,"byte_end":400618,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The standard library implements some I/O traits on various types which","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":400619,"byte_end":400693,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":400694,"byte_end":400761,"line_start":32,"line_end":32,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":400762,"byte_end":400795,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":400796,"byte_end":400799,"line_start":34,"line_end":34,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":2133},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":401225,"byte_end":401228,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"pub fn new(T) -> Cursor<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":400927,"byte_end":401002,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":401007,"byte_end":401010,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":401015,"byte_end":401089,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":401094,"byte_end":401162,"line_start":46,"line_end":46,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":401167,"byte_end":401205,"line_start":47,"line_end":47,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":401210,"byte_end":401213,"line_start":48,"line_end":48,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2134},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":401367,"byte_end":401377,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":401298,"byte_end":401355,"line_start":53,"line_end":53,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2135},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":401493,"byte_end":401500,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":401421,"byte_end":401481,"line_start":58,"line_end":58,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2136},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":401780,"byte_end":401787,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":401547,"byte_end":401615,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":401620,"byte_end":401623,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":401628,"byte_end":401701,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":401706,"byte_end":401768,"line_start":66,"line_end":66,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2137},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":401906,"byte_end":401914,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"pub fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.\n","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":401846,"byte_end":401894,"line_start":71,"line_end":71,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2138},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":402008,"byte_end":402020,"line_start":77,"line_end":77,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"pub fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.\n","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":401959,"byte_end":401996,"line_start":76,"line_end":76,"column_start":5,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":2184},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":409457,"byte_end":409463,"line_start":43,"line_end":43,"column_start":10,"column_end":16},"name":"Result","qualname":"::io::error::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A specialized [`Result`](../result/enum.Result.html) type for I/O\n operations.","sig":null,"attributes":[{"value":"/ A specialized [`Result`](../result/enum.Result.html) type for I/O","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":408747,"byte_end":408816,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ operations.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":408817,"byte_end":408832,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":408833,"byte_end":408836,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This type is broadly used across [`std::io`] for any operation which may","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":408837,"byte_end":408913,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ produce an error.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":408914,"byte_end":408935,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":408936,"byte_end":408939,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This typedef is generally used to avoid writing out [`io::Error`] directly and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":408940,"byte_end":409022,"line_start":34,"line_end":34,"column_start":1,"column_end":83}},{"value":"/ is otherwise a direct mapping to [`Result`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":409023,"byte_end":409071,"line_start":35,"line_end":35,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":409072,"byte_end":409075,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ While usual Rust style is to import types directly, aliases of [`Result`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":409076,"byte_end":409153,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ often are not, to make it easier to distinguish between them. [`Result`] is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":409154,"byte_end":409233,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/ generally assumed to be [`std::result::Result`][`Result`], and so users of this alias","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":409234,"byte_end":409323,"line_start":39,"line_end":39,"column_start":1,"column_end":90}},{"value":"/ will generally use `io::Result` instead of shadowing the prelude's import","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":409324,"byte_end":409401,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ of [`std::result::Result`][`Result`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":409402,"byte_end":409443,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":409444,"byte_end":409447,"line_start":42,"line_end":42,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":2186},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":409833,"byte_end":409838,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"name":"Error","qualname":"::io::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":2187}],"decl_id":null,"docs":" The error type for I/O operations of the [`Read`], [`Write`], [`Seek`], and\n associated traits.","sig":null,"attributes":[{"value":"/ The error type for I/O operations of the [`Read`], [`Write`], [`Seek`], and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":409496,"byte_end":409575,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ associated traits.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":409576,"byte_end":409598,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":409599,"byte_end":409602,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Errors mostly originate from the underlying OS, but custom instances of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":409603,"byte_end":409678,"line_start":48,"line_end":48,"column_start":1,"column_end":76}},{"value":"/ `Error` can be created with crafted error messages and a particular value of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":409679,"byte_end":409759,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ [`ErrorKind`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":409760,"byte_end":409778,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":409779,"byte_end":409782,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [`ErrorKind`]: enum.ErrorKind.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":409783,"byte_end":409821,"line_start":52,"line_end":52,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7293},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":410644,"byte_end":410652,"line_start":89,"line_end":89,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::io::error::ErrorKind::NotFound","value":"ErrorKind::NotFound","parent":{"krate":0,"index":7292},"children":[],"decl_id":null,"docs":" An entity was not found, often a file.\n","sig":null,"attributes":[{"value":"/ An entity was not found, often a file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":410597,"byte_end":410639,"line_start":88,"line_end":88,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7295},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":410725,"byte_end":410741,"line_start":91,"line_end":91,"column_start":5,"column_end":21},"name":"PermissionDenied","qualname":"::io::error::ErrorKind::PermissionDenied","value":"ErrorKind::PermissionDenied","parent":{"krate":0,"index":7292},"children":[],"decl_id":null,"docs":" The operation lacked the necessary privileges to complete.\n","sig":null,"attributes":[{"value":"/ The operation lacked the necessary privileges to complete.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":410658,"byte_end":410720,"line_start":90,"line_end":90,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7297},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":410804,"byte_end":410821,"line_start":93,"line_end":93,"column_start":5,"column_end":22},"name":"ConnectionRefused","qualname":"::io::error::ErrorKind::ConnectionRefused","value":"ErrorKind::ConnectionRefused","parent":{"krate":0,"index":7292},"children":[],"decl_id":null,"docs":" The connection was refused by the remote server.\n","sig":null,"attributes":[{"value":"/ The connection was refused by the remote server.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":410747,"byte_end":410799,"line_start":92,"line_end":92,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7299},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":410882,"byte_end":410897,"line_start":95,"line_end":95,"column_start":5,"column_end":20},"name":"ConnectionReset","qualname":"::io::error::ErrorKind::ConnectionReset","value":"ErrorKind::ConnectionReset","parent":{"krate":0,"index":7292},"children":[],"decl_id":null,"docs":" The connection was reset by the remote server.\n","sig":null,"attributes":[{"value":"/ The connection was reset by the remote server.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":410827,"byte_end":410877,"line_start":94,"line_end":94,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7301},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":410973,"byte_end":410990,"line_start":97,"line_end":97,"column_start":5,"column_end":22},"name":"ConnectionAborted","qualname":"::io::error::ErrorKind::ConnectionAborted","value":"ErrorKind::ConnectionAborted","parent":{"krate":0,"index":7292},"children":[],"decl_id":null,"docs":" The connection was aborted (terminated) by the remote server.\n","sig":null,"attributes":[{"value":"/ The connection was aborted (terminated) by the remote server.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":410903,"byte_end":410968,"line_start":96,"line_end":96,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7303},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":411067,"byte_end":411079,"line_start":99,"line_end":99,"column_start":5,"column_end":17},"name":"NotConnected","qualname":"::io::error::ErrorKind::NotConnected","value":"ErrorKind::NotConnected","parent":{"krate":0,"index":7292},"children":[],"decl_id":null,"docs":" The network operation failed because it was not connected yet.\n","sig":null,"attributes":[{"value":"/ The network operation failed because it was not connected yet.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":410996,"byte_end":411062,"line_start":98,"line_end":98,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7305},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":411186,"byte_end":411195,"line_start":102,"line_end":102,"column_start":5,"column_end":14},"name":"AddrInUse","qualname":"::io::error::ErrorKind::AddrInUse","value":"ErrorKind::AddrInUse","parent":{"krate":0,"index":7292},"children":[],"decl_id":null,"docs":" A socket address could not be bound because the address is already in\n use elsewhere.\n","sig":null,"attributes":[{"value":"/ A socket address could not be bound because the address is already in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":411085,"byte_end":411158,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ use elsewhere.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":411163,"byte_end":411181,"line_start":101,"line_end":101,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7307},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":411295,"byte_end":411311,"line_start":105,"line_end":105,"column_start":5,"column_end":21},"name":"AddrNotAvailable","qualname":"::io::error::ErrorKind::AddrNotAvailable","value":"ErrorKind::AddrNotAvailable","parent":{"krate":0,"index":7292},"children":[],"decl_id":null,"docs":" A nonexistent interface was requested or the requested address was not\n local.\n","sig":null,"attributes":[{"value":"/ A nonexistent interface was requested or the requested address was not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":411201,"byte_end":411275,"line_start":103,"line_end":103,"column_start":5,"column_end":79}},{"value":"/ local.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":411280,"byte_end":411290,"line_start":104,"line_end":104,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7309},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":411373,"byte_end":411383,"line_start":107,"line_end":107,"column_start":5,"column_end":15},"name":"BrokenPipe","qualname":"::io::error::ErrorKind::BrokenPipe","value":"ErrorKind::BrokenPipe","parent":{"krate":0,"index":7292},"children":[],"decl_id":null,"docs":" The operation failed because a pipe was closed.\n","sig":null,"attributes":[{"value":"/ The operation failed because a pipe was closed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":411317,"byte_end":411368,"line_start":106,"line_end":106,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7311},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":411437,"byte_end":411450,"line_start":109,"line_end":109,"column_start":5,"column_end":18},"name":"AlreadyExists","qualname":"::io::error::ErrorKind::AlreadyExists","value":"ErrorKind::AlreadyExists","parent":{"krate":0,"index":7292},"children":[],"decl_id":null,"docs":" An entity already exists, often a file.\n","sig":null,"attributes":[{"value":"/ An entity already exists, often a file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":411389,"byte_end":411432,"line_start":108,"line_end":108,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7313},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":411569,"byte_end":411579,"line_start":112,"line_end":112,"column_start":5,"column_end":15},"name":"WouldBlock","qualname":"::io::error::ErrorKind::WouldBlock","value":"ErrorKind::WouldBlock","parent":{"krate":0,"index":7292},"children":[],"decl_id":null,"docs":" The operation needs to block to complete, but the blocking operation was\n requested to not occur.\n","sig":null,"attributes":[{"value":"/ The operation needs to block to complete, but the blocking operation was","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":411456,"byte_end":411532,"line_start":110,"line_end":110,"column_start":5,"column_end":81}},{"value":"/ requested to not occur.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":411537,"byte_end":411564,"line_start":111,"line_end":111,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7315},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":411620,"byte_end":411632,"line_start":114,"line_end":114,"column_start":5,"column_end":17},"name":"InvalidInput","qualname":"::io::error::ErrorKind::InvalidInput","value":"ErrorKind::InvalidInput","parent":{"krate":0,"index":7292},"children":[],"decl_id":null,"docs":" A parameter was incorrect.\n","sig":null,"attributes":[{"value":"/ A parameter was incorrect.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":411585,"byte_end":411615,"line_start":113,"line_end":113,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7317},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":412081,"byte_end":412092,"line_start":125,"line_end":125,"column_start":5,"column_end":16},"name":"InvalidData","qualname":"::io::error::ErrorKind::InvalidData","value":"ErrorKind::InvalidData","parent":{"krate":0,"index":7292},"children":[],"decl_id":null,"docs":" Data not valid for the operation were encountered.","sig":null,"attributes":[{"value":"/ Data not valid for the operation were encountered.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":411638,"byte_end":411692,"line_start":115,"line_end":115,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":411697,"byte_end":411700,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Unlike [`InvalidInput`], this typically means that the operation","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":411705,"byte_end":411773,"line_start":117,"line_end":117,"column_start":5,"column_end":73}},{"value":"/ parameters were valid, however the error was caused by malformed","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":411778,"byte_end":411846,"line_start":118,"line_end":118,"column_start":5,"column_end":73}},{"value":"/ input data.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":411851,"byte_end":411866,"line_start":119,"line_end":119,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":411871,"byte_end":411874,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ For example, a function that reads a file into a string will error with","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":411879,"byte_end":411954,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ `InvalidData` if the file's contents are not valid UTF-8.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":411959,"byte_end":412020,"line_start":122,"line_end":122,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":412025,"byte_end":412028,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ [`InvalidInput`]: #variant.InvalidInput","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":412033,"byte_end":412076,"line_start":124,"line_end":124,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7319},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":412170,"byte_end":412178,"line_start":127,"line_end":127,"column_start":5,"column_end":13},"name":"TimedOut","qualname":"::io::error::ErrorKind::TimedOut","value":"ErrorKind::TimedOut","parent":{"krate":0,"index":7292},"children":[],"decl_id":null,"docs":" The I/O operation's timeout expired, causing it to be canceled.\n","sig":null,"attributes":[{"value":"/ The I/O operation's timeout expired, causing it to be canceled.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":412098,"byte_end":412165,"line_start":126,"line_end":126,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7321},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":412612,"byte_end":412621,"line_start":137,"line_end":137,"column_start":5,"column_end":14},"name":"WriteZero","qualname":"::io::error::ErrorKind::WriteZero","value":"ErrorKind::WriteZero","parent":{"krate":0,"index":7292},"children":[],"decl_id":null,"docs":" An error returned when an operation could not be completed because a\n call to [`write`] returned [`Ok(0)`].","sig":null,"attributes":[{"value":"/ An error returned when an operation could not be completed because a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":412184,"byte_end":412256,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ call to [`write`] returned [`Ok(0)`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":412261,"byte_end":412302,"line_start":129,"line_end":129,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":412307,"byte_end":412310,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This typically means that an operation could only succeed if it wrote a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":412315,"byte_end":412390,"line_start":131,"line_end":131,"column_start":5,"column_end":80}},{"value":"/ particular number of bytes but only a smaller number of bytes could be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":412395,"byte_end":412469,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/ written.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":412474,"byte_end":412486,"line_start":133,"line_end":133,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":412491,"byte_end":412494,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ [`write`]: ../../std/io/trait.Write.html#tymethod.write","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":412499,"byte_end":412558,"line_start":135,"line_end":135,"column_start":5,"column_end":64}},{"value":"/ [`Ok(0)`]: ../../std/io/type.Result.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":412563,"byte_end":412607,"line_start":136,"line_end":136,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7323},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":412732,"byte_end":412743,"line_start":141,"line_end":141,"column_start":5,"column_end":16},"name":"Interrupted","qualname":"::io::error::ErrorKind::Interrupted","value":"ErrorKind::Interrupted","parent":{"krate":0,"index":7292},"children":[],"decl_id":null,"docs":" This operation was interrupted.","sig":null,"attributes":[{"value":"/ This operation was interrupted.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":412627,"byte_end":412662,"line_start":138,"line_end":138,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":412667,"byte_end":412670,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Interrupted operations can typically be retried.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":412675,"byte_end":412727,"line_start":140,"line_end":140,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7325},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":412794,"byte_end":412799,"line_start":143,"line_end":143,"column_start":5,"column_end":10},"name":"Other","qualname":"::io::error::ErrorKind::Other","value":"ErrorKind::Other","parent":{"krate":0,"index":7292},"children":[],"decl_id":null,"docs":" Any I/O error not part of this list.\n","sig":null,"attributes":[{"value":"/ Any I/O error not part of this list.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":412749,"byte_end":412789,"line_start":142,"line_end":142,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7327},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":413111,"byte_end":413124,"line_start":151,"line_end":151,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::io::error::ErrorKind::UnexpectedEof","value":"ErrorKind::UnexpectedEof","parent":{"krate":0,"index":7292},"children":[],"decl_id":null,"docs":" An error returned when an operation could not be completed because an\n \"end of file\" was reached prematurely.","sig":null,"attributes":[{"value":"/ An error returned when an operation could not be completed because an","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":412806,"byte_end":412879,"line_start":145,"line_end":145,"column_start":5,"column_end":78}},{"value":"/ \"end of file\" was reached prematurely.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":412884,"byte_end":412926,"line_start":146,"line_end":146,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":412931,"byte_end":412934,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ This typically means that an operation could only succeed if it read a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":412939,"byte_end":413013,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ particular number of bytes but only a smaller number of bytes could be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":413018,"byte_end":413092,"line_start":149,"line_end":149,"column_start":5,"column_end":79}},{"value":"/ read.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":413097,"byte_end":413106,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7329},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":413164,"byte_end":413172,"line_start":155,"line_end":155,"column_start":5,"column_end":13},"name":"SgxError","qualname":"::io::error::ErrorKind::SgxError","value":"ErrorKind::SgxError","parent":{"krate":0,"index":7292},"children":[],"decl_id":null,"docs":"\n SGX error status\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":413131,"byte_end":413134,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ SGX error status","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":413139,"byte_end":413159,"line_start":154,"line_end":154,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":7292},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":410581,"byte_end":410590,"line_start":87,"line_end":87,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::io::error::ErrorKind","value":"pub enum ErrorKind {\n\n    /// An entity was not found, often a file.\n    NotFound,\n\n    /// The operation lacked the necessary privileges to complete.\n    PermissionDenied,\n\n    /// The connection was refused by the remote server.\n    ConnectionRefused,\n\n    /// The connection was reset by the remote server.\n    ConnectionReset,\n\n    /// The connection was aborted (terminated) by the remote server.\n    ConnectionAborted,\n\n    /// The network operation failed because it was not connected yet.\n    NotConnected,\n\n    /// A socket address could not be bound because the address is already in\n    /// use elsewhere.\n    AddrInUse,\n\n    /// A nonexistent interface was requested or the requested address was not\n    /// local.\n    AddrNotAvailable,\n\n    /// The operation failed because a pipe was closed.\n    BrokenPipe,\n\n    /// An entity already exists, often a file.\n    AlreadyExists,\n\n    /// The operation needs to block to complete, but the blocking operation was\n    /// requested to not occur.\n    WouldBlock,\n\n    /// A parameter was incorrect.\n    InvalidInput,\n\n    /// Data not valid for the operation were encountered.\n    ///\n    /// Unlike [`InvalidInput`], this typically means that the operation\n    /// parameters were valid, however the error was caused by malformed\n    /// input data.\n    ///\n    /// For example, a function that reads a file into a string will error with\n    /// `InvalidData` if the file's contents are not valid UTF-8.\n    ///\n    /// [`InvalidInput`]: #variant.InvalidInput\n    InvalidData,\n\n    /// The I/O operation's timeout expired, causing it to be canceled.\n    TimedOut,\n\n    /// An error returned when an operation could not be completed because a\n    /// call to [`write`] returned [`Ok(0)`].\n    ///\n    /// This typically means that an operation could only succeed if it wrote a\n    /// particular number of bytes but only a smaller number of bytes could be\n    /// written.\n    ///\n    /// [`write`]: ../../std/io/trait.Write.html#tymethod.write\n    /// [`Ok(0)`]: ../../std/io/type.Result.html\n    WriteZero,\n\n    /// This operation was interrupted.\n    ///\n    /// Interrupted operations can typically be retried.\n    Interrupted,\n\n    /// Any I/O error not part of this list.\n    Other,\n\n    /// An error returned when an operation could not be completed because an\n    /// \"end of file\" was reached prematurely.\n    ///\n    /// This typically means that an operation could only succeed if it read a\n    /// particular number of bytes but only a smaller number of bytes could be\n    /// read.\n    UnexpectedEof,\n\n    ///\n    /// SGX error status\n    SgxError,\n}","parent":null,"children":[{"krate":0,"index":7293},{"krate":0,"index":7295},{"krate":0,"index":7297},{"krate":0,"index":7299},{"krate":0,"index":7301},{"krate":0,"index":7303},{"krate":0,"index":7305},{"krate":0,"index":7307},{"krate":0,"index":7309},{"krate":0,"index":7311},{"krate":0,"index":7313},{"krate":0,"index":7315},{"krate":0,"index":7317},{"krate":0,"index":7319},{"krate":0,"index":7321},{"krate":0,"index":7323},{"krate":0,"index":7325},{"krate":0,"index":7327},{"krate":0,"index":7329}],"decl_id":null,"docs":" A list specifying general categories of I/O error.","sig":null,"attributes":[{"value":"/ A list specifying general categories of I/O error.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":410209,"byte_end":410263,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":410264,"byte_end":410267,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ This list is intended to grow over time and it is not recommended to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":410268,"byte_end":410340,"line_start":78,"line_end":78,"column_start":1,"column_end":73}},{"value":"/ exhaustively match against it.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":410341,"byte_end":410375,"line_start":79,"line_end":79,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":410376,"byte_end":410379,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ It is used with the [`io::Error`] type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":410380,"byte_end":410423,"line_start":81,"line_end":81,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":410424,"byte_end":410427,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ [`io::Error`]: struct.Error.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":410428,"byte_end":410464,"line_start":83,"line_end":83,"column_start":1,"column_end":37}},{"value":"allow(deprecated)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":410533,"byte_end":410553,"line_start":85,"line_end":85,"column_start":1,"column_end":21}},{"value":"non_exhaustive","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":410554,"byte_end":410571,"line_start":86,"line_end":86,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2210},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":415261,"byte_end":415264,"line_start":210,"line_end":210,"column_start":12,"column_end":15},"name":"new","qualname":"<Error>::new","value":"pub fn new<E>(ErrorKind, E) -> Error where\nE: Into<Box<error::Error + Send + Sync>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new I/O error from a known kind of error as well as an\n arbitrary error payload.","sig":null,"attributes":[{"value":"/ Creates a new I/O error from a known kind of error as well as an","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":414924,"byte_end":414992,"line_start":203,"line_end":203,"column_start":5,"column_end":73}},{"value":"/ arbitrary error payload.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":414997,"byte_end":415025,"line_start":204,"line_end":204,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":415030,"byte_end":415033,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ This function is used to generically create I/O errors which do not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":415038,"byte_end":415109,"line_start":206,"line_end":206,"column_start":5,"column_end":76}},{"value":"/ originate from the OS itself. The `error` argument is an arbitrary","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":415114,"byte_end":415184,"line_start":207,"line_end":207,"column_start":5,"column_end":75}},{"value":"/ payload which will be contained in this `Error`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":415189,"byte_end":415241,"line_start":208,"line_end":208,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":415246,"byte_end":415249,"line_start":209,"line_end":209,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2213},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":415875,"byte_end":415888,"line_start":227,"line_end":227,"column_start":12,"column_end":25},"name":"last_os_error","qualname":"<Error>::last_os_error","value":"pub fn last_os_error() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Returns an error representing the last OS error which occurred.","sig":null,"attributes":[{"value":"/ Returns an error representing the last OS error which occurred.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":415586,"byte_end":415653,"line_start":221,"line_end":221,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":415658,"byte_end":415661,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This function reads the value of `errno` for the target platform (e.g.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":415666,"byte_end":415740,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/ `GetLastError` on Windows) and will return a corresponding instance of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":415745,"byte_end":415819,"line_start":224,"line_end":224,"column_start":5,"column_end":79}},{"value":"/ `Error` for the error code.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":415824,"byte_end":415855,"line_start":225,"line_end":225,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":415860,"byte_end":415863,"line_start":226,"line_end":226,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2214},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":416064,"byte_end":416081,"line_start":233,"line_end":233,"column_start":12,"column_end":29},"name":"from_raw_os_error","qualname":"<Error>::from_raw_os_error","value":"pub fn from_raw_os_error(i32) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `Error` from a particular OS error code.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `Error` from a particular OS error code.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":415971,"byte_end":416044,"line_start":231,"line_end":231,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":416049,"byte_end":416052,"line_start":232,"line_end":232,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2215},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":416415,"byte_end":416427,"line_start":243,"line_end":243,"column_start":12,"column_end":24},"name":"raw_os_error","qualname":"<Error>::raw_os_error","value":"pub fn raw_os_error(&Self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the OS error that this error represents (if any).","sig":null,"attributes":[{"value":"/ Returns the OS error that this error represents (if any).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":416154,"byte_end":416215,"line_start":237,"line_end":237,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":416220,"byte_end":416223,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ If this `Error` was constructed via `last_os_error` or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":416228,"byte_end":416286,"line_start":239,"line_end":239,"column_start":5,"column_end":63}},{"value":"/ `from_raw_os_error`, then this function will return `Some`, otherwise","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":416291,"byte_end":416364,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/ it will return `None`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":416369,"byte_end":416395,"line_start":241,"line_end":241,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":416400,"byte_end":416403,"line_start":242,"line_end":242,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2216},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":416748,"byte_end":416762,"line_start":254,"line_end":254,"column_start":12,"column_end":26},"name":"from_sgx_error","qualname":"<Error>::from_sgx_error","value":"pub fn from_sgx_error(sgx_status_t) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `Error` from a particular SGX error status.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `Error` from a particular SGX error status.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":416652,"byte_end":416728,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":416733,"byte_end":416736,"line_start":253,"line_end":253,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2217},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":417097,"byte_end":417110,"line_start":264,"line_end":264,"column_start":12,"column_end":25},"name":"raw_sgx_error","qualname":"<Error>::raw_sgx_error","value":"pub fn raw_sgx_error(&Self) -> Option<sgx_status_t>","parent":null,"children":[],"decl_id":null,"docs":" Returns the SGX error that this error represents (if any).","sig":null,"attributes":[{"value":"/ Returns the SGX error that this error represents (if any).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":416855,"byte_end":416917,"line_start":258,"line_end":258,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":416922,"byte_end":416925,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ If this `Error` was constructed via `from_sgx_error` or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":416930,"byte_end":416989,"line_start":260,"line_end":260,"column_start":5,"column_end":64}},{"value":"/ then this function will return `Some`, otherwise","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":416994,"byte_end":417046,"line_start":261,"line_end":261,"column_start":5,"column_end":57}},{"value":"/ it will return `None`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":417051,"byte_end":417077,"line_start":262,"line_end":262,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":417082,"byte_end":417085,"line_start":263,"line_end":263,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2218},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":417586,"byte_end":417593,"line_start":278,"line_end":278,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Error>::get_ref","value":"pub fn get_ref(&Self) -> Option<&error::Error + Send + Sync + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner error wrapped by this error (if any).","sig":null,"attributes":[{"value":"/ Returns a reference to the inner error wrapped by this error (if any).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":417354,"byte_end":417428,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":417433,"byte_end":417436,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ If this `Error` was constructed via `new` then this function will","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":417441,"byte_end":417510,"line_start":275,"line_end":275,"column_start":5,"column_end":74}},{"value":"/ return `Some`, otherwise it will return `None`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":417515,"byte_end":417566,"line_start":276,"line_end":276,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":417571,"byte_end":417574,"line_start":277,"line_end":277,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2219},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":418118,"byte_end":418125,"line_start":293,"line_end":293,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Error>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut error::Error + Send + Sync + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner error wrapped by this error\n (if any).","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner error wrapped by this error","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":417870,"byte_end":417942,"line_start":287,"line_end":287,"column_start":5,"column_end":77}},{"value":"/ (if any).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":417947,"byte_end":417960,"line_start":288,"line_end":288,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":417965,"byte_end":417968,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ If this `Error` was constructed via `new` then this function will","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":417973,"byte_end":418042,"line_start":290,"line_end":290,"column_start":5,"column_end":74}},{"value":"/ return `Some`, otherwise it will return `None`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":418047,"byte_end":418098,"line_start":291,"line_end":291,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":418103,"byte_end":418106,"line_start":292,"line_end":292,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2220},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":418647,"byte_end":418657,"line_start":307,"line_end":307,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Error>::into_inner","value":"pub fn into_inner(Self) -> Option<Box<error::Error + Send + Sync>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Error`, returning its inner error (if any).","sig":null,"attributes":[{"value":"/ Consumes the `Error`, returning its inner error (if any).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":418428,"byte_end":418489,"line_start":302,"line_end":302,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":418494,"byte_end":418497,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ If this `Error` was constructed via `new` then this function will","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":418502,"byte_end":418571,"line_start":304,"line_end":304,"column_start":5,"column_end":74}},{"value":"/ return `Some`, otherwise it will return `None`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":418576,"byte_end":418627,"line_start":305,"line_end":305,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":418632,"byte_end":418635,"line_start":306,"line_end":306,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2221},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":419008,"byte_end":419012,"line_start":318,"line_end":318,"column_start":12,"column_end":16},"name":"kind","qualname":"<Error>::kind","value":"pub fn kind(&Self) -> ErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `ErrorKind` for this error.","sig":null,"attributes":[{"value":"/ Returns the corresponding `ErrorKind` for this error.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":418931,"byte_end":418988,"line_start":316,"line_end":316,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":418993,"byte_end":418996,"line_start":317,"line_end":317,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2327},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/lazy.rs","byte_start":432073,"byte_end":432077,"line_start":24,"line_end":24,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::io::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":2329},{"krate":0,"index":2330}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2337},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/lazy.rs","byte_start":432376,"byte_end":432379,"line_start":38,"line_end":38,"column_start":18,"column_end":21},"name":"new","qualname":"<Lazy<T>>::new","value":"pub const fn new() -> Lazy<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2340},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/lazy.rs","byte_start":432668,"byte_end":432671,"line_start":49,"line_end":49,"column_start":19,"column_end":22},"name":"get","qualname":"<Lazy<T>>::get","value":"pub unsafe fn get(&'static Self, fn() -> Arc<T>) -> Option<Arc<T>>","parent":null,"children":[],"decl_id":null,"docs":" Safety: `init` must not call `get` on the variable that is being\n initialized.\n","sig":null,"attributes":[{"value":"/ Safety: `init` must not call `get` on the variable that is being","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/lazy.rs","byte_start":432560,"byte_end":432628,"line_start":47,"line_end":47,"column_start":5,"column_end":73}},{"value":"/ initialized.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/lazy.rs","byte_start":432633,"byte_end":432649,"line_start":48,"line_end":48,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":2418},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":441418,"byte_end":441423,"line_start":191,"line_end":191,"column_start":12,"column_end":17},"name":"Stdin","qualname":"::io::stdio::Stdin","value":"Stdin {  }","parent":null,"children":[{"krate":0,"index":2419}],"decl_id":null,"docs":" A handle to the standard input stream of a process.","sig":null,"attributes":[{"value":"/ A handle to the standard input stream of a process.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":440595,"byte_end":440650,"line_start":172,"line_end":172,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":440651,"byte_end":440654,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ Each handle is a shared reference to a global buffer of input data to this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":440655,"byte_end":440733,"line_start":174,"line_end":174,"column_start":1,"column_end":79}},{"value":"/ process. A handle can be `lock`'d to gain full access to [`BufRead`] methods","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":440734,"byte_end":440814,"line_start":175,"line_end":175,"column_start":1,"column_end":81}},{"value":"/ (e.g., `.lines()`). Reads to this handle are otherwise locked with respect","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":440815,"byte_end":440893,"line_start":176,"line_end":176,"column_start":1,"column_end":79}},{"value":"/ to other reads.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":440894,"byte_end":440913,"line_start":177,"line_end":177,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":440914,"byte_end":440917,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ This handle implements the `Read` trait, but beware that concurrent reads","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":440918,"byte_end":440995,"line_start":179,"line_end":179,"column_start":1,"column_end":78}},{"value":"/ of `Stdin` must be executed with care.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":440996,"byte_end":441038,"line_start":180,"line_end":180,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":441039,"byte_end":441042,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ Created by the [`io::stdin`] method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":441043,"byte_end":441083,"line_start":182,"line_end":182,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":441084,"byte_end":441087,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ [`io::stdin`]: fn.stdin.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":441088,"byte_end":441120,"line_start":184,"line_end":184,"column_start":1,"column_end":33}},{"value":"/ [`BufRead`]: trait.BufRead.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":441121,"byte_end":441156,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":441157,"byte_end":441160,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":441161,"byte_end":441208,"line_start":187,"line_end":187,"column_start":1,"column_end":48}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":441209,"byte_end":441300,"line_start":188,"line_end":188,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to read bytes that are not valid UTF-8 will return","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":441301,"byte_end":441392,"line_start":189,"line_end":189,"column_start":1,"column_end":92}},{"value":"/ an error.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":441393,"byte_end":441406,"line_start":190,"line_end":190,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2420},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":442039,"byte_end":442048,"line_start":208,"line_end":208,"column_start":12,"column_end":21},"name":"StdinLock","qualname":"::io::stdio::StdinLock","value":"StdinLock {  }","parent":null,"children":[{"krate":0,"index":2422}],"decl_id":null,"docs":" A locked reference to the `Stdin` handle.","sig":null,"attributes":[{"value":"/ A locked reference to the `Stdin` handle.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":441483,"byte_end":441528,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":441529,"byte_end":441532,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ This handle implements both the [`Read`] and [`BufRead`] traits, and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":441533,"byte_end":441605,"line_start":197,"line_end":197,"column_start":1,"column_end":73}},{"value":"/ is constructed via the [`Stdin::lock`] method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":441606,"byte_end":441656,"line_start":198,"line_end":198,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":441657,"byte_end":441660,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":441661,"byte_end":441690,"line_start":200,"line_end":200,"column_start":1,"column_end":30}},{"value":"/ [`BufRead`]: trait.BufRead.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":441691,"byte_end":441726,"line_start":201,"line_end":201,"column_start":1,"column_end":36}},{"value":"/ [`Stdin::lock`]: struct.Stdin.html#method.lock","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":441727,"byte_end":441777,"line_start":202,"line_end":202,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":441778,"byte_end":441781,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":441782,"byte_end":441829,"line_start":204,"line_end":204,"column_start":1,"column_end":48}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":441830,"byte_end":441921,"line_start":205,"line_end":205,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to read bytes that are not valid UTF-8 will return","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":441922,"byte_end":442013,"line_start":206,"line_end":206,"column_start":1,"column_end":92}},{"value":"/ an error.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":442014,"byte_end":442027,"line_start":207,"line_end":207,"column_start":1,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":2423},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":442706,"byte_end":442711,"line_start":225,"line_end":225,"column_start":8,"column_end":13},"name":"stdin","qualname":"::io::stdio::stdin","value":"pub fn stdin() -> Stdin","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard input of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard input of the current process.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":442116,"byte_end":442189,"line_start":212,"line_end":212,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":442190,"byte_end":442193,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ Each handle returned is a reference to a shared global buffer whose access","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":442194,"byte_end":442272,"line_start":214,"line_end":214,"column_start":1,"column_end":79}},{"value":"/ is synchronized via a mutex. If you need more explicit control over","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":442273,"byte_end":442344,"line_start":215,"line_end":215,"column_start":1,"column_end":72}},{"value":"/ locking, see the [`Stdin::lock`] method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":442345,"byte_end":442389,"line_start":216,"line_end":216,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":442390,"byte_end":442393,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ [`Stdin::lock`]: struct.Stdin.html#method.lock","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":442394,"byte_end":442444,"line_start":218,"line_end":218,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":442445,"byte_end":442448,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":442449,"byte_end":442496,"line_start":220,"line_end":220,"column_start":1,"column_end":48}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":442497,"byte_end":442588,"line_start":221,"line_end":221,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to read bytes that are not valid UTF-8 will return","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":442589,"byte_end":442680,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/ an error.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":442681,"byte_end":442694,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":442695,"byte_end":442698,"line_start":224,"line_end":224,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":2427},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":443694,"byte_end":443698,"line_start":253,"line_end":253,"column_start":12,"column_end":16},"name":"lock","qualname":"<Stdin>::lock","value":"pub fn lock(&Self) -> StdinLock","parent":null,"children":[],"decl_id":null,"docs":" Locks this handle to the standard input stream, returning a readable\n guard.","sig":null,"attributes":[{"value":"/ Locks this handle to the standard input stream, returning a readable","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":443304,"byte_end":443376,"line_start":243,"line_end":243,"column_start":5,"column_end":77}},{"value":"/ guard.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":443381,"byte_end":443391,"line_start":244,"line_end":244,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":443396,"byte_end":443399,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ The lock is released when the returned lock goes out of scope. The","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":443404,"byte_end":443474,"line_start":246,"line_end":246,"column_start":5,"column_end":75}},{"value":"/ returned guard also implements the [`Read`] and [`BufRead`] traits for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":443479,"byte_end":443553,"line_start":247,"line_end":247,"column_start":5,"column_end":79}},{"value":"/ accessing the underlying data.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":443558,"byte_end":443592,"line_start":248,"line_end":248,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":443597,"byte_end":443600,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":443605,"byte_end":443634,"line_start":250,"line_end":250,"column_start":5,"column_end":34}},{"value":"/ [`BufRead`]: trait.BufRead.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":443639,"byte_end":443674,"line_start":251,"line_end":251,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":443679,"byte_end":443682,"line_start":252,"line_end":252,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2429},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":444112,"byte_end":444121,"line_start":264,"line_end":264,"column_start":12,"column_end":21},"name":"read_line","qualname":"<Stdin>::read_line","value":"pub fn read_line(&Self, &mut String) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Locks this handle and reads a line of input, appending it to the specified buffer.","sig":null,"attributes":[{"value":"/ Locks this handle and reads a line of input, appending it to the specified buffer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":443818,"byte_end":443904,"line_start":257,"line_end":257,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":443909,"byte_end":443912,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ For detailed semantics of this method, see the documentation on","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":443917,"byte_end":443984,"line_start":259,"line_end":259,"column_start":5,"column_end":72}},{"value":"/ [`BufRead::read_line`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":443989,"byte_end":444016,"line_start":260,"line_end":260,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":444021,"byte_end":444024,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ [`BufRead::read_line`]: trait.BufRead.html#method.read_line","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":444029,"byte_end":444092,"line_start":262,"line_end":262,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":444097,"byte_end":444100,"line_start":263,"line_end":263,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2448},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":446395,"byte_end":446401,"line_start":342,"line_end":342,"column_start":12,"column_end":18},"name":"Stdout","qualname":"::io::stdio::Stdout","value":"Stdout {  }","parent":null,"children":[{"krate":0,"index":2449}],"decl_id":null,"docs":" A handle to the global standard output stream of the current process.","sig":null,"attributes":[{"value":"/ A handle to the global standard output stream of the current process.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":445732,"byte_end":445805,"line_start":327,"line_end":327,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":445806,"byte_end":445809,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ Each handle shares a global buffer of data to be written to the standard","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":445810,"byte_end":445886,"line_start":329,"line_end":329,"column_start":1,"column_end":77}},{"value":"/ output stream. Access is also synchronized via a lock and explicit control","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":445887,"byte_end":445965,"line_start":330,"line_end":330,"column_start":1,"column_end":79}},{"value":"/ over locking is available via the [`lock`] method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":445966,"byte_end":446020,"line_start":331,"line_end":331,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":446021,"byte_end":446024,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ Created by the [`io::stdout`] method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":446025,"byte_end":446066,"line_start":333,"line_end":333,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":446067,"byte_end":446070,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":446071,"byte_end":446118,"line_start":335,"line_end":335,"column_start":1,"column_end":48}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":446119,"byte_end":446210,"line_start":336,"line_end":336,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":446211,"byte_end":446303,"line_start":337,"line_end":337,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":446304,"byte_end":446317,"line_start":338,"line_end":338,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":446318,"byte_end":446321,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ [`lock`]: #method.lock","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":446322,"byte_end":446348,"line_start":340,"line_end":340,"column_start":1,"column_end":27}},{"value":"/ [`io::stdout`]: fn.stdout.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":446349,"byte_end":446383,"line_start":341,"line_end":341,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2450},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":447216,"byte_end":447226,"line_start":361,"line_end":361,"column_start":12,"column_end":22},"name":"StdoutLock","qualname":"::io::stdio::StdoutLock","value":"StdoutLock {  }","parent":null,"children":[{"krate":0,"index":2452}],"decl_id":null,"docs":" A locked reference to the `Stdout` handle.","sig":null,"attributes":[{"value":"/ A locked reference to the `Stdout` handle.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":446710,"byte_end":446756,"line_start":349,"line_end":349,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":446757,"byte_end":446760,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ This handle implements the [`Write`] trait, and is constructed via","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":446761,"byte_end":446831,"line_start":351,"line_end":351,"column_start":1,"column_end":71}},{"value":"/ the [`Stdout::lock`] method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":446832,"byte_end":446864,"line_start":352,"line_end":352,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":446865,"byte_end":446868,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":446869,"byte_end":446916,"line_start":354,"line_end":354,"column_start":1,"column_end":48}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":446917,"byte_end":447008,"line_start":355,"line_end":355,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":447009,"byte_end":447101,"line_start":356,"line_end":356,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":447102,"byte_end":447115,"line_start":357,"line_end":357,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":447116,"byte_end":447119,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: trait.Write.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":447120,"byte_end":447151,"line_start":359,"line_end":359,"column_start":1,"column_end":32}},{"value":"/ [`Stdout::lock`]: struct.Stdout.html#method.lock","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":447152,"byte_end":447204,"line_start":360,"line_end":360,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":2453},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":447909,"byte_end":447915,"line_start":378,"line_end":378,"column_start":8,"column_end":14},"name":"stdout","qualname":"::io::stdio::stdout","value":"pub fn stdout() -> Stdout","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard output of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard output of the current process.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":447314,"byte_end":447388,"line_start":365,"line_end":365,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":447389,"byte_end":447392,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ Each handle returned is a reference to a shared global buffer whose access","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":447393,"byte_end":447471,"line_start":367,"line_end":367,"column_start":1,"column_end":79}},{"value":"/ is synchronized via a mutex. If you need more explicit control over","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":447472,"byte_end":447543,"line_start":368,"line_end":368,"column_start":1,"column_end":72}},{"value":"/ locking, see the [`Stdout::lock`] method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":447544,"byte_end":447589,"line_start":369,"line_end":369,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":447590,"byte_end":447593,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ [`Stdout::lock`]: struct.Stdout.html#method.lock","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":447594,"byte_end":447646,"line_start":371,"line_end":371,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":447647,"byte_end":447650,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":447651,"byte_end":447698,"line_start":373,"line_end":373,"column_start":1,"column_end":48}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":447699,"byte_end":447790,"line_start":374,"line_end":374,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":447791,"byte_end":447883,"line_start":375,"line_end":375,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":447884,"byte_end":447897,"line_start":376,"line_end":376,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":447898,"byte_end":447901,"line_start":377,"line_end":377,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":2457},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":448815,"byte_end":448819,"line_start":401,"line_end":401,"column_start":12,"column_end":16},"name":"lock","qualname":"<Stdout>::lock","value":"pub fn lock(&Self) -> StdoutLock","parent":null,"children":[],"decl_id":null,"docs":" Locks this handle to the standard output stream, returning a writable\n guard.","sig":null,"attributes":[{"value":"/ Locks this handle to the standard output stream, returning a writable","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":448549,"byte_end":448622,"line_start":395,"line_end":395,"column_start":5,"column_end":78}},{"value":"/ guard.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":448627,"byte_end":448637,"line_start":396,"line_end":396,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":448642,"byte_end":448645,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ The lock is released when the returned lock goes out of scope. The","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":448650,"byte_end":448720,"line_start":398,"line_end":398,"column_start":5,"column_end":75}},{"value":"/ returned guard also implements the `Write` trait for writing data.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":448725,"byte_end":448795,"line_start":399,"line_end":399,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":448800,"byte_end":448803,"line_start":400,"line_end":400,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2473},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":450546,"byte_end":450552,"line_start":458,"line_end":458,"column_start":12,"column_end":18},"name":"Stderr","qualname":"::io::stdio::Stderr","value":"Stderr {  }","parent":null,"children":[{"krate":0,"index":2474}],"decl_id":null,"docs":" A handle to the standard error stream of a process.","sig":null,"attributes":[{"value":"/ A handle to the standard error stream of a process.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":450128,"byte_end":450183,"line_start":448,"line_end":448,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":450184,"byte_end":450187,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ For more information, see the [`io::stderr`] method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":450188,"byte_end":450244,"line_start":450,"line_end":450,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":450245,"byte_end":450248,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/ [`io::stderr`]: fn.stderr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":450249,"byte_end":450283,"line_start":452,"line_end":452,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":450284,"byte_end":450287,"line_start":453,"line_end":453,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":450288,"byte_end":450335,"line_start":454,"line_end":454,"column_start":1,"column_end":48}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":450336,"byte_end":450427,"line_start":455,"line_end":455,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":450428,"byte_end":450520,"line_start":456,"line_end":456,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":450521,"byte_end":450534,"line_start":457,"line_end":457,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2475},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":450840,"byte_end":450850,"line_start":468,"line_end":468,"column_start":12,"column_end":22},"name":"StderrLock","qualname":"::io::stdio::StderrLock","value":"StderrLock {  }","parent":null,"children":[{"krate":0,"index":2477}],"decl_id":null,"docs":" A locked reference to the `Stderr` handle.","sig":null,"attributes":[{"value":"/ A locked reference to the `Stderr` handle.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":450620,"byte_end":450666,"line_start":462,"line_end":462,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":450667,"byte_end":450670,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ This handle implements the `Write` trait and is constructed via","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":450671,"byte_end":450738,"line_start":464,"line_end":464,"column_start":1,"column_end":68}},{"value":"/ the [`Stderr::lock`] method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":450739,"byte_end":450771,"line_start":465,"line_end":465,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":450772,"byte_end":450775,"line_start":466,"line_end":466,"column_start":1,"column_end":4}},{"value":"/ [`Stderr::lock`]: struct.Stderr.html#method.lock","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":450776,"byte_end":450828,"line_start":467,"line_end":467,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":2478},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":451295,"byte_end":451301,"line_start":480,"line_end":480,"column_start":8,"column_end":14},"name":"stderr","qualname":"::io::stdio::stderr","value":"pub fn stderr() -> Stderr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard error of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard error of the current process.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":450926,"byte_end":450999,"line_start":472,"line_end":472,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":451000,"byte_end":451003,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ This handle is not buffered.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":451004,"byte_end":451036,"line_start":474,"line_end":474,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":451037,"byte_end":451040,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":451041,"byte_end":451088,"line_start":476,"line_end":476,"column_start":1,"column_end":48}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":451089,"byte_end":451180,"line_start":477,"line_end":477,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":451181,"byte_end":451273,"line_start":478,"line_end":478,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":451274,"byte_end":451287,"line_start":479,"line_end":479,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2482},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":452159,"byte_end":452163,"line_start":503,"line_end":503,"column_start":12,"column_end":16},"name":"lock","qualname":"<Stderr>::lock","value":"pub fn lock(&Self) -> StderrLock","parent":null,"children":[],"decl_id":null,"docs":" Locks this handle to the standard error stream, returning a writable\n guard.","sig":null,"attributes":[{"value":"/ Locks this handle to the standard error stream, returning a writable","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":451894,"byte_end":451966,"line_start":497,"line_end":497,"column_start":5,"column_end":77}},{"value":"/ guard.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":451971,"byte_end":451981,"line_start":498,"line_end":498,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":451986,"byte_end":451989,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ The lock is released when the returned lock goes out of scope. The","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":451994,"byte_end":452064,"line_start":500,"line_end":500,"column_start":5,"column_end":75}},{"value":"/ returned guard also implements the `Write` trait for writing data.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":452069,"byte_end":452139,"line_start":501,"line_end":501,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":452144,"byte_end":452147,"line_start":502,"line_end":502,"column_start":5,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2500},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":454256,"byte_end":454262,"line_start":573,"line_end":573,"column_start":8,"column_end":14},"name":"_print","qualname":"::io::stdio::_print","value":"pub fn _print(fmt::Arguments)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2501},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":454339,"byte_end":454346,"line_start":577,"line_end":577,"column_start":8,"column_end":15},"name":"_eprint","qualname":"::io::stdio::_eprint","value":"pub fn _eprint(fmt::Arguments)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2514},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":456154,"byte_end":456158,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"copy","qualname":"::io::util::copy","value":"pub fn copy<R: ?Sized, W: ?Sized>(&mut R, &mut W) -> io::Result<u64> where\nR: Read, W: Write","parent":null,"children":[],"decl_id":null,"docs":" Copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"/ Copies the entire contents of a reader into a writer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":455393,"byte_end":455450,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":455451,"byte_end":455454,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function will continuously read data from `reader` and then","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":455455,"byte_end":455523,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/ write it into `writer` in a streaming fashion until `reader`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":455524,"byte_end":455588,"line_start":27,"line_end":27,"column_start":1,"column_end":65}},{"value":"/ returns EOF.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":455589,"byte_end":455605,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":455606,"byte_end":455609,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ On success, the total number of bytes that were copied from","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":455610,"byte_end":455673,"line_start":30,"line_end":30,"column_start":1,"column_end":64}},{"value":"/ `reader` to `writer` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":455674,"byte_end":455711,"line_start":31,"line_end":31,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":455712,"byte_end":455715,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If you’re wanting to copy the contents of one file to another and you’re","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":455716,"byte_end":455796,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ working with filesystem paths, see the [`fs::copy`] function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":455797,"byte_end":455862,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":455863,"byte_end":455866,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`fs::copy`]: ../fs/fn.copy.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":455867,"byte_end":455903,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":455904,"byte_end":455907,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":455908,"byte_end":455920,"line_start":38,"line_end":38,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":455921,"byte_end":455924,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ This function will return an error immediately if any call to `read` or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":455925,"byte_end":456000,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ `write` returns an error. All instances of `ErrorKind::Interrupted` are","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":456001,"byte_end":456076,"line_start":41,"line_end":41,"column_start":1,"column_end":76}},{"value":"/ handled by this function and the underlying operation is retried.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":456077,"byte_end":456146,"line_start":42,"line_end":42,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":2518},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":457424,"byte_end":457429,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::util::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2519}],"decl_id":null,"docs":" A reader which is always at EOF.","sig":null,"attributes":[{"value":"/ A reader which is always at EOF.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":457205,"byte_end":457241,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":457242,"byte_end":457245,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling [`empty`]. Please see","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":457246,"byte_end":457315,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ the documentation of [`empty()`][`empty`] for more details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":457316,"byte_end":457379,"line_start":74,"line_end":74,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":457380,"byte_end":457383,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":457384,"byte_end":457412,"line_start":76,"line_end":76,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":2520},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":457631,"byte_end":457636,"line_start":87,"line_end":87,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::util::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to an empty reader.","sig":null,"attributes":[{"value":"/ Constructs a new handle to an empty reader.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":457450,"byte_end":457497,"line_start":81,"line_end":81,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":457498,"byte_end":457501,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ All reads from the returned reader will return [`Ok`]`(0)`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":457502,"byte_end":457565,"line_start":83,"line_end":83,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":457566,"byte_end":457569,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ [`Ok`]: ../result/enum.Result.html#variant.Ok","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":457570,"byte_end":457619,"line_start":85,"line_end":85,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":457620,"byte_end":457623,"line_start":86,"line_end":86,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":2529},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":458455,"byte_end":458461,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::util::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2530}],"decl_id":null,"docs":" A reader which yields one byte over and over and over and over and over and...","sig":null,"attributes":[{"value":"/ A reader which yields one byte over and over and over and over and over and...","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":458191,"byte_end":458273,"line_start":116,"line_end":116,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":458274,"byte_end":458277,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling [`repeat`][repeat]. Please","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":458278,"byte_end":458352,"line_start":118,"line_end":118,"column_start":1,"column_end":75}},{"value":"/ see the documentation of `repeat()` for more details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":458353,"byte_end":458410,"line_start":119,"line_end":119,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":458411,"byte_end":458414,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [repeat]: fn.repeat.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":458415,"byte_end":458443,"line_start":121,"line_end":121,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":2531},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":458663,"byte_end":458669,"line_start":130,"line_end":130,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::util::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":458481,"byte_end":458550,"line_start":126,"line_end":126,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":458551,"byte_end":458554,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":458555,"byte_end":458635,"line_start":128,"line_end":128,"column_start":1,"column_end":81}},{"value":"/ the given byte.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":458636,"byte_end":458655,"line_start":129,"line_end":129,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2538},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":459601,"byte_end":459605,"line_start":170,"line_end":170,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::util::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":2539}],"decl_id":null,"docs":" A writer which will move data into the void.","sig":null,"attributes":[{"value":"/ A writer which will move data into the void.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":459381,"byte_end":459429,"line_start":164,"line_end":164,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":459430,"byte_end":459433,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling [`sink`][sink]. Please","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":459434,"byte_end":459504,"line_start":166,"line_end":166,"column_start":1,"column_end":71}},{"value":"/ see the documentation of `sink()` for more details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":459505,"byte_end":459560,"line_start":167,"line_end":167,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":459561,"byte_end":459564,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [sink]: fn.sink.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":459565,"byte_end":459589,"line_start":169,"line_end":169,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2540},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":459851,"byte_end":459855,"line_start":178,"line_end":178,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::util::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a writer which will successfully consume all data.","sig":null,"attributes":[{"value":"/ Creates an instance of a writer which will successfully consume all data.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":459626,"byte_end":459703,"line_start":174,"line_end":174,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":459704,"byte_end":459707,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ All calls to `write` on the returned instance will return `Ok(buf.len())`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":459708,"byte_end":459785,"line_start":176,"line_end":176,"column_start":1,"column_end":78}},{"value":"/ and the contents of the buffer will not be inspected.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":459786,"byte_end":459843,"line_start":177,"line_end":177,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":2572},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":332380,"byte_end":332384,"line_start":199,"line_end":199,"column_start":11,"column_end":15},"name":"Read","qualname":"::io::Read","value":"Read","parent":null,"children":[{"krate":0,"index":2573},{"krate":0,"index":2574},{"krate":0,"index":2576},{"krate":0,"index":2577},{"krate":0,"index":2578},{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2585}],"decl_id":null,"docs":" The `Read` trait allows for reading bytes from a source.","sig":null,"attributes":[{"value":"/ The `Read` trait allows for reading bytes from a source.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":331543,"byte_end":331603,"line_start":181,"line_end":181,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":331604,"byte_end":331607,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ Implementors of the `Read` trait are called 'readers'.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":331608,"byte_end":331666,"line_start":183,"line_end":183,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":331667,"byte_end":331670,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ Readers are defined by one required method, [`read()`]. Each call to [`read()`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":331671,"byte_end":331754,"line_start":185,"line_end":185,"column_start":1,"column_end":84}},{"value":"/ will attempt to pull bytes from this source into a provided buffer. A","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":331755,"byte_end":331828,"line_start":186,"line_end":186,"column_start":1,"column_end":74}},{"value":"/ number of other methods are implemented in terms of [`read()`], giving","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":331829,"byte_end":331903,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"/ implementors a number of ways to read bytes while only needing to implement","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":331904,"byte_end":331983,"line_start":188,"line_end":188,"column_start":1,"column_end":80}},{"value":"/ a single method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":331984,"byte_end":332004,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":332005,"byte_end":332008,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ Readers are intended to be composable with one another. Many implementors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":332009,"byte_end":332086,"line_start":191,"line_end":191,"column_start":1,"column_end":78}},{"value":"/ throughout [`std::io`] take and provide types which implement the `Read`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":332087,"byte_end":332163,"line_start":192,"line_end":192,"column_start":1,"column_end":77}},{"value":"/ trait.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":332164,"byte_end":332174,"line_start":193,"line_end":193,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":332175,"byte_end":332178,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ Please note that each call to [`read()`] may involve a system call, and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":332179,"byte_end":332254,"line_start":195,"line_end":195,"column_start":1,"column_end":76}},{"value":"/ therefore, using something that implements [`BufRead`], such as","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":332255,"byte_end":332322,"line_start":196,"line_end":196,"column_start":1,"column_end":68}},{"value":"/ [`BufReader`], will be more efficient.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":332323,"byte_end":332365,"line_start":197,"line_end":197,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":332366,"byte_end":332369,"line_start":198,"line_end":198,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":2573},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":334639,"byte_end":334643,"line_start":240,"line_end":240,"column_start":8,"column_end":12},"name":"read","qualname":"::io::Read::read","value":"pub fn read(&mut Self, &mut [u8]) -> Result<usize>","parent":{"krate":0,"index":2572},"children":[],"decl_id":null,"docs":" Pull some bytes from this source into the specified buffer, returning\n how many bytes were read.","sig":null,"attributes":[{"value":"/ Pull some bytes from this source into the specified buffer, returning","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":332391,"byte_end":332464,"line_start":200,"line_end":200,"column_start":5,"column_end":78}},{"value":"/ how many bytes were read.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":332469,"byte_end":332498,"line_start":201,"line_end":201,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":332503,"byte_end":332506,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This function does not provide any guarantees about whether it blocks","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":332511,"byte_end":332584,"line_start":203,"line_end":203,"column_start":5,"column_end":78}},{"value":"/ waiting for data, but if an object needs to block for a read and cannot,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":332589,"byte_end":332665,"line_start":204,"line_end":204,"column_start":5,"column_end":81}},{"value":"/ it will typically signal this via an [`Err`] return value.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":332670,"byte_end":332732,"line_start":205,"line_end":205,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":332737,"byte_end":332740,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ If the return value of this method is [`Ok(n)`], then it must be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":332745,"byte_end":332813,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/ guaranteed that `0 <= n <= buf.len()`. A nonzero `n` value indicates","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":332818,"byte_end":332890,"line_start":208,"line_end":208,"column_start":5,"column_end":77}},{"value":"/ that the buffer `buf` has been filled in with `n` bytes of data from this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":332895,"byte_end":332972,"line_start":209,"line_end":209,"column_start":5,"column_end":82}},{"value":"/ source. If `n` is `0`, then it can indicate one of two scenarios:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":332977,"byte_end":333046,"line_start":210,"line_end":210,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":333051,"byte_end":333054,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ 1. This reader has reached its \"end of file\" and will likely no longer","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":333059,"byte_end":333133,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/    be able to produce bytes. Note that this does not mean that the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":333138,"byte_end":333208,"line_start":213,"line_end":213,"column_start":5,"column_end":75}},{"value":"/    reader will *always* no longer be able to produce bytes.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":333213,"byte_end":333276,"line_start":214,"line_end":214,"column_start":5,"column_end":68}},{"value":"/ 2. The buffer specified was 0 bytes in length.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":333281,"byte_end":333331,"line_start":215,"line_end":215,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":333336,"byte_end":333339,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ No guarantees are provided about the contents of `buf` when this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":333344,"byte_end":333412,"line_start":217,"line_end":217,"column_start":5,"column_end":73}},{"value":"/ function is called, implementations cannot rely on any property of the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":333417,"byte_end":333491,"line_start":218,"line_end":218,"column_start":5,"column_end":79}},{"value":"/ contents of `buf` being true. It is recommended that *implementations*","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":333496,"byte_end":333570,"line_start":219,"line_end":219,"column_start":5,"column_end":79}},{"value":"/ only write data to `buf` instead of reading its contents.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":333575,"byte_end":333636,"line_start":220,"line_end":220,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":333641,"byte_end":333644,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Correspondingly, however, *callers* of this method may not assume any guarantees","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":333649,"byte_end":333733,"line_start":222,"line_end":222,"column_start":5,"column_end":89}},{"value":"/ about how the implementation uses `buf`. The trait is safe to implement,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":333738,"byte_end":333814,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ so it is possible that the code that's supposed to write to the buffer might also read","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":333819,"byte_end":333909,"line_start":224,"line_end":224,"column_start":5,"column_end":95}},{"value":"/ from it. It is your responsibility to make sure that `buf` is initialized","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":333914,"byte_end":333991,"line_start":225,"line_end":225,"column_start":5,"column_end":82}},{"value":"/ before calling `read`. Calling `read` with an uninitialized `buf` (of the kind one","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":333996,"byte_end":334082,"line_start":226,"line_end":226,"column_start":5,"column_end":91}},{"value":"/ obtains via [`MaybeUninit<T>`]) is not safe, and can lead to undefined behavior.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":334087,"byte_end":334171,"line_start":227,"line_end":227,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":334176,"byte_end":334179,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ [`MaybeUninit<T>`]: ../mem/union.MaybeUninit.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":334184,"byte_end":334237,"line_start":229,"line_end":229,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":334242,"byte_end":334245,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":334250,"byte_end":334262,"line_start":231,"line_end":231,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":334267,"byte_end":334270,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ If this function encounters any form of I/O or other error, an error","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":334275,"byte_end":334347,"line_start":233,"line_end":233,"column_start":5,"column_end":77}},{"value":"/ variant will be returned. If an error is returned then it must be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":334352,"byte_end":334421,"line_start":234,"line_end":234,"column_start":5,"column_end":74}},{"value":"/ guaranteed that no bytes were read.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":334426,"byte_end":334465,"line_start":235,"line_end":235,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":334470,"byte_end":334473,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ An error of the [`ErrorKind::Interrupted`] kind is non-fatal and the read","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":334478,"byte_end":334555,"line_start":237,"line_end":237,"column_start":5,"column_end":82}},{"value":"/ operation should be retried if there is nothing else to do.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":334560,"byte_end":334623,"line_start":238,"line_end":238,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":334628,"byte_end":334631,"line_start":239,"line_end":239,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2574},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":335144,"byte_end":335157,"line_start":250,"line_end":250,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"::io::Read::read_vectored","value":"pub fn read_vectored(&mut Self, &mut [IoSliceMut]) -> Result<usize>","parent":{"krate":0,"index":2572},"children":[],"decl_id":null,"docs":" Like `read`, except that it reads into a slice of buffers.","sig":null,"attributes":[{"value":"/ Like `read`, except that it reads into a slice of buffers.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":334694,"byte_end":334756,"line_start":242,"line_end":242,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":334761,"byte_end":334764,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Data is copied to fill each buffer in order, with the final buffer","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":334769,"byte_end":334839,"line_start":244,"line_end":244,"column_start":5,"column_end":75}},{"value":"/ written to possibly being only partially filled. This method must behave","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":334844,"byte_end":334920,"line_start":245,"line_end":245,"column_start":5,"column_end":81}},{"value":"/ as a single call to `read` with the buffers concatenated would.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":334925,"byte_end":334992,"line_start":246,"line_end":246,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":334997,"byte_end":335000,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The default implementation calls `read` with either the first nonempty","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":335005,"byte_end":335079,"line_start":248,"line_end":248,"column_start":5,"column_end":79}},{"value":"/ buffer provided, or an empty one if none exists.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":335084,"byte_end":335136,"line_start":249,"line_end":249,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2576},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":336238,"byte_end":336249,"line_start":277,"line_end":277,"column_start":15,"column_end":26},"name":"initializer","qualname":"::io::Read::initializer","value":"pub unsafe fn initializer(&Self) -> Initializer","parent":{"krate":0,"index":2572},"children":[],"decl_id":null,"docs":" Determines if this `Read`er can work with buffers of uninitialized\n memory.","sig":null,"attributes":[{"value":"/ Determines if this `Read`er can work with buffers of uninitialized","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":335282,"byte_end":335352,"line_start":254,"line_end":254,"column_start":5,"column_end":75}},{"value":"/ memory.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":335357,"byte_end":335368,"line_start":255,"line_end":255,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":335373,"byte_end":335376,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ The default implementation returns an initializer which will zero","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":335381,"byte_end":335450,"line_start":257,"line_end":257,"column_start":5,"column_end":74}},{"value":"/ buffers.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":335455,"byte_end":335467,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":335472,"byte_end":335475,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ If a `Read`er guarantees that it can work properly with uninitialized","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":335480,"byte_end":335553,"line_start":260,"line_end":260,"column_start":5,"column_end":78}},{"value":"/ memory, it should call [`Initializer::nop()`]. See the documentation for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":335558,"byte_end":335634,"line_start":261,"line_end":261,"column_start":5,"column_end":81}},{"value":"/ [`Initializer`] for details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":335639,"byte_end":335671,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":335676,"byte_end":335679,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The behavior of this method must be independent of the state of the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":335684,"byte_end":335755,"line_start":264,"line_end":264,"column_start":5,"column_end":76}},{"value":"/ `Read`er - the method only takes `&self` so that it can be used through","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":335760,"byte_end":335835,"line_start":265,"line_end":265,"column_start":5,"column_end":80}},{"value":"/ trait objects.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":335840,"byte_end":335858,"line_start":266,"line_end":266,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":335863,"byte_end":335866,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":335871,"byte_end":335883,"line_start":268,"line_end":268,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":335888,"byte_end":335891,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because a `Read`er could otherwise return a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":335896,"byte_end":335965,"line_start":270,"line_end":270,"column_start":5,"column_end":74}},{"value":"/ non-zeroing `Initializer` from another `Read` type without an `unsafe`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":335970,"byte_end":336044,"line_start":271,"line_end":271,"column_start":5,"column_end":79}},{"value":"/ block.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":336049,"byte_end":336059,"line_start":272,"line_end":272,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":336064,"byte_end":336067,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ [`Initializer::nop()`]: ../../std/io/struct.Initializer.html#method.nop","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":336072,"byte_end":336147,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ [`Initializer`]: ../../std/io/struct.Initializer.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":336152,"byte_end":336209,"line_start":275,"line_end":275,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":336214,"byte_end":336223,"line_start":276,"line_end":276,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2577},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":337150,"byte_end":337161,"line_start":300,"line_end":300,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::Read::read_to_end","value":"pub fn read_to_end(&mut Self, &mut Vec<u8>) -> Result<usize>","parent":{"krate":0,"index":2572},"children":[],"decl_id":null,"docs":" Read all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[{"value":"/ Read all bytes until EOF in this source, placing them into `buf`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":336316,"byte_end":336385,"line_start":281,"line_end":281,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":336390,"byte_end":336393,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ All bytes read from this source will be appended to the specified buffer","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":336398,"byte_end":336474,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ `buf`. This function will continuously call [`read()`] to append more data to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":336479,"byte_end":336560,"line_start":284,"line_end":284,"column_start":5,"column_end":86}},{"value":"/ `buf` until [`read()`] returns either [`Ok(0)`] or an error of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":336565,"byte_end":336631,"line_start":285,"line_end":285,"column_start":5,"column_end":71}},{"value":"/ non-[`ErrorKind::Interrupted`] kind.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":336636,"byte_end":336676,"line_start":286,"line_end":286,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":336681,"byte_end":336684,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ If successful, this function will return the total number of bytes read.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":336689,"byte_end":336765,"line_start":288,"line_end":288,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":336770,"byte_end":336773,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":336778,"byte_end":336790,"line_start":290,"line_end":290,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":336795,"byte_end":336798,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ If this function encounters an error of the kind","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":336803,"byte_end":336855,"line_start":292,"line_end":292,"column_start":5,"column_end":57}},{"value":"/ [`ErrorKind::Interrupted`] then the error is ignored and the operation","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":336860,"byte_end":336934,"line_start":293,"line_end":293,"column_start":5,"column_end":79}},{"value":"/ will continue.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":336939,"byte_end":336957,"line_start":294,"line_end":294,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":336962,"byte_end":336965,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ If any other read error is encountered then this function immediately","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":336970,"byte_end":337043,"line_start":296,"line_end":296,"column_start":5,"column_end":78}},{"value":"/ returns. Any bytes which have already been read will be appended to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":337048,"byte_end":337119,"line_start":297,"line_end":297,"column_start":5,"column_end":76}},{"value":"/ `buf`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":337124,"byte_end":337134,"line_start":298,"line_end":298,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":337139,"byte_end":337142,"line_start":299,"line_end":299,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2578},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":337728,"byte_end":337742,"line_start":318,"line_end":318,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::io::Read::read_to_string","value":"pub fn read_to_string(&mut Self, &mut String) -> Result<usize>","parent":{"krate":0,"index":2572},"children":[],"decl_id":null,"docs":" Read all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[{"value":"/ Read all bytes until EOF in this source, appending them to `buf`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":337253,"byte_end":337322,"line_start":304,"line_end":304,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":337327,"byte_end":337330,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ If successful, this function returns the number of bytes which were read","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":337335,"byte_end":337411,"line_start":306,"line_end":306,"column_start":5,"column_end":81}},{"value":"/ and appended to `buf`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":337416,"byte_end":337442,"line_start":307,"line_end":307,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":337447,"byte_end":337450,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":337455,"byte_end":337467,"line_start":309,"line_end":309,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":337472,"byte_end":337475,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ If the data in this stream is *not* valid UTF-8 then an error is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":337480,"byte_end":337548,"line_start":311,"line_end":311,"column_start":5,"column_end":73}},{"value":"/ returned and `buf` is unchanged.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":337553,"byte_end":337589,"line_start":312,"line_end":312,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":337594,"byte_end":337597,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ See [`read_to_end`][readtoend] for other error semantics.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":337602,"byte_end":337663,"line_start":314,"line_end":314,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":337668,"byte_end":337671,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ [readtoend]: #method.read_to_end","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":337676,"byte_end":337712,"line_start":316,"line_end":316,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":337717,"byte_end":337720,"line_start":317,"line_end":317,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2580},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":339712,"byte_end":339722,"line_start":358,"line_end":358,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::Read::read_exact","value":"pub fn read_exact(&mut Self, &mut [u8]) -> Result<()>","parent":{"krate":0,"index":2572},"children":[],"decl_id":null,"docs":" Read the exact number of bytes required to fill `buf`.","sig":null,"attributes":[{"value":"/ Read the exact number of bytes required to fill `buf`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":338445,"byte_end":338503,"line_start":331,"line_end":331,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":338508,"byte_end":338511,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ This function reads as many bytes as necessary to completely fill the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":338516,"byte_end":338589,"line_start":333,"line_end":333,"column_start":5,"column_end":78}},{"value":"/ specified buffer `buf`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":338594,"byte_end":338621,"line_start":334,"line_end":334,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":338626,"byte_end":338629,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ No guarantees are provided about the contents of `buf` when this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":338634,"byte_end":338702,"line_start":336,"line_end":336,"column_start":5,"column_end":73}},{"value":"/ function is called, implementations cannot rely on any property of the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":338707,"byte_end":338781,"line_start":337,"line_end":337,"column_start":5,"column_end":79}},{"value":"/ contents of `buf` being true. It is recommended that implementations","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":338786,"byte_end":338858,"line_start":338,"line_end":338,"column_start":5,"column_end":77}},{"value":"/ only write data to `buf` instead of reading its contents.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":338863,"byte_end":338924,"line_start":339,"line_end":339,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":338929,"byte_end":338932,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":338937,"byte_end":338949,"line_start":341,"line_end":341,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":338954,"byte_end":338957,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ If this function encounters an error of the kind","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":338962,"byte_end":339014,"line_start":343,"line_end":343,"column_start":5,"column_end":57}},{"value":"/ [`ErrorKind::Interrupted`] then the error is ignored and the operation","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":339019,"byte_end":339093,"line_start":344,"line_end":344,"column_start":5,"column_end":79}},{"value":"/ will continue.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":339098,"byte_end":339116,"line_start":345,"line_end":345,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":339121,"byte_end":339124,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ If this function encounters an \"end of file\" before completely filling","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":339129,"byte_end":339203,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/ the buffer, it returns an error of the kind [`ErrorKind::UnexpectedEof`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":339208,"byte_end":339285,"line_start":348,"line_end":348,"column_start":5,"column_end":82}},{"value":"/ The contents of `buf` are unspecified in this case.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":339290,"byte_end":339345,"line_start":349,"line_end":349,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":339350,"byte_end":339353,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ If any other read error is encountered then this function immediately","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":339358,"byte_end":339431,"line_start":351,"line_end":351,"column_start":5,"column_end":78}},{"value":"/ returns. The contents of `buf` are unspecified in this case.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":339436,"byte_end":339500,"line_start":352,"line_end":352,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":339505,"byte_end":339508,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ If this function returns an error, it is unspecified how many bytes it","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":339513,"byte_end":339587,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/ has read, but it will never read more than would be necessary to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":339592,"byte_end":339660,"line_start":355,"line_end":355,"column_start":5,"column_end":73}},{"value":"/ completely fill the buffer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":339665,"byte_end":339696,"line_start":356,"line_end":356,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":339701,"byte_end":339704,"line_start":357,"line_end":357,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2581},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":340490,"byte_end":340496,"line_start":382,"line_end":382,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::io::Read::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self where Self: Sized","parent":{"krate":0,"index":2572},"children":[],"decl_id":null,"docs":" Creates a \"by reference\" adaptor for this instance of `Read`.","sig":null,"attributes":[{"value":"/ Creates a \"by reference\" adaptor for this instance of `Read`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":340297,"byte_end":340362,"line_start":377,"line_end":377,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":340367,"byte_end":340370,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ The returned adaptor also implements `Read` and will simply borrow this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":340375,"byte_end":340450,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/ current reader.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":340455,"byte_end":340474,"line_start":380,"line_end":380,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":340479,"byte_end":340482,"line_start":381,"line_end":381,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2582},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":340949,"byte_end":340954,"line_start":396,"line_end":396,"column_start":8,"column_end":13},"name":"bytes","qualname":"::io::Read::bytes","value":"pub fn bytes(Self) -> Bytes<Self> where Self: Sized","parent":{"krate":0,"index":2572},"children":[],"decl_id":null,"docs":" Transforms this `Read` instance to an [`Iterator`] over its bytes.","sig":null,"attributes":[{"value":"/ Transforms this `Read` instance to an [`Iterator`] over its bytes.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":340582,"byte_end":340652,"line_start":389,"line_end":389,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":340657,"byte_end":340660,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The returned type implements [`Iterator`] where the `Item` is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":340665,"byte_end":340730,"line_start":391,"line_end":391,"column_start":5,"column_end":70}},{"value":"/ [`Result`]`<`[`u8`]`, `[`io::Error`]`>`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":340735,"byte_end":340779,"line_start":392,"line_end":392,"column_start":5,"column_end":49}},{"value":"/ The yielded item is [`Ok`] if a byte was successfully read and [`Err`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":340784,"byte_end":340858,"line_start":393,"line_end":393,"column_start":5,"column_end":79}},{"value":"/ otherwise. EOF is mapped to returning [`None`] from this iterator.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":340863,"byte_end":340933,"line_start":394,"line_end":394,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":340938,"byte_end":340941,"line_start":395,"line_end":395,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2583},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":341326,"byte_end":341331,"line_start":409,"line_end":409,"column_start":8,"column_end":13},"name":"chain","qualname":"::io::Read::chain","value":"pub fn chain<R: Read>(Self, R) -> Chain<Self, R> where Self: Sized","parent":{"krate":0,"index":2572},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this stream with another.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":341054,"byte_end":341119,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":341124,"byte_end":341127,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ The returned `Read` instance will first read all bytes from this object","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":341132,"byte_end":341207,"line_start":405,"line_end":405,"column_start":5,"column_end":80}},{"value":"/ until EOF is encountered. Afterwards the output is equivalent to the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":341212,"byte_end":341284,"line_start":406,"line_end":406,"column_start":5,"column_end":77}},{"value":"/ output of `next`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":341289,"byte_end":341310,"line_start":407,"line_end":407,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":341315,"byte_end":341318,"line_start":408,"line_end":408,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2585},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":341855,"byte_end":341859,"line_start":423,"line_end":423,"column_start":8,"column_end":12},"name":"take","qualname":"::io::Read::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2572},"children":[],"decl_id":null,"docs":" Creates an adaptor which will read at most `limit` bytes from it.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will read at most `limit` bytes from it.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":341485,"byte_end":341554,"line_start":416,"line_end":416,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":341559,"byte_end":341562,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ This function returns a new instance of `Read` which will read at most","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":341567,"byte_end":341641,"line_start":418,"line_end":418,"column_start":5,"column_end":79}},{"value":"/ `limit` bytes, after which it will always return EOF ([`Ok(0)`]). Any","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":341646,"byte_end":341719,"line_start":419,"line_end":419,"column_start":5,"column_end":78}},{"value":"/ read errors will not count towards the number of bytes read and future","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":341724,"byte_end":341798,"line_start":420,"line_end":420,"column_start":5,"column_end":79}},{"value":"/ calls to [`read()`] may succeed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":341803,"byte_end":341839,"line_start":421,"line_end":421,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":341844,"byte_end":341847,"line_start":422,"line_end":422,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2586},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342229,"byte_end":342239,"line_start":437,"line_end":437,"column_start":12,"column_end":22},"name":"IoSliceMut","qualname":"::io::IoSliceMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" A buffer type used with `Read::read_vectored`.","sig":null,"attributes":[{"value":"/ A buffer type used with `Read::read_vectored`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":341974,"byte_end":342024,"line_start":431,"line_end":431,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342025,"byte_end":342028,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ It is semantically a wrapper around an `&mut [u8]`, but is guaranteed to be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342029,"byte_end":342108,"line_start":433,"line_end":433,"column_start":1,"column_end":80}},{"value":"/ ABI compatible with the `iovec` type on Unix platforms and `WSABUF` on","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342109,"byte_end":342183,"line_start":434,"line_end":434,"column_start":1,"column_end":75}},{"value":"/ Windows.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342184,"byte_end":342196,"line_start":435,"line_end":435,"column_start":1,"column_end":13}},{"value":"repr(transparent)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342197,"byte_end":342217,"line_start":436,"line_end":436,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2599},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342723,"byte_end":342726,"line_start":456,"line_end":456,"column_start":12,"column_end":15},"name":"new","qualname":"<IoSliceMut>::new","value":"pub fn new(&'a mut [u8]) -> IoSliceMut","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `IoSliceMut` wrapping a byte slice.","sig":null,"attributes":[{"value":"/ Creates a new `IoSliceMut` wrapping a byte slice.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342552,"byte_end":342605,"line_start":450,"line_end":450,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342610,"byte_end":342613,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342618,"byte_end":342630,"line_start":452,"line_end":452,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342635,"byte_end":342638,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Panics on Windows if the slice is larger than 4GB.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342643,"byte_end":342697,"line_start":454,"line_end":454,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342702,"byte_end":342711,"line_start":455,"line_end":455,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2600},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":343306,"byte_end":343313,"line_start":471,"line_end":471,"column_start":12,"column_end":19},"name":"advance","qualname":"<IoSliceMut>::advance","value":"pub fn advance<'b>(&'b mut [IoSliceMut], usize) -> &'b mut [IoSliceMut]","parent":null,"children":[],"decl_id":null,"docs":" Advance the internal cursor of the slice.","sig":null,"attributes":[{"value":"/ Advance the internal cursor of the slice.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342827,"byte_end":342872,"line_start":460,"line_end":460,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342877,"byte_end":342880,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342885,"byte_end":342896,"line_start":462,"line_end":462,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342901,"byte_end":342904,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ Elements in the slice may be modified if the cursor is not advanced to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342909,"byte_end":342983,"line_start":464,"line_end":464,"column_start":5,"column_end":79}},{"value":"/ the end of the slice. For example if we have a slice of buffers with 2","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342988,"byte_end":343062,"line_start":465,"line_end":465,"column_start":5,"column_end":79}},{"value":"/ `IoSliceMut`s, both of length 8, and we advance the cursor by 10 bytes","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":343067,"byte_end":343141,"line_start":466,"line_end":466,"column_start":5,"column_end":79}},{"value":"/ the first `IoSliceMut` will be untouched however the second will be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":343146,"byte_end":343217,"line_start":467,"line_end":467,"column_start":5,"column_end":76}},{"value":"/ modified to remove the first 2 bytes (10 - 8).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":343222,"byte_end":343272,"line_start":468,"line_end":468,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":343277,"byte_end":343280,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":343285,"byte_end":343294,"line_start":470,"line_end":470,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7349},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":344484,"byte_end":344491,"line_start":516,"line_end":516,"column_start":12,"column_end":19},"name":"IoSlice","qualname":"::io::IoSlice","value":"","parent":null,"children":[],"decl_id":null,"docs":" A buffer type used with `Write::write_vectored`.","sig":null,"attributes":[{"value":"/ A buffer type used with `Write::write_vectored`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":344208,"byte_end":344260,"line_start":509,"line_end":509,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":344261,"byte_end":344264,"line_start":510,"line_end":510,"column_start":1,"column_end":4}},{"value":"/ It is semantically a wrapper around an `&[u8]`, but is guaranteed to be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":344265,"byte_end":344340,"line_start":511,"line_end":511,"column_start":1,"column_end":76}},{"value":"/ ABI compatible with the `iovec` type on Unix platforms and `WSABUF` on","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":344341,"byte_end":344415,"line_start":512,"line_end":512,"column_start":1,"column_end":75}},{"value":"/ Windows.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":344416,"byte_end":344428,"line_start":513,"line_end":513,"column_start":1,"column_end":13}},{"value":"repr(transparent)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":344452,"byte_end":344472,"line_start":515,"line_end":515,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2618},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":344957,"byte_end":344960,"line_start":535,"line_end":535,"column_start":12,"column_end":15},"name":"new","qualname":"<IoSlice>::new","value":"pub fn new(&'a [u8]) -> IoSlice","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `IoSlice` wrapping a byte slice.","sig":null,"attributes":[{"value":"/ Creates a new `IoSlice` wrapping a byte slice.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":344789,"byte_end":344839,"line_start":529,"line_end":529,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":344844,"byte_end":344847,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":344852,"byte_end":344864,"line_start":531,"line_end":531,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":344869,"byte_end":344872,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ Panics on Windows if the slice is larger than 4GB.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":344877,"byte_end":344931,"line_start":533,"line_end":533,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":344936,"byte_end":344945,"line_start":534,"line_end":534,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2619},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":345521,"byte_end":345528,"line_start":550,"line_end":550,"column_start":12,"column_end":19},"name":"advance","qualname":"<IoSlice>::advance","value":"pub fn advance<'b>(&'b mut [IoSlice], usize) -> &'b mut [IoSlice]","parent":null,"children":[],"decl_id":null,"docs":" Advance the internal cursor of the slice.","sig":null,"attributes":[{"value":"/ Advance the internal cursor of the slice.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":345048,"byte_end":345093,"line_start":539,"line_end":539,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":345098,"byte_end":345101,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":345106,"byte_end":345117,"line_start":541,"line_end":541,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":345122,"byte_end":345125,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ Elements in the slice may be modified if the cursor is not advanced to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":345130,"byte_end":345204,"line_start":543,"line_end":543,"column_start":5,"column_end":79}},{"value":"/ the end of the slice. For example if we have a slice of buffers with 2","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":345209,"byte_end":345283,"line_start":544,"line_end":544,"column_start":5,"column_end":79}},{"value":"/ `IoSlice`s, both of length 8, and we advance the cursor by 10 bytes the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":345288,"byte_end":345363,"line_start":545,"line_end":545,"column_start":5,"column_end":80}},{"value":"/ first `IoSlice` will be untouched however the second will be modified to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":345368,"byte_end":345444,"line_start":546,"line_end":546,"column_start":5,"column_end":81}},{"value":"/ remove the first 2 bytes (10 - 8).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":345449,"byte_end":345487,"line_start":547,"line_end":547,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":345492,"byte_end":345495,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":345500,"byte_end":345509,"line_start":549,"line_end":549,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7358},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":346385,"byte_end":346396,"line_start":583,"line_end":583,"column_start":12,"column_end":23},"name":"Initializer","qualname":"::io::Initializer","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type used to conditionally initialize buffers passed to `Read` methods.\n","sig":null,"attributes":[{"value":"/ A type used to conditionally initialize buffers passed to `Read` methods.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":346279,"byte_end":346356,"line_start":581,"line_end":581,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2626},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":346514,"byte_end":346521,"line_start":588,"line_end":588,"column_start":12,"column_end":19},"name":"zeroing","qualname":"<Initializer>::zeroing","value":"pub fn zeroing() -> Initializer","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Initializer` which will zero out buffers.\n","sig":null,"attributes":[{"value":"/ Returns a new `Initializer` which will zero out buffers.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":346428,"byte_end":346488,"line_start":586,"line_end":586,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":346493,"byte_end":346502,"line_start":587,"line_end":587,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2627},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":346986,"byte_end":346989,"line_start":601,"line_end":601,"column_start":19,"column_end":22},"name":"nop","qualname":"<Initializer>::nop","value":"pub unsafe fn nop() -> Initializer","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Initializer` which will not zero out buffers.","sig":null,"attributes":[{"value":"/ Returns a new `Initializer` which will not zero out buffers.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":346578,"byte_end":346642,"line_start":592,"line_end":592,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":346647,"byte_end":346650,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":346655,"byte_end":346667,"line_start":594,"line_end":594,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":346672,"byte_end":346675,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ This may only be called by `Read`ers which guarantee that they will not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":346680,"byte_end":346755,"line_start":596,"line_end":596,"column_start":5,"column_end":80}},{"value":"/ read from buffers passed to `Read` methods, and that the return value of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":346760,"byte_end":346836,"line_start":597,"line_end":597,"column_start":5,"column_end":81}},{"value":"/ the method accurately reflects the number of bytes that have been","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":346841,"byte_end":346910,"line_start":598,"line_end":598,"column_start":5,"column_end":74}},{"value":"/ written to the head of the buffer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":346915,"byte_end":346953,"line_start":599,"line_end":599,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":346958,"byte_end":346967,"line_start":600,"line_end":600,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2628},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":347121,"byte_end":347138,"line_start":607,"line_end":607,"column_start":12,"column_end":29},"name":"should_initialize","qualname":"<Initializer>::should_initialize","value":"pub fn should_initialize(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if a buffer should be initialized.\n","sig":null,"attributes":[{"value":"/ Indicates if a buffer should be initialized.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":347047,"byte_end":347095,"line_start":605,"line_end":605,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":347100,"byte_end":347109,"line_start":606,"line_end":606,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2629},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":347246,"byte_end":347256,"line_start":613,"line_end":613,"column_start":12,"column_end":22},"name":"initialize","qualname":"<Initializer>::initialize","value":"pub fn initialize(&Self, &mut [u8])","parent":null,"children":[],"decl_id":null,"docs":" Initializes a buffer if necessary.\n","sig":null,"attributes":[{"value":"/ Initializes a buffer if necessary.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":347182,"byte_end":347220,"line_start":611,"line_end":611,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":347225,"byte_end":347234,"line_start":612,"line_end":612,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":2630},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":348209,"byte_end":348214,"line_start":641,"line_end":641,"column_start":11,"column_end":16},"name":"Write","qualname":"::io::Write","value":"Write","parent":null,"children":[{"krate":0,"index":2631},{"krate":0,"index":2632},{"krate":0,"index":2634},{"krate":0,"index":2635},{"krate":0,"index":2636},{"krate":0,"index":2637},{"krate":0,"index":2646}],"decl_id":null,"docs":" A trait for objects which are byte-oriented sinks.","sig":null,"attributes":[{"value":"/ A trait for objects which are byte-oriented sinks.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":347411,"byte_end":347465,"line_start":620,"line_end":620,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":347466,"byte_end":347469,"line_start":621,"line_end":621,"column_start":1,"column_end":4}},{"value":"/ Implementors of the `Write` trait are sometimes called 'writers'.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":347470,"byte_end":347539,"line_start":622,"line_end":622,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":347540,"byte_end":347543,"line_start":623,"line_end":623,"column_start":1,"column_end":4}},{"value":"/ Writers are defined by two required methods, [`write`] and [`flush`]:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":347544,"byte_end":347617,"line_start":624,"line_end":624,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":347618,"byte_end":347621,"line_start":625,"line_end":625,"column_start":1,"column_end":4}},{"value":"/ * The [`write`] method will attempt to write some data into the object,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":347622,"byte_end":347697,"line_start":626,"line_end":626,"column_start":1,"column_end":76}},{"value":"/   returning how many bytes were successfully written.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":347698,"byte_end":347755,"line_start":627,"line_end":627,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":347756,"byte_end":347759,"line_start":628,"line_end":628,"column_start":1,"column_end":4}},{"value":"/ * The [`flush`] method is useful for adaptors and explicit buffers","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":347760,"byte_end":347830,"line_start":629,"line_end":629,"column_start":1,"column_end":71}},{"value":"/   themselves for ensuring that all buffered data has been pushed out to the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":347831,"byte_end":347910,"line_start":630,"line_end":630,"column_start":1,"column_end":80}},{"value":"/   'true sink'.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":347911,"byte_end":347929,"line_start":631,"line_end":631,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":347930,"byte_end":347933,"line_start":632,"line_end":632,"column_start":1,"column_end":4}},{"value":"/ Writers are intended to be composable with one another. Many implementors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":347934,"byte_end":348011,"line_start":633,"line_end":633,"column_start":1,"column_end":78}},{"value":"/ throughout [`std::io`] take and provide types which implement the `Write`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":348012,"byte_end":348089,"line_start":634,"line_end":634,"column_start":1,"column_end":78}},{"value":"/ trait.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":348090,"byte_end":348100,"line_start":635,"line_end":635,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":348101,"byte_end":348104,"line_start":636,"line_end":636,"column_start":1,"column_end":4}},{"value":"/ [`write`]: #tymethod.write","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":348105,"byte_end":348135,"line_start":637,"line_end":637,"column_start":1,"column_end":31}},{"value":"/ [`flush`]: #tymethod.flush","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":348136,"byte_end":348166,"line_start":638,"line_end":638,"column_start":1,"column_end":31}},{"value":"/ [`std::io`]: index.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":348167,"byte_end":348194,"line_start":639,"line_end":639,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":348195,"byte_end":348198,"line_start":640,"line_end":640,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":2631},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":349827,"byte_end":349832,"line_start":674,"line_end":674,"column_start":8,"column_end":13},"name":"write","qualname":"::io::Write::write","value":"pub fn write(&mut Self, &[u8]) -> Result<usize>","parent":{"krate":0,"index":2630},"children":[],"decl_id":null,"docs":" Write a buffer into this writer, returning how many bytes were written.","sig":null,"attributes":[{"value":"/ Write a buffer into this writer, returning how many bytes were written.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":348221,"byte_end":348296,"line_start":642,"line_end":642,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":348301,"byte_end":348304,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ This function will attempt to write the entire contents of `buf`, but","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":348309,"byte_end":348382,"line_start":644,"line_end":644,"column_start":5,"column_end":78}},{"value":"/ the entire write may not succeed, or the write may also generate an","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":348387,"byte_end":348458,"line_start":645,"line_end":645,"column_start":5,"column_end":76}},{"value":"/ error. A call to `write` represents *at most one* attempt to write to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":348463,"byte_end":348536,"line_start":646,"line_end":646,"column_start":5,"column_end":78}},{"value":"/ any wrapped object.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":348541,"byte_end":348564,"line_start":647,"line_end":647,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":348569,"byte_end":348572,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ Calls to `write` are not guaranteed to block waiting for data to be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":348577,"byte_end":348648,"line_start":649,"line_end":649,"column_start":5,"column_end":76}},{"value":"/ written, and a write which would otherwise block can be indicated through","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":348653,"byte_end":348730,"line_start":650,"line_end":650,"column_start":5,"column_end":82}},{"value":"/ an [`Err`] variant.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":348735,"byte_end":348758,"line_start":651,"line_end":651,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":348763,"byte_end":348766,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ If the return value is [`Ok(n)`] then it must be guaranteed that","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":348771,"byte_end":348839,"line_start":653,"line_end":653,"column_start":5,"column_end":73}},{"value":"/ `n <= buf.len()`. A return value of `0` typically means that the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":348844,"byte_end":348912,"line_start":654,"line_end":654,"column_start":5,"column_end":73}},{"value":"/ underlying object is no longer able to accept bytes and will likely not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":348917,"byte_end":348992,"line_start":655,"line_end":655,"column_start":5,"column_end":80}},{"value":"/ be able to in the future as well, or that the buffer provided is empty.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":348997,"byte_end":349072,"line_start":656,"line_end":656,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":349077,"byte_end":349080,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":349085,"byte_end":349097,"line_start":658,"line_end":658,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":349102,"byte_end":349105,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ Each call to `write` may generate an I/O error indicating that the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":349110,"byte_end":349180,"line_start":660,"line_end":660,"column_start":5,"column_end":75}},{"value":"/ operation could not be completed. If an error is returned then no bytes","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":349185,"byte_end":349260,"line_start":661,"line_end":661,"column_start":5,"column_end":80}},{"value":"/ in the buffer were written to this writer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":349265,"byte_end":349311,"line_start":662,"line_end":662,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":349316,"byte_end":349319,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ It is **not** considered an error if the entire buffer could not be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":349324,"byte_end":349395,"line_start":664,"line_end":664,"column_start":5,"column_end":76}},{"value":"/ written to this writer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":349400,"byte_end":349427,"line_start":665,"line_end":665,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":349432,"byte_end":349435,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ An error of the [`ErrorKind::Interrupted`] kind is non-fatal and the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":349440,"byte_end":349512,"line_start":667,"line_end":667,"column_start":5,"column_end":77}},{"value":"/ write operation should be retried if there is nothing else to do.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":349517,"byte_end":349586,"line_start":668,"line_end":668,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":349591,"byte_end":349594,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ [`Err`]: ../../std/result/enum.Result.html#variant.Err","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":349599,"byte_end":349657,"line_start":670,"line_end":670,"column_start":5,"column_end":63}},{"value":"/ [`Ok(n)`]:  ../../std/result/enum.Result.html#variant.Ok","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":349662,"byte_end":349722,"line_start":671,"line_end":671,"column_start":5,"column_end":65}},{"value":"/ [`ErrorKind::Interrupted`]: ../../std/io/enum.ErrorKind.html#variant.Interrupted","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":349727,"byte_end":349811,"line_start":672,"line_end":672,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":349816,"byte_end":349819,"line_start":673,"line_end":673,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2632},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":350324,"byte_end":350338,"line_start":684,"line_end":684,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"::io::Write::write_vectored","value":"pub fn write_vectored(&mut Self, &[IoSlice]) -> Result<usize>","parent":{"krate":0,"index":2630},"children":[],"decl_id":null,"docs":" Like `write`, except that it writes from a slice of buffers.","sig":null,"attributes":[{"value":"/ Like `write`, except that it writes from a slice of buffers.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":349879,"byte_end":349943,"line_start":676,"line_end":676,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":349948,"byte_end":349951,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ Data is copied from each buffer in order, with the final buffer","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":349956,"byte_end":350023,"line_start":678,"line_end":678,"column_start":5,"column_end":72}},{"value":"/ read from possibly being only partially consumed. This method must","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":350028,"byte_end":350098,"line_start":679,"line_end":679,"column_start":5,"column_end":75}},{"value":"/ behave as a call to `write` with the buffers concatenated would.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":350103,"byte_end":350171,"line_start":680,"line_end":680,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":350176,"byte_end":350179,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ The default implementation calls `write` with either the first nonempty","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":350184,"byte_end":350259,"line_start":682,"line_end":682,"column_start":5,"column_end":80}},{"value":"/ buffer provided, or an empty one if none exists.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":350264,"byte_end":350316,"line_start":683,"line_end":683,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2634},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":350736,"byte_end":350741,"line_start":696,"line_end":696,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::Write::flush","value":"pub fn flush(&mut Self) -> Result<()>","parent":{"krate":0,"index":2630},"children":[],"decl_id":null,"docs":" Flush this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[{"value":"/ Flush this output stream, ensuring that all intermediately buffered","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":350458,"byte_end":350529,"line_start":688,"line_end":688,"column_start":5,"column_end":76}},{"value":"/ contents reach their destination.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":350534,"byte_end":350571,"line_start":689,"line_end":689,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":350576,"byte_end":350579,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":350584,"byte_end":350596,"line_start":691,"line_end":691,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":350601,"byte_end":350604,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ It is considered an error if not all bytes could be written due to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":350609,"byte_end":350679,"line_start":693,"line_end":693,"column_start":5,"column_end":75}},{"value":"/ I/O errors or EOF being reached.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":350684,"byte_end":350720,"line_start":694,"line_end":694,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":350725,"byte_end":350728,"line_start":695,"line_end":695,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2635},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":351633,"byte_end":351642,"line_start":717,"line_end":717,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::Write::write_all","value":"pub fn write_all(&mut Self, &[u8]) -> Result<()>","parent":{"krate":0,"index":2630},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[{"value":"/ Attempts to write an entire buffer into this writer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":350773,"byte_end":350829,"line_start":698,"line_end":698,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":350834,"byte_end":350837,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ This method will continuously call [`write`] until there is no more data","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":350842,"byte_end":350918,"line_start":700,"line_end":700,"column_start":5,"column_end":81}},{"value":"/ to be written or an error of non-[`ErrorKind::Interrupted`] kind is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":350923,"byte_end":350994,"line_start":701,"line_end":701,"column_start":5,"column_end":76}},{"value":"/ returned. This method will not return until the entire buffer has been","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":350999,"byte_end":351073,"line_start":702,"line_end":702,"column_start":5,"column_end":79}},{"value":"/ successfully written or such an error occurs. The first error that is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":351078,"byte_end":351151,"line_start":703,"line_end":703,"column_start":5,"column_end":78}},{"value":"/ not of [`ErrorKind::Interrupted`] kind generated from this method will be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":351156,"byte_end":351233,"line_start":704,"line_end":704,"column_start":5,"column_end":82}},{"value":"/ returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":351238,"byte_end":351251,"line_start":705,"line_end":705,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":351256,"byte_end":351259,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ If the buffer contains no data, this will never call [`write`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":351264,"byte_end":351331,"line_start":707,"line_end":707,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":351336,"byte_end":351339,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":351344,"byte_end":351356,"line_start":709,"line_end":709,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":351361,"byte_end":351364,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ This function will return the first error of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":351369,"byte_end":351417,"line_start":711,"line_end":711,"column_start":5,"column_end":53}},{"value":"/ non-[`ErrorKind::Interrupted`] kind that [`write`] returns.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":351422,"byte_end":351485,"line_start":712,"line_end":712,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":351490,"byte_end":351493,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind::Interrupted`]: ../../std/io/enum.ErrorKind.html#variant.Interrupted","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":351498,"byte_end":351582,"line_start":714,"line_end":714,"column_start":5,"column_end":89}},{"value":"/ [`write`]: #tymethod.write","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":351587,"byte_end":351617,"line_start":715,"line_end":715,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":351622,"byte_end":351625,"line_start":716,"line_end":716,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2636},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":353525,"byte_end":353543,"line_start":759,"line_end":759,"column_start":8,"column_end":26},"name":"write_all_vectored","qualname":"::io::Write::write_all_vectored","value":"pub fn write_all_vectored(&mut Self, &mut [IoSlice]) -> Result<()>","parent":{"krate":0,"index":2630},"children":[],"decl_id":null,"docs":" Attempts to write multiple buffers into this writer.","sig":null,"attributes":[{"value":"/ Attempts to write multiple buffers into this writer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":352101,"byte_end":352157,"line_start":731,"line_end":731,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":352162,"byte_end":352165,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ This method will continuously call [`write_vectored`] until there is no","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":352170,"byte_end":352245,"line_start":733,"line_end":733,"column_start":5,"column_end":80}},{"value":"/ more data to be written or an error of non-[`ErrorKind::Interrupted`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":352250,"byte_end":352323,"line_start":734,"line_end":734,"column_start":5,"column_end":78}},{"value":"/ kind is returned. This method will not return until all buffers have","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":352328,"byte_end":352400,"line_start":735,"line_end":735,"column_start":5,"column_end":77}},{"value":"/ been successfully written or such an error occurs. The first error that","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":352405,"byte_end":352480,"line_start":736,"line_end":736,"column_start":5,"column_end":80}},{"value":"/ is not of [`ErrorKind::Interrupted`] kind generated from this method","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":352485,"byte_end":352557,"line_start":737,"line_end":737,"column_start":5,"column_end":77}},{"value":"/ will be returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":352562,"byte_end":352583,"line_start":738,"line_end":738,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":352588,"byte_end":352591,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ If the buffer contains no data, this will never call [`write_vectored`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":352596,"byte_end":352672,"line_start":740,"line_end":740,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":352677,"byte_end":352680,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ [`write_vectored`]: #method.write_vectored","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":352685,"byte_end":352731,"line_start":742,"line_end":742,"column_start":5,"column_end":51}},{"value":"/ [`ErrorKind::Interrupted`]: ../../std/io/enum.ErrorKind.html#variant.Interrupted","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":352736,"byte_end":352820,"line_start":743,"line_end":743,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":352825,"byte_end":352828,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":352833,"byte_end":352844,"line_start":745,"line_end":745,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":352849,"byte_end":352852,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":352857,"byte_end":352860,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ Unlike `io::Write::write_vectored`, this takes a *mutable* reference to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":352865,"byte_end":352940,"line_start":748,"line_end":748,"column_start":5,"column_end":80}},{"value":"/ a slice of `IoSlice`s, not an immutable one. That's because we need to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":352945,"byte_end":353019,"line_start":749,"line_end":749,"column_start":5,"column_end":79}},{"value":"/ modify the slice to keep track of the bytes already written.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":353024,"byte_end":353088,"line_start":750,"line_end":750,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":353093,"byte_end":353096,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ Once this function returns, the contents of `bufs` are unspecified, as","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":353101,"byte_end":353175,"line_start":752,"line_end":752,"column_start":5,"column_end":79}},{"value":"/ this depends on how many calls to `write_vectored` were necessary. It is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":353180,"byte_end":353256,"line_start":753,"line_end":753,"column_start":5,"column_end":81}},{"value":"/ best to understand this function as taking ownership of `bufs` and to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":353261,"byte_end":353334,"line_start":754,"line_end":754,"column_start":5,"column_end":78}},{"value":"/ not use `bufs` afterwards. The underlying buffers, to which the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":353339,"byte_end":353406,"line_start":755,"line_end":755,"column_start":5,"column_end":72}},{"value":"/ `IoSlice`s point (but not the `IoSlice`s themselves), are unchanged and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":353411,"byte_end":353486,"line_start":756,"line_end":756,"column_start":5,"column_end":80}},{"value":"/ can be reused.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":353491,"byte_end":353509,"line_start":757,"line_end":757,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":353514,"byte_end":353517,"line_start":758,"line_end":758,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2637},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":354936,"byte_end":354945,"line_start":795,"line_end":795,"column_start":8,"column_end":17},"name":"write_fmt","qualname":"::io::Write::write_fmt","value":"pub fn write_fmt(&mut Self, fmt::Arguments) -> Result<()>","parent":{"krate":0,"index":2630},"children":[],"decl_id":null,"docs":" Writes a formatted string into this writer, returning any error\n encountered.","sig":null,"attributes":[{"value":"/ Writes a formatted string into this writer, returning any error","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":354060,"byte_end":354127,"line_start":773,"line_end":773,"column_start":5,"column_end":72}},{"value":"/ encountered.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":354132,"byte_end":354148,"line_start":774,"line_end":774,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":354153,"byte_end":354156,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ This method is primarily used to interface with the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":354161,"byte_end":354216,"line_start":776,"line_end":776,"column_start":5,"column_end":60}},{"value":"/ [`format_args!`][formatargs] macro, but it is rare that this should","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":354221,"byte_end":354292,"line_start":777,"line_end":777,"column_start":5,"column_end":76}},{"value":"/ explicitly be called. The [`write!`][write] macro should be favored to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":354297,"byte_end":354371,"line_start":778,"line_end":778,"column_start":5,"column_end":79}},{"value":"/ invoke this method instead.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":354376,"byte_end":354407,"line_start":779,"line_end":779,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":354412,"byte_end":354415,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ [formatargs]: ../macro.format_args.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":354420,"byte_end":354463,"line_start":781,"line_end":781,"column_start":5,"column_end":48}},{"value":"/ [write]: ../macro.write.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":354468,"byte_end":354500,"line_start":782,"line_end":782,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":354505,"byte_end":354508,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This function internally uses the [`write_all`][writeall] method on","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":354513,"byte_end":354584,"line_start":784,"line_end":784,"column_start":5,"column_end":76}},{"value":"/ this trait and hence will continuously write data so long as no errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":354589,"byte_end":354663,"line_start":785,"line_end":785,"column_start":5,"column_end":79}},{"value":"/ are received. This also means that partial writes are not indicated in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":354668,"byte_end":354742,"line_start":786,"line_end":786,"column_start":5,"column_end":79}},{"value":"/ this signature.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":354747,"byte_end":354766,"line_start":787,"line_end":787,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":354771,"byte_end":354774,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ [writeall]: #method.write_all","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":354779,"byte_end":354812,"line_start":789,"line_end":789,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":354817,"byte_end":354820,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":354825,"byte_end":354837,"line_start":791,"line_end":791,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":354842,"byte_end":354845,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This function will return any I/O error reported while formatting.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":354850,"byte_end":354920,"line_start":793,"line_end":793,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":354925,"byte_end":354928,"line_start":794,"line_end":794,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2646},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":356315,"byte_end":356321,"line_start":834,"line_end":834,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::io::Write::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self where Self: Sized","parent":{"krate":0,"index":2630},"children":[],"decl_id":null,"docs":" Creates a \"by reference\" adaptor for this instance of `Write`.","sig":null,"attributes":[{"value":"/ Creates a \"by reference\" adaptor for this instance of `Write`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":356120,"byte_end":356186,"line_start":829,"line_end":829,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":356191,"byte_end":356194,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ The returned adaptor also implements `Write` and will simply borrow this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":356199,"byte_end":356275,"line_start":831,"line_end":831,"column_start":5,"column_end":81}},{"value":"/ current writer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":356280,"byte_end":356299,"line_start":832,"line_end":832,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":356304,"byte_end":356307,"line_start":833,"line_end":833,"column_start":5,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":2647},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":356621,"byte_end":356625,"line_start":848,"line_end":848,"column_start":11,"column_end":15},"name":"Seek","qualname":"::io::Seek","value":"Seek","parent":null,"children":[{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2650}],"decl_id":null,"docs":" The `Seek` trait provides a cursor which can be moved within a stream of\n bytes.","sig":null,"attributes":[{"value":"/ The `Seek` trait provides a cursor which can be moved within a stream of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":356405,"byte_end":356481,"line_start":842,"line_end":842,"column_start":1,"column_end":77}},{"value":"/ bytes.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":356482,"byte_end":356492,"line_start":843,"line_end":843,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":356493,"byte_end":356496,"line_start":844,"line_end":844,"column_start":1,"column_end":4}},{"value":"/ The stream typically has a fixed size, allowing seeking relative to either","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":356497,"byte_end":356575,"line_start":845,"line_end":845,"column_start":1,"column_end":79}},{"value":"/ end or the current offset.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":356576,"byte_end":356606,"line_start":846,"line_end":846,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":356607,"byte_end":356610,"line_start":847,"line_end":847,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":2648},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":357169,"byte_end":357173,"line_start":863,"line_end":863,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::Seek::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Result<u64>","parent":{"krate":0,"index":2647},"children":[],"decl_id":null,"docs":" Seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Seek to an offset, in bytes, in a stream.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":356632,"byte_end":356677,"line_start":849,"line_end":849,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":356682,"byte_end":356685,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":356690,"byte_end":356763,"line_start":851,"line_end":851,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":356768,"byte_end":356794,"line_start":852,"line_end":852,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":356799,"byte_end":356802,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":356807,"byte_end":356856,"line_start":854,"line_end":854,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":356861,"byte_end":356931,"line_start":855,"line_end":855,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":356936,"byte_end":356997,"line_start":856,"line_end":856,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":357002,"byte_end":357005,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":357010,"byte_end":357022,"line_start":858,"line_end":858,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":357027,"byte_end":357030,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":357035,"byte_end":357091,"line_start":860,"line_end":860,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":357096,"byte_end":357099,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ [`SeekFrom::Start`]: enum.SeekFrom.html#variant.Start","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":357104,"byte_end":357161,"line_start":862,"line_end":862,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2649},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":358130,"byte_end":358140,"line_start":882,"line_end":882,"column_start":8,"column_end":18},"name":"stream_len","qualname":"::io::Seek::stream_len","value":"pub fn stream_len(&mut Self) -> Result<u64>","parent":{"krate":0,"index":2647},"children":[],"decl_id":null,"docs":" Returns the length of this stream (in bytes).","sig":null,"attributes":[{"value":"/ Returns the length of this stream (in bytes).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":357221,"byte_end":357270,"line_start":865,"line_end":865,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":357275,"byte_end":357278,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ This method is implemented using up to three seek operations. If this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":357283,"byte_end":357356,"line_start":867,"line_end":867,"column_start":5,"column_end":78}},{"value":"/ method returns successfully, the seek position is unchanged (i.e. the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":357361,"byte_end":357434,"line_start":868,"line_end":868,"column_start":5,"column_end":78}},{"value":"/ position before calling this method is the same as afterwards).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":357439,"byte_end":357506,"line_start":869,"line_end":869,"column_start":5,"column_end":72}},{"value":"/ However, if this method returns an error, the seek position is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":357511,"byte_end":357577,"line_start":870,"line_end":870,"column_start":5,"column_end":71}},{"value":"/ unspecified.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":357582,"byte_end":357598,"line_start":871,"line_end":871,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":357603,"byte_end":357606,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ If you need to obtain the length of *many* streams and you don't care","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":357611,"byte_end":357684,"line_start":873,"line_end":873,"column_start":5,"column_end":78}},{"value":"/ about the seek position afterwards, you can reduce the number of seek","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":357689,"byte_end":357762,"line_start":874,"line_end":874,"column_start":5,"column_end":78}},{"value":"/ operations by simply calling `seek(SeekFrom::End(0))` and using its","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":357767,"byte_end":357838,"line_start":875,"line_end":875,"column_start":5,"column_end":76}},{"value":"/ return value (it is also the stream length).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":357843,"byte_end":357891,"line_start":876,"line_end":876,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":357896,"byte_end":357899,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ Note that length of a stream can change over time (for example, when","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":357904,"byte_end":357976,"line_start":878,"line_end":878,"column_start":5,"column_end":77}},{"value":"/ data is appended to a file). So calling this method multiple times does","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":357981,"byte_end":358056,"line_start":879,"line_end":879,"column_start":5,"column_end":80}},{"value":"/ not necessarily return the same length each time.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":358061,"byte_end":358114,"line_start":880,"line_end":880,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":358119,"byte_end":358122,"line_start":881,"line_end":881,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2650},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":358690,"byte_end":358705,"line_start":899,"line_end":899,"column_start":8,"column_end":23},"name":"stream_position","qualname":"::io::Seek::stream_position","value":"pub fn stream_position(&mut Self) -> Result<u64>","parent":{"krate":0,"index":2647},"children":[],"decl_id":null,"docs":" Returns the current seek position from the start of the stream.","sig":null,"attributes":[{"value":"/ Returns the current seek position from the start of the stream.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":358534,"byte_end":358601,"line_start":895,"line_end":895,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":358606,"byte_end":358609,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `self.seek(SeekFrom::Current(0))`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":358614,"byte_end":358674,"line_start":897,"line_end":897,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":358679,"byte_end":358682,"line_start":898,"line_end":898,"column_start":5,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7364},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":359051,"byte_end":359056,"line_start":912,"line_end":912,"column_start":5,"column_end":10},"name":"Start","qualname":"::io::SeekFrom::Start","value":"SeekFrom::Start(u64)","parent":{"krate":0,"index":7363},"children":[],"decl_id":null,"docs":" Sets the offset to the provided number of bytes.\n","sig":null,"attributes":[{"value":"/ Sets the offset to the provided number of bytes.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":358994,"byte_end":359046,"line_start":911,"line_end":911,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7367},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":359280,"byte_end":359283,"line_start":919,"line_end":919,"column_start":5,"column_end":8},"name":"End","qualname":"::io::SeekFrom::End","value":"SeekFrom::End(i64)","parent":{"krate":0,"index":7363},"children":[],"decl_id":null,"docs":" Sets the offset to the size of this object plus the specified number of\n bytes.","sig":null,"attributes":[{"value":"/ Sets the offset to the size of this object plus the specified number of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":359068,"byte_end":359143,"line_start":914,"line_end":914,"column_start":5,"column_end":80}},{"value":"/ bytes.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":359148,"byte_end":359158,"line_start":915,"line_end":915,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":359163,"byte_end":359166,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ It is possible to seek beyond the end of an object, but it's an error to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":359171,"byte_end":359247,"line_start":917,"line_end":917,"column_start":5,"column_end":81}},{"value":"/ seek before byte 0.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":359252,"byte_end":359275,"line_start":918,"line_end":918,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7370},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":359504,"byte_end":359511,"line_start":926,"line_end":926,"column_start":5,"column_end":12},"name":"Current","qualname":"::io::SeekFrom::Current","value":"SeekFrom::Current(i64)","parent":{"krate":0,"index":7363},"children":[],"decl_id":null,"docs":" Sets the offset to the current position plus the specified number of\n bytes.","sig":null,"attributes":[{"value":"/ Sets the offset to the current position plus the specified number of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":359295,"byte_end":359367,"line_start":921,"line_end":921,"column_start":5,"column_end":77}},{"value":"/ bytes.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":359372,"byte_end":359382,"line_start":922,"line_end":922,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":359387,"byte_end":359390,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ It is possible to seek beyond the end of an object, but it's an error to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":359395,"byte_end":359471,"line_start":924,"line_end":924,"column_start":5,"column_end":81}},{"value":"/ seek before byte 0.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":359476,"byte_end":359499,"line_start":925,"line_end":925,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":7363},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":358979,"byte_end":358987,"line_start":910,"line_end":910,"column_start":10,"column_end":18},"name":"SeekFrom","qualname":"::io::SeekFrom","value":"pub enum SeekFrom {\n\n    /// Sets the offset to the provided number of bytes.\n    Start(u64),\n\n    /// Sets the offset to the size of this object plus the specified number of\n    /// bytes.\n    ///\n    /// It is possible to seek beyond the end of an object, but it's an error to\n    /// seek before byte 0.\n    End(i64),\n\n    /// Sets the offset to the current position plus the specified number of\n    /// bytes.\n    ///\n    /// It is possible to seek beyond the end of an object, but it's an error to\n    /// seek before byte 0.\n    Current(i64),\n}","parent":null,"children":[{"krate":0,"index":7364},{"krate":0,"index":7367},{"krate":0,"index":7370}],"decl_id":null,"docs":" Enumeration of possible methods to seek within an I/O object.","sig":null,"attributes":[{"value":"/ Enumeration of possible methods to seek within an I/O object.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":358783,"byte_end":358848,"line_start":904,"line_end":904,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":358849,"byte_end":358852,"line_start":905,"line_end":905,"column_start":1,"column_end":4}},{"value":"/ It is used by the [`Seek`] trait.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":358853,"byte_end":358890,"line_start":906,"line_end":906,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":358891,"byte_end":358894,"line_start":907,"line_end":907,"column_start":1,"column_end":4}},{"value":"/ [`Seek`]: trait.Seek.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":358895,"byte_end":358924,"line_start":908,"line_end":908,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":2653},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":360725,"byte_end":360732,"line_start":964,"line_end":964,"column_start":11,"column_end":18},"name":"BufRead","qualname":"::io::BufRead","value":"BufRead: Read","parent":null,"children":[{"krate":0,"index":2654},{"krate":0,"index":2655},{"krate":0,"index":2656},{"krate":0,"index":2657},{"krate":0,"index":2659},{"krate":0,"index":2660}],"decl_id":null,"docs":" A `BufRead` is a type of `Read`er which has an internal buffer, allowing it\n to perform extra ways of reading.","sig":null,"attributes":[{"value":"/ A `BufRead` is a type of `Read`er which has an internal buffer, allowing it","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":360378,"byte_end":360457,"line_start":957,"line_end":957,"column_start":1,"column_end":80}},{"value":"/ to perform extra ways of reading.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":360458,"byte_end":360495,"line_start":958,"line_end":958,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":360496,"byte_end":360499,"line_start":959,"line_end":959,"column_start":1,"column_end":4}},{"value":"/ For example, reading line-by-line is inefficient without using a buffer, so","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":360500,"byte_end":360579,"line_start":960,"line_end":960,"column_start":1,"column_end":80}},{"value":"/ if you want to read by line, you'll need `BufRead`, which includes a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":360580,"byte_end":360652,"line_start":961,"line_end":961,"column_start":1,"column_end":73}},{"value":"/ [`read_line`] method as well as a [`lines`] iterator.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":360653,"byte_end":360710,"line_start":962,"line_end":962,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":360711,"byte_end":360714,"line_start":963,"line_end":963,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":2654},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":361601,"byte_end":361609,"line_start":984,"line_end":984,"column_start":8,"column_end":16},"name":"fill_buf","qualname":"::io::BufRead::fill_buf","value":"pub fn fill_buf(&mut Self) -> Result<&[u8]>","parent":{"krate":0,"index":2653},"children":[],"decl_id":null,"docs":" Returns the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Returns the contents of the internal buffer, filling it with more data","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":360745,"byte_end":360819,"line_start":965,"line_end":965,"column_start":5,"column_end":79}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":360824,"byte_end":360865,"line_start":966,"line_end":966,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":360870,"byte_end":360873,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":360878,"byte_end":360949,"line_start":968,"line_end":968,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":360954,"byte_end":361016,"line_start":969,"line_end":969,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":361021,"byte_end":361092,"line_start":970,"line_end":970,"column_start":5,"column_end":76}},{"value":"/ calling `read` may return the same contents. As such, [`consume`] must","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":361097,"byte_end":361171,"line_start":971,"line_end":971,"column_start":5,"column_end":79}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":361176,"byte_end":361252,"line_start":972,"line_end":972,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":361257,"byte_end":361308,"line_start":973,"line_end":973,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":361313,"byte_end":361316,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ [`consume`]: #tymethod.consume","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":361321,"byte_end":361355,"line_start":975,"line_end":975,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":361360,"byte_end":361363,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":361368,"byte_end":361439,"line_start":977,"line_end":977,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":361444,"byte_end":361447,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":361452,"byte_end":361464,"line_start":979,"line_end":979,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":361469,"byte_end":361472,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ This function will return an I/O error if the underlying reader was","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":361477,"byte_end":361548,"line_start":981,"line_end":981,"column_start":5,"column_end":76}},{"value":"/ read, but returned an error.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":361553,"byte_end":361585,"line_start":982,"line_end":982,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":361590,"byte_end":361593,"line_start":983,"line_end":983,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2655},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":362343,"byte_end":362350,"line_start":999,"line_end":999,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::BufRead::consume","value":"pub fn consume(&mut Self, usize)","parent":{"krate":0,"index":2653},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to `read`.","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":361644,"byte_end":361718,"line_start":986,"line_end":986,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to `read`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":361723,"byte_end":361783,"line_start":987,"line_end":987,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":361788,"byte_end":361791,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":361796,"byte_end":361867,"line_start":989,"line_end":989,"column_start":5,"column_end":76}},{"value":"/ [`fill_buf`] method to function properly. This function does","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":361872,"byte_end":361936,"line_start":990,"line_end":990,"column_start":5,"column_end":69}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":361941,"byte_end":362015,"line_start":991,"line_end":991,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`fill_buf`], has been consumed and should","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":362020,"byte_end":362092,"line_start":992,"line_end":992,"column_start":5,"column_end":77}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":362097,"byte_end":362167,"line_start":993,"line_end":993,"column_start":5,"column_end":75}},{"value":"/ [`fill_buf`] isn't called before calling it.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":362172,"byte_end":362220,"line_start":994,"line_end":994,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":362225,"byte_end":362228,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":362233,"byte_end":362305,"line_start":996,"line_end":996,"column_start":5,"column_end":77}},{"value":"/ [`fill_buf`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":362310,"byte_end":362327,"line_start":997,"line_end":997,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":362332,"byte_end":362335,"line_start":998,"line_end":998,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2656},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":363250,"byte_end":363260,"line_start":1020,"line_end":1020,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::BufRead::read_until","value":"pub fn read_until(&mut Self, u8, &mut Vec<u8>) -> Result<usize>","parent":{"krate":0,"index":2653},"children":[],"decl_id":null,"docs":" Read all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[{"value":"/ Read all bytes into `buf` until the delimiter `byte` or EOF is reached.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":362380,"byte_end":362455,"line_start":1001,"line_end":1001,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":362460,"byte_end":362463,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":362468,"byte_end":362538,"line_start":1003,"line_end":1003,"column_start":5,"column_end":75}},{"value":"/ delimiter or EOF is found. Once found, all bytes up to, and including,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":362543,"byte_end":362617,"line_start":1004,"line_end":1004,"column_start":5,"column_end":79}},{"value":"/ the delimiter (if found) will be appended to `buf`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":362622,"byte_end":362677,"line_start":1005,"line_end":1005,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":362682,"byte_end":362685,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ If successful, this function will return the total number of bytes read.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":362690,"byte_end":362766,"line_start":1007,"line_end":1007,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":362771,"byte_end":362774,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":362779,"byte_end":362791,"line_start":1009,"line_end":1009,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":362796,"byte_end":362799,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ This function will ignore all instances of [`ErrorKind::Interrupted`] and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":362804,"byte_end":362881,"line_start":1011,"line_end":1011,"column_start":5,"column_end":82}},{"value":"/ will otherwise return any errors returned by [`fill_buf`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":362886,"byte_end":362948,"line_start":1012,"line_end":1012,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":362953,"byte_end":362956,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ If an I/O error is encountered then all bytes read so far will be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":362961,"byte_end":363030,"line_start":1014,"line_end":1014,"column_start":5,"column_end":74}},{"value":"/ present in `buf` and its length will have been adjusted appropriately.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":363035,"byte_end":363109,"line_start":1015,"line_end":1015,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":363114,"byte_end":363117,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ [`fill_buf`]: #tymethod.fill_buf","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":363122,"byte_end":363158,"line_start":1017,"line_end":1017,"column_start":5,"column_end":41}},{"value":"/ [`ErrorKind::Interrupted`]: enum.ErrorKind.html#variant.Interrupted","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":363163,"byte_end":363234,"line_start":1018,"line_end":1018,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":363239,"byte_end":363242,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2657},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":364292,"byte_end":364301,"line_start":1045,"line_end":1045,"column_start":8,"column_end":17},"name":"read_line","qualname":"::io::BufRead::read_line","value":"pub fn read_line(&mut Self, &mut String) -> Result<usize>","parent":{"krate":0,"index":2653},"children":[],"decl_id":null,"docs":" Read all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[{"value":"/ Read all bytes until a newline (the 0xA byte) is reached, and append","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":363367,"byte_end":363439,"line_start":1024,"line_end":1024,"column_start":5,"column_end":77}},{"value":"/ them to the provided buffer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":363444,"byte_end":363476,"line_start":1025,"line_end":1025,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":363481,"byte_end":363484,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":363489,"byte_end":363559,"line_start":1027,"line_end":1027,"column_start":5,"column_end":75}},{"value":"/ newline delimiter (the 0xA byte) or EOF is found. Once found, all bytes","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":363564,"byte_end":363639,"line_start":1028,"line_end":1028,"column_start":5,"column_end":80}},{"value":"/ up to, and including, the delimiter (if found) will be appended to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":363644,"byte_end":363714,"line_start":1029,"line_end":1029,"column_start":5,"column_end":75}},{"value":"/ `buf`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":363719,"byte_end":363729,"line_start":1030,"line_end":1030,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":363734,"byte_end":363737,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ If successful, this function will return the total number of bytes read.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":363742,"byte_end":363818,"line_start":1032,"line_end":1032,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":363823,"byte_end":363826,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ If this function returns `Ok(0)`, the stream has reached EOF.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":363831,"byte_end":363896,"line_start":1034,"line_end":1034,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":363901,"byte_end":363904,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":363909,"byte_end":363921,"line_start":1036,"line_end":1036,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":363926,"byte_end":363929,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ This function has the same error semantics as [`read_until`] and will","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":363934,"byte_end":364007,"line_start":1038,"line_end":1038,"column_start":5,"column_end":78}},{"value":"/ also return an error if the read bytes are not valid UTF-8. If an I/O","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":364012,"byte_end":364085,"line_start":1039,"line_end":1039,"column_start":5,"column_end":78}},{"value":"/ error is encountered then `buf` may contain some bytes already read in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":364090,"byte_end":364164,"line_start":1040,"line_end":1040,"column_start":5,"column_end":79}},{"value":"/ the event that all data read so far was valid UTF-8.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":364169,"byte_end":364225,"line_start":1041,"line_end":1041,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":364230,"byte_end":364233,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ [`read_until`]: #method.read_until","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":364238,"byte_end":364276,"line_start":1043,"line_end":1043,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":364281,"byte_end":364284,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2659},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":365175,"byte_end":365180,"line_start":1066,"line_end":1066,"column_start":8,"column_end":13},"name":"split","qualname":"::io::BufRead::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized","parent":{"krate":0,"index":2653},"children":[],"decl_id":null,"docs":" Returns an iterator over the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[{"value":"/ Returns an iterator over the contents of this reader split on the byte","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":364620,"byte_end":364694,"line_start":1052,"line_end":1052,"column_start":5,"column_end":79}},{"value":"/ `byte`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":364699,"byte_end":364710,"line_start":1053,"line_end":1053,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":364715,"byte_end":364718,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ The iterator returned from this function will return instances of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":364723,"byte_end":364792,"line_start":1055,"line_end":1055,"column_start":5,"column_end":74}},{"value":"/ [`io::Result`]`<`[`Vec<u8>`]`>`. Each vector returned will *not* have","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":364797,"byte_end":364870,"line_start":1056,"line_end":1056,"column_start":5,"column_end":78}},{"value":"/ the delimiter byte at the end.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":364875,"byte_end":364909,"line_start":1057,"line_end":1057,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":364914,"byte_end":364917,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ This function will yield errors whenever [`read_until`] would have","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":364922,"byte_end":364992,"line_start":1059,"line_end":1059,"column_start":5,"column_end":75}},{"value":"/ also yielded an error.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":364997,"byte_end":365023,"line_start":1060,"line_end":1060,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":365028,"byte_end":365031,"line_start":1061,"line_end":1061,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: type.Result.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":365036,"byte_end":365072,"line_start":1062,"line_end":1062,"column_start":5,"column_end":41}},{"value":"/ [`Vec<u8>`]: ../vec/struct.Vec.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":365077,"byte_end":365116,"line_start":1063,"line_end":1063,"column_start":5,"column_end":44}},{"value":"/ [`read_until`]: #method.read_until","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":365121,"byte_end":365159,"line_start":1064,"line_end":1064,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":365164,"byte_end":365167,"line_start":1065,"line_end":1065,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2660},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":365893,"byte_end":365898,"line_start":1087,"line_end":1087,"column_start":8,"column_end":13},"name":"lines","qualname":"::io::BufRead::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":2653},"children":[],"decl_id":null,"docs":" Returns an iterator over the lines of this reader.","sig":null,"attributes":[{"value":"/ Returns an iterator over the lines of this reader.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":365301,"byte_end":365355,"line_start":1073,"line_end":1073,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":365360,"byte_end":365363,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ The iterator returned from this function will yield instances of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":365368,"byte_end":365436,"line_start":1075,"line_end":1075,"column_start":5,"column_end":73}},{"value":"/ [`io::Result`]`<`[`String`]`>`. Each string returned will *not* have a newline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":365441,"byte_end":365523,"line_start":1076,"line_end":1076,"column_start":5,"column_end":87}},{"value":"/ byte (the 0xA byte) or CRLF (0xD, 0xA bytes) at the end.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":365528,"byte_end":365588,"line_start":1077,"line_end":1077,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":365593,"byte_end":365596,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: type.Result.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":365601,"byte_end":365637,"line_start":1079,"line_end":1079,"column_start":5,"column_end":41}},{"value":"/ [`String`]: ../string/struct.String.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":365642,"byte_end":365686,"line_start":1080,"line_end":1080,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":365691,"byte_end":365694,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":365699,"byte_end":365711,"line_start":1082,"line_end":1082,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":365716,"byte_end":365719,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ Each line of the iterator has the same error semantics as [`BufRead::read_line`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":365724,"byte_end":365809,"line_start":1084,"line_end":1084,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":365814,"byte_end":365817,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ [`BufRead::read_line`]: trait.BufRead.html#method.read_line","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":365822,"byte_end":365885,"line_start":1086,"line_end":1086,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2661},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":366235,"byte_end":366240,"line_start":1101,"line_end":1101,"column_start":12,"column_end":17},"name":"Chain","qualname":"::io::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":2664},{"krate":0,"index":2665},{"krate":0,"index":2666}],"decl_id":null,"docs":" Adaptor to chain together two readers.","sig":null,"attributes":[{"value":"/ Adaptor to chain together two readers.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":365994,"byte_end":366036,"line_start":1095,"line_end":1095,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":366037,"byte_end":366040,"line_start":1096,"line_end":1096,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling [`chain`] on a reader.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":366041,"byte_end":366111,"line_start":1097,"line_end":1097,"column_start":1,"column_end":71}},{"value":"/ Please see the documentation of [`chain`] for more details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":366112,"byte_end":366175,"line_start":1098,"line_end":1098,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":366176,"byte_end":366179,"line_start":1099,"line_end":1099,"column_start":1,"column_end":4}},{"value":"/ [`chain`]: trait.Read.html#method.chain","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":366180,"byte_end":366223,"line_start":1100,"line_end":1100,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2670},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":366408,"byte_end":366418,"line_start":1110,"line_end":1110,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":366332,"byte_end":366388,"line_start":1108,"line_end":1108,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":366393,"byte_end":366396,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":366564,"byte_end":366571,"line_start":1116,"line_end":1116,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":366482,"byte_end":366544,"line_start":1114,"line_end":1114,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":366549,"byte_end":366552,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2672},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":366911,"byte_end":366918,"line_start":1126,"line_end":1126,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":366640,"byte_end":366710,"line_start":1120,"line_end":1120,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":366715,"byte_end":366718,"line_start":1121,"line_end":1121,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":366723,"byte_end":366796,"line_start":1122,"line_end":1122,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":366801,"byte_end":366874,"line_start":1123,"line_end":1123,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":366879,"byte_end":366891,"line_start":1124,"line_end":1124,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":366896,"byte_end":366899,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7385},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":368927,"byte_end":368931,"line_start":1189,"line_end":1189,"column_start":12,"column_end":16},"name":"Take","qualname":"::io::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":7387},{"krate":0,"index":7388}],"decl_id":null,"docs":" Reader adaptor which limits the bytes read from an underlying reader.","sig":null,"attributes":[{"value":"/ Reader adaptor which limits the bytes read from an underlying reader.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":368642,"byte_end":368715,"line_start":1182,"line_end":1182,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":368716,"byte_end":368719,"line_start":1183,"line_end":1183,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling [`take`] on a reader.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":368720,"byte_end":368789,"line_start":1184,"line_end":1184,"column_start":1,"column_end":70}},{"value":"/ Please see the documentation of [`take`] for more details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":368790,"byte_end":368852,"line_start":1185,"line_end":1185,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":368853,"byte_end":368856,"line_start":1186,"line_end":1186,"column_start":1,"column_end":4}},{"value":"/ [`take`]: trait.Read.html#method.take","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":368857,"byte_end":368898,"line_start":1187,"line_end":1187,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2691},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":369343,"byte_end":369348,"line_start":1205,"line_end":1205,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<T>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that can be read before this instance will\n return EOF.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that can be read before this instance will","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":368992,"byte_end":369066,"line_start":1195,"line_end":1195,"column_start":5,"column_end":79}},{"value":"/ return EOF.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":369071,"byte_end":369086,"line_start":1196,"line_end":1196,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":369091,"byte_end":369094,"line_start":1197,"line_end":1197,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":369099,"byte_end":369109,"line_start":1198,"line_end":1198,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":369114,"byte_end":369117,"line_start":1199,"line_end":1199,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":369122,"byte_end":369199,"line_start":1200,"line_end":1200,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`Read`] instance reaches EOF.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":369204,"byte_end":369268,"line_start":1201,"line_end":1201,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":369273,"byte_end":369276,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ [`Read`]: ../../std/io/trait.Read.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":369281,"byte_end":369323,"line_start":1203,"line_end":1203,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":369328,"byte_end":369331,"line_start":1204,"line_end":1204,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2692},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":369674,"byte_end":369683,"line_start":1214,"line_end":1214,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<T>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":369395,"byte_end":369466,"line_start":1209,"line_end":1209,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":369471,"byte_end":369545,"line_start":1210,"line_end":1210,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":369550,"byte_end":369625,"line_start":1211,"line_end":1211,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":369630,"byte_end":369654,"line_start":1212,"line_end":1212,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":369659,"byte_end":369662,"line_start":1213,"line_end":1213,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2693},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":369822,"byte_end":369832,"line_start":1220,"line_end":1220,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":369748,"byte_end":369802,"line_start":1218,"line_end":1218,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":369807,"byte_end":369810,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2694},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":369942,"byte_end":369949,"line_start":1226,"line_end":1226,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":369876,"byte_end":369922,"line_start":1224,"line_end":1224,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":369927,"byte_end":369930,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2695},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":370249,"byte_end":370256,"line_start":1236,"line_end":1236,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":369996,"byte_end":370050,"line_start":1230,"line_end":1230,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":370055,"byte_end":370058,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":370063,"byte_end":370136,"line_start":1232,"line_end":1232,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":370141,"byte_end":370213,"line_start":1233,"line_end":1233,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":370218,"byte_end":370229,"line_start":1234,"line_end":1234,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":370234,"byte_end":370237,"line_start":1235,"line_end":1235,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7392},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":372080,"byte_end":372085,"line_start":1293,"line_end":1293,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::io::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":7394}],"decl_id":null,"docs":" An iterator over `u8` values of a reader.","sig":null,"attributes":[{"value":"/ An iterator over `u8` values of a reader.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":371819,"byte_end":371864,"line_start":1286,"line_end":1286,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":371865,"byte_end":371868,"line_start":1287,"line_end":1287,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling [`bytes`] on a reader.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":371869,"byte_end":371939,"line_start":1288,"line_end":1288,"column_start":1,"column_end":71}},{"value":"/ Please see the documentation of [`bytes`] for more details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":371940,"byte_end":372003,"line_start":1289,"line_end":1289,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":372004,"byte_end":372007,"line_start":1290,"line_end":1290,"column_start":1,"column_end":4}},{"value":"/ [`bytes`]: trait.Read.html#method.bytes","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":372008,"byte_end":372051,"line_start":1291,"line_end":1291,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":7398},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":372874,"byte_end":372879,"line_start":1321,"line_end":1321,"column_start":12,"column_end":17},"name":"Split","qualname":"::io::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":7400},{"krate":0,"index":7401}],"decl_id":null,"docs":" An iterator over the contents of an instance of `BufRead` split on a\n particular byte.","sig":null,"attributes":[{"value":"/ An iterator over the contents of an instance of `BufRead` split on a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":372559,"byte_end":372631,"line_start":1313,"line_end":1313,"column_start":1,"column_end":73}},{"value":"/ particular byte.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":372632,"byte_end":372652,"line_start":1314,"line_end":1314,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":372653,"byte_end":372656,"line_start":1315,"line_end":1315,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling [`split`] on a `BufRead`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":372657,"byte_end":372730,"line_start":1316,"line_end":1316,"column_start":1,"column_end":74}},{"value":"/ Please see the documentation of [`split`] for more details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":372731,"byte_end":372794,"line_start":1317,"line_end":1317,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":372795,"byte_end":372798,"line_start":1318,"line_end":1318,"column_start":1,"column_end":4}},{"value":"/ [`split`]: trait.BufRead.html#method.split","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":372799,"byte_end":372845,"line_start":1319,"line_end":1319,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":7405},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":373668,"byte_end":373673,"line_start":1351,"line_end":1351,"column_start":12,"column_end":17},"name":"Lines","qualname":"::io::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":7407}],"decl_id":null,"docs":" An iterator over the lines of an instance of `BufRead`.","sig":null,"attributes":[{"value":"/ An iterator over the lines of an instance of `BufRead`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":373387,"byte_end":373446,"line_start":1344,"line_end":1344,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":373447,"byte_end":373450,"line_start":1345,"line_end":1345,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling [`lines`] on a `BufRead`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":373451,"byte_end":373524,"line_start":1346,"line_end":1346,"column_start":1,"column_end":74}},{"value":"/ Please see the documentation of [`lines`] for more details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":373525,"byte_end":373588,"line_start":1347,"line_end":1347,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":373589,"byte_end":373592,"line_start":1348,"line_end":1348,"column_start":1,"column_end":4}},{"value":"/ [`lines`]: trait.BufRead.html#method.lines","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":373593,"byte_end":373639,"line_start":1349,"line_end":1349,"column_start":1,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":2718},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":2719},{"krate":0,"index":2720},{"krate":0,"index":2721},{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2729},{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2732},{"krate":0,"index":2733},{"krate":0,"index":2734},{"krate":0,"index":2735},{"krate":0,"index":2736},{"krate":0,"index":2737},{"krate":0,"index":2896},{"krate":0,"index":3022},{"krate":0,"index":3132},{"krate":0,"index":3244},{"krate":0,"index":7524},{"krate":0,"index":7541},{"krate":0,"index":7539},{"krate":0,"index":7536},{"krate":0,"index":7537},{"krate":0,"index":7533},{"krate":0,"index":7534},{"krate":0,"index":7531},{"krate":0,"index":3317},{"krate":0,"index":3318},{"krate":0,"index":3319}],"decl_id":null,"docs":" Networking primitives for TCP/UDP communication.","sig":null,"attributes":[{"value":"/ Networking primitives for TCP/UDP communication.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":461212,"byte_end":461264,"line_start":18,"line_end":18,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":461265,"byte_end":461268,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This module provides networking functionality for the Transmission Control and User","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":461269,"byte_end":461356,"line_start":20,"line_end":20,"column_start":1,"column_end":88}},{"value":"/ Datagram Protocols, as well as types for IP and socket addresses.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":461357,"byte_end":461426,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":461427,"byte_end":461430,"line_start":22,"line_end":22,"column_start":1,"column_end":4}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7412},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":464633,"byte_end":464635,"line_start":39,"line_end":39,"column_start":5,"column_end":7},"name":"V4","qualname":"::net::ip::IpAddr::V4","value":"IpAddr::V4(Ipv4Addr)","parent":{"krate":0,"index":7411},"children":[],"decl_id":null,"docs":" An IPv4 address.\n","sig":null,"attributes":[{"value":"/ An IPv4 address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":464608,"byte_end":464628,"line_start":38,"line_end":38,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7415},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":464676,"byte_end":464678,"line_start":41,"line_end":41,"column_start":5,"column_end":7},"name":"V6","qualname":"::net::ip::IpAddr::V6","value":"IpAddr::V6(Ipv6Addr)","parent":{"krate":0,"index":7411},"children":[],"decl_id":null,"docs":" An IPv6 address.\n","sig":null,"attributes":[{"value":"/ An IPv6 address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":464651,"byte_end":464671,"line_start":40,"line_end":40,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":7411},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":464595,"byte_end":464601,"line_start":37,"line_end":37,"column_start":10,"column_end":16},"name":"IpAddr","qualname":"::net::ip::IpAddr","value":"pub enum IpAddr {\n\n    /// An IPv4 address.\n    V4(Ipv4Addr),\n\n    /// An IPv6 address.\n    V6(Ipv6Addr),\n}","parent":null,"children":[{"krate":0,"index":7412},{"krate":0,"index":7415}],"decl_id":null,"docs":" An IP address, either IPv4 or IPv6.","sig":null,"attributes":[{"value":"/ An IP address, either IPv4 or IPv6.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":464138,"byte_end":464177,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":464178,"byte_end":464181,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This enum can contain either an [`Ipv4Addr`] or an [`Ipv6Addr`], see their","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":464182,"byte_end":464260,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ respective documentation for more details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":464261,"byte_end":464307,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":464308,"byte_end":464311,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ The size of an `IpAddr` instance may vary depending on the target operating","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":464312,"byte_end":464391,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ system.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":464392,"byte_end":464403,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":464404,"byte_end":464407,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Ipv4Addr`]: ../../std/net/struct.Ipv4Addr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":464408,"byte_end":464460,"line_start":33,"line_end":33,"column_start":1,"column_end":53}},{"value":"/ [`Ipv6Addr`]: ../../std/net/struct.Ipv6Addr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":464461,"byte_end":464513,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":464514,"byte_end":464517,"line_start":35,"line_end":35,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":7441},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465392,"byte_end":465400,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"Ipv4Addr","qualname":"::net::ip::Ipv4Addr","value":"Ipv4Addr {  }","parent":null,"children":[{"krate":0,"index":7442}],"decl_id":null,"docs":" An IPv4 address.","sig":null,"attributes":[{"value":"/ An IPv4 address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":464693,"byte_end":464713,"line_start":44,"line_end":44,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":464714,"byte_end":464717,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ IPv4 addresses are defined as 32-bit integers in [IETF RFC 791].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":464718,"byte_end":464786,"line_start":46,"line_end":46,"column_start":1,"column_end":69}},{"value":"/ They are usually represented as four octets.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":464787,"byte_end":464835,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":464836,"byte_end":464839,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ See [`IpAddr`] for a type encompassing both IPv4 and IPv6 addresses.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":464840,"byte_end":464912,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":464913,"byte_end":464916,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The size of an `Ipv4Addr` struct may vary depending on the target operating","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":464917,"byte_end":464996,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ system.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":464997,"byte_end":465008,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465009,"byte_end":465012,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [IETF RFC 791]: https://tools.ietf.org/html/rfc791","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465013,"byte_end":465067,"line_start":54,"line_end":54,"column_start":1,"column_end":55}},{"value":"/ [`IpAddr`]: ../../std/net/enum.IpAddr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465068,"byte_end":465114,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465115,"byte_end":465118,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Textual representation","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465119,"byte_end":465147,"line_start":57,"line_end":57,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465148,"byte_end":465151,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ `Ipv4Addr` provides a [`FromStr`] implementation. The four octets are in decimal","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465152,"byte_end":465236,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/ notation, divided by `.` (this is called \"dot-decimal notation\").","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465237,"byte_end":465306,"line_start":60,"line_end":60,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465307,"byte_end":465310,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ [`FromStr`]: ../../std/str/trait.FromStr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465311,"byte_end":465360,"line_start":62,"line_end":62,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465361,"byte_end":465364,"line_start":63,"line_end":63,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":7444},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":466312,"byte_end":466320,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"Ipv6Addr","qualname":"::net::ip::Ipv6Addr","value":"Ipv6Addr {  }","parent":null,"children":[{"krate":0,"index":7445}],"decl_id":null,"docs":" An IPv6 address.","sig":null,"attributes":[{"value":"/ An IPv6 address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465429,"byte_end":465449,"line_start":69,"line_end":69,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465450,"byte_end":465453,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ IPv6 addresses are defined as 128-bit integers in [IETF RFC 4291].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465454,"byte_end":465524,"line_start":71,"line_end":71,"column_start":1,"column_end":71}},{"value":"/ They are usually represented as eight 16-bit segments.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465525,"byte_end":465583,"line_start":72,"line_end":72,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465584,"byte_end":465587,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ See [`IpAddr`] for a type encompassing both IPv4 and IPv6 addresses.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465588,"byte_end":465660,"line_start":74,"line_end":74,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465661,"byte_end":465664,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ The size of an `Ipv6Addr` struct may vary depending on the target operating","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465665,"byte_end":465744,"line_start":76,"line_end":76,"column_start":1,"column_end":80}},{"value":"/ system.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465745,"byte_end":465756,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465757,"byte_end":465760,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ [IETF RFC 4291]: https://tools.ietf.org/html/rfc4291","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465761,"byte_end":465817,"line_start":79,"line_end":79,"column_start":1,"column_end":57}},{"value":"/ [`IpAddr`]: ../../std/net/enum.IpAddr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465818,"byte_end":465864,"line_start":80,"line_end":80,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465865,"byte_end":465868,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ # Textual representation","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465869,"byte_end":465897,"line_start":82,"line_end":82,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465898,"byte_end":465901,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ `Ipv6Addr` provides a [`FromStr`] implementation. There are many ways to represent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465902,"byte_end":465988,"line_start":84,"line_end":84,"column_start":1,"column_end":87}},{"value":"/ an IPv6 address in text, but in general, each segments is written in hexadecimal","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":465989,"byte_end":466073,"line_start":85,"line_end":85,"column_start":1,"column_end":85}},{"value":"/ notation, and segments are separated by `:`. For more information, see","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":466074,"byte_end":466148,"line_start":86,"line_end":86,"column_start":1,"column_end":75}},{"value":"/ [IETF RFC 5952].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":466149,"byte_end":466169,"line_start":87,"line_end":87,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":466170,"byte_end":466173,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ [`FromStr`]: ../../std/str/trait.FromStr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":466174,"byte_end":466223,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/ [IETF RFC 5952]: https://tools.ietf.org/html/rfc5952","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":466224,"byte_end":466280,"line_start":90,"line_end":90,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":466281,"byte_end":466284,"line_start":91,"line_end":91,"column_start":1,"column_end":4}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7448},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":466458,"byte_end":466472,"line_start":100,"line_end":100,"column_start":5,"column_end":19},"name":"InterfaceLocal","qualname":"::net::ip::Ipv6MulticastScope::InterfaceLocal","value":"Ipv6MulticastScope::InterfaceLocal","parent":{"krate":0,"index":7447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7450},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":466478,"byte_end":466487,"line_start":101,"line_end":101,"column_start":5,"column_end":14},"name":"LinkLocal","qualname":"::net::ip::Ipv6MulticastScope::LinkLocal","value":"Ipv6MulticastScope::LinkLocal","parent":{"krate":0,"index":7447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7452},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":466493,"byte_end":466503,"line_start":102,"line_end":102,"column_start":5,"column_end":15},"name":"RealmLocal","qualname":"::net::ip::Ipv6MulticastScope::RealmLocal","value":"Ipv6MulticastScope::RealmLocal","parent":{"krate":0,"index":7447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7454},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":466509,"byte_end":466519,"line_start":103,"line_end":103,"column_start":5,"column_end":15},"name":"AdminLocal","qualname":"::net::ip::Ipv6MulticastScope::AdminLocal","value":"Ipv6MulticastScope::AdminLocal","parent":{"krate":0,"index":7447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7456},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":466525,"byte_end":466534,"line_start":104,"line_end":104,"column_start":5,"column_end":14},"name":"SiteLocal","qualname":"::net::ip::Ipv6MulticastScope::SiteLocal","value":"Ipv6MulticastScope::SiteLocal","parent":{"krate":0,"index":7447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7458},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":466540,"byte_end":466557,"line_start":105,"line_end":105,"column_start":5,"column_end":22},"name":"OrganizationLocal","qualname":"::net::ip::Ipv6MulticastScope::OrganizationLocal","value":"Ipv6MulticastScope::OrganizationLocal","parent":{"krate":0,"index":7447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7460},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":466563,"byte_end":466569,"line_start":106,"line_end":106,"column_start":5,"column_end":11},"name":"Global","qualname":"::net::ip::Ipv6MulticastScope::Global","value":"Ipv6MulticastScope::Global","parent":{"krate":0,"index":7447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7447},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":466433,"byte_end":466451,"line_start":99,"line_end":99,"column_start":10,"column_end":28},"name":"Ipv6MulticastScope","qualname":"::net::ip::Ipv6MulticastScope","value":"pub enum Ipv6MulticastScope {\n    InterfaceLocal,\n    LinkLocal,\n    RealmLocal,\n    AdminLocal,\n    SiteLocal,\n    OrganizationLocal,\n    Global,\n}","parent":null,"children":[{"krate":0,"index":7448},{"krate":0,"index":7450},{"krate":0,"index":7452},{"krate":0,"index":7454},{"krate":0,"index":7456},{"krate":0,"index":7458},{"krate":0,"index":7460}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":466350,"byte_end":466372,"line_start":97,"line_end":97,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2747},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":467015,"byte_end":467029,"line_start":119,"line_end":119,"column_start":12,"column_end":26},"name":"is_unspecified","qualname":"<IpAddr>::is_unspecified","value":"pub fn is_unspecified(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] for the special 'unspecified' address.","sig":null,"attributes":[{"value":"/ Returns [`true`] for the special 'unspecified' address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":466592,"byte_end":466651,"line_start":110,"line_end":110,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":466656,"byte_end":466659,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ See the documentation for [`Ipv4Addr::is_unspecified`][IPv4] and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":466664,"byte_end":466732,"line_start":112,"line_end":112,"column_start":5,"column_end":73}},{"value":"/ [`Ipv6Addr::is_unspecified`][IPv6] for more details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":466737,"byte_end":466793,"line_start":113,"line_end":113,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":466798,"byte_end":466801,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ [IPv4]: ../../std/net/struct.Ipv4Addr.html#method.is_unspecified","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":466806,"byte_end":466874,"line_start":115,"line_end":115,"column_start":5,"column_end":73}},{"value":"/ [IPv6]: ../../std/net/struct.Ipv6Addr.html#method.is_unspecified","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":466879,"byte_end":466947,"line_start":116,"line_end":116,"column_start":5,"column_end":73}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":466952,"byte_end":466995,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":467000,"byte_end":467003,"line_start":118,"line_end":118,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2748},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":467594,"byte_end":467605,"line_start":135,"line_end":135,"column_start":12,"column_end":23},"name":"is_loopback","qualname":"<IpAddr>::is_loopback","value":"pub fn is_loopback(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this is a loopback address.","sig":null,"attributes":[{"value":"/ Returns [`true`] if this is a loopback address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":467191,"byte_end":467242,"line_start":126,"line_end":126,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":467247,"byte_end":467250,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ See the documentation for [`Ipv4Addr::is_loopback`][IPv4] and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":467255,"byte_end":467320,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/ [`Ipv6Addr::is_loopback`][IPv6] for more details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":467325,"byte_end":467378,"line_start":129,"line_end":129,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":467383,"byte_end":467386,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ [IPv4]: ../../std/net/struct.Ipv4Addr.html#method.is_loopback","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":467391,"byte_end":467456,"line_start":131,"line_end":131,"column_start":5,"column_end":70}},{"value":"/ [IPv6]: ../../std/net/struct.Ipv6Addr.html#method.is_loopback","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":467461,"byte_end":467526,"line_start":132,"line_end":132,"column_start":5,"column_end":70}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":467531,"byte_end":467574,"line_start":133,"line_end":133,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":467579,"byte_end":467582,"line_start":134,"line_end":134,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2749},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":468173,"byte_end":468182,"line_start":151,"line_end":151,"column_start":12,"column_end":21},"name":"is_global","qualname":"<IpAddr>::is_global","value":"pub fn is_global(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the address appears to be globally routable.","sig":null,"attributes":[{"value":"/ Returns [`true`] if the address appears to be globally routable.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":467761,"byte_end":467829,"line_start":142,"line_end":142,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":467834,"byte_end":467837,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ See the documentation for [`Ipv4Addr::is_global`][IPv4] and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":467842,"byte_end":467905,"line_start":144,"line_end":144,"column_start":5,"column_end":68}},{"value":"/ [`Ipv6Addr::is_global`][IPv6] for more details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":467910,"byte_end":467961,"line_start":145,"line_end":145,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":467966,"byte_end":467969,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ [IPv4]: ../../std/net/struct.Ipv4Addr.html#method.is_global","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":467974,"byte_end":468037,"line_start":147,"line_end":147,"column_start":5,"column_end":68}},{"value":"/ [IPv6]: ../../std/net/struct.Ipv6Addr.html#method.is_global","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":468042,"byte_end":468105,"line_start":148,"line_end":148,"column_start":5,"column_end":68}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":468110,"byte_end":468153,"line_start":149,"line_end":149,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":468158,"byte_end":468161,"line_start":150,"line_end":150,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2750},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":468742,"byte_end":468754,"line_start":167,"line_end":167,"column_start":12,"column_end":24},"name":"is_multicast","qualname":"<IpAddr>::is_multicast","value":"pub fn is_multicast(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this is a multicast address.","sig":null,"attributes":[{"value":"/ Returns [`true`] if this is a multicast address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":468334,"byte_end":468386,"line_start":158,"line_end":158,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":468391,"byte_end":468394,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ See the documentation for [`Ipv4Addr::is_multicast`][IPv4] and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":468399,"byte_end":468465,"line_start":160,"line_end":160,"column_start":5,"column_end":71}},{"value":"/ [`Ipv6Addr::is_multicast`][IPv6] for more details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":468470,"byte_end":468524,"line_start":161,"line_end":161,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":468529,"byte_end":468532,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [IPv4]: ../../std/net/struct.Ipv4Addr.html#method.is_multicast","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":468537,"byte_end":468603,"line_start":163,"line_end":163,"column_start":5,"column_end":71}},{"value":"/ [IPv6]: ../../std/net/struct.Ipv6Addr.html#method.is_multicast","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":468608,"byte_end":468674,"line_start":164,"line_end":164,"column_start":5,"column_end":71}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":468679,"byte_end":468722,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":468727,"byte_end":468730,"line_start":166,"line_end":166,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2751},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":469364,"byte_end":469380,"line_start":183,"line_end":183,"column_start":12,"column_end":28},"name":"is_documentation","qualname":"<IpAddr>::is_documentation","value":"pub fn is_documentation(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this address is in a range designated for documentation.","sig":null,"attributes":[{"value":"/ Returns [`true`] if this address is in a range designated for documentation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":468912,"byte_end":468992,"line_start":174,"line_end":174,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":468997,"byte_end":469000,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ See the documentation for [`Ipv4Addr::is_documentation`][IPv4] and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":469005,"byte_end":469075,"line_start":176,"line_end":176,"column_start":5,"column_end":75}},{"value":"/ [`Ipv6Addr::is_documentation`][IPv6] for more details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":469080,"byte_end":469138,"line_start":177,"line_end":177,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":469143,"byte_end":469146,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ [IPv4]: ../../std/net/struct.Ipv4Addr.html#method.is_documentation","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":469151,"byte_end":469221,"line_start":179,"line_end":179,"column_start":5,"column_end":75}},{"value":"/ [IPv6]: ../../std/net/struct.Ipv6Addr.html#method.is_documentation","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":469226,"byte_end":469296,"line_start":180,"line_end":180,"column_start":5,"column_end":75}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":469301,"byte_end":469344,"line_start":181,"line_end":181,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":469349,"byte_end":469352,"line_start":182,"line_end":182,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2752},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":469790,"byte_end":469797,"line_start":196,"line_end":196,"column_start":12,"column_end":19},"name":"is_ipv4","qualname":"<IpAddr>::is_ipv4","value":"pub fn is_ipv4(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this address is an [IPv4 address], and [`false`] otherwise.","sig":null,"attributes":[{"value":"/ Returns [`true`] if this address is an [IPv4 address], and [`false`] otherwise.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":469546,"byte_end":469629,"line_start":190,"line_end":190,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":469634,"byte_end":469637,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":469642,"byte_end":469685,"line_start":192,"line_end":192,"column_start":5,"column_end":48}},{"value":"/ [`false`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":469690,"byte_end":469734,"line_start":193,"line_end":193,"column_start":5,"column_end":49}},{"value":"/ [IPv4 address]: #variant.V4","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":469739,"byte_end":469770,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":469775,"byte_end":469778,"line_start":195,"line_end":195,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2753},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":470108,"byte_end":470115,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"is_ipv6","qualname":"<IpAddr>::is_ipv6","value":"pub fn is_ipv6(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this address is an [IPv6 address], and [`false`] otherwise.","sig":null,"attributes":[{"value":"/ Returns [`true`] if this address is an [IPv6 address], and [`false`] otherwise.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":469864,"byte_end":469947,"line_start":200,"line_end":200,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":469952,"byte_end":469955,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":469960,"byte_end":470003,"line_start":202,"line_end":202,"column_start":5,"column_end":48}},{"value":"/ [`false`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":470008,"byte_end":470052,"line_start":203,"line_end":203,"column_start":5,"column_end":49}},{"value":"/ [IPv6 address]: #variant.V6","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":470057,"byte_end":470088,"line_start":204,"line_end":204,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":470093,"byte_end":470096,"line_start":205,"line_end":205,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2755},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":470358,"byte_end":470361,"line_start":216,"line_end":216,"column_start":18,"column_end":21},"name":"new","qualname":"<Ipv4Addr>::new","value":"pub const fn new(u8, u8, u8, u8) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Creates a new IPv4 address from four eight-bit octets.","sig":null,"attributes":[{"value":"/ Creates a new IPv4 address from four eight-bit octets.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":470200,"byte_end":470258,"line_start":212,"line_end":212,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":470263,"byte_end":470266,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ The result will represent the IP address `a`.`b`.`c`.`d`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":470271,"byte_end":470332,"line_start":214,"line_end":214,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":470337,"byte_end":470340,"line_start":215,"line_end":215,"column_start":5,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":2756},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":470862,"byte_end":470871,"line_start":230,"line_end":230,"column_start":15,"column_end":24},"name":"LOCALHOST","qualname":"::net::ip::Ipv4Addr::LOCALHOST","value":"Self","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" An IPv4 address with the address pointing to localhost: 127.0.0.1.","sig":null,"attributes":[{"value":"/ An IPv4 address with the address pointing to localhost: 127.0.0.1.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":470769,"byte_end":470839,"line_start":228,"line_end":228,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":470844,"byte_end":470847,"line_start":229,"line_end":229,"column_start":5,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":2757},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":471001,"byte_end":471012,"line_start":234,"line_end":234,"column_start":15,"column_end":26},"name":"UNSPECIFIED","qualname":"::net::ip::Ipv4Addr::UNSPECIFIED","value":"Self","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" An IPv4 address representing an unspecified address: 0.0.0.0","sig":null,"attributes":[{"value":"/ An IPv4 address representing an unspecified address: 0.0.0.0","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":470914,"byte_end":470978,"line_start":232,"line_end":232,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":470983,"byte_end":470986,"line_start":233,"line_end":233,"column_start":5,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":2758},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":471147,"byte_end":471156,"line_start":238,"line_end":238,"column_start":15,"column_end":24},"name":"BROADCAST","qualname":"::net::ip::Ipv4Addr::BROADCAST","value":"Self","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" An IPv4 address representing the broadcast address: 255.255.255.255","sig":null,"attributes":[{"value":"/ An IPv4 address representing the broadcast address: 255.255.255.255","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":471053,"byte_end":471124,"line_start":236,"line_end":236,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":471129,"byte_end":471132,"line_start":237,"line_end":237,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2759},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":471291,"byte_end":471297,"line_start":242,"line_end":242,"column_start":12,"column_end":18},"name":"octets","qualname":"<Ipv4Addr>::octets","value":"pub fn octets(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns the four eight-bit integers that make up this address.","sig":null,"attributes":[{"value":"/ Returns the four eight-bit integers that make up this address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":471205,"byte_end":471271,"line_start":240,"line_end":240,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":471276,"byte_end":471279,"line_start":241,"line_end":241,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":471804,"byte_end":471818,"line_start":255,"line_end":255,"column_start":18,"column_end":32},"name":"is_unspecified","qualname":"<Ipv4Addr>::is_unspecified","value":"pub const fn is_unspecified(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] for the special 'unspecified' address (0.0.0.0).","sig":null,"attributes":[{"value":"/ Returns [`true`] for the special 'unspecified' address (0.0.0.0).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":471451,"byte_end":471520,"line_start":247,"line_end":247,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":471525,"byte_end":471528,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This property is defined in _UNIX Network Programming, Second Edition_,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":471533,"byte_end":471608,"line_start":249,"line_end":249,"column_start":5,"column_end":80}},{"value":"/ W. Richard Stevens, p. 891; see also [ip7].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":471613,"byte_end":471660,"line_start":250,"line_end":250,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":471665,"byte_end":471668,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ [ip7]: http://man7.org/linux/man-pages/man7/ip.7.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":471673,"byte_end":471730,"line_start":252,"line_end":252,"column_start":5,"column_end":62}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":471735,"byte_end":471778,"line_start":253,"line_end":253,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":471783,"byte_end":471786,"line_start":254,"line_end":254,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2762},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":472141,"byte_end":472152,"line_start":266,"line_end":266,"column_start":12,"column_end":23},"name":"is_loopback","qualname":"<Ipv4Addr>::is_loopback","value":"pub fn is_loopback(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this is a loopback address (127.0.0.0/8).","sig":null,"attributes":[{"value":"/ Returns [`true`] if this is a loopback address (127.0.0.0/8).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":471878,"byte_end":471943,"line_start":259,"line_end":259,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":471948,"byte_end":471951,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This property is defined by [IETF RFC 1122].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":471956,"byte_end":472004,"line_start":261,"line_end":261,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":472009,"byte_end":472012,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 1122]: https://tools.ietf.org/html/rfc1122","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":472017,"byte_end":472073,"line_start":263,"line_end":263,"column_start":5,"column_end":61}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":472078,"byte_end":472121,"line_start":264,"line_end":264,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":472126,"byte_end":472129,"line_start":265,"line_end":265,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2763},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":472568,"byte_end":472578,"line_start":281,"line_end":281,"column_start":12,"column_end":22},"name":"is_private","qualname":"<Ipv4Addr>::is_private","value":"pub fn is_private(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this is a private address.","sig":null,"attributes":[{"value":"/ Returns [`true`] if this is a private address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":472213,"byte_end":472263,"line_start":270,"line_end":270,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":472268,"byte_end":472271,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ The private address ranges are defined in [IETF RFC 1918] and include:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":472276,"byte_end":472350,"line_start":272,"line_end":272,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":472355,"byte_end":472358,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/  - 10.0.0.0/8","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":472363,"byte_end":472380,"line_start":274,"line_end":274,"column_start":5,"column_end":22}},{"value":"/  - 172.16.0.0/12","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":472385,"byte_end":472405,"line_start":275,"line_end":275,"column_start":5,"column_end":25}},{"value":"/  - 192.168.0.0/16","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":472410,"byte_end":472431,"line_start":276,"line_end":276,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":472436,"byte_end":472439,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 1918]: https://tools.ietf.org/html/rfc1918","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":472444,"byte_end":472500,"line_start":278,"line_end":278,"column_start":5,"column_end":61}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":472505,"byte_end":472548,"line_start":279,"line_end":279,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":472553,"byte_end":472556,"line_start":280,"line_end":280,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2764},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":473058,"byte_end":473071,"line_start":297,"line_end":297,"column_start":12,"column_end":25},"name":"is_link_local","qualname":"<Ipv4Addr>::is_link_local","value":"pub fn is_link_local(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the address is link-local (169.254.0.0/16).","sig":null,"attributes":[{"value":"/ Returns [`true`] if the address is link-local (169.254.0.0/16).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":472793,"byte_end":472860,"line_start":290,"line_end":290,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":472865,"byte_end":472868,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ This property is defined by [IETF RFC 3927].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":472873,"byte_end":472921,"line_start":292,"line_end":292,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":472926,"byte_end":472929,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 3927]: https://tools.ietf.org/html/rfc3927","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":472934,"byte_end":472990,"line_start":294,"line_end":294,"column_start":5,"column_end":61}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":472995,"byte_end":473038,"line_start":295,"line_end":295,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":473043,"byte_end":473046,"line_start":296,"line_end":296,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2765},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":474516,"byte_end":474525,"line_start":326,"line_end":326,"column_start":12,"column_end":21},"name":"is_global","qualname":"<Ipv4Addr>::is_global","value":"pub fn is_global(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the address appears to be globally routable.\n See [iana-ipv4-special-registry][ipv4-sr].","sig":null,"attributes":[{"value":"/ Returns [`true`] if the address appears to be globally routable.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":473200,"byte_end":473268,"line_start":304,"line_end":304,"column_start":5,"column_end":73}},{"value":"/ See [iana-ipv4-special-registry][ipv4-sr].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":473273,"byte_end":473319,"line_start":305,"line_end":305,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":473324,"byte_end":473327,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ The following return false:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":473332,"byte_end":473363,"line_start":307,"line_end":307,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":473368,"byte_end":473371,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ - private addresses (see [`is_private()`](#method.is_private))","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":473376,"byte_end":473442,"line_start":309,"line_end":309,"column_start":5,"column_end":71}},{"value":"/ - the loopback address (see [`is_loopback()`](#method.is_loopback))","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":473447,"byte_end":473518,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ - the link-local address (see [`is_link_local()`](#method.is_link_local))","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":473523,"byte_end":473600,"line_start":311,"line_end":311,"column_start":5,"column_end":82}},{"value":"/ - the broadcast address (see [`is_broadcast()`](#method.is_broadcast))","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":473605,"byte_end":473679,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/ - addresses used for documentation (see [`is_documentation()`](#method.is_documentation))","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":473684,"byte_end":473777,"line_start":313,"line_end":313,"column_start":5,"column_end":98}},{"value":"/ - the unspecified address (see [`is_unspecified()`](#method.is_unspecified)), and the whole","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":473782,"byte_end":473877,"line_start":314,"line_end":314,"column_start":5,"column_end":100}},{"value":"/   0.0.0.0/8 block","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":473882,"byte_end":473903,"line_start":315,"line_end":315,"column_start":5,"column_end":26}},{"value":"/ - addresses reserved for future protocols (see","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":473908,"byte_end":473958,"line_start":316,"line_end":316,"column_start":5,"column_end":55}},{"value":"/ [`is_ietf_protocol_assignment()`](#method.is_ietf_protocol_assignment), except","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":473963,"byte_end":474045,"line_start":317,"line_end":317,"column_start":5,"column_end":87}},{"value":"/ `192.0.0.9/32` and `192.0.0.10/32` which are globally routable","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":474050,"byte_end":474116,"line_start":318,"line_end":318,"column_start":5,"column_end":71}},{"value":"/ - addresses reserved for future use (see [`is_reserved()`](#method.is_reserved)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":474121,"byte_end":474204,"line_start":319,"line_end":319,"column_start":5,"column_end":88}},{"value":"/ - addresses reserved for networking devices benchmarking (see","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":474209,"byte_end":474274,"line_start":320,"line_end":320,"column_start":5,"column_end":70}},{"value":"/ [`is_benchmarking`](#method.is_benchmarking))","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":474279,"byte_end":474328,"line_start":321,"line_end":321,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":474333,"byte_end":474336,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ [ipv4-sr]: https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":474341,"byte_end":474448,"line_start":323,"line_end":323,"column_start":5,"column_end":112}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":474453,"byte_end":474496,"line_start":324,"line_end":324,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":474501,"byte_end":474504,"line_start":325,"line_end":325,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2766},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":475517,"byte_end":475526,"line_start":351,"line_end":351,"column_start":12,"column_end":21},"name":"is_shared","qualname":"<Ipv4Addr>::is_shared","value":"pub fn is_shared(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this address is part of the Shared Address Space defined in\n [IETF RFC 6598] (`100.64.0.0/10`).","sig":null,"attributes":[{"value":"/ Returns [`true`] if this address is part of the Shared Address Space defined in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":475254,"byte_end":475337,"line_start":345,"line_end":345,"column_start":5,"column_end":88}},{"value":"/ [IETF RFC 6598] (`100.64.0.0/10`).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":475342,"byte_end":475380,"line_start":346,"line_end":346,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":475385,"byte_end":475388,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 6598]: https://tools.ietf.org/html/rfc6598","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":475393,"byte_end":475449,"line_start":348,"line_end":348,"column_start":5,"column_end":61}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":475454,"byte_end":475497,"line_start":349,"line_end":349,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":475502,"byte_end":475505,"line_start":350,"line_end":350,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2767},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":476421,"byte_end":476448,"line_start":370,"line_end":370,"column_start":12,"column_end":39},"name":"is_ietf_protocol_assignment","qualname":"<Ipv4Addr>::is_ietf_protocol_assignment","value":"pub fn is_ietf_protocol_assignment(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this address is part of `192.0.0.0/24`, which is reserved to\n IANA for IETF protocol assignments, as documented in [IETF RFC 6890].","sig":null,"attributes":[{"value":"/ Returns [`true`] if this address is part of `192.0.0.0/24`, which is reserved to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":475638,"byte_end":475722,"line_start":355,"line_end":355,"column_start":5,"column_end":89}},{"value":"/ IANA for IETF protocol assignments, as documented in [IETF RFC 6890].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":475727,"byte_end":475800,"line_start":356,"line_end":356,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":475805,"byte_end":475808,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ Note that parts of this block are in use:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":475813,"byte_end":475858,"line_start":358,"line_end":358,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":475863,"byte_end":475866,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ - `192.0.0.8/32` is the \"IPv4 dummy address\" (see [IETF RFC 7600])","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":475871,"byte_end":475941,"line_start":360,"line_end":360,"column_start":5,"column_end":75}},{"value":"/ - `192.0.0.9/32` is the \"Port Control Protocol Anycast\" (see [IETF RFC 7723])","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":475946,"byte_end":476027,"line_start":361,"line_end":361,"column_start":5,"column_end":86}},{"value":"/ - `192.0.0.10/32` is used for NAT traversal (see [IETF RFC 8155])","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":476032,"byte_end":476101,"line_start":362,"line_end":362,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":476106,"byte_end":476109,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 6890]: https://tools.ietf.org/html/rfc6890","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":476114,"byte_end":476170,"line_start":364,"line_end":364,"column_start":5,"column_end":61}},{"value":"/ [IETF RFC 7600]: https://tools.ietf.org/html/rfc7600","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":476175,"byte_end":476231,"line_start":365,"line_end":365,"column_start":5,"column_end":61}},{"value":"/ [IETF RFC 7723]: https://tools.ietf.org/html/rfc7723","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":476236,"byte_end":476292,"line_start":366,"line_end":366,"column_start":5,"column_end":61}},{"value":"/ [IETF RFC 8155]: https://tools.ietf.org/html/rfc8155","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":476297,"byte_end":476353,"line_start":367,"line_end":367,"column_start":5,"column_end":61}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":476358,"byte_end":476401,"line_start":368,"line_end":368,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":476406,"byte_end":476409,"line_start":369,"line_end":369,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2768},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":477029,"byte_end":477044,"line_start":382,"line_end":382,"column_start":12,"column_end":27},"name":"is_benchmarking","qualname":"<Ipv4Addr>::is_benchmarking","value":"pub fn is_benchmarking(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this address part of the `198.18.0.0/15` range, which is reserved for\n network devices benchmarking. This range is defined in [IETF RFC 2544] as `192.18.0.0`\n through `198.19.255.255` but [errata 423] corrects it to `198.18.0.0/15`.","sig":null,"attributes":[{"value":"/ Returns [`true`] if this address part of the `198.18.0.0/15` range, which is reserved for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":476559,"byte_end":476652,"line_start":374,"line_end":374,"column_start":5,"column_end":98}},{"value":"/ network devices benchmarking. This range is defined in [IETF RFC 2544] as `192.18.0.0`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":476657,"byte_end":476747,"line_start":375,"line_end":375,"column_start":5,"column_end":95}},{"value":"/ through `198.19.255.255` but [errata 423] corrects it to `198.18.0.0/15`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":476752,"byte_end":476829,"line_start":376,"line_end":376,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":476834,"byte_end":476837,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 2544]: https://tools.ietf.org/html/rfc2544","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":476842,"byte_end":476898,"line_start":378,"line_end":378,"column_start":5,"column_end":61}},{"value":"/ [errata 423]: https://www.rfc-editor.org/errata/eid423","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":476903,"byte_end":476961,"line_start":379,"line_end":379,"column_start":5,"column_end":63}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":476966,"byte_end":477009,"line_start":380,"line_end":380,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":477014,"byte_end":477017,"line_start":381,"line_end":381,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2769},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":477869,"byte_end":477880,"line_start":401,"line_end":401,"column_start":12,"column_end":23},"name":"is_reserved","qualname":"<Ipv4Addr>::is_reserved","value":"pub fn is_reserved(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this address is reserved by IANA for future use. [IETF RFC 1112]\n defines the block of reserved addresses as `240.0.0.0/4`. This range normally includes the\n broadcast address `255.255.255.255`, but this implementation explicitly excludes it, since\n it is obviously not reserved for future use.","sig":null,"attributes":[{"value":"/ Returns [`true`] if this address is reserved by IANA for future use. [IETF RFC 1112]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":477140,"byte_end":477228,"line_start":386,"line_end":386,"column_start":5,"column_end":93}},{"value":"/ defines the block of reserved addresses as `240.0.0.0/4`. This range normally includes the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":477233,"byte_end":477327,"line_start":387,"line_end":387,"column_start":5,"column_end":99}},{"value":"/ broadcast address `255.255.255.255`, but this implementation explicitly excludes it, since","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":477332,"byte_end":477426,"line_start":388,"line_end":388,"column_start":5,"column_end":99}},{"value":"/ it is obviously not reserved for future use.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":477431,"byte_end":477479,"line_start":389,"line_end":389,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":477484,"byte_end":477487,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 1112]: https://tools.ietf.org/html/rfc1112","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":477492,"byte_end":477548,"line_start":391,"line_end":391,"column_start":5,"column_end":61}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":477553,"byte_end":477596,"line_start":392,"line_end":392,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":477601,"byte_end":477604,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":477609,"byte_end":477622,"line_start":394,"line_end":394,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":477627,"byte_end":477630,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ As IANA assigns new addresses, this method will be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":477635,"byte_end":477689,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/ updated. This may result in non-reserved addresses being","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":477694,"byte_end":477754,"line_start":397,"line_end":397,"column_start":5,"column_end":65}},{"value":"/ treated as reserved in code that relies on an outdated version","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":477759,"byte_end":477825,"line_start":398,"line_end":398,"column_start":5,"column_end":71}},{"value":"/ of this method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":477830,"byte_end":477849,"line_start":399,"line_end":399,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":477854,"byte_end":477857,"line_start":400,"line_end":400,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2770},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":478304,"byte_end":478316,"line_start":413,"line_end":413,"column_start":12,"column_end":24},"name":"is_multicast","qualname":"<Ipv4Addr>::is_multicast","value":"pub fn is_multicast(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this is a multicast address (224.0.0.0/4).","sig":null,"attributes":[{"value":"/ Returns [`true`] if this is a multicast address (224.0.0.0/4).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":477971,"byte_end":478037,"line_start":405,"line_end":405,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":478042,"byte_end":478045,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Multicast addresses have a most significant octet between 224 and 239,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":478050,"byte_end":478124,"line_start":407,"line_end":407,"column_start":5,"column_end":79}},{"value":"/ and is defined by [IETF RFC 5771].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":478129,"byte_end":478167,"line_start":408,"line_end":408,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":478172,"byte_end":478175,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 5771]: https://tools.ietf.org/html/rfc5771","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":478180,"byte_end":478236,"line_start":410,"line_end":410,"column_start":5,"column_end":61}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":478241,"byte_end":478284,"line_start":411,"line_end":411,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":478289,"byte_end":478292,"line_start":412,"line_end":412,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2771},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":478701,"byte_end":478713,"line_start":424,"line_end":424,"column_start":12,"column_end":24},"name":"is_broadcast","qualname":"<Ipv4Addr>::is_broadcast","value":"pub fn is_broadcast(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this is a broadcast address (255.255.255.255).","sig":null,"attributes":[{"value":"/ Returns [`true`] if this is a broadcast address (255.255.255.255).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":478404,"byte_end":478474,"line_start":417,"line_end":417,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":478479,"byte_end":478482,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ A broadcast address has all octets set to 255 as defined in [IETF RFC 919].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":478487,"byte_end":478566,"line_start":419,"line_end":419,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":478571,"byte_end":478574,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 919]: https://tools.ietf.org/html/rfc919","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":478579,"byte_end":478633,"line_start":421,"line_end":421,"column_start":5,"column_end":59}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":478638,"byte_end":478681,"line_start":422,"line_end":422,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":478686,"byte_end":478689,"line_start":423,"line_end":423,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2772},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":479165,"byte_end":479181,"line_start":439,"line_end":439,"column_start":12,"column_end":28},"name":"is_documentation","qualname":"<Ipv4Addr>::is_documentation","value":"pub fn is_documentation(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this address is in a range designated for documentation.","sig":null,"attributes":[{"value":"/ Returns [`true`] if this address is in a range designated for documentation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":478775,"byte_end":478855,"line_start":428,"line_end":428,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":478860,"byte_end":478863,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ This is defined in [IETF RFC 5737]:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":478868,"byte_end":478907,"line_start":430,"line_end":430,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":478912,"byte_end":478915,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ - 192.0.2.0/24 (TEST-NET-1)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":478920,"byte_end":478951,"line_start":432,"line_end":432,"column_start":5,"column_end":36}},{"value":"/ - 198.51.100.0/24 (TEST-NET-2)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":478956,"byte_end":478990,"line_start":433,"line_end":433,"column_start":5,"column_end":39}},{"value":"/ - 203.0.113.0/24 (TEST-NET-3)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":478995,"byte_end":479028,"line_start":434,"line_end":434,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":479033,"byte_end":479036,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 5737]: https://tools.ietf.org/html/rfc5737","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":479041,"byte_end":479097,"line_start":436,"line_end":436,"column_start":5,"column_end":61}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":479102,"byte_end":479145,"line_start":437,"line_end":437,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":479150,"byte_end":479153,"line_start":438,"line_end":438,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2773},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":479579,"byte_end":479597,"line_start":454,"line_end":454,"column_start":12,"column_end":30},"name":"to_ipv6_compatible","qualname":"<Ipv4Addr>::to_ipv6_compatible","value":"pub fn to_ipv6_compatible(&Self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Converts this address to an IPv4-compatible [IPv6 address].","sig":null,"attributes":[{"value":"/ Converts this address to an IPv4-compatible [IPv6 address].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":479387,"byte_end":479450,"line_start":448,"line_end":448,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":479455,"byte_end":479458,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ a.b.c.d becomes ::a.b.c.d","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":479463,"byte_end":479492,"line_start":450,"line_end":450,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":479497,"byte_end":479500,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ [IPv6 address]: ../../std/net/struct.Ipv6Addr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":479505,"byte_end":479559,"line_start":452,"line_end":452,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":479564,"byte_end":479567,"line_start":453,"line_end":453,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2774},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":479987,"byte_end":480001,"line_start":467,"line_end":467,"column_start":12,"column_end":26},"name":"to_ipv6_mapped","qualname":"<Ipv4Addr>::to_ipv6_mapped","value":"pub fn to_ipv6_mapped(&Self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Converts this address to an IPv4-mapped [IPv6 address].","sig":null,"attributes":[{"value":"/ Converts this address to an IPv4-mapped [IPv6 address].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":479794,"byte_end":479853,"line_start":461,"line_end":461,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":479858,"byte_end":479861,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ a.b.c.d becomes ::ffff:a.b.c.d","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":479866,"byte_end":479900,"line_start":463,"line_end":463,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":479905,"byte_end":479908,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ [IPv6 address]: ../../std/net/struct.Ipv6Addr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":479913,"byte_end":479967,"line_start":465,"line_end":465,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":479972,"byte_end":479975,"line_start":466,"line_end":466,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2824},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":484416,"byte_end":484419,"line_start":637,"line_end":637,"column_start":18,"column_end":21},"name":"new","qualname":"<Ipv6Addr>::new","value":"pub const fn new(u16, u16, u16, u16, u16, u16, u16, u16) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Creates a new IPv6 address from eight 16-bit segments.","sig":null,"attributes":[{"value":"/ Creates a new IPv6 address from eight 16-bit segments.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":484256,"byte_end":484314,"line_start":633,"line_end":633,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":484319,"byte_end":484322,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ The result will represent the IP address `a:b:c:d:e:f:g:h`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":484327,"byte_end":484390,"line_start":635,"line_end":635,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":484395,"byte_end":484398,"line_start":636,"line_end":636,"column_start":5,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":2825},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":485225,"byte_end":485234,"line_start":664,"line_end":664,"column_start":15,"column_end":24},"name":"LOCALHOST","qualname":"::net::ip::Ipv6Addr::LOCALHOST","value":"Self","parent":{"krate":0,"index":2823},"children":[],"decl_id":null,"docs":" An IPv6 address representing localhost: `::1`.","sig":null,"attributes":[{"value":"/ An IPv6 address representing localhost: `::1`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":485152,"byte_end":485202,"line_start":662,"line_end":662,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":485207,"byte_end":485210,"line_start":663,"line_end":663,"column_start":5,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":2826},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":485372,"byte_end":485383,"line_start":668,"line_end":668,"column_start":15,"column_end":26},"name":"UNSPECIFIED","qualname":"::net::ip::Ipv6Addr::UNSPECIFIED","value":"Self","parent":{"krate":0,"index":2823},"children":[],"decl_id":null,"docs":" An IPv6 address representing the unspecified address: `::`","sig":null,"attributes":[{"value":"/ An IPv6 address representing the unspecified address: `::`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":485287,"byte_end":485349,"line_start":666,"line_end":666,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":485354,"byte_end":485357,"line_start":667,"line_end":667,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2827},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":485520,"byte_end":485528,"line_start":672,"line_end":672,"column_start":12,"column_end":20},"name":"segments","qualname":"<Ipv6Addr>::segments","value":"pub fn segments(&Self) -> [u16; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns the eight 16-bit segments that make up this address.","sig":null,"attributes":[{"value":"/ Returns the eight 16-bit segments that make up this address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":485436,"byte_end":485500,"line_start":670,"line_end":670,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":485505,"byte_end":485508,"line_start":671,"line_end":671,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2829},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":486288,"byte_end":486302,"line_start":693,"line_end":693,"column_start":12,"column_end":26},"name":"is_unspecified","qualname":"<Ipv6Addr>::is_unspecified","value":"pub fn is_unspecified(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] for the special 'unspecified' address (::).","sig":null,"attributes":[{"value":"/ Returns [`true`] for the special 'unspecified' address (::).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":486026,"byte_end":486090,"line_start":686,"line_end":686,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":486095,"byte_end":486098,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ This property is defined in [IETF RFC 4291].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":486103,"byte_end":486151,"line_start":688,"line_end":688,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":486156,"byte_end":486159,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 4291]: https://tools.ietf.org/html/rfc4291","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":486164,"byte_end":486220,"line_start":690,"line_end":690,"column_start":5,"column_end":61}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":486225,"byte_end":486268,"line_start":691,"line_end":691,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":486273,"byte_end":486276,"line_start":692,"line_end":692,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2830},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":486638,"byte_end":486649,"line_start":704,"line_end":704,"column_start":12,"column_end":23},"name":"is_loopback","qualname":"<Ipv6Addr>::is_loopback","value":"pub fn is_loopback(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this is a loopback address (::1).","sig":null,"attributes":[{"value":"/ Returns [`true`] if this is a loopback address (::1).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":486383,"byte_end":486440,"line_start":697,"line_end":697,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":486445,"byte_end":486448,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ This property is defined in [IETF RFC 4291].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":486453,"byte_end":486501,"line_start":699,"line_end":699,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":486506,"byte_end":486509,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 4291]: https://tools.ietf.org/html/rfc4291","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":486514,"byte_end":486570,"line_start":701,"line_end":701,"column_start":5,"column_end":61}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":486575,"byte_end":486618,"line_start":702,"line_end":702,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":486623,"byte_end":486626,"line_start":703,"line_end":703,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2831},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":487145,"byte_end":487154,"line_start":719,"line_end":719,"column_start":12,"column_end":21},"name":"is_global","qualname":"<Ipv6Addr>::is_global","value":"pub fn is_global(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the address appears to be globally routable.","sig":null,"attributes":[{"value":"/ Returns [`true`] if the address appears to be globally routable.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":486730,"byte_end":486798,"line_start":708,"line_end":708,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":486803,"byte_end":486806,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ The following return [`false`]:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":486811,"byte_end":486846,"line_start":710,"line_end":710,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":486851,"byte_end":486854,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ - the loopback address","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":486859,"byte_end":486885,"line_start":712,"line_end":712,"column_start":5,"column_end":31}},{"value":"/ - link-local and unique local unicast addresses","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":486890,"byte_end":486941,"line_start":713,"line_end":713,"column_start":5,"column_end":56}},{"value":"/ - interface-, link-, realm-, admin- and site-local multicast addresses","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":486946,"byte_end":487020,"line_start":714,"line_end":714,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":487025,"byte_end":487028,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":487033,"byte_end":487076,"line_start":716,"line_end":716,"column_start":5,"column_end":48}},{"value":"/ [`false`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":487081,"byte_end":487125,"line_start":717,"line_end":717,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":487130,"byte_end":487133,"line_start":718,"line_end":718,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2832},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":487622,"byte_end":487637,"line_start":734,"line_end":734,"column_start":12,"column_end":27},"name":"is_unique_local","qualname":"<Ipv6Addr>::is_unique_local","value":"pub fn is_unique_local(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this is a unique local address (`fc00::/7`).","sig":null,"attributes":[{"value":"/ Returns [`true`] if this is a unique local address (`fc00::/7`).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":487356,"byte_end":487424,"line_start":727,"line_end":727,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":487429,"byte_end":487432,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ This property is defined in [IETF RFC 4193].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":487437,"byte_end":487485,"line_start":729,"line_end":729,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":487490,"byte_end":487493,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 4193]: https://tools.ietf.org/html/rfc4193","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":487498,"byte_end":487554,"line_start":731,"line_end":731,"column_start":5,"column_end":61}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":487559,"byte_end":487602,"line_start":732,"line_end":732,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":487607,"byte_end":487610,"line_start":733,"line_end":733,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2833},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":489190,"byte_end":489218,"line_start":767,"line_end":767,"column_start":12,"column_end":40},"name":"is_unicast_link_local_strict","qualname":"<Ipv6Addr>::is_unicast_link_local_strict","value":"pub fn is_unicast_link_local_strict(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the address is a unicast link-local address (`fe80::/64`).","sig":null,"attributes":[{"value":"/ Returns [`true`] if the address is a unicast link-local address (`fe80::/64`).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":487714,"byte_end":487796,"line_start":738,"line_end":738,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":487801,"byte_end":487804,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ A common mis-conception is to think that \"unicast link-local addresses start with","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":487809,"byte_end":487894,"line_start":740,"line_end":740,"column_start":5,"column_end":90}},{"value":"/ `fe80::`\", but the [IETF RFC 4291] actually defines a stricter format for these addresses:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":487899,"byte_end":487993,"line_start":741,"line_end":741,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":487998,"byte_end":488001,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ ```no_rust","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":488006,"byte_end":488020,"line_start":743,"line_end":743,"column_start":5,"column_end":19}},{"value":"/ |   10     |","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":488025,"byte_end":488041,"line_start":744,"line_end":744,"column_start":5,"column_end":21}},{"value":"/ |  bits    |         54 bits         |          64 bits           |","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":488046,"byte_end":488117,"line_start":745,"line_end":745,"column_start":5,"column_end":76}},{"value":"/ +----------+-------------------------+----------------------------+","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":488122,"byte_end":488193,"line_start":746,"line_end":746,"column_start":5,"column_end":76}},{"value":"/ |1111111010|           0             |       interface ID         |","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":488198,"byte_end":488269,"line_start":747,"line_end":747,"column_start":5,"column_end":76}},{"value":"/ +----------+-------------------------+----------------------------+","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":488274,"byte_end":488345,"line_start":748,"line_end":748,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":488350,"byte_end":488357,"line_start":749,"line_end":749,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":488362,"byte_end":488365,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This method validates the format defined in the RFC and won't recognize the following","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":488370,"byte_end":488459,"line_start":751,"line_end":751,"column_start":5,"column_end":94}},{"value":"/ addresses such as `fe80:0:0:1::` or `fe81::` as unicast link-local addresses for example.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":488464,"byte_end":488557,"line_start":752,"line_end":752,"column_start":5,"column_end":98}},{"value":"/ If you need a less strict validation use [`is_unicast_link_local()`] instead.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":488562,"byte_end":488643,"line_start":753,"line_end":753,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":488648,"byte_end":488651,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ # See also","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":488656,"byte_end":488670,"line_start":755,"line_end":755,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":488675,"byte_end":488678,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ - [IETF RFC 4291 section 2.5.6]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":488683,"byte_end":488718,"line_start":757,"line_end":757,"column_start":5,"column_end":40}},{"value":"/ - [RFC 4291 errata 4406]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":488723,"byte_end":488751,"line_start":758,"line_end":758,"column_start":5,"column_end":33}},{"value":"/ - [`is_unicast_link_local()`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":488756,"byte_end":488789,"line_start":759,"line_end":759,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":488794,"byte_end":488797,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 4291]: https://tools.ietf.org/html/rfc4291","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":488802,"byte_end":488858,"line_start":761,"line_end":761,"column_start":5,"column_end":61}},{"value":"/ [IETF RFC 4291 section 2.5.6]: https://tools.ietf.org/html/rfc4291#section-2.5.6","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":488863,"byte_end":488947,"line_start":762,"line_end":762,"column_start":5,"column_end":89}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":488952,"byte_end":488995,"line_start":763,"line_end":763,"column_start":5,"column_end":48}},{"value":"/ [RFC 4291 errata 4406]: https://www.rfc-editor.org/errata/eid4406","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":489000,"byte_end":489069,"line_start":764,"line_end":764,"column_start":5,"column_end":74}},{"value":"/ [`is_unicast_link_local()`]: ../../std/net/struct.Ipv6Addr.html#method.is_unicast_link_local","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":489074,"byte_end":489170,"line_start":765,"line_end":765,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":489175,"byte_end":489178,"line_start":766,"line_end":766,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2834},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":490815,"byte_end":490836,"line_start":802,"line_end":802,"column_start":12,"column_end":33},"name":"is_unicast_link_local","qualname":"<Ipv6Addr>::is_unicast_link_local","value":"pub fn is_unicast_link_local(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the address is a unicast link-local address (`fe80::/10`).","sig":null,"attributes":[{"value":"/ Returns [`true`] if the address is a unicast link-local address (`fe80::/10`).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":489445,"byte_end":489527,"line_start":774,"line_end":774,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":489532,"byte_end":489535,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ This method returns [`true`] for addresses in the range reserved by [RFC 4291 section 2.4],","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":489540,"byte_end":489635,"line_start":776,"line_end":776,"column_start":5,"column_end":100}},{"value":"/ i.e. addresses with the following format:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":489640,"byte_end":489685,"line_start":777,"line_end":777,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":489690,"byte_end":489693,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ ```no_rust","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":489698,"byte_end":489712,"line_start":779,"line_end":779,"column_start":5,"column_end":19}},{"value":"/ |   10     |","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":489717,"byte_end":489733,"line_start":780,"line_end":780,"column_start":5,"column_end":21}},{"value":"/ |  bits    |         54 bits         |          64 bits           |","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":489738,"byte_end":489809,"line_start":781,"line_end":781,"column_start":5,"column_end":76}},{"value":"/ +----------+-------------------------+----------------------------+","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":489814,"byte_end":489885,"line_start":782,"line_end":782,"column_start":5,"column_end":76}},{"value":"/ |1111111010|    arbitratry value     |       interface ID         |","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":489890,"byte_end":489961,"line_start":783,"line_end":783,"column_start":5,"column_end":76}},{"value":"/ +----------+-------------------------+----------------------------+","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":489966,"byte_end":490037,"line_start":784,"line_end":784,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":490042,"byte_end":490049,"line_start":785,"line_end":785,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":490054,"byte_end":490057,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ As a result, this method consider addresses such as `fe80:0:0:1::` or `fe81::` to be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":490062,"byte_end":490150,"line_start":787,"line_end":787,"column_start":5,"column_end":93}},{"value":"/ unicast link-local addresses, whereas [`is_unicast_link_local_strict()`] does not. If you","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":490155,"byte_end":490248,"line_start":788,"line_end":788,"column_start":5,"column_end":98}},{"value":"/ need a strict validation fully compliant with the RFC, use","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":490253,"byte_end":490315,"line_start":789,"line_end":789,"column_start":5,"column_end":67}},{"value":"/ [`is_unicast_link_local_strict()`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":490320,"byte_end":490359,"line_start":790,"line_end":790,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":490364,"byte_end":490367,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # See also","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":490372,"byte_end":490386,"line_start":792,"line_end":792,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":490391,"byte_end":490394,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ - [IETF RFC 4291 section 2.4]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":490399,"byte_end":490432,"line_start":794,"line_end":794,"column_start":5,"column_end":38}},{"value":"/ - [RFC 4291 errata 4406]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":490437,"byte_end":490465,"line_start":795,"line_end":795,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":490470,"byte_end":490473,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 4291 section 2.4]: https://tools.ietf.org/html/rfc4291#section-2.4","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":490478,"byte_end":490558,"line_start":797,"line_end":797,"column_start":5,"column_end":85}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":490563,"byte_end":490606,"line_start":798,"line_end":798,"column_start":5,"column_end":48}},{"value":"/ [RFC 4291 errata 4406]: https://www.rfc-editor.org/errata/eid4406","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":490611,"byte_end":490680,"line_start":799,"line_end":799,"column_start":5,"column_end":74}},{"value":"/ [`is_unicast_link_local_strict()`]: ../../std/net/struct.Ipv6Addr.html#method.is_unicast_link_local_strict","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":490685,"byte_end":490795,"line_start":800,"line_end":800,"column_start":5,"column_end":115}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":490800,"byte_end":490803,"line_start":801,"line_end":801,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2835},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":491839,"byte_end":491860,"line_start":827,"line_end":827,"column_start":12,"column_end":33},"name":"is_unicast_site_local","qualname":"<Ipv6Addr>::is_unicast_site_local","value":"pub fn is_unicast_site_local(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this is a deprecated unicast site-local address (fec0::/10). The\n unicast site-local address format is defined in [RFC 4291 section 2.5.7] as:","sig":null,"attributes":[{"value":"/ Returns [`true`] if this is a deprecated unicast site-local address (fec0::/10). The","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":490913,"byte_end":491001,"line_start":806,"line_end":806,"column_start":5,"column_end":93}},{"value":"/ unicast site-local address format is defined in [RFC 4291 section 2.5.7] as:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":491006,"byte_end":491086,"line_start":807,"line_end":807,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":491091,"byte_end":491094,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ ```no_rust","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":491099,"byte_end":491113,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/ |   10     |","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":491118,"byte_end":491134,"line_start":810,"line_end":810,"column_start":5,"column_end":21}},{"value":"/ |  bits    |         54 bits         |         64 bits            |","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":491139,"byte_end":491210,"line_start":811,"line_end":811,"column_start":5,"column_end":76}},{"value":"/ +----------+-------------------------+----------------------------+","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":491215,"byte_end":491286,"line_start":812,"line_end":812,"column_start":5,"column_end":76}},{"value":"/ |1111111011|        subnet ID        |       interface ID         |","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":491291,"byte_end":491362,"line_start":813,"line_end":813,"column_start":5,"column_end":76}},{"value":"/ +----------+-------------------------+----------------------------+","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":491367,"byte_end":491438,"line_start":814,"line_end":814,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":491443,"byte_end":491450,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":491455,"byte_end":491458,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":491463,"byte_end":491506,"line_start":817,"line_end":817,"column_start":5,"column_end":48}},{"value":"/ [RFC 4291 section 2.5.7]: https://tools.ietf.org/html/rfc4291#section-2.5.7","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":491511,"byte_end":491590,"line_start":818,"line_end":818,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":491595,"byte_end":491598,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":491603,"byte_end":491616,"line_start":820,"line_end":820,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":491621,"byte_end":491624,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ As per [RFC 3879], the whole `FEC0::/10` prefix is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":491629,"byte_end":491683,"line_start":822,"line_end":822,"column_start":5,"column_end":59}},{"value":"/ deprecated. New software must not support site-local","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":491688,"byte_end":491744,"line_start":823,"line_end":823,"column_start":5,"column_end":61}},{"value":"/ addresses.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":491749,"byte_end":491763,"line_start":824,"line_end":824,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":491768,"byte_end":491771,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ [RFC 3879]: https://tools.ietf.org/html/rfc3879","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":491776,"byte_end":491827,"line_start":826,"line_end":826,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2836},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":492229,"byte_end":492245,"line_start":839,"line_end":839,"column_start":12,"column_end":28},"name":"is_documentation","qualname":"<Ipv6Addr>::is_documentation","value":"pub fn is_documentation(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this is an address reserved for documentation\n (2001:db8::/32).","sig":null,"attributes":[{"value":"/ Returns [`true`] if this is an address reserved for documentation","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":491937,"byte_end":492006,"line_start":831,"line_end":831,"column_start":5,"column_end":74}},{"value":"/ (2001:db8::/32).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":492011,"byte_end":492031,"line_start":832,"line_end":832,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":492036,"byte_end":492039,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ This property is defined in [IETF RFC 3849].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":492044,"byte_end":492092,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":492097,"byte_end":492100,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 3849]: https://tools.ietf.org/html/rfc3849","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":492105,"byte_end":492161,"line_start":836,"line_end":836,"column_start":5,"column_end":61}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":492166,"byte_end":492209,"line_start":837,"line_end":837,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":492214,"byte_end":492217,"line_start":838,"line_end":838,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2837},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":493184,"byte_end":493201,"line_start":864,"line_end":864,"column_start":12,"column_end":29},"name":"is_unicast_global","qualname":"<Ipv6Addr>::is_unicast_global","value":"pub fn is_unicast_global(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the address is a globally routable unicast address.","sig":null,"attributes":[{"value":"/ Returns [`true`] if the address is a globally routable unicast address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":492346,"byte_end":492421,"line_start":843,"line_end":843,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":492426,"byte_end":492429,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ The following return false:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":492434,"byte_end":492465,"line_start":845,"line_end":845,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":492470,"byte_end":492473,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ - the loopback address","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":492478,"byte_end":492504,"line_start":847,"line_end":847,"column_start":5,"column_end":31}},{"value":"/ - the link-local addresses","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":492509,"byte_end":492539,"line_start":848,"line_end":848,"column_start":5,"column_end":35}},{"value":"/ - unique local addresses","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":492544,"byte_end":492572,"line_start":849,"line_end":849,"column_start":5,"column_end":33}},{"value":"/ - the unspecified address","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":492577,"byte_end":492606,"line_start":850,"line_end":850,"column_start":5,"column_end":34}},{"value":"/ - the address range reserved for documentation","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":492611,"byte_end":492661,"line_start":851,"line_end":851,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":492666,"byte_end":492669,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ This method returns [`true`] for site-local addresses as per [RFC 4291 section 2.5.7]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":492674,"byte_end":492763,"line_start":853,"line_end":853,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":492768,"byte_end":492771,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ ```no_rust","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":492776,"byte_end":492790,"line_start":855,"line_end":855,"column_start":5,"column_end":19}},{"value":"/ The special behavior of [the site-local unicast] prefix defined in [RFC3513] must no longer","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":492795,"byte_end":492890,"line_start":856,"line_end":856,"column_start":5,"column_end":100}},{"value":"/ be supported in new implementations (i.e., new implementations must treat this prefix as","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":492895,"byte_end":492987,"line_start":857,"line_end":857,"column_start":5,"column_end":97}},{"value":"/ Global Unicast).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":492992,"byte_end":493012,"line_start":858,"line_end":858,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":493017,"byte_end":493024,"line_start":859,"line_end":859,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":493029,"byte_end":493032,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":493037,"byte_end":493080,"line_start":861,"line_end":861,"column_start":5,"column_end":48}},{"value":"/ [RFC 4291 section 2.5.7]: https://tools.ietf.org/html/rfc4291#section-2.5.7","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":493085,"byte_end":493164,"line_start":862,"line_end":862,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":493169,"byte_end":493172,"line_start":863,"line_end":863,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2838},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":493546,"byte_end":493561,"line_start":875,"line_end":875,"column_start":12,"column_end":27},"name":"multicast_scope","qualname":"<Ipv6Addr>::multicast_scope","value":"pub fn multicast_scope(&Self) -> Option<Ipv6MulticastScope>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address's multicast scope if the address is multicast.","sig":null,"attributes":[{"value":"/ Returns the address's multicast scope if the address is multicast.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":493456,"byte_end":493526,"line_start":873,"line_end":873,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":493531,"byte_end":493534,"line_start":874,"line_end":874,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2839},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":494458,"byte_end":494470,"line_start":899,"line_end":899,"column_start":12,"column_end":24},"name":"is_multicast","qualname":"<Ipv6Addr>::is_multicast","value":"pub fn is_multicast(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this is a multicast address (ff00::/8).","sig":null,"attributes":[{"value":"/ Returns [`true`] if this is a multicast address (ff00::/8).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":494197,"byte_end":494260,"line_start":892,"line_end":892,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":494265,"byte_end":494268,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ This property is defined by [IETF RFC 4291].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":494273,"byte_end":494321,"line_start":894,"line_end":894,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":494326,"byte_end":494329,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 4291]: https://tools.ietf.org/html/rfc4291","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":494334,"byte_end":494390,"line_start":896,"line_end":896,"column_start":5,"column_end":61}},{"value":"/ [`true`]: ../../std/primitive.bool.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":494395,"byte_end":494438,"line_start":897,"line_end":897,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":494443,"byte_end":494446,"line_start":898,"line_end":898,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2840},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":494890,"byte_end":494897,"line_start":911,"line_end":911,"column_start":12,"column_end":19},"name":"to_ipv4","qualname":"<Ipv6Addr>::to_ipv4","value":"pub fn to_ipv4(&Self) -> Option<Ipv4Addr>","parent":null,"children":[],"decl_id":null,"docs":" Converts this address to an [IPv4 address]. Returns [`None`] if this address is\n neither IPv4-compatible or IPv4-mapped.","sig":null,"attributes":[{"value":"/ Converts this address to an [IPv4 address]. Returns [`None`] if this address is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":494547,"byte_end":494630,"line_start":903,"line_end":903,"column_start":5,"column_end":88}},{"value":"/ neither IPv4-compatible or IPv4-mapped.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":494635,"byte_end":494678,"line_start":904,"line_end":904,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":494683,"byte_end":494686,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ ::a.b.c.d and ::ffff:a.b.c.d become a.b.c.d","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":494691,"byte_end":494738,"line_start":906,"line_end":906,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":494743,"byte_end":494746,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ [IPv4 address]: ../../std/net/struct.Ipv4Addr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":494751,"byte_end":494805,"line_start":908,"line_end":908,"column_start":5,"column_end":59}},{"value":"/ [`None`]: ../../std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":494810,"byte_end":494870,"line_start":909,"line_end":909,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":494875,"byte_end":494878,"line_start":910,"line_end":910,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2841},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":495268,"byte_end":495274,"line_start":922,"line_end":922,"column_start":18,"column_end":24},"name":"octets","qualname":"<Ipv6Addr>::octets","value":"pub const fn octets(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns the sixteen eight-bit integers the IPv6 address consists of.","sig":null,"attributes":[{"value":"/ Returns the sixteen eight-bit integers the IPv6 address consists of.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":495170,"byte_end":495242,"line_start":920,"line_end":920,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":495247,"byte_end":495250,"line_start":921,"line_end":921,"column_start":5,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7477},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":503957,"byte_end":503959,"line_start":46,"line_end":46,"column_start":5,"column_end":7},"name":"V4","qualname":"::net::addr::SocketAddr::V4","value":"SocketAddr::V4(SocketAddrV4)","parent":{"krate":0,"index":7476},"children":[],"decl_id":null,"docs":" An IPv4 socket address.\n","sig":null,"attributes":[{"value":"/ An IPv4 socket address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":503925,"byte_end":503952,"line_start":45,"line_end":45,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7480},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":504011,"byte_end":504013,"line_start":48,"line_end":48,"column_start":5,"column_end":7},"name":"V6","qualname":"::net::addr::SocketAddr::V6","value":"SocketAddr::V6(SocketAddrV6)","parent":{"krate":0,"index":7476},"children":[],"decl_id":null,"docs":" An IPv6 socket address.\n","sig":null,"attributes":[{"value":"/ An IPv6 socket address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":503979,"byte_end":504006,"line_start":47,"line_end":47,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":7476},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":503908,"byte_end":503918,"line_start":44,"line_end":44,"column_start":10,"column_end":20},"name":"SocketAddr","qualname":"::net::addr::SocketAddr","value":"pub enum SocketAddr {\n\n    /// An IPv4 socket address.\n    V4(SocketAddrV4),\n\n    /// An IPv6 socket address.\n    V6(SocketAddrV6),\n}","parent":null,"children":[{"krate":0,"index":7477},{"krate":0,"index":7480}],"decl_id":null,"docs":" An internet socket address, either IPv4 or IPv6.","sig":null,"attributes":[{"value":"/ An internet socket address, either IPv4 or IPv6.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":503444,"byte_end":503496,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":503497,"byte_end":503500,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Internet socket addresses consist of an [IP address], a 16-bit port number, as well","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":503501,"byte_end":503588,"line_start":36,"line_end":36,"column_start":1,"column_end":88}},{"value":"/ as possibly some version-dependent additional information. See [`SocketAddrV4`]'s and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":503589,"byte_end":503678,"line_start":37,"line_end":37,"column_start":1,"column_end":90}},{"value":"/ [`SocketAddrV6`]'s respective documentation for more details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":503679,"byte_end":503744,"line_start":38,"line_end":38,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":503745,"byte_end":503748,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The size of a `SocketAddr` instance may vary depending on the target operating","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":503749,"byte_end":503831,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/ system.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":503832,"byte_end":503843,"line_start":41,"line_end":41,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":503844,"byte_end":503847,"line_start":42,"line_end":42,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":7498},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":504297,"byte_end":504309,"line_start":59,"line_end":59,"column_start":12,"column_end":24},"name":"SocketAddrV4","qualname":"::net::addr::SocketAddrV4","value":"SocketAddrV4 {  }","parent":null,"children":[{"krate":0,"index":7499}],"decl_id":null,"docs":" An IPv4 socket address.","sig":null,"attributes":[{"value":"/ An IPv4 socket address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":504032,"byte_end":504059,"line_start":51,"line_end":51,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":504060,"byte_end":504063,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ IPv4 socket addresses consist of an [IPv4 address] and a 16-bit port number, as","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":504064,"byte_end":504147,"line_start":53,"line_end":53,"column_start":1,"column_end":84}},{"value":"/ stated in [IETF RFC 793].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":504148,"byte_end":504177,"line_start":54,"line_end":54,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":504178,"byte_end":504181,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ See [`SocketAddr`] for a type encompassing both IPv4 and IPv6 socket addresses.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":504182,"byte_end":504265,"line_start":56,"line_end":56,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":504266,"byte_end":504269,"line_start":57,"line_end":57,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":7501},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":504818,"byte_end":504830,"line_start":75,"line_end":75,"column_start":12,"column_end":24},"name":"SocketAddrV6","qualname":"::net::addr::SocketAddrV6","value":"SocketAddrV6 {  }","parent":null,"children":[{"krate":0,"index":7502}],"decl_id":null,"docs":" An IPv6 socket address.","sig":null,"attributes":[{"value":"/ An IPv6 socket address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":504342,"byte_end":504369,"line_start":63,"line_end":63,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":504370,"byte_end":504373,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ IPv6 socket addresses consist of an [Ipv6 address], a 16-bit port number, as well","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":504374,"byte_end":504459,"line_start":65,"line_end":65,"column_start":1,"column_end":86}},{"value":"/ as fields containing the traffic class, the flow label, and a scope identifier","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":504460,"byte_end":504542,"line_start":66,"line_end":66,"column_start":1,"column_end":83}},{"value":"/ (see [IETF RFC 2553, Section 3.3] for more details).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":504543,"byte_end":504599,"line_start":67,"line_end":67,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":504600,"byte_end":504603,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ See [`SocketAddr`] for a type encompassing both IPv4 and IPv6 socket addresses.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":504604,"byte_end":504687,"line_start":69,"line_end":69,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":504688,"byte_end":504691,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ The size of a `SocketAddrV6` struct may vary depending on the target operating","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":504692,"byte_end":504774,"line_start":71,"line_end":71,"column_start":1,"column_end":83}},{"value":"/ system.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":504775,"byte_end":504786,"line_start":72,"line_end":72,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":504787,"byte_end":504790,"line_start":73,"line_end":73,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":2919},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":504978,"byte_end":504981,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<SocketAddr>::new","value":"pub fn new(IpAddr, u16) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Creates a new socket address from an [IP address] and a port number.","sig":null,"attributes":[{"value":"/ Creates a new socket address from an [IP address] and a port number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":504886,"byte_end":504958,"line_start":80,"line_end":80,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":504963,"byte_end":504966,"line_start":81,"line_end":81,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2920},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":505296,"byte_end":505298,"line_start":91,"line_end":91,"column_start":12,"column_end":14},"name":"ip","qualname":"<SocketAddr>::ip","value":"pub fn ip(&Self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the IP address associated with this socket address.","sig":null,"attributes":[{"value":"/ Returns the IP address associated with this socket address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":505213,"byte_end":505276,"line_start":89,"line_end":89,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":505281,"byte_end":505284,"line_start":90,"line_end":90,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2921},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":505560,"byte_end":505566,"line_start":100,"line_end":100,"column_start":12,"column_end":18},"name":"set_ip","qualname":"<SocketAddr>::set_ip","value":"pub fn set_ip(&mut Self, IpAddr)","parent":null,"children":[],"decl_id":null,"docs":" Changes the IP address associated with this socket address.","sig":null,"attributes":[{"value":"/ Changes the IP address associated with this socket address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":505477,"byte_end":505540,"line_start":98,"line_end":98,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":505545,"byte_end":505548,"line_start":99,"line_end":99,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2922},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":506071,"byte_end":506075,"line_start":111,"line_end":111,"column_start":12,"column_end":16},"name":"port","qualname":"<SocketAddr>::port","value":"pub fn port(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the port number associated with this socket address.","sig":null,"attributes":[{"value":"/ Returns the port number associated with this socket address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":505987,"byte_end":506051,"line_start":109,"line_end":109,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":506056,"byte_end":506059,"line_start":110,"line_end":110,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2923},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":506313,"byte_end":506321,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"set_port","qualname":"<SocketAddr>::set_port","value":"pub fn set_port(&mut Self, u16)","parent":null,"children":[],"decl_id":null,"docs":" Changes the port number associated with this socket address.","sig":null,"attributes":[{"value":"/ Changes the port number associated with this socket address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":506229,"byte_end":506293,"line_start":118,"line_end":118,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":506298,"byte_end":506301,"line_start":119,"line_end":119,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2924},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":506655,"byte_end":506662,"line_start":130,"line_end":130,"column_start":12,"column_end":19},"name":"is_ipv4","qualname":"<SocketAddr>::is_ipv4","value":"pub fn is_ipv4(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the [IP address] in this `SocketAddr` is an\n [IPv4 address], and [`false`] otherwise.","sig":null,"attributes":[{"value":"/ Returns [`true`] if the [IP address] in this `SocketAddr` is an","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":506519,"byte_end":506586,"line_start":127,"line_end":127,"column_start":5,"column_end":72}},{"value":"/ [IPv4 address], and [`false`] otherwise.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":506591,"byte_end":506635,"line_start":128,"line_end":128,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":506640,"byte_end":506643,"line_start":129,"line_end":129,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2925},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":506870,"byte_end":506877,"line_start":137,"line_end":137,"column_start":12,"column_end":19},"name":"is_ipv6","qualname":"<SocketAddr>::is_ipv6","value":"pub fn is_ipv6(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the [IP address] in this `SocketAddr` is an\n [IPv6 address], and [`false`] otherwise.","sig":null,"attributes":[{"value":"/ Returns [`true`] if the [IP address] in this `SocketAddr` is an","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":506734,"byte_end":506801,"line_start":134,"line_end":134,"column_start":5,"column_end":72}},{"value":"/ [IPv6 address], and [`false`] otherwise.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":506806,"byte_end":506850,"line_start":135,"line_end":135,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":506855,"byte_end":506858,"line_start":136,"line_end":136,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2927},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":507065,"byte_end":507068,"line_start":145,"line_end":145,"column_start":12,"column_end":15},"name":"new","qualname":"<SocketAddrV4>::new","value":"pub fn new(Ipv4Addr, u16) -> SocketAddrV4","parent":null,"children":[],"decl_id":null,"docs":" Creates a new socket address from an [IPv4 address] and a port number.","sig":null,"attributes":[{"value":"/ Creates a new socket address from an [IPv4 address] and a port number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":506971,"byte_end":507045,"line_start":143,"line_end":143,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":507050,"byte_end":507053,"line_start":144,"line_end":144,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2928},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":507472,"byte_end":507474,"line_start":158,"line_end":158,"column_start":12,"column_end":14},"name":"ip","qualname":"<SocketAddrV4>::ip","value":"pub fn ip(&Self) -> &Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the IP address associated with this socket address.","sig":null,"attributes":[{"value":"/ Returns the IP address associated with this socket address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":507389,"byte_end":507452,"line_start":156,"line_end":156,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":507457,"byte_end":507460,"line_start":157,"line_end":157,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2929},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":507675,"byte_end":507681,"line_start":164,"line_end":164,"column_start":12,"column_end":18},"name":"set_ip","qualname":"<SocketAddrV4>::set_ip","value":"pub fn set_ip(&mut Self, Ipv4Addr)","parent":null,"children":[],"decl_id":null,"docs":" Changes the IP address associated with this socket address.","sig":null,"attributes":[{"value":"/ Changes the IP address associated with this socket address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":507592,"byte_end":507655,"line_start":162,"line_end":162,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":507660,"byte_end":507663,"line_start":163,"line_end":163,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2930},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":507857,"byte_end":507861,"line_start":170,"line_end":170,"column_start":12,"column_end":16},"name":"port","qualname":"<SocketAddrV4>::port","value":"pub fn port(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the port number associated with this socket address.","sig":null,"attributes":[{"value":"/ Returns the port number associated with this socket address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":507773,"byte_end":507837,"line_start":168,"line_end":168,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":507842,"byte_end":507845,"line_start":169,"line_end":169,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2931},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":508008,"byte_end":508016,"line_start":176,"line_end":176,"column_start":12,"column_end":20},"name":"set_port","qualname":"<SocketAddrV4>::set_port","value":"pub fn set_port(&mut Self, u16)","parent":null,"children":[],"decl_id":null,"docs":" Changes the port number associated with this socket address.","sig":null,"attributes":[{"value":"/ Changes the port number associated with this socket address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":507924,"byte_end":507988,"line_start":174,"line_end":174,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":507993,"byte_end":507996,"line_start":175,"line_end":175,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2933},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":508576,"byte_end":508579,"line_start":191,"line_end":191,"column_start":12,"column_end":15},"name":"new","qualname":"<SocketAddrV6>::new","value":"pub fn new(Ipv6Addr, u16, u32, u32) -> SocketAddrV6","parent":null,"children":[],"decl_id":null,"docs":" Creates a new socket address from an [IPv6 address], a 16-bit port number,\n and the `flowinfo` and `scope_id` fields.","sig":null,"attributes":[{"value":"/ Creates a new socket address from an [IPv6 address], a 16-bit port number,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":508125,"byte_end":508203,"line_start":182,"line_end":182,"column_start":5,"column_end":83}},{"value":"/ and the `flowinfo` and `scope_id` fields.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":508208,"byte_end":508253,"line_start":183,"line_end":183,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":508258,"byte_end":508261,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ For more information on the meaning and layout of the `flowinfo` and `scope_id`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":508266,"byte_end":508349,"line_start":185,"line_end":185,"column_start":5,"column_end":88}},{"value":"/ parameters, see [IETF RFC 2553, Section 3.3].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":508354,"byte_end":508403,"line_start":186,"line_end":186,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":508408,"byte_end":508411,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 2553, Section 3.3]: https://tools.ietf.org/html/rfc2553#section-3.3","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":508416,"byte_end":508497,"line_start":188,"line_end":188,"column_start":5,"column_end":86}},{"value":"/ [IPv6 address]: ../../std/net/struct.Ipv6Addr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":508502,"byte_end":508556,"line_start":189,"line_end":189,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":508561,"byte_end":508564,"line_start":190,"line_end":190,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2934},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":509100,"byte_end":509102,"line_start":206,"line_end":206,"column_start":12,"column_end":14},"name":"ip","qualname":"<SocketAddrV6>::ip","value":"pub fn ip(&Self) -> &Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the IP address associated with this socket address.","sig":null,"attributes":[{"value":"/ Returns the IP address associated with this socket address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":509017,"byte_end":509080,"line_start":204,"line_end":204,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":509085,"byte_end":509088,"line_start":205,"line_end":205,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2935},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":509305,"byte_end":509311,"line_start":212,"line_end":212,"column_start":12,"column_end":18},"name":"set_ip","qualname":"<SocketAddrV6>::set_ip","value":"pub fn set_ip(&mut Self, Ipv6Addr)","parent":null,"children":[],"decl_id":null,"docs":" Changes the IP address associated with this socket address.","sig":null,"attributes":[{"value":"/ Changes the IP address associated with this socket address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":509222,"byte_end":509285,"line_start":210,"line_end":210,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":509290,"byte_end":509293,"line_start":211,"line_end":211,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2936},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":509488,"byte_end":509492,"line_start":218,"line_end":218,"column_start":12,"column_end":16},"name":"port","qualname":"<SocketAddrV6>::port","value":"pub fn port(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the port number associated with this socket address.","sig":null,"attributes":[{"value":"/ Returns the port number associated with this socket address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":509404,"byte_end":509468,"line_start":216,"line_end":216,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":509473,"byte_end":509476,"line_start":217,"line_end":217,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2937},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":509640,"byte_end":509648,"line_start":224,"line_end":224,"column_start":12,"column_end":20},"name":"set_port","qualname":"<SocketAddrV6>::set_port","value":"pub fn set_port(&mut Self, u16)","parent":null,"children":[],"decl_id":null,"docs":" Changes the port number associated with this socket address.","sig":null,"attributes":[{"value":"/ Changes the port number associated with this socket address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":509556,"byte_end":509620,"line_start":222,"line_end":222,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":509625,"byte_end":509628,"line_start":223,"line_end":223,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2938},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":510416,"byte_end":510424,"line_start":240,"line_end":240,"column_start":12,"column_end":20},"name":"flowinfo","qualname":"<SocketAddrV6>::flowinfo","value":"pub fn flowinfo(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the flow information associated with this address.","sig":null,"attributes":[{"value":"/ Returns the flow information associated with this address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":509736,"byte_end":509798,"line_start":228,"line_end":228,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":509803,"byte_end":509806,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ This information corresponds to the `sin6_flowinfo` field in C's `netinet/in.h`,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":509811,"byte_end":509895,"line_start":230,"line_end":230,"column_start":5,"column_end":89}},{"value":"/ as specified in [IETF RFC 2553, Section 3.3].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":509900,"byte_end":509949,"line_start":231,"line_end":231,"column_start":5,"column_end":54}},{"value":"/ It combines information about the flow label and the traffic class as specified","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":509954,"byte_end":510037,"line_start":232,"line_end":232,"column_start":5,"column_end":88}},{"value":"/ in [IETF RFC 2460], respectively [Section 6] and [Section 7].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":510042,"byte_end":510107,"line_start":233,"line_end":233,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":510112,"byte_end":510115,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 2553, Section 3.3]: https://tools.ietf.org/html/rfc2553#section-3.3","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":510120,"byte_end":510201,"line_start":235,"line_end":235,"column_start":5,"column_end":86}},{"value":"/ [IETF RFC 2460]: https://tools.ietf.org/html/rfc2460","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":510206,"byte_end":510262,"line_start":236,"line_end":236,"column_start":5,"column_end":61}},{"value":"/ [Section 6]: https://tools.ietf.org/html/rfc2460#section-6","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":510267,"byte_end":510329,"line_start":237,"line_end":237,"column_start":5,"column_end":67}},{"value":"/ [Section 7]: https://tools.ietf.org/html/rfc2460#section-7","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":510334,"byte_end":510396,"line_start":238,"line_end":238,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":510401,"byte_end":510404,"line_start":239,"line_end":239,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2939},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":510699,"byte_end":510711,"line_start":250,"line_end":250,"column_start":12,"column_end":24},"name":"set_flowinfo","qualname":"<SocketAddrV6>::set_flowinfo","value":"pub fn set_flowinfo(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Changes the flow information associated with this socket address.","sig":null,"attributes":[{"value":"/ Changes the flow information associated with this socket address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":510485,"byte_end":510554,"line_start":244,"line_end":244,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":510559,"byte_end":510562,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ See the [`flowinfo`] method's documentation for more details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":510567,"byte_end":510632,"line_start":246,"line_end":246,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":510637,"byte_end":510640,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ [`flowinfo`]: #method.flowinfo","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":510645,"byte_end":510679,"line_start":248,"line_end":248,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":510684,"byte_end":510687,"line_start":249,"line_end":249,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2940},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":511029,"byte_end":511037,"line_start":259,"line_end":259,"column_start":12,"column_end":20},"name":"scope_id","qualname":"<SocketAddrV6>::scope_id","value":"pub fn scope_id(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the scope ID associated with this address.","sig":null,"attributes":[{"value":"/ Returns the scope ID associated with this address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":510804,"byte_end":510858,"line_start":254,"line_end":254,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":510863,"byte_end":510866,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ This information corresponds to the `sin6_scope_id` field in C's `netinet/in.h`,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":510871,"byte_end":510955,"line_start":256,"line_end":256,"column_start":5,"column_end":89}},{"value":"/ as specified in [IETF RFC 2553, Section 3.3].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":510960,"byte_end":511009,"line_start":257,"line_end":257,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":511014,"byte_end":511017,"line_start":258,"line_end":258,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2941},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":511304,"byte_end":511316,"line_start":269,"line_end":269,"column_start":12,"column_end":24},"name":"set_scope_id","qualname":"<SocketAddrV6>::set_scope_id","value":"pub fn set_scope_id(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Changes the scope ID associated with this socket address.","sig":null,"attributes":[{"value":"/ Changes the scope ID associated with this socket address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":511098,"byte_end":511159,"line_start":263,"line_end":263,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":511164,"byte_end":511167,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ See the [`scope_id`] method's documentation for more details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":511172,"byte_end":511237,"line_start":265,"line_end":265,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":511242,"byte_end":511245,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ [`scope_id`]: #method.scope_id","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":511250,"byte_end":511284,"line_start":267,"line_end":267,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":511289,"byte_end":511292,"line_start":268,"line_end":268,"column_start":5,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":2982},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":517828,"byte_end":517841,"line_start":460,"line_end":460,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs","parent":null,"children":[{"krate":0,"index":2983},{"krate":0,"index":2984}],"decl_id":null,"docs":" A trait for objects which can be converted or resolved to one or more\n [`SocketAddr`] values.","sig":null,"attributes":[{"value":"/ A trait for objects which can be converted or resolved to one or more","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":515523,"byte_end":515596,"line_start":415,"line_end":415,"column_start":1,"column_end":74}},{"value":"/ [`SocketAddr`] values.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":515597,"byte_end":515623,"line_start":416,"line_end":416,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":515624,"byte_end":515627,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This trait is used for generic address resolution when constructing network","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":515628,"byte_end":515707,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ objects. By default it is implemented for the following types:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":515708,"byte_end":515774,"line_start":419,"line_end":419,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":515775,"byte_end":515778,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/  * [`SocketAddr`]: [`to_socket_addrs`] is the identity function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":515779,"byte_end":515847,"line_start":421,"line_end":421,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":515848,"byte_end":515851,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/  * [`SocketAddrV4`], [`SocketAddrV6`], `(`[`IpAddr`]`, `[`u16`]`)`,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":515852,"byte_end":515923,"line_start":423,"line_end":423,"column_start":1,"column_end":72}},{"value":"/    `(`[`Ipv4Addr`]`, `[`u16`]`)`, `(`[`Ipv6Addr`]`, `[`u16`]`)`:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":515924,"byte_end":515992,"line_start":424,"line_end":424,"column_start":1,"column_end":69}},{"value":"/    [`to_socket_addrs`] constructs a [`SocketAddr`] trivially.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":515993,"byte_end":516058,"line_start":425,"line_end":425,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":516059,"byte_end":516062,"line_start":426,"line_end":426,"column_start":1,"column_end":4}},{"value":"/  * `(`[`&str`]`, `[`u16`]`)`: the string should be either a string representation","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":516063,"byte_end":516148,"line_start":427,"line_end":427,"column_start":1,"column_end":86}},{"value":"/    of an [`IpAddr`] address as expected by [`FromStr`] implementation or a host","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":516149,"byte_end":516232,"line_start":428,"line_end":428,"column_start":1,"column_end":84}},{"value":"/    name.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":516233,"byte_end":516245,"line_start":429,"line_end":429,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":516246,"byte_end":516249,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/  * [`&str`]: the string should be either a string representation of a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":516250,"byte_end":516323,"line_start":431,"line_end":431,"column_start":1,"column_end":74}},{"value":"/    [`SocketAddr`] as expected by its [`FromStr`] implementation or a string like","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":516324,"byte_end":516408,"line_start":432,"line_end":432,"column_start":1,"column_end":85}},{"value":"/    `<host_name>:<port>` pair where `<port>` is a [`u16`] value.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":516409,"byte_end":516476,"line_start":433,"line_end":433,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":516477,"byte_end":516480,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ This trait allows constructing network objects like [`TcpStream`] or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":516481,"byte_end":516553,"line_start":435,"line_end":435,"column_start":1,"column_end":73}},{"value":"/ [`UdpSocket`] easily with values of various types for the bind/connection","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":516554,"byte_end":516631,"line_start":436,"line_end":436,"column_start":1,"column_end":78}},{"value":"/ address. It is needed because sometimes one type is more appropriate than","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":516632,"byte_end":516709,"line_start":437,"line_end":437,"column_start":1,"column_end":78}},{"value":"/ the other: for simple uses a string like `\"localhost:12345\"` is much nicer","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":516710,"byte_end":516788,"line_start":438,"line_end":438,"column_start":1,"column_end":79}},{"value":"/ than manual construction of the corresponding [`SocketAddr`], but sometimes","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":516789,"byte_end":516868,"line_start":439,"line_end":439,"column_start":1,"column_end":80}},{"value":"/ [`SocketAddr`] value is *the* main source of the address, and converting it to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":516869,"byte_end":516951,"line_start":440,"line_end":440,"column_start":1,"column_end":83}},{"value":"/ some other type (e.g., a string) just for it to be converted back to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":516952,"byte_end":517024,"line_start":441,"line_end":441,"column_start":1,"column_end":73}},{"value":"/ [`SocketAddr`] in constructor methods is pointless.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":517025,"byte_end":517080,"line_start":442,"line_end":442,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":517081,"byte_end":517084,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ Addresses returned by the operating system that are not IP addresses are","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":517085,"byte_end":517161,"line_start":444,"line_end":444,"column_start":1,"column_end":77}},{"value":"/ silently ignored.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":517162,"byte_end":517183,"line_start":445,"line_end":445,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":517184,"byte_end":517187,"line_start":446,"line_end":446,"column_start":1,"column_end":4}},{"value":"/ [`FromStr`]: ../../std/str/trait.FromStr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":517188,"byte_end":517237,"line_start":447,"line_end":447,"column_start":1,"column_end":50}},{"value":"/ [`IpAddr`]: ../../std/net/enum.IpAddr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":517238,"byte_end":517284,"line_start":448,"line_end":448,"column_start":1,"column_end":47}},{"value":"/ [`Ipv4Addr`]: ../../std/net/struct.Ipv4Addr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":517285,"byte_end":517337,"line_start":449,"line_end":449,"column_start":1,"column_end":53}},{"value":"/ [`Ipv6Addr`]: ../../std/net/struct.Ipv6Addr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":517338,"byte_end":517390,"line_start":450,"line_end":450,"column_start":1,"column_end":53}},{"value":"/ [`SocketAddr`]: ../../std/net/enum.SocketAddr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":517391,"byte_end":517445,"line_start":451,"line_end":451,"column_start":1,"column_end":55}},{"value":"/ [`SocketAddrV4`]: ../../std/net/struct.SocketAddrV4.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":517446,"byte_end":517506,"line_start":452,"line_end":452,"column_start":1,"column_end":61}},{"value":"/ [`SocketAddrV6`]: ../../std/net/struct.SocketAddrV6.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":517507,"byte_end":517567,"line_start":453,"line_end":453,"column_start":1,"column_end":61}},{"value":"/ [`&str`]: ../../std/primitive.str.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":517568,"byte_end":517610,"line_start":454,"line_end":454,"column_start":1,"column_end":43}},{"value":"/ [`TcpStream`]: ../../std/net/struct.TcpStream.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":517611,"byte_end":517665,"line_start":455,"line_end":455,"column_start":1,"column_end":55}},{"value":"/ [`to_socket_addrs`]: #tymethod.to_socket_addrs","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":517666,"byte_end":517716,"line_start":456,"line_end":456,"column_start":1,"column_end":51}},{"value":"/ [`UdpSocket`]: ../../std/net/struct.UdpSocket.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":517717,"byte_end":517771,"line_start":457,"line_end":457,"column_start":1,"column_end":55}},{"value":"/ [`u16`]: ../../std/primitive.u16.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":517772,"byte_end":517813,"line_start":458,"line_end":458,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":517814,"byte_end":517817,"line_start":459,"line_end":459,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":2983},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":517944,"byte_end":517948,"line_start":463,"line_end":463,"column_start":10,"column_end":14},"name":"Iter","qualname":"::net::addr::ToSocketAddrs::Iter","value":"type Iter: Iterator<Item = SocketAddr>;","parent":{"krate":0,"index":2982},"children":[],"decl_id":null,"docs":" Returned iterator over socket addresses which this type may correspond\n to.\n","sig":null,"attributes":[{"value":"/ Returned iterator over socket addresses which this type may correspond","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":517848,"byte_end":517922,"line_start":461,"line_end":461,"column_start":5,"column_end":79}},{"value":"/ to.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":517927,"byte_end":517934,"line_start":462,"line_end":462,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2984},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":518300,"byte_end":518315,"line_start":472,"line_end":472,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"::net::addr::ToSocketAddrs::to_socket_addrs","value":"pub fn to_socket_addrs(&Self) -> io::Result<Self::Iter>","parent":{"krate":0,"index":2982},"children":[],"decl_id":null,"docs":" Converts this object to an iterator of resolved `SocketAddr`s.","sig":null,"attributes":[{"value":"/ Converts this object to an iterator of resolved `SocketAddr`s.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":517984,"byte_end":518050,"line_start":465,"line_end":465,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":518055,"byte_end":518058,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ The returned iterator may not actually yield any values depending on the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":518063,"byte_end":518139,"line_start":467,"line_end":467,"column_start":5,"column_end":81}},{"value":"/ outcome of any resolution performed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":518144,"byte_end":518184,"line_start":468,"line_end":468,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":518189,"byte_end":518192,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ Note that this function may block the current thread while resolution is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":518197,"byte_end":518273,"line_start":470,"line_end":470,"column_start":5,"column_end":81}},{"value":"/ performed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":518278,"byte_end":518292,"line_start":471,"line_end":471,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":7504},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":534625,"byte_end":534639,"line_start":367,"line_end":367,"column_start":12,"column_end":26},"name":"AddrParseError","qualname":"::net::parser::AddrParseError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error which can be returned when parsing an IP address or a socket address.","sig":null,"attributes":[{"value":"/ An error which can be returned when parsing an IP address or a socket address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":533297,"byte_end":533379,"line_start":334,"line_end":334,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":533380,"byte_end":533383,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ This error is used as the error type for the [`FromStr`] implementation for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":533384,"byte_end":533463,"line_start":336,"line_end":336,"column_start":1,"column_end":80}},{"value":"/ [`IpAddr`], [`Ipv4Addr`], [`Ipv6Addr`], [`SocketAddr`], [`SocketAddrV4`], and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":533464,"byte_end":533545,"line_start":337,"line_end":337,"column_start":1,"column_end":82}},{"value":"/ [`SocketAddrV6`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":533546,"byte_end":533567,"line_start":338,"line_end":338,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":533568,"byte_end":533571,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ # Potential causes","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":533572,"byte_end":533594,"line_start":340,"line_end":340,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":533595,"byte_end":533598,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ `AddrParseError` may be thrown because the provided string does not parse as the given type,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":533599,"byte_end":533695,"line_start":342,"line_end":342,"column_start":1,"column_end":97}},{"value":"/ often because it includes information only handled by a different address type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":533696,"byte_end":533779,"line_start":343,"line_end":343,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":533780,"byte_end":533783,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ ```should_panic","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":533784,"byte_end":533803,"line_start":345,"line_end":345,"column_start":1,"column_end":20}},{"value":"/ use std::net::IpAddr;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":533804,"byte_end":533829,"line_start":346,"line_end":346,"column_start":1,"column_end":26}},{"value":"/ let _foo: IpAddr = \"127.0.0.1:8080\".parse().expect(\"Cannot handle the socket port\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":533830,"byte_end":533918,"line_start":347,"line_end":347,"column_start":1,"column_end":89}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":533919,"byte_end":533926,"line_start":348,"line_end":348,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":533927,"byte_end":533930,"line_start":349,"line_end":349,"column_start":1,"column_end":4}},{"value":"/ [`IpAddr`] doesn't handle the port. Use [`SocketAddr`] instead.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":533931,"byte_end":533998,"line_start":350,"line_end":350,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":533999,"byte_end":534002,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":534003,"byte_end":534010,"line_start":352,"line_end":352,"column_start":1,"column_end":8}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":534011,"byte_end":534040,"line_start":353,"line_end":353,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":534041,"byte_end":534044,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ // No problem, the `panic!` message has disappeared.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":534045,"byte_end":534101,"line_start":355,"line_end":355,"column_start":1,"column_end":57}},{"value":"/ let _foo: SocketAddr = \"127.0.0.1:8080\".parse().expect(\"unreachable panic\");","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":534102,"byte_end":534182,"line_start":356,"line_end":356,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":534183,"byte_end":534190,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":534191,"byte_end":534194,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ [`FromStr`]: ../../std/str/trait.FromStr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":534195,"byte_end":534244,"line_start":359,"line_end":359,"column_start":1,"column_end":50}},{"value":"/ [`IpAddr`]: ../../std/net/enum.IpAddr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":534245,"byte_end":534291,"line_start":360,"line_end":360,"column_start":1,"column_end":47}},{"value":"/ [`Ipv4Addr`]: ../../std/net/struct.Ipv4Addr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":534292,"byte_end":534344,"line_start":361,"line_end":361,"column_start":1,"column_end":53}},{"value":"/ [`Ipv6Addr`]: ../../std/net/struct.Ipv6Addr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":534345,"byte_end":534397,"line_start":362,"line_end":362,"column_start":1,"column_end":53}},{"value":"/ [`SocketAddr`]: ../../std/net/enum.SocketAddr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":534398,"byte_end":534452,"line_start":363,"line_end":363,"column_start":1,"column_end":55}},{"value":"/ [`SocketAddrV4`]: ../../std/net/struct.SocketAddrV4.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":534453,"byte_end":534513,"line_start":364,"line_end":364,"column_start":1,"column_end":61}},{"value":"/ [`SocketAddrV6`]: ../../std/net/struct.SocketAddrV6.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":534514,"byte_end":534574,"line_start":365,"line_end":365,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3151},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":536893,"byte_end":536902,"line_start":48,"line_end":48,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::net::tcp::TcpStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"/ A TCP stream between a local and a remote socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":536021,"byte_end":536074,"line_start":28,"line_end":28,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":536075,"byte_end":536078,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ After creating a `TcpStream` by either [`connect`]ing to a remote host or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":536079,"byte_end":536156,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ [`accept`]ing a connection on a [`TcpListener`], data can be transmitted","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":536157,"byte_end":536233,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ by [reading] and [writing] to it.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":536234,"byte_end":536271,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":536272,"byte_end":536275,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The connection will be closed when the value is dropped. The reading and writing","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":536276,"byte_end":536360,"line_start":34,"line_end":34,"column_start":1,"column_end":85}},{"value":"/ portions of the connection can also be shut down individually with the [`shutdown`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":536361,"byte_end":536448,"line_start":35,"line_end":35,"column_start":1,"column_end":88}},{"value":"/ method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":536449,"byte_end":536460,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":536461,"byte_end":536464,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The Transmission Control Protocol is specified in [IETF RFC 793].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":536465,"byte_end":536534,"line_start":38,"line_end":38,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":536535,"byte_end":536538,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`accept`]: ../../std/net/struct.TcpListener.html#method.accept","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":536539,"byte_end":536606,"line_start":40,"line_end":40,"column_start":1,"column_end":68}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":536607,"byte_end":536639,"line_start":41,"line_end":41,"column_start":1,"column_end":33}},{"value":"/ [IETF RFC 793]: https://tools.ietf.org/html/rfc793","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":536640,"byte_end":536694,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"/ [reading]: ../../std/io/trait.Read.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":536695,"byte_end":536738,"line_start":43,"line_end":43,"column_start":1,"column_end":44}},{"value":"/ [`shutdown`]: #method.shutdown","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":536739,"byte_end":536773,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"/ [`TcpListener`]: ../../std/net/struct.TcpListener.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":536774,"byte_end":536832,"line_start":45,"line_end":45,"column_start":1,"column_end":59}},{"value":"/ [writing]: ../../std/io/trait.Write.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":536833,"byte_end":536877,"line_start":46,"line_end":46,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":536878,"byte_end":536881,"line_start":47,"line_end":47,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":3154},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":537614,"byte_end":537625,"line_start":66,"line_end":66,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::net::tcp::TcpListener","value":"","parent":null,"children":[],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"/ A TCP socket server, listening for connections.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":536925,"byte_end":536976,"line_start":50,"line_end":50,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":536977,"byte_end":536980,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ After creating a `TcpListener` by [`bind`]ing it to a socket address, it listens","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":536981,"byte_end":537065,"line_start":52,"line_end":52,"column_start":1,"column_end":85}},{"value":"/ for incoming TCP connections. These can be accepted by calling [`accept`] or by","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":537066,"byte_end":537149,"line_start":53,"line_end":53,"column_start":1,"column_end":84}},{"value":"/ iterating over the [`Incoming`] iterator returned by [`incoming`][`TcpListener::incoming`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":537150,"byte_end":537245,"line_start":54,"line_end":54,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":537246,"byte_end":537249,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":537250,"byte_end":537306,"line_start":56,"line_end":56,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":537307,"byte_end":537310,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The Transmission Control Protocol is specified in [IETF RFC 793].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":537311,"byte_end":537380,"line_start":58,"line_end":58,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":537381,"byte_end":537384,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":537385,"byte_end":537415,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":537416,"byte_end":537442,"line_start":61,"line_end":61,"column_start":1,"column_end":27}},{"value":"/ [IETF RFC 793]: https://tools.ietf.org/html/rfc793","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":537443,"byte_end":537497,"line_start":62,"line_end":62,"column_start":1,"column_end":55}},{"value":"/ [`Incoming`]: ../../std/net/struct.Incoming.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":537498,"byte_end":537550,"line_start":63,"line_end":63,"column_start":1,"column_end":53}},{"value":"/ [`TcpListener::incoming`]: #method.incoming","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":537551,"byte_end":537598,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":537599,"byte_end":537602,"line_start":65,"line_end":65,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":7518},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":538075,"byte_end":538083,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":7520}],"decl_id":null,"docs":" An iterator that infinitely [`accept`]s connections on a [`TcpListener`].","sig":null,"attributes":[{"value":"/ An iterator that infinitely [`accept`]s connections on a [`TcpListener`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":537650,"byte_end":537727,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":537728,"byte_end":537731,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`incoming`] method on [`TcpListener`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":537732,"byte_end":537807,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":537808,"byte_end":537843,"line_start":71,"line_end":71,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":537844,"byte_end":537847,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ [`accept`]: ../../std/net/struct.TcpListener.html#method.accept","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":537848,"byte_end":537915,"line_start":73,"line_end":73,"column_start":1,"column_end":68}},{"value":"/ [`incoming`]: ../../std/net/struct.TcpListener.html#method.incoming","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":537916,"byte_end":537987,"line_start":74,"line_end":74,"column_start":1,"column_end":72}},{"value":"/ [`TcpListener`]: ../../std/net/struct.TcpListener.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":537988,"byte_end":538046,"line_start":75,"line_end":75,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3158},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":538152,"byte_end":538155,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<TcpStream>::new","value":"pub fn new(c_int) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3159},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":538271,"byte_end":538277,"line_start":86,"line_end":86,"column_start":12,"column_end":18},"name":"new_v4","qualname":"<TcpStream>::new_v4","value":"pub fn new_v4() -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3160},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":538377,"byte_end":538383,"line_start":90,"line_end":90,"column_start":12,"column_end":18},"name":"new_v6","qualname":"<TcpStream>::new_v6","value":"pub fn new_v6() -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3161},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":538483,"byte_end":538486,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"raw","qualname":"<TcpStream>::raw","value":"pub fn raw(&Self) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3162},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":538544,"byte_end":538552,"line_start":98,"line_end":98,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<TcpStream>::into_raw","value":"pub fn into_raw(Self) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3163},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":539189,"byte_end":539196,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"connect","qualname":"<TcpStream>::connect","value":"pub fn connect<A: ToSocketAddrs>(A) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":538607,"byte_end":538651,"line_start":102,"line_end":102,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":538656,"byte_end":538659,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":538664,"byte_end":538734,"line_start":104,"line_end":104,"column_start":5,"column_end":75}},{"value":"/ [`ToSocketAddrs`] trait can be supplied for the address; see this trait","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":538739,"byte_end":538814,"line_start":105,"line_end":105,"column_start":5,"column_end":80}},{"value":"/ documentation for concrete examples.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":538819,"byte_end":538859,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":538864,"byte_end":538867,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, `connect` will be attempted with","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":538872,"byte_end":538945,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ each of the addresses until a connection is successful. If none of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":538950,"byte_end":539020,"line_start":109,"line_end":109,"column_start":5,"column_end":75}},{"value":"/ the addresses result in a successful connection, the error returned from","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":539025,"byte_end":539101,"line_start":110,"line_end":110,"column_start":5,"column_end":81}},{"value":"/ the last connection attempt (the last address) is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":539106,"byte_end":539169,"line_start":111,"line_end":111,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":539174,"byte_end":539177,"line_start":112,"line_end":112,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3165},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":539919,"byte_end":539933,"line_start":128,"line_end":128,"column_start":12,"column_end":26},"name":"connect_socket","qualname":"<TcpStream>::connect_socket","value":"pub fn connect_socket<A: ToSocketAddrs>(&Self, A) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":539337,"byte_end":539381,"line_start":117,"line_end":117,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":539386,"byte_end":539389,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":539394,"byte_end":539464,"line_start":119,"line_end":119,"column_start":5,"column_end":75}},{"value":"/ [`ToSocketAddrs`] trait can be supplied for the address; see this trait","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":539469,"byte_end":539544,"line_start":120,"line_end":120,"column_start":5,"column_end":80}},{"value":"/ documentation for concrete examples.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":539549,"byte_end":539589,"line_start":121,"line_end":121,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":539594,"byte_end":539597,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, `connect` will be attempted with","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":539602,"byte_end":539675,"line_start":123,"line_end":123,"column_start":5,"column_end":78}},{"value":"/ each of the addresses until a connection is successful. If none of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":539680,"byte_end":539750,"line_start":124,"line_end":124,"column_start":5,"column_end":75}},{"value":"/ the addresses result in a successful connection, the error returned from","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":539755,"byte_end":539831,"line_start":125,"line_end":125,"column_start":5,"column_end":81}},{"value":"/ the last connection attempt (the last address) is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":539836,"byte_end":539899,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":539904,"byte_end":539907,"line_start":127,"line_end":127,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3168},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":540692,"byte_end":540707,"line_start":145,"line_end":145,"column_start":12,"column_end":27},"name":"connect_timeout","qualname":"<TcpStream>::connect_timeout","value":"pub fn connect_timeout(&SocketAddr, Duration) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host with a timeout.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host with a timeout.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":540070,"byte_end":540129,"line_start":132,"line_end":132,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":540134,"byte_end":540137,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Unlike `connect`, `connect_timeout` takes a single [`SocketAddr`] since","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":540142,"byte_end":540217,"line_start":134,"line_end":134,"column_start":5,"column_end":80}},{"value":"/ timeout must be applied to individual addresses.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":540222,"byte_end":540274,"line_start":135,"line_end":135,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":540279,"byte_end":540282,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ It is an error to pass a zero `Duration` to this function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":540287,"byte_end":540349,"line_start":137,"line_end":137,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":540354,"byte_end":540357,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Unlike other methods on `TcpStream`, this does not correspond to a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":540362,"byte_end":540432,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/ single system call. It instead calls `connect` in nonblocking mode and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":540437,"byte_end":540511,"line_start":140,"line_end":140,"column_start":5,"column_end":79}},{"value":"/ then uses an OS-specific mechanism to await the completion of the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":540516,"byte_end":540585,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/ connection request.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":540590,"byte_end":540613,"line_start":142,"line_end":142,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":540618,"byte_end":540621,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ [`SocketAddr`]: ../../std/net/enum.SocketAddr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":540626,"byte_end":540680,"line_start":144,"line_end":144,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3169},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":541435,"byte_end":541457,"line_start":161,"line_end":161,"column_start":12,"column_end":34},"name":"connect_socket_timeout","qualname":"<TcpStream>::connect_socket_timeout","value":"pub fn connect_socket_timeout(&Self, &SocketAddr, Duration) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host with a timeout.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host with a timeout.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":540858,"byte_end":540917,"line_start":149,"line_end":149,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":540922,"byte_end":540925,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Unlike `connect_socket`, `connect_socket_timeout` takes a single [`SocketAddr`] since","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":540930,"byte_end":541019,"line_start":151,"line_end":151,"column_start":5,"column_end":94}},{"value":"/ timeout must be applied to individual addresses.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":541024,"byte_end":541076,"line_start":152,"line_end":152,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":541081,"byte_end":541084,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ It is an error to pass a zero `Duration` to this function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":541089,"byte_end":541151,"line_start":154,"line_end":154,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":541156,"byte_end":541159,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Unlike other methods on `TcpStream`, this does not correspond to a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":541164,"byte_end":541234,"line_start":156,"line_end":156,"column_start":5,"column_end":75}},{"value":"/ single system call. It instead calls `connect` in nonblocking mode and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":541239,"byte_end":541313,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ then uses an OS-specific mechanism to await the completion of the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":541318,"byte_end":541387,"line_start":158,"line_end":158,"column_start":5,"column_end":74}},{"value":"/ connection request.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":541392,"byte_end":541415,"line_start":159,"line_end":159,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":541420,"byte_end":541423,"line_start":160,"line_end":160,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3170},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":541680,"byte_end":541689,"line_start":167,"line_end":167,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote peer of this TCP connection.","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote peer of this TCP connection.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":541587,"byte_end":541660,"line_start":165,"line_end":165,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":541665,"byte_end":541668,"line_start":166,"line_end":166,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3171},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":541855,"byte_end":541865,"line_start":173,"line_end":173,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this TCP connection.","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this TCP connection.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":541763,"byte_end":541835,"line_start":171,"line_end":171,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":541840,"byte_end":541843,"line_start":172,"line_end":172,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3172},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":542615,"byte_end":542623,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":541941,"byte_end":542007,"line_start":177,"line_end":177,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":542012,"byte_end":542015,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":542020,"byte_end":542092,"line_start":179,"line_end":179,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":542097,"byte_end":542166,"line_start":180,"line_end":180,"column_start":5,"column_end":74}},{"value":"/ documentation of [`Shutdown`]).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":542171,"byte_end":542206,"line_start":181,"line_end":181,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":542211,"byte_end":542214,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: ../../std/net/enum.Shutdown.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":542219,"byte_end":542269,"line_start":183,"line_end":183,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":542274,"byte_end":542277,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":542282,"byte_end":542314,"line_start":185,"line_end":185,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":542319,"byte_end":542322,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Calling this function multiple times may result in different behavior,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":542327,"byte_end":542401,"line_start":187,"line_end":187,"column_start":5,"column_end":79}},{"value":"/ depending on the operating system. On Linux, the second call will","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":542406,"byte_end":542475,"line_start":188,"line_end":188,"column_start":5,"column_end":74}},{"value":"/ return `Ok(())`, but on macOS, it will return `ErrorKind::NotConnected`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":542480,"byte_end":542556,"line_start":189,"line_end":189,"column_start":5,"column_end":81}},{"value":"/ This may change in the future.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":542561,"byte_end":542595,"line_start":190,"line_end":190,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":542600,"byte_end":542603,"line_start":191,"line_end":191,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3173},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":543052,"byte_end":543061,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<TcpStream>::try_clone","value":"pub fn try_clone(&Self) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned handle to the underlying socket.","sig":null,"attributes":[{"value":"/ Creates a new independently owned handle to the underlying socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":542706,"byte_end":542776,"line_start":196,"line_end":196,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":542781,"byte_end":542784,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The returned `TcpStream` is a reference to the same stream that this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":542789,"byte_end":542861,"line_start":198,"line_end":198,"column_start":5,"column_end":77}},{"value":"/ object references. Both handles will read and write the same stream of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":542866,"byte_end":542940,"line_start":199,"line_end":199,"column_start":5,"column_end":79}},{"value":"/ data, and options set on one stream will be propagated to the other","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":542945,"byte_end":543016,"line_start":200,"line_end":200,"column_start":5,"column_end":76}},{"value":"/ stream.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":543021,"byte_end":543032,"line_start":201,"line_end":201,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":543037,"byte_end":543040,"line_start":202,"line_end":202,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3174},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":544102,"byte_end":544118,"line_start":226,"line_end":226,"column_start":12,"column_end":28},"name":"set_read_timeout","qualname":"<TcpStream>::set_read_timeout","value":"pub fn set_read_timeout(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the read timeout to the timeout specified.","sig":null,"attributes":[{"value":"/ Sets the read timeout to the timeout specified.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":543149,"byte_end":543200,"line_start":207,"line_end":207,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":543205,"byte_end":543208,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ If the value specified is [`None`], then [`read`] calls will block","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":543213,"byte_end":543283,"line_start":209,"line_end":209,"column_start":5,"column_end":75}},{"value":"/ indefinitely. An [`Err`] is returned if the zero [`Duration`] is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":543288,"byte_end":543356,"line_start":210,"line_end":210,"column_start":5,"column_end":73}},{"value":"/ passed to this method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":543361,"byte_end":543387,"line_start":211,"line_end":211,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":543392,"byte_end":543395,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":543400,"byte_end":543432,"line_start":213,"line_end":213,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":543437,"byte_end":543440,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Platforms may return a different error code whenever a read times out as","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":543445,"byte_end":543521,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/ a result of setting this option. For example Unix typically returns an","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":543526,"byte_end":543600,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/ error of the kind [`WouldBlock`], but Windows may return [`TimedOut`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":543605,"byte_end":543679,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":543684,"byte_end":543687,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ [`None`]: ../../std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":543692,"byte_end":543752,"line_start":219,"line_end":219,"column_start":5,"column_end":65}},{"value":"/ [`Err`]: ../../std/result/enum.Result.html#variant.Err","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":543757,"byte_end":543815,"line_start":220,"line_end":220,"column_start":5,"column_end":63}},{"value":"/ [`read`]: ../../std/io/trait.Read.html#tymethod.read","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":543820,"byte_end":543876,"line_start":221,"line_end":221,"column_start":5,"column_end":61}},{"value":"/ [`WouldBlock`]: ../../std/io/enum.ErrorKind.html#variant.WouldBlock","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":543881,"byte_end":543952,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ [`TimedOut`]: ../../std/io/enum.ErrorKind.html#variant.TimedOut","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":543957,"byte_end":544024,"line_start":223,"line_end":223,"column_start":5,"column_end":72}},{"value":"/ [`Duration`]: ../../std/time/struct.Duration.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":544029,"byte_end":544082,"line_start":224,"line_end":224,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":544087,"byte_end":544090,"line_start":225,"line_end":225,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3175},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":545176,"byte_end":545193,"line_start":249,"line_end":249,"column_start":12,"column_end":29},"name":"set_write_timeout","qualname":"<TcpStream>::set_write_timeout","value":"pub fn set_write_timeout(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the write timeout to the timeout specified.","sig":null,"attributes":[{"value":"/ Sets the write timeout to the timeout specified.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":544217,"byte_end":544269,"line_start":230,"line_end":230,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":544274,"byte_end":544277,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ If the value specified is [`None`], then [`write`] calls will block","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":544282,"byte_end":544353,"line_start":232,"line_end":232,"column_start":5,"column_end":76}},{"value":"/ indefinitely. An [`Err`] is returned if the zero [`Duration`] is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":544358,"byte_end":544426,"line_start":233,"line_end":233,"column_start":5,"column_end":73}},{"value":"/ passed to this method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":544431,"byte_end":544457,"line_start":234,"line_end":234,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":544462,"byte_end":544465,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":544470,"byte_end":544502,"line_start":236,"line_end":236,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":544507,"byte_end":544510,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Platforms may return a different error code whenever a write times out","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":544515,"byte_end":544589,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"/ as a result of setting this option. For example Unix typically returns","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":544594,"byte_end":544668,"line_start":239,"line_end":239,"column_start":5,"column_end":79}},{"value":"/ an error of the kind [`WouldBlock`], but Windows may return [`TimedOut`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":544673,"byte_end":544750,"line_start":240,"line_end":240,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":544755,"byte_end":544758,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ [`None`]: ../../std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":544763,"byte_end":544823,"line_start":242,"line_end":242,"column_start":5,"column_end":65}},{"value":"/ [`Err`]: ../../std/result/enum.Result.html#variant.Err","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":544828,"byte_end":544886,"line_start":243,"line_end":243,"column_start":5,"column_end":63}},{"value":"/ [`write`]: ../../std/io/trait.Write.html#tymethod.write","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":544891,"byte_end":544950,"line_start":244,"line_end":244,"column_start":5,"column_end":64}},{"value":"/ [`Duration`]: ../../std/time/struct.Duration.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":544955,"byte_end":545008,"line_start":245,"line_end":245,"column_start":5,"column_end":58}},{"value":"/ [`WouldBlock`]: ../../std/io/enum.ErrorKind.html#variant.WouldBlock","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":545013,"byte_end":545084,"line_start":246,"line_end":246,"column_start":5,"column_end":76}},{"value":"/ [`TimedOut`]: ../../std/io/enum.ErrorKind.html#variant.TimedOut","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":545089,"byte_end":545156,"line_start":247,"line_end":247,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":545161,"byte_end":545164,"line_start":248,"line_end":248,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3176},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":545702,"byte_end":545714,"line_start":264,"line_end":264,"column_start":12,"column_end":24},"name":"read_timeout","qualname":"<TcpStream>::read_timeout","value":"pub fn read_timeout(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the read timeout of this socket.","sig":null,"attributes":[{"value":"/ Returns the read timeout of this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":545293,"byte_end":545337,"line_start":253,"line_end":253,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":545342,"byte_end":545345,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ If the timeout is [`None`], then [`read`] calls will block indefinitely.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":545350,"byte_end":545426,"line_start":255,"line_end":255,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":545431,"byte_end":545434,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":545439,"byte_end":545471,"line_start":257,"line_end":257,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":545476,"byte_end":545479,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Some platforms do not provide access to the current timeout.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":545484,"byte_end":545548,"line_start":259,"line_end":259,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":545553,"byte_end":545556,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ [`None`]: ../../std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":545561,"byte_end":545621,"line_start":261,"line_end":261,"column_start":5,"column_end":65}},{"value":"/ [`read`]: ../../std/io/trait.Read.html#tymethod.read","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":545626,"byte_end":545682,"line_start":262,"line_end":262,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":545687,"byte_end":545690,"line_start":263,"line_end":263,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3177},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":546211,"byte_end":546224,"line_start":279,"line_end":279,"column_start":12,"column_end":25},"name":"write_timeout","qualname":"<TcpStream>::write_timeout","value":"pub fn write_timeout(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the write timeout of this socket.","sig":null,"attributes":[{"value":"/ Returns the write timeout of this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":545797,"byte_end":545842,"line_start":268,"line_end":268,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":545847,"byte_end":545850,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ If the timeout is [`None`], then [`write`] calls will block indefinitely.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":545855,"byte_end":545932,"line_start":270,"line_end":270,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":545937,"byte_end":545940,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":545945,"byte_end":545977,"line_start":272,"line_end":272,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":545982,"byte_end":545985,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Some platforms do not provide access to the current timeout.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":545990,"byte_end":546054,"line_start":274,"line_end":274,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":546059,"byte_end":546062,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ [`None`]: ../../std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":546067,"byte_end":546127,"line_start":276,"line_end":276,"column_start":5,"column_end":65}},{"value":"/ [`write`]: ../../std/io/trait.Write.html#tymethod.write","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":546132,"byte_end":546191,"line_start":277,"line_end":277,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":546196,"byte_end":546199,"line_start":278,"line_end":278,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3178},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":546670,"byte_end":546674,"line_start":290,"line_end":290,"column_start":12,"column_end":16},"name":"peek","qualname":"<TcpStream>::peek","value":"pub fn peek(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":546308,"byte_end":546378,"line_start":283,"line_end":283,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":546383,"byte_end":546452,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":546457,"byte_end":546496,"line_start":285,"line_end":285,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":546501,"byte_end":546504,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":546509,"byte_end":546583,"line_start":287,"line_end":287,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying `recv` system call.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":546588,"byte_end":546650,"line_start":288,"line_end":288,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":546655,"byte_end":546658,"line_start":289,"line_end":289,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3179},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":547180,"byte_end":547191,"line_start":302,"line_end":302,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":546757,"byte_end":546819,"line_start":294,"line_end":294,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":546824,"byte_end":546827,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":546832,"byte_end":546901,"line_start":296,"line_end":296,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":546906,"byte_end":546979,"line_start":297,"line_end":297,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":546984,"byte_end":547057,"line_start":298,"line_end":298,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":547062,"byte_end":547137,"line_start":299,"line_end":299,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":547142,"byte_end":547160,"line_start":300,"line_end":300,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":547165,"byte_end":547168,"line_start":301,"line_end":301,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3180},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":547490,"byte_end":547497,"line_start":312,"line_end":312,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":547281,"byte_end":547343,"line_start":306,"line_end":306,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":547348,"byte_end":547351,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`][link].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":547356,"byte_end":547426,"line_start":308,"line_end":308,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":547431,"byte_end":547434,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_nodelay","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":547439,"byte_end":547470,"line_start":310,"line_end":310,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":547475,"byte_end":547478,"line_start":311,"line_end":311,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3181},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":547756,"byte_end":547763,"line_start":321,"line_end":321,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":547563,"byte_end":547621,"line_start":316,"line_end":316,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":547626,"byte_end":547629,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":547634,"byte_end":547710,"line_start":318,"line_end":318,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":547715,"byte_end":547736,"line_start":319,"line_end":319,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":547741,"byte_end":547744,"line_start":320,"line_end":320,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3182},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":548037,"byte_end":548040,"line_start":331,"line_end":331,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":547840,"byte_end":547898,"line_start":325,"line_end":325,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":547903,"byte_end":547906,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":547911,"byte_end":547977,"line_start":327,"line_end":327,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":547982,"byte_end":547985,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":547990,"byte_end":548017,"line_start":329,"line_end":329,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":548022,"byte_end":548025,"line_start":330,"line_end":330,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3183},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":548363,"byte_end":548373,"line_start":341,"line_end":341,"column_start":12,"column_end":22},"name":"take_error","qualname":"<TcpStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":548101,"byte_end":548160,"line_start":335,"line_end":335,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":548165,"byte_end":548168,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":548173,"byte_end":548247,"line_start":337,"line_end":337,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":548252,"byte_end":548328,"line_start":338,"line_end":338,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":548333,"byte_end":548343,"line_start":339,"line_end":339,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":548348,"byte_end":548351,"line_start":340,"line_end":340,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3184},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":549132,"byte_end":549147,"line_start":358,"line_end":358,"column_start":12,"column_end":27},"name":"set_nonblocking","qualname":"<TcpStream>::set_nonblocking","value":"pub fn set_nonblocking(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Moves this TCP stream into or out of nonblocking mode.","sig":null,"attributes":[{"value":"/ Moves this TCP stream into or out of nonblocking mode.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":548455,"byte_end":548513,"line_start":345,"line_end":345,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":548518,"byte_end":548521,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ This will result in `read`, `write`, `recv` and `send` operations","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":548526,"byte_end":548595,"line_start":347,"line_end":347,"column_start":5,"column_end":74}},{"value":"/ becoming nonblocking, i.e., immediately returning from their calls.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":548600,"byte_end":548671,"line_start":348,"line_end":348,"column_start":5,"column_end":76}},{"value":"/ If the IO operation is successful, `Ok` is returned and no further","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":548676,"byte_end":548746,"line_start":349,"line_end":349,"column_start":5,"column_end":75}},{"value":"/ action is required. If the IO operation could not be completed and needs","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":548751,"byte_end":548827,"line_start":350,"line_end":350,"column_start":5,"column_end":81}},{"value":"/ to be retried, an error with kind [`io::ErrorKind::WouldBlock`] is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":548832,"byte_end":548902,"line_start":351,"line_end":351,"column_start":5,"column_end":75}},{"value":"/ returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":548907,"byte_end":548920,"line_start":352,"line_end":352,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":548925,"byte_end":548928,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ On Unix platforms, calling this method corresponds to calling `fcntl`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":548933,"byte_end":549006,"line_start":354,"line_end":354,"column_start":5,"column_end":78}},{"value":"/ `FIONBIO`. On Windows calling this method corresponds to calling","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":549011,"byte_end":549079,"line_start":355,"line_end":355,"column_start":5,"column_end":73}},{"value":"/ `ioctlsocket` `FIONBIO`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":549084,"byte_end":549112,"line_start":356,"line_end":356,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":549117,"byte_end":549120,"line_start":357,"line_end":357,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3210},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":551103,"byte_end":551106,"line_start":446,"line_end":446,"column_start":12,"column_end":15},"name":"new","qualname":"<TcpListener>::new","value":"pub fn new(c_int) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3211},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":551228,"byte_end":551234,"line_start":450,"line_end":450,"column_start":12,"column_end":18},"name":"new_v4","qualname":"<TcpListener>::new_v4","value":"pub fn new_v4() -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3212},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":551340,"byte_end":551346,"line_start":454,"line_end":454,"column_start":12,"column_end":18},"name":"new_v6","qualname":"<TcpListener>::new_v6","value":"pub fn new_v6() -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3213},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":551452,"byte_end":551455,"line_start":458,"line_end":458,"column_start":12,"column_end":15},"name":"raw","qualname":"<TcpListener>::raw","value":"pub fn raw(&Self) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3214},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":551513,"byte_end":551521,"line_start":462,"line_end":462,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<TcpListener>::into_raw","value":"pub fn into_raw(Self) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3215},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":552383,"byte_end":552387,"line_start":483,"line_end":483,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpListener>::bind","value":"pub fn bind<A: ToSocketAddrs>(A) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpListener` which will be bound to the specified\n address.","sig":null,"attributes":[{"value":"/ Creates a new `TcpListener` which will be bound to the specified","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":551576,"byte_end":551644,"line_start":466,"line_end":466,"column_start":5,"column_end":73}},{"value":"/ address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":551649,"byte_end":551661,"line_start":467,"line_end":467,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":551666,"byte_end":551669,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":551674,"byte_end":551735,"line_start":469,"line_end":469,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":551740,"byte_end":551743,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":551748,"byte_end":551823,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":551828,"byte_end":551891,"line_start":472,"line_end":472,"column_start":5,"column_end":68}},{"value":"/ [`local_addr`] method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":551896,"byte_end":551922,"line_start":473,"line_end":473,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":551927,"byte_end":551930,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of [`ToSocketAddrs`] trait. See","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":551935,"byte_end":552010,"line_start":475,"line_end":475,"column_start":5,"column_end":80}},{"value":"/ its documentation for concrete examples.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":552015,"byte_end":552059,"line_start":476,"line_end":476,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":552064,"byte_end":552067,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, `bind` will be attempted with","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":552072,"byte_end":552142,"line_start":478,"line_end":478,"column_start":5,"column_end":75}},{"value":"/ each of the addresses until one succeeds and returns the listener. If","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":552147,"byte_end":552220,"line_start":479,"line_end":479,"column_start":5,"column_end":78}},{"value":"/ none of the addresses succeed in creating a listener, the error returned","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":552225,"byte_end":552301,"line_start":480,"line_end":480,"column_start":5,"column_end":81}},{"value":"/ from the last attempt (the last address) is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":552306,"byte_end":552363,"line_start":481,"line_end":481,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":552368,"byte_end":552371,"line_start":482,"line_end":482,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3217},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":553308,"byte_end":553319,"line_start":503,"line_end":503,"column_start":12,"column_end":23},"name":"bind_socket","qualname":"<TcpListener>::bind_socket","value":"pub fn bind_socket<A: ToSocketAddrs>(&Self, A) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" TcpListener will be bound to the specified address.","sig":null,"attributes":[{"value":"/ TcpListener will be bound to the specified address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":552531,"byte_end":552586,"line_start":487,"line_end":487,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":552591,"byte_end":552594,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":552599,"byte_end":552660,"line_start":489,"line_end":489,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":552665,"byte_end":552668,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":552673,"byte_end":552748,"line_start":491,"line_end":491,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":552753,"byte_end":552816,"line_start":492,"line_end":492,"column_start":5,"column_end":68}},{"value":"/ [`local_addr`] method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":552821,"byte_end":552847,"line_start":493,"line_end":493,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":552852,"byte_end":552855,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of [`ToSocketAddrs`] trait. See","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":552860,"byte_end":552935,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ its documentation for concrete examples.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":552940,"byte_end":552984,"line_start":496,"line_end":496,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":552989,"byte_end":552992,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, `bind` will be attempted with","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":552997,"byte_end":553067,"line_start":498,"line_end":498,"column_start":5,"column_end":75}},{"value":"/ each of the addresses until one succeeds and returns the listener. If","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":553072,"byte_end":553145,"line_start":499,"line_end":499,"column_start":5,"column_end":78}},{"value":"/ none of the addresses succeed in creating a listener, the error returned","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":553150,"byte_end":553226,"line_start":500,"line_end":500,"column_start":5,"column_end":81}},{"value":"/ from the last attempt (the last address) is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":553231,"byte_end":553288,"line_start":501,"line_end":501,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":553293,"byte_end":553296,"line_start":502,"line_end":502,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3220},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":553523,"byte_end":553533,"line_start":509,"line_end":509,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":553449,"byte_end":553503,"line_start":507,"line_end":507,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":553508,"byte_end":553511,"line_start":508,"line_end":508,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3221},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":554005,"byte_end":554014,"line_start":521,"line_end":521,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<TcpListener>::try_clone","value":"pub fn try_clone(&Self) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned handle to the underlying socket.","sig":null,"attributes":[{"value":"/ Creates a new independently owned handle to the underlying socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":553609,"byte_end":553679,"line_start":513,"line_end":513,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":553684,"byte_end":553687,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ The returned [`TcpListener`] is a reference to the same socket that this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":553692,"byte_end":553768,"line_start":515,"line_end":515,"column_start":5,"column_end":81}},{"value":"/ object references. Both handles can be used to accept incoming","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":553773,"byte_end":553839,"line_start":516,"line_end":516,"column_start":5,"column_end":71}},{"value":"/ connections and options set on one listener will affect the other.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":553844,"byte_end":553914,"line_start":517,"line_end":517,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":553919,"byte_end":553922,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ [`TcpListener`]: ../../std/net/struct.TcpListener.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":553927,"byte_end":553985,"line_start":519,"line_end":519,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":553990,"byte_end":553993,"line_start":520,"line_end":520,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3222},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":554466,"byte_end":554472,"line_start":533,"line_end":533,"column_start":12,"column_end":18},"name":"accept","qualname":"<TcpListener>::accept","value":"pub fn accept(&Self) -> io::Result<(TcpStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accept a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accept a new incoming connection from this listener.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":554106,"byte_end":554162,"line_start":525,"line_end":525,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":554167,"byte_end":554170,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ This function will block the calling thread until a new TCP connection","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":554175,"byte_end":554249,"line_start":527,"line_end":527,"column_start":5,"column_end":79}},{"value":"/ is established. When established, the corresponding [`TcpStream`] and the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":554254,"byte_end":554331,"line_start":528,"line_end":528,"column_start":5,"column_end":82}},{"value":"/ remote peer's address will be returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":554336,"byte_end":554379,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":554384,"byte_end":554387,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: ../../std/net/struct.TcpStream.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":554392,"byte_end":554446,"line_start":531,"line_end":531,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":554451,"byte_end":554454,"line_start":532,"line_end":532,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3224},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":555067,"byte_end":555075,"line_start":548,"line_end":548,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"pub fn incoming(&Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the connections being received on this\n listener.","sig":null,"attributes":[{"value":"/ Returns an iterator over the connections being received on this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":554588,"byte_end":554655,"line_start":537,"line_end":537,"column_start":5,"column_end":72}},{"value":"/ listener.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":554660,"byte_end":554673,"line_start":538,"line_end":538,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":554678,"byte_end":554681,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ The returned iterator will never return [`None`] and will also not yield","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":554686,"byte_end":554762,"line_start":540,"line_end":540,"column_start":5,"column_end":81}},{"value":"/ the peer's [`SocketAddr`] structure. Iterating over it is equivalent to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":554767,"byte_end":554842,"line_start":541,"line_end":541,"column_start":5,"column_end":80}},{"value":"/ calling [`accept`] in a loop.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":554847,"byte_end":554880,"line_start":542,"line_end":542,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":554885,"byte_end":554888,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ [`None`]: ../../std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":554893,"byte_end":554953,"line_start":544,"line_end":544,"column_start":5,"column_end":65}},{"value":"/ [`SocketAddr`]: ../../std/net/enum.SocketAddr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":554958,"byte_end":555012,"line_start":545,"line_end":545,"column_start":5,"column_end":59}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":555017,"byte_end":555047,"line_start":546,"line_end":546,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":555052,"byte_end":555055,"line_start":547,"line_end":547,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3225},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":555341,"byte_end":555348,"line_start":557,"line_end":557,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":555148,"byte_end":555206,"line_start":552,"line_end":552,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":555211,"byte_end":555214,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":555219,"byte_end":555295,"line_start":554,"line_end":554,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":555300,"byte_end":555321,"line_start":555,"line_end":555,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":555326,"byte_end":555329,"line_start":556,"line_end":556,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3226},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":555622,"byte_end":555625,"line_start":567,"line_end":567,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":555425,"byte_end":555483,"line_start":561,"line_end":561,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":555488,"byte_end":555491,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":555496,"byte_end":555562,"line_start":563,"line_end":563,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":555567,"byte_end":555570,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":555575,"byte_end":555602,"line_start":565,"line_end":565,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":555607,"byte_end":555610,"line_start":566,"line_end":566,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3227},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":555756,"byte_end":555767,"line_start":572,"line_end":572,"column_start":12,"column_end":23},"name":"set_only_v6","qualname":"<TcpListener>::set_only_v6","value":"pub fn set_only_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" This option can only be set before the socket is bound\n","sig":null,"attributes":[{"value":"/ This option can only be set before the socket is bound","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":555686,"byte_end":555744,"line_start":571,"line_end":571,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3228},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":555927,"byte_end":555934,"line_start":577,"line_end":577,"column_start":12,"column_end":19},"name":"only_v6","qualname":"<TcpListener>::only_v6","value":"pub fn only_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" This option can only be set before the socket is bound\n","sig":null,"attributes":[{"value":"/ This option can only be set before the socket is bound","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":555857,"byte_end":555915,"line_start":576,"line_end":576,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3229},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":556262,"byte_end":556272,"line_start":587,"line_end":587,"column_start":12,"column_end":22},"name":"take_error","qualname":"<TcpListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":556000,"byte_end":556059,"line_start":581,"line_end":581,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":556064,"byte_end":556067,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":556072,"byte_end":556146,"line_start":583,"line_end":583,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":556151,"byte_end":556227,"line_start":584,"line_end":584,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":556232,"byte_end":556242,"line_start":585,"line_end":585,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":556247,"byte_end":556250,"line_start":586,"line_end":586,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3230},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":557000,"byte_end":557015,"line_start":603,"line_end":603,"column_start":12,"column_end":27},"name":"set_nonblocking","qualname":"<TcpListener>::set_nonblocking","value":"pub fn set_nonblocking(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Moves this TCP stream into or out of nonblocking mode.","sig":null,"attributes":[{"value":"/ Moves this TCP stream into or out of nonblocking mode.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":556354,"byte_end":556412,"line_start":591,"line_end":591,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":556417,"byte_end":556420,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ This will result in the `accept` operation becoming nonblocking,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":556425,"byte_end":556493,"line_start":593,"line_end":593,"column_start":5,"column_end":73}},{"value":"/ i.e., immediately returning from their calls. If the IO operation is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":556498,"byte_end":556570,"line_start":594,"line_end":594,"column_start":5,"column_end":77}},{"value":"/ successful, `Ok` is returned and no further action is required. If the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":556575,"byte_end":556649,"line_start":595,"line_end":595,"column_start":5,"column_end":79}},{"value":"/ IO operation could not be completed and needs to be retried, an error","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":556654,"byte_end":556727,"line_start":596,"line_end":596,"column_start":5,"column_end":78}},{"value":"/ with kind [`io::ErrorKind::WouldBlock`] is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":556732,"byte_end":556788,"line_start":597,"line_end":597,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":556793,"byte_end":556796,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ On Unix platforms, calling this method corresponds to calling `fcntl`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":556801,"byte_end":556874,"line_start":599,"line_end":599,"column_start":5,"column_end":78}},{"value":"/ `FIONBIO`. On Windows calling this method corresponds to calling","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":556879,"byte_end":556947,"line_start":600,"line_end":600,"column_start":5,"column_end":73}},{"value":"/ `ioctlsocket` `FIONBIO`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":556952,"byte_end":556980,"line_start":601,"line_end":601,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":556985,"byte_end":556988,"line_start":602,"line_end":602,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3262},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":559951,"byte_end":559960,"line_start":50,"line_end":50,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"","parent":null,"children":[],"decl_id":null,"docs":" A UDP socket.","sig":null,"attributes":[{"value":"/ A UDP socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":558921,"byte_end":558938,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":558939,"byte_end":558942,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ After creating a `UdpSocket` by [`bind`]ing it to a socket address, data can be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":558943,"byte_end":559026,"line_start":28,"line_end":28,"column_start":1,"column_end":84}},{"value":"/ [sent to] and [received from] any other socket address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":559027,"byte_end":559086,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":559087,"byte_end":559090,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Although UDP is a connectionless protocol, this implementation provides an interface","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":559091,"byte_end":559179,"line_start":31,"line_end":31,"column_start":1,"column_end":89}},{"value":"/ to set an address where data should be sent and received from. After setting a remote","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":559180,"byte_end":559269,"line_start":32,"line_end":32,"column_start":1,"column_end":90}},{"value":"/ address with [`connect`], data can be sent to and received from that address with","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":559270,"byte_end":559355,"line_start":33,"line_end":33,"column_start":1,"column_end":86}},{"value":"/ [`send`] and [`recv`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":559356,"byte_end":559382,"line_start":34,"line_end":34,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":559383,"byte_end":559386,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ As stated in the User Datagram Protocol's specification in [IETF RFC 768], UDP is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":559387,"byte_end":559472,"line_start":36,"line_end":36,"column_start":1,"column_end":86}},{"value":"/ an unordered, unreliable protocol; refer to [`TcpListener`] and [`TcpStream`] for TCP","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":559473,"byte_end":559562,"line_start":37,"line_end":37,"column_start":1,"column_end":90}},{"value":"/ primitives.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":559563,"byte_end":559578,"line_start":38,"line_end":38,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":559579,"byte_end":559582,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":559583,"byte_end":559609,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":559610,"byte_end":559642,"line_start":41,"line_end":41,"column_start":1,"column_end":33}},{"value":"/ [IETF RFC 768]: https://tools.ietf.org/html/rfc768","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":559643,"byte_end":559697,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"/ [`recv`]: #method.recv","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":559698,"byte_end":559724,"line_start":43,"line_end":43,"column_start":1,"column_end":27}},{"value":"/ [received from]: #method.recv_from","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":559725,"byte_end":559763,"line_start":44,"line_end":44,"column_start":1,"column_end":39}},{"value":"/ [`send`]: #method.send","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":559764,"byte_end":559790,"line_start":45,"line_end":45,"column_start":1,"column_end":27}},{"value":"/ [sent to]: #method.send_to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":559791,"byte_end":559821,"line_start":46,"line_end":46,"column_start":1,"column_end":31}},{"value":"/ [`TcpListener`]: ../../std/net/struct.TcpListener.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":559822,"byte_end":559880,"line_start":47,"line_end":47,"column_start":1,"column_end":59}},{"value":"/ [`TcpStream`]: ../../std/net/struct.TcpStream.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":559881,"byte_end":559935,"line_start":48,"line_end":48,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":559936,"byte_end":559939,"line_start":49,"line_end":49,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":3266},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":560011,"byte_end":560014,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<UdpSocket>::new","value":"pub fn new(c_int) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3267},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":560130,"byte_end":560136,"line_start":57,"line_end":57,"column_start":12,"column_end":18},"name":"new_v4","qualname":"<UdpSocket>::new_v4","value":"pub fn new_v4() -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3268},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":560236,"byte_end":560242,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"new_v6","qualname":"<UdpSocket>::new_v6","value":"pub fn new_v6() -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3269},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":560342,"byte_end":560345,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"raw","qualname":"<UdpSocket>::raw","value":"pub fn raw(&Self) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3270},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":560403,"byte_end":560411,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<UdpSocket>::into_raw","value":"pub fn into_raw(Self) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3271},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":561045,"byte_end":561049,"line_start":85,"line_end":85,"column_start":12,"column_end":16},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub fn bind<A: ToSocketAddrs>(A) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket from the given address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket from the given address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":560466,"byte_end":560514,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":560519,"byte_end":560522,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of [`ToSocketAddrs`] trait. See","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":560527,"byte_end":560602,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ its documentation for concrete examples.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":560607,"byte_end":560651,"line_start":76,"line_end":76,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":560656,"byte_end":560659,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, `bind` will be attempted with","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":560664,"byte_end":560734,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ each of the addresses until one succeeds and returns the socket. If none","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":560739,"byte_end":560815,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ of the addresses succeed in creating a socket, the error returned from","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":560820,"byte_end":560894,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":560899,"byte_end":560951,"line_start":81,"line_end":81,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":560956,"byte_end":560959,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: ../../std/net/trait.ToSocketAddrs.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":560964,"byte_end":561025,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":561030,"byte_end":561033,"line_start":84,"line_end":84,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3273},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":561252,"byte_end":561263,"line_start":90,"line_end":90,"column_start":12,"column_end":23},"name":"bind_socket","qualname":"<UdpSocket>::bind_socket","value":"pub fn bind_socket<A: ToSocketAddrs>(&Self, A) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Bound this UDP socket to a the specified address.\n","sig":null,"attributes":[{"value":"/ Bound this UDP socket to a the specified address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":561187,"byte_end":561240,"line_start":89,"line_end":89,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3276},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":561756,"byte_end":561765,"line_start":101,"line_end":101,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub fn recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message on the socket. On success, returns the number\n of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Receives a single datagram message on the socket. On success, returns the number","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":561393,"byte_end":561477,"line_start":94,"line_end":94,"column_start":5,"column_end":89}},{"value":"/ of bytes read and the origin.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":561482,"byte_end":561515,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":561520,"byte_end":561523,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":561528,"byte_end":561609,"line_start":97,"line_end":97,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":561614,"byte_end":561697,"line_start":98,"line_end":98,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":561702,"byte_end":561736,"line_start":99,"line_end":99,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":561741,"byte_end":561744,"line_start":100,"line_end":100,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3277},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":562574,"byte_end":562583,"line_start":118,"line_end":118,"column_start":12,"column_end":21},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub fn peek_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message on the socket, without removing it from the\n queue. On success, returns the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Receives a single datagram message on the socket, without removing it from the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":561867,"byte_end":561949,"line_start":105,"line_end":105,"column_start":5,"column_end":87}},{"value":"/ queue. On success, returns the number of bytes read and the origin.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":561954,"byte_end":562025,"line_start":106,"line_end":106,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":562030,"byte_end":562033,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":562038,"byte_end":562119,"line_start":108,"line_end":108,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":562124,"byte_end":562207,"line_start":109,"line_end":109,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":562212,"byte_end":562246,"line_start":110,"line_end":110,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":562251,"byte_end":562254,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":562259,"byte_end":562333,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying `recvfrom` system call.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":562338,"byte_end":562404,"line_start":113,"line_end":113,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":562409,"byte_end":562412,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Do not use this function to implement busy waiting, instead use `libc::poll` to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":562417,"byte_end":562500,"line_start":115,"line_end":115,"column_start":5,"column_end":88}},{"value":"/ synchronize IO events on one or more sockets.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":562505,"byte_end":562554,"line_start":116,"line_end":116,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":562559,"byte_end":562562,"line_start":117,"line_end":117,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3278},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":563366,"byte_end":563373,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub fn send_to<A: ToSocketAddrs>(&Self, &[u8], A) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address. On success, returns the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":562685,"byte_end":562759,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ number of bytes written.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":562764,"byte_end":562792,"line_start":123,"line_end":123,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":562797,"byte_end":562800,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Address type can be any implementor of [`ToSocketAddrs`] trait. See its","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":562805,"byte_end":562880,"line_start":125,"line_end":125,"column_start":5,"column_end":80}},{"value":"/ documentation for concrete examples.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":562885,"byte_end":562925,"line_start":126,"line_end":126,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":562930,"byte_end":562933,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ It is possible for `addr` to yield multiple addresses, but `send_to`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":562938,"byte_end":563010,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ will only send data to the first address yielded by `addr`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":563015,"byte_end":563078,"line_start":129,"line_end":129,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":563083,"byte_end":563086,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This will return an error when the IP version of the local socket","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":563091,"byte_end":563160,"line_start":131,"line_end":131,"column_start":5,"column_end":74}},{"value":"/ does not match that returned from [`ToSocketAddrs`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":563165,"byte_end":563221,"line_start":132,"line_end":132,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":563226,"byte_end":563229,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ See issue #34202 for more details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":563234,"byte_end":563272,"line_start":134,"line_end":134,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":563277,"byte_end":563280,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: ../../std/net/trait.ToSocketAddrs.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":563285,"byte_end":563346,"line_start":136,"line_end":136,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":563351,"byte_end":563354,"line_start":137,"line_end":137,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3280},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":563758,"byte_end":563767,"line_start":147,"line_end":147,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UdpSocket>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote peer this socket was connected to.","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote peer this socket was connected to.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":563659,"byte_end":563738,"line_start":145,"line_end":145,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":563743,"byte_end":563746,"line_start":146,"line_end":146,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3281},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":563926,"byte_end":563936,"line_start":153,"line_end":153,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address that this socket was created from.","sig":null,"attributes":[{"value":"/ Returns the socket address that this socket was created from.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":563841,"byte_end":563906,"line_start":151,"line_end":151,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":563911,"byte_end":563914,"line_start":152,"line_end":152,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3282},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":564333,"byte_end":564342,"line_start":163,"line_end":163,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<UdpSocket>::try_clone","value":"pub fn try_clone(&Self) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned handle to the underlying socket.","sig":null,"attributes":[{"value":"/ Creates a new independently owned handle to the underlying socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":564012,"byte_end":564082,"line_start":157,"line_end":157,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":564087,"byte_end":564090,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ The returned `UdpSocket` is a reference to the same socket that this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":564095,"byte_end":564167,"line_start":159,"line_end":159,"column_start":5,"column_end":77}},{"value":"/ object references. Both handles will read and write the same port, and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":564172,"byte_end":564246,"line_start":160,"line_end":160,"column_start":5,"column_end":79}},{"value":"/ options set on one socket will be propagated to the other.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":564251,"byte_end":564313,"line_start":161,"line_end":161,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":564318,"byte_end":564321,"line_start":162,"line_end":162,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3283},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":565383,"byte_end":565399,"line_start":186,"line_end":186,"column_start":12,"column_end":28},"name":"set_read_timeout","qualname":"<UdpSocket>::set_read_timeout","value":"pub fn set_read_timeout(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the read timeout to the timeout specified.","sig":null,"attributes":[{"value":"/ Sets the read timeout to the timeout specified.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":564430,"byte_end":564481,"line_start":167,"line_end":167,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":564486,"byte_end":564489,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ If the value specified is [`None`], then [`read`] calls will block","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":564494,"byte_end":564564,"line_start":169,"line_end":169,"column_start":5,"column_end":75}},{"value":"/ indefinitely. An [`Err`] is returned if the zero [`Duration`] is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":564569,"byte_end":564637,"line_start":170,"line_end":170,"column_start":5,"column_end":73}},{"value":"/ passed to this method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":564642,"byte_end":564668,"line_start":171,"line_end":171,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":564673,"byte_end":564676,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":564681,"byte_end":564713,"line_start":173,"line_end":173,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":564718,"byte_end":564721,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ Platforms may return a different error code whenever a read times out as","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":564726,"byte_end":564802,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/ a result of setting this option. For example Unix typically returns an","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":564807,"byte_end":564881,"line_start":176,"line_end":176,"column_start":5,"column_end":79}},{"value":"/ error of the kind [`WouldBlock`], but Windows may return [`TimedOut`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":564886,"byte_end":564960,"line_start":177,"line_end":177,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":564965,"byte_end":564968,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ [`None`]: ../../std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":564973,"byte_end":565033,"line_start":179,"line_end":179,"column_start":5,"column_end":65}},{"value":"/ [`Err`]: ../../std/result/enum.Result.html#variant.Err","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":565038,"byte_end":565096,"line_start":180,"line_end":180,"column_start":5,"column_end":63}},{"value":"/ [`read`]: ../../std/io/trait.Read.html#tymethod.read","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":565101,"byte_end":565157,"line_start":181,"line_end":181,"column_start":5,"column_end":61}},{"value":"/ [`Duration`]: ../../std/time/struct.Duration.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":565162,"byte_end":565215,"line_start":182,"line_end":182,"column_start":5,"column_end":58}},{"value":"/ [`WouldBlock`]: ../../std/io/enum.ErrorKind.html#variant.WouldBlock","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":565220,"byte_end":565291,"line_start":183,"line_end":183,"column_start":5,"column_end":76}},{"value":"/ [`TimedOut`]: ../../std/io/enum.ErrorKind.html#variant.TimedOut","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":565296,"byte_end":565363,"line_start":184,"line_end":184,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":565368,"byte_end":565371,"line_start":185,"line_end":185,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3284},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":566457,"byte_end":566474,"line_start":209,"line_end":209,"column_start":12,"column_end":29},"name":"set_write_timeout","qualname":"<UdpSocket>::set_write_timeout","value":"pub fn set_write_timeout(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the write timeout to the timeout specified.","sig":null,"attributes":[{"value":"/ Sets the write timeout to the timeout specified.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":565498,"byte_end":565550,"line_start":190,"line_end":190,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":565555,"byte_end":565558,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ If the value specified is [`None`], then [`write`] calls will block","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":565563,"byte_end":565634,"line_start":192,"line_end":192,"column_start":5,"column_end":76}},{"value":"/ indefinitely. An [`Err`] is returned if the zero [`Duration`] is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":565639,"byte_end":565707,"line_start":193,"line_end":193,"column_start":5,"column_end":73}},{"value":"/ passed to this method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":565712,"byte_end":565738,"line_start":194,"line_end":194,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":565743,"byte_end":565746,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":565751,"byte_end":565783,"line_start":196,"line_end":196,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":565788,"byte_end":565791,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Platforms may return a different error code whenever a write times out","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":565796,"byte_end":565870,"line_start":198,"line_end":198,"column_start":5,"column_end":79}},{"value":"/ as a result of setting this option. For example Unix typically returns","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":565875,"byte_end":565949,"line_start":199,"line_end":199,"column_start":5,"column_end":79}},{"value":"/ an error of the kind [`WouldBlock`], but Windows may return [`TimedOut`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":565954,"byte_end":566031,"line_start":200,"line_end":200,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":566036,"byte_end":566039,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ [`None`]: ../../std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":566044,"byte_end":566104,"line_start":202,"line_end":202,"column_start":5,"column_end":65}},{"value":"/ [`Err`]: ../../std/result/enum.Result.html#variant.Err","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":566109,"byte_end":566167,"line_start":203,"line_end":203,"column_start":5,"column_end":63}},{"value":"/ [`write`]: ../../std/io/trait.Write.html#tymethod.write","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":566172,"byte_end":566231,"line_start":204,"line_end":204,"column_start":5,"column_end":64}},{"value":"/ [`Duration`]: ../../std/time/struct.Duration.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":566236,"byte_end":566289,"line_start":205,"line_end":205,"column_start":5,"column_end":58}},{"value":"/ [`WouldBlock`]: ../../std/io/enum.ErrorKind.html#variant.WouldBlock","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":566294,"byte_end":566365,"line_start":206,"line_end":206,"column_start":5,"column_end":76}},{"value":"/ [`TimedOut`]: ../../std/io/enum.ErrorKind.html#variant.TimedOut","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":566370,"byte_end":566437,"line_start":207,"line_end":207,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":566442,"byte_end":566445,"line_start":208,"line_end":208,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3285},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":566861,"byte_end":566873,"line_start":220,"line_end":220,"column_start":12,"column_end":24},"name":"read_timeout","qualname":"<UdpSocket>::read_timeout","value":"pub fn read_timeout(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the read timeout of this socket.","sig":null,"attributes":[{"value":"/ Returns the read timeout of this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":566574,"byte_end":566618,"line_start":213,"line_end":213,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":566623,"byte_end":566626,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ If the timeout is [`None`], then [`read`] calls will block indefinitely.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":566631,"byte_end":566707,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":566712,"byte_end":566715,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ [`None`]: ../../std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":566720,"byte_end":566780,"line_start":217,"line_end":217,"column_start":5,"column_end":65}},{"value":"/ [`read`]: ../../std/io/trait.Read.html#tymethod.read","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":566785,"byte_end":566841,"line_start":218,"line_end":218,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":566846,"byte_end":566849,"line_start":219,"line_end":219,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3286},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":567248,"byte_end":567261,"line_start":231,"line_end":231,"column_start":12,"column_end":25},"name":"write_timeout","qualname":"<UdpSocket>::write_timeout","value":"pub fn write_timeout(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the write timeout of this socket.","sig":null,"attributes":[{"value":"/ Returns the write timeout of this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":566956,"byte_end":567001,"line_start":224,"line_end":224,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":567006,"byte_end":567009,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ If the timeout is [`None`], then [`write`] calls will block indefinitely.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":567014,"byte_end":567091,"line_start":226,"line_end":226,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":567096,"byte_end":567099,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ [`None`]: ../../std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":567104,"byte_end":567164,"line_start":228,"line_end":228,"column_start":5,"column_end":65}},{"value":"/ [`write`]: ../../std/io/trait.Write.html#tymethod.write","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":567169,"byte_end":567228,"line_start":229,"line_end":229,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":567233,"byte_end":567236,"line_start":230,"line_end":230,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3287},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":567530,"byte_end":567543,"line_start":240,"line_end":240,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":567345,"byte_end":567409,"line_start":235,"line_end":235,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":567414,"byte_end":567417,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":567422,"byte_end":567493,"line_start":237,"line_end":237,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":567498,"byte_end":567510,"line_start":238,"line_end":238,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":567515,"byte_end":567518,"line_start":239,"line_end":239,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3288},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":567862,"byte_end":567871,"line_start":251,"line_end":251,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":567639,"byte_end":567703,"line_start":244,"line_end":244,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":567708,"byte_end":567711,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":567716,"byte_end":567763,"line_start":246,"line_end":246,"column_start":5,"column_end":52}},{"value":"/ [`set_broadcast`][link].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":567768,"byte_end":567796,"line_start":247,"line_end":247,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":567801,"byte_end":567804,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_broadcast","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":567809,"byte_end":567842,"line_start":249,"line_end":249,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":567847,"byte_end":567850,"line_start":250,"line_end":250,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3289},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":568179,"byte_end":568200,"line_start":260,"line_end":260,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":567939,"byte_end":568008,"line_start":255,"line_end":255,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":568013,"byte_end":568016,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":568021,"byte_end":568095,"line_start":257,"line_end":257,"column_start":5,"column_end":79}},{"value":"/ Note that this may not have any effect on IPv6 sockets.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":568100,"byte_end":568159,"line_start":258,"line_end":258,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":568164,"byte_end":568167,"line_start":259,"line_end":259,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3290},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":568564,"byte_end":568581,"line_start":271,"line_end":271,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":568320,"byte_end":568389,"line_start":264,"line_end":264,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":568394,"byte_end":568397,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":568402,"byte_end":568449,"line_start":266,"line_end":266,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v4`][link].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":568454,"byte_end":568490,"line_start":267,"line_end":267,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":568495,"byte_end":568498,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v4","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":568503,"byte_end":568544,"line_start":269,"line_end":269,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":568549,"byte_end":568552,"line_start":270,"line_end":270,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3291},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":569046,"byte_end":569066,"line_start":283,"line_end":283,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":568657,"byte_end":568725,"line_start":275,"line_end":275,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":568730,"byte_end":568733,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":568738,"byte_end":568808,"line_start":277,"line_end":277,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":568813,"byte_end":568887,"line_start":278,"line_end":278,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":568892,"byte_end":568954,"line_start":279,"line_end":279,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":568959,"byte_end":568962,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Note that this may not have any effect on IPv6 sockets.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":568967,"byte_end":569026,"line_start":281,"line_end":281,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":569031,"byte_end":569034,"line_start":282,"line_end":282,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3292},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":569423,"byte_end":569439,"line_start":294,"line_end":294,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":569182,"byte_end":569250,"line_start":287,"line_end":287,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":569255,"byte_end":569258,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":569263,"byte_end":569310,"line_start":289,"line_end":289,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_ttl_v4`][link].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":569315,"byte_end":569350,"line_start":290,"line_end":290,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":569355,"byte_end":569358,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_ttl_v4","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":569363,"byte_end":569403,"line_start":292,"line_end":292,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":569408,"byte_end":569411,"line_start":293,"line_end":293,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3293},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":569757,"byte_end":569778,"line_start":303,"line_end":303,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":569513,"byte_end":569584,"line_start":298,"line_end":298,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":569589,"byte_end":569592,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":569597,"byte_end":569673,"line_start":300,"line_end":300,"column_start":5,"column_end":81}},{"value":"/ Note that this may not have any affect on IPv4 sockets.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":569678,"byte_end":569737,"line_start":301,"line_end":301,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":569742,"byte_end":569745,"line_start":302,"line_end":302,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3294},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":570144,"byte_end":570161,"line_start":314,"line_end":314,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":569898,"byte_end":569969,"line_start":307,"line_end":307,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":569974,"byte_end":569977,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":569982,"byte_end":570029,"line_start":309,"line_end":309,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v6`][link].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":570034,"byte_end":570070,"line_start":310,"line_end":310,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":570075,"byte_end":570078,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v6","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":570083,"byte_end":570124,"line_start":312,"line_end":312,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":570129,"byte_end":570132,"line_start":313,"line_end":313,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3295},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":570430,"byte_end":570437,"line_start":323,"line_end":323,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":570237,"byte_end":570295,"line_start":318,"line_end":318,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":570300,"byte_end":570303,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":570308,"byte_end":570384,"line_start":320,"line_end":320,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":570389,"byte_end":570410,"line_start":321,"line_end":321,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":570415,"byte_end":570418,"line_start":322,"line_end":322,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3296},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":570711,"byte_end":570714,"line_start":333,"line_end":333,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":570514,"byte_end":570572,"line_start":327,"line_end":327,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":570577,"byte_end":570580,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":570585,"byte_end":570651,"line_start":329,"line_end":329,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":570656,"byte_end":570659,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":570664,"byte_end":570691,"line_start":331,"line_end":331,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":570696,"byte_end":570699,"line_start":332,"line_end":332,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3297},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":571205,"byte_end":571222,"line_start":344,"line_end":344,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":570775,"byte_end":570833,"line_start":337,"line_end":337,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":570838,"byte_end":570841,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":570846,"byte_end":570920,"line_start":339,"line_end":339,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":570925,"byte_end":570998,"line_start":340,"line_end":340,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":571003,"byte_end":571075,"line_start":341,"line_end":341,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":571080,"byte_end":571150,"line_start":342,"line_end":342,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":571155,"byte_end":571193,"line_start":343,"line_end":343,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3298},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":571676,"byte_end":571693,"line_start":353,"line_end":353,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":571360,"byte_end":571420,"line_start":348,"line_end":348,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":571425,"byte_end":571428,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":571433,"byte_end":571507,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":571512,"byte_end":571585,"line_start":351,"line_end":351,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":571590,"byte_end":571664,"line_start":352,"line_end":352,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3299},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":572043,"byte_end":572061,"line_start":363,"line_end":363,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":571825,"byte_end":571884,"line_start":357,"line_end":357,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":571889,"byte_end":571892,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":571897,"byte_end":571944,"line_start":359,"line_end":359,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v4`][link].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":571949,"byte_end":571981,"line_start":360,"line_end":360,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":571986,"byte_end":571989,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v4","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":571994,"byte_end":572031,"line_start":362,"line_end":362,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3300},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":572420,"byte_end":572438,"line_start":373,"line_end":373,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":572200,"byte_end":572261,"line_start":367,"line_end":367,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":572266,"byte_end":572269,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":572274,"byte_end":572321,"line_start":369,"line_end":369,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v6`][link].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":572326,"byte_end":572358,"line_start":370,"line_end":370,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":572363,"byte_end":572366,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v6","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":572371,"byte_end":572408,"line_start":372,"line_end":372,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3301},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":572833,"byte_end":572843,"line_start":383,"line_end":383,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UdpSocket>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":572571,"byte_end":572630,"line_start":377,"line_end":377,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":572635,"byte_end":572638,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":572643,"byte_end":572717,"line_start":379,"line_end":379,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":572722,"byte_end":572798,"line_start":380,"line_end":380,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":572803,"byte_end":572813,"line_start":381,"line_end":381,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":572818,"byte_end":572821,"line_start":382,"line_end":382,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3302},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":573687,"byte_end":573694,"line_start":399,"line_end":399,"column_start":12,"column_end":19},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub fn connect<A: ToSocketAddrs>(&Self, A) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects this UDP socket to a remote address, allowing the `send` and\n `recv` syscalls to be used to send data and also applies filters to only\n receive data from the specified address.","sig":null,"attributes":[{"value":"/ Connects this UDP socket to a remote address, allowing the `send` and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":572925,"byte_end":572998,"line_start":387,"line_end":387,"column_start":5,"column_end":78}},{"value":"/ `recv` syscalls to be used to send data and also applies filters to only","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":573003,"byte_end":573079,"line_start":388,"line_end":388,"column_start":5,"column_end":81}},{"value":"/ receive data from the specified address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":573084,"byte_end":573128,"line_start":389,"line_end":389,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":573133,"byte_end":573136,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, `connect` will be attempted with","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":573141,"byte_end":573214,"line_start":391,"line_end":391,"column_start":5,"column_end":78}},{"value":"/ each of the addresses until the underlying OS function returns no","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":573219,"byte_end":573288,"line_start":392,"line_end":392,"column_start":5,"column_end":74}},{"value":"/ error. Note that usually, a successful `connect` call does not specify","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":573293,"byte_end":573367,"line_start":393,"line_end":393,"column_start":5,"column_end":79}},{"value":"/ that there is a remote server listening on the port, rather, such an","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":573372,"byte_end":573444,"line_start":394,"line_end":394,"column_start":5,"column_end":77}},{"value":"/ error would only be detected after the first send. If the OS returns an","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":573449,"byte_end":573524,"line_start":395,"line_end":395,"column_start":5,"column_end":80}},{"value":"/ error for each of the specified addresses, the error returned from the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":573529,"byte_end":573603,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ last connection attempt (the last address) is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":573608,"byte_end":573667,"line_start":397,"line_end":397,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":573672,"byte_end":573675,"line_start":398,"line_end":398,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3305},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":574108,"byte_end":574112,"line_start":410,"line_end":410,"column_start":12,"column_end":16},"name":"send","qualname":"<UdpSocket>::send","value":"pub fn send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the remote address to which it is connected.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":573820,"byte_end":573896,"line_start":403,"line_end":403,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":573901,"byte_end":573904,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. This","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":573909,"byte_end":573986,"line_start":405,"line_end":405,"column_start":5,"column_end":82}},{"value":"/ method will fail if the socket is not connected.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":573991,"byte_end":574043,"line_start":406,"line_end":406,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":574048,"byte_end":574051,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":574056,"byte_end":574088,"line_start":408,"line_end":408,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":574093,"byte_end":574096,"line_start":409,"line_end":409,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3306},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":574780,"byte_end":574784,"line_start":426,"line_end":426,"column_start":12,"column_end":16},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub fn recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message on the socket from the remote address to\n which it is connected. On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives a single datagram message on the socket from the remote address to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":574191,"byte_end":574270,"line_start":414,"line_end":414,"column_start":5,"column_end":84}},{"value":"/ which it is connected. On success, returns the number of bytes read.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":574275,"byte_end":574347,"line_start":415,"line_end":415,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":574352,"byte_end":574355,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":574360,"byte_end":574441,"line_start":417,"line_end":417,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":574446,"byte_end":574529,"line_start":418,"line_end":418,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":574534,"byte_end":574568,"line_start":419,"line_end":419,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":574573,"byte_end":574576,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. This","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":574581,"byte_end":574658,"line_start":421,"line_end":421,"column_start":5,"column_end":82}},{"value":"/ method will fail if the socket is not connected.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":574663,"byte_end":574715,"line_start":422,"line_end":422,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":574720,"byte_end":574723,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":574728,"byte_end":574760,"line_start":424,"line_end":424,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":574765,"byte_end":574768,"line_start":425,"line_end":425,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3307},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":575977,"byte_end":575981,"line_start":454,"line_end":454,"column_start":12,"column_end":16},"name":"peek","qualname":"<UdpSocket>::peek","value":"pub fn peek(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives single datagram on the socket from the remote address to which it is\n connected, without removing the message from input queue. On success, returns\n the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives single datagram on the socket from the remote address to which it is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":574867,"byte_end":574948,"line_start":430,"line_end":430,"column_start":5,"column_end":86}},{"value":"/ connected, without removing the message from input queue. On success, returns","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":574953,"byte_end":575034,"line_start":431,"line_end":431,"column_start":5,"column_end":86}},{"value":"/ the number of bytes peeked.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":575039,"byte_end":575070,"line_start":432,"line_end":432,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":575075,"byte_end":575078,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":575083,"byte_end":575164,"line_start":434,"line_end":434,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":575169,"byte_end":575252,"line_start":435,"line_end":435,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":575257,"byte_end":575291,"line_start":436,"line_end":436,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":575296,"byte_end":575299,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":575304,"byte_end":575378,"line_start":438,"line_end":438,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying `recv` system call.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":575383,"byte_end":575445,"line_start":439,"line_end":439,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":575450,"byte_end":575453,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ Do not use this function to implement busy waiting, instead use `libc::poll` to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":575458,"byte_end":575541,"line_start":441,"line_end":441,"column_start":5,"column_end":88}},{"value":"/ synchronize IO events on one or more sockets.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":575546,"byte_end":575595,"line_start":442,"line_end":442,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":575600,"byte_end":575603,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. This","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":575608,"byte_end":575685,"line_start":444,"line_end":444,"column_start":5,"column_end":82}},{"value":"/ method will fail if the socket is not connected.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":575690,"byte_end":575742,"line_start":445,"line_end":445,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":575747,"byte_end":575750,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":575755,"byte_end":575787,"line_start":447,"line_end":447,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":575792,"byte_end":575795,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":575800,"byte_end":575812,"line_start":449,"line_end":449,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":575817,"byte_end":575820,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ This method will fail if the socket is not connected. The `connect` method","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":575825,"byte_end":575903,"line_start":451,"line_end":451,"column_start":5,"column_end":83}},{"value":"/ will connect this socket to a remote address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":575908,"byte_end":575957,"line_start":452,"line_end":452,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":575962,"byte_end":575965,"line_start":453,"line_end":453,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3308},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":576749,"byte_end":576764,"line_start":471,"line_end":471,"column_start":12,"column_end":27},"name":"set_nonblocking","qualname":"<UdpSocket>::set_nonblocking","value":"pub fn set_nonblocking(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Moves this UDP socket into or out of nonblocking mode.","sig":null,"attributes":[{"value":"/ Moves this UDP socket into or out of nonblocking mode.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":576064,"byte_end":576122,"line_start":458,"line_end":458,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":576127,"byte_end":576130,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ This will result in `recv`, `recv_from`, `send`, and `send_to`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":576135,"byte_end":576201,"line_start":460,"line_end":460,"column_start":5,"column_end":71}},{"value":"/ operations becoming nonblocking, i.e., immediately returning from their","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":576206,"byte_end":576281,"line_start":461,"line_end":461,"column_start":5,"column_end":80}},{"value":"/ calls. If the IO operation is successful, `Ok` is returned and no","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":576286,"byte_end":576355,"line_start":462,"line_end":462,"column_start":5,"column_end":74}},{"value":"/ further action is required. If the IO operation could not be completed","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":576360,"byte_end":576434,"line_start":463,"line_end":463,"column_start":5,"column_end":79}},{"value":"/ and needs to be retried, an error with kind","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":576439,"byte_end":576486,"line_start":464,"line_end":464,"column_start":5,"column_end":52}},{"value":"/ [`io::ErrorKind::WouldBlock`] is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":576491,"byte_end":576537,"line_start":465,"line_end":465,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":576542,"byte_end":576545,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ On Unix platforms, calling this method corresponds to calling `fcntl`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":576550,"byte_end":576623,"line_start":467,"line_end":467,"column_start":5,"column_end":78}},{"value":"/ `FIONBIO`. On Windows calling this method corresponds to calling","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":576628,"byte_end":576696,"line_start":468,"line_end":468,"column_start":5,"column_end":73}},{"value":"/ `ioctlsocket` `FIONBIO`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":576701,"byte_end":576729,"line_start":469,"line_end":469,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":576734,"byte_end":576737,"line_start":470,"line_end":470,"column_start":5,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7525},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":462216,"byte_end":462220,"line_start":51,"line_end":51,"column_start":5,"column_end":9},"name":"Read","qualname":"::net::Shutdown::Read","value":"Shutdown::Read","parent":{"krate":0,"index":7524},"children":[],"decl_id":null,"docs":" The reading portion of the [`TcpStream`] should be shut down.","sig":null,"attributes":[{"value":"/ The reading portion of the [`TcpStream`] should be shut down.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":462058,"byte_end":462123,"line_start":47,"line_end":47,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":462128,"byte_end":462131,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ All currently blocked and future [reads] will return [`Ok(0)`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":462136,"byte_end":462203,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":462208,"byte_end":462211,"line_start":50,"line_end":50,"column_start":5,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7527},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":462384,"byte_end":462389,"line_start":56,"line_end":56,"column_start":5,"column_end":10},"name":"Write","qualname":"::net::Shutdown::Write","value":"Shutdown::Write","parent":{"krate":0,"index":7524},"children":[],"decl_id":null,"docs":" The writing portion of the [`TcpStream`] should be shut down.","sig":null,"attributes":[{"value":"/ The writing portion of the [`TcpStream`] should be shut down.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":462226,"byte_end":462291,"line_start":52,"line_end":52,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":462296,"byte_end":462299,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ All currently blocked and future [writes] will return an error.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":462304,"byte_end":462371,"line_start":54,"line_end":54,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":462376,"byte_end":462379,"line_start":55,"line_end":55,"column_start":5,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7529},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":462495,"byte_end":462499,"line_start":59,"line_end":59,"column_start":5,"column_end":9},"name":"Both","qualname":"::net::Shutdown::Both","value":"Shutdown::Both","parent":{"krate":0,"index":7524},"children":[],"decl_id":null,"docs":" Both the reading and the writing portions of the [`TcpStream`] should be shut down.","sig":null,"attributes":[{"value":"/ Both the reading and the writing portions of the [`TcpStream`] should be shut down.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":462395,"byte_end":462482,"line_start":57,"line_end":57,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":462487,"byte_end":462490,"line_start":58,"line_end":58,"column_start":5,"column_end":8}}]},{"kind":"Enum","id":{"krate":0,"index":7524},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":462043,"byte_end":462051,"line_start":46,"line_end":46,"column_start":10,"column_end":18},"name":"Shutdown","qualname":"::net::Shutdown","value":"pub enum Shutdown {\n\n    /// The reading portion of the [`TcpStream`] should be shut down.\n    ///\n    /// All currently blocked and future [reads] will return [`Ok(0)`].\n    ///\n    Read,\n\n    /// The writing portion of the [`TcpStream`] should be shut down.\n    ///\n    /// All currently blocked and future [writes] will return an error.\n    ///\n    Write,\n\n    /// Both the reading and the writing portions of the [`TcpStream`] should be shut down.\n    ///\n    Both,\n}","parent":null,"children":[{"krate":0,"index":7525},{"krate":0,"index":7527},{"krate":0,"index":7529}],"decl_id":null,"docs":" Possible values which can be passed to the [`shutdown`] method of\n","sig":null,"attributes":[{"value":"/ Possible values which can be passed to the [`shutdown`] method of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/mod.rs","byte_start":461919,"byte_end":461988,"line_start":44,"line_end":44,"column_start":1,"column_end":70}}]},{"kind":"Mod","id":{"krate":0,"index":3324},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/num.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"num","qualname":"::num","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/num.rs","parent":null,"children":[{"krate":0,"index":3325},{"krate":0,"index":9494},{"krate":0,"index":3326},{"krate":0,"index":3327},{"krate":0,"index":3328},{"krate":0,"index":3329},{"krate":0,"index":3330},{"krate":0,"index":3331},{"krate":0,"index":3332},{"krate":0,"index":3333},{"krate":0,"index":3334},{"krate":0,"index":3335},{"krate":0,"index":3336},{"krate":0,"index":3337},{"krate":0,"index":3338},{"krate":0,"index":3339},{"krate":0,"index":3340},{"krate":0,"index":3341},{"krate":0,"index":3342},{"krate":0,"index":3343},{"krate":0,"index":3344}],"decl_id":null,"docs":" Additional functionality for numerics.","sig":null,"attributes":[{"value":"/ Additional functionality for numerics.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/num.rs","byte_start":578183,"byte_end":578225,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/num.rs","byte_start":578226,"byte_end":578229,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This module provides some extra types that are useful when doing numerical","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/num.rs","byte_start":578230,"byte_end":578308,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ work. See the individual documentation for each piece for more information.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/num.rs","byte_start":578309,"byte_end":578388,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"allow(missing_docs)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/num.rs","byte_start":578390,"byte_end":578413,"line_start":23,"line_end":23,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":3345},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"os","qualname":"::os","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/mod.rs","parent":null,"children":[{"krate":0,"index":3346},{"krate":0,"index":3347},{"krate":0,"index":3383}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3347},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"raw","qualname":"::os::raw","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","parent":null,"children":[{"krate":0,"index":3348},{"krate":0,"index":3349},{"krate":0,"index":3350},{"krate":0,"index":3351},{"krate":0,"index":3352},{"krate":0,"index":3353},{"krate":0,"index":3354},{"krate":0,"index":3355},{"krate":0,"index":3356},{"krate":0,"index":3357},{"krate":0,"index":3358},{"krate":0,"index":3359},{"krate":0,"index":3360},{"krate":0,"index":3361},{"krate":0,"index":3362},{"krate":0,"index":3363},{"krate":0,"index":3364},{"krate":0,"index":3365},{"krate":0,"index":3366},{"krate":0,"index":3367},{"krate":0,"index":3368},{"krate":0,"index":3369},{"krate":0,"index":3370},{"krate":0,"index":3371},{"krate":0,"index":3372},{"krate":0,"index":3373}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3348},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":580390,"byte_end":580396,"line_start":18,"line_end":18,"column_start":10,"column_end":16},"name":"c_char","qualname":"::os::raw::c_char","value":"i8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3349},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":580412,"byte_end":580419,"line_start":19,"line_end":19,"column_start":10,"column_end":17},"name":"c_schar","qualname":"::os::raw::c_schar","value":"i8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3350},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":580435,"byte_end":580442,"line_start":20,"line_end":20,"column_start":10,"column_end":17},"name":"c_uchar","qualname":"::os::raw::c_uchar","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3351},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":580458,"byte_end":580465,"line_start":21,"line_end":21,"column_start":10,"column_end":17},"name":"c_short","qualname":"::os::raw::c_short","value":"i16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3352},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":580482,"byte_end":580490,"line_start":22,"line_end":22,"column_start":10,"column_end":18},"name":"c_ushort","qualname":"::os::raw::c_ushort","value":"u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3353},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":580507,"byte_end":580512,"line_start":23,"line_end":23,"column_start":10,"column_end":15},"name":"c_int","qualname":"::os::raw::c_int","value":"i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3354},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":580529,"byte_end":580535,"line_start":24,"line_end":24,"column_start":10,"column_end":16},"name":"c_uint","qualname":"::os::raw::c_uint","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3355},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":580707,"byte_end":580713,"line_start":30,"line_end":30,"column_start":10,"column_end":16},"name":"c_long","qualname":"::os::raw::c_long","value":"i64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_pointer_width = \"64\")","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":580662,"byte_end":580697,"line_start":29,"line_end":29,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":3356},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":580766,"byte_end":580773,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"name":"c_ulong","qualname":"::os::raw::c_ulong","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_pointer_width = \"64\")","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":580721,"byte_end":580756,"line_start":31,"line_end":31,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":3357},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":580790,"byte_end":580800,"line_start":33,"line_end":33,"column_start":10,"column_end":20},"name":"c_longlong","qualname":"::os::raw::c_longlong","value":"i64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3358},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":580817,"byte_end":580828,"line_start":34,"line_end":34,"column_start":10,"column_end":21},"name":"c_ulonglong","qualname":"::os::raw::c_ulonglong","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3359},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":580845,"byte_end":580852,"line_start":35,"line_end":35,"column_start":10,"column_end":17},"name":"c_float","qualname":"::os::raw::c_float","value":"f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3360},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":580869,"byte_end":580877,"line_start":36,"line_end":36,"column_start":10,"column_end":18},"name":"c_double","qualname":"::os::raw::c_double","value":"f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3362},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":580941,"byte_end":580946,"line_start":41,"line_end":41,"column_start":10,"column_end":15},"name":"dev_t","qualname":"::os::raw::dev_t","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3363},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":580963,"byte_end":580969,"line_start":42,"line_end":42,"column_start":10,"column_end":16},"name":"mode_t","qualname":"::os::raw::mode_t","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3364},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":580986,"byte_end":580995,"line_start":43,"line_end":43,"column_start":10,"column_end":19},"name":"pthread_t","qualname":"::os::raw::pthread_t","value":"*mut c_void","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3377},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581159,"byte_end":581167,"line_start":50,"line_end":50,"column_start":14,"column_end":22},"name":"blkcnt_t","qualname":"::os::raw::arch::blkcnt_t","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3378},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581188,"byte_end":581197,"line_start":51,"line_end":51,"column_start":14,"column_end":23},"name":"blksize_t","qualname":"::os::raw::arch::blksize_t","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3379},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581218,"byte_end":581223,"line_start":52,"line_end":52,"column_start":14,"column_end":19},"name":"ino_t","qualname":"::os::raw::arch::ino_t","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3380},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581244,"byte_end":581251,"line_start":53,"line_end":53,"column_start":14,"column_end":21},"name":"nlink_t","qualname":"::os::raw::arch::nlink_t","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3381},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581272,"byte_end":581277,"line_start":54,"line_end":54,"column_start":14,"column_end":19},"name":"off_t","qualname":"::os::raw::arch::off_t","value":"i64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3382},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581298,"byte_end":581304,"line_start":55,"line_end":55,"column_start":14,"column_end":20},"name":"time_t","qualname":"::os::raw::arch::time_t","value":"i64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7542},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581364,"byte_end":581368,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"name":"stat","qualname":"::os::raw::arch::stat","value":"stat { st_dev, st_ino, st_nlink, st_mode, st_uid, st_gid, __pad0, st_rdev, st_size, st_blksize, st_blocks, st_atime, st_atime_nsec, st_mtime, st_mtime_nsec, st_ctime, st_ctime_nsec, __unused }","parent":null,"children":[{"krate":0,"index":7543},{"krate":0,"index":7544},{"krate":0,"index":7545},{"krate":0,"index":7546},{"krate":0,"index":7547},{"krate":0,"index":7548},{"krate":0,"index":7549},{"krate":0,"index":7550},{"krate":0,"index":7551},{"krate":0,"index":7552},{"krate":0,"index":7553},{"krate":0,"index":7554},{"krate":0,"index":7555},{"krate":0,"index":7556},{"krate":0,"index":7557},{"krate":0,"index":7558},{"krate":0,"index":7559},{"krate":0,"index":7560}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581317,"byte_end":581327,"line_start":57,"line_end":57,"column_start":5,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":7543},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581383,"byte_end":581389,"line_start":60,"line_end":60,"column_start":13,"column_end":19},"name":"st_dev","qualname":"::os::raw::arch::stat::st_dev","value":"u64","parent":{"krate":0,"index":7542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7544},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581408,"byte_end":581414,"line_start":61,"line_end":61,"column_start":13,"column_end":19},"name":"st_ino","qualname":"::os::raw::arch::stat::st_ino","value":"u64","parent":{"krate":0,"index":7542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7545},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581433,"byte_end":581441,"line_start":62,"line_end":62,"column_start":13,"column_end":21},"name":"st_nlink","qualname":"::os::raw::arch::stat::st_nlink","value":"u64","parent":{"krate":0,"index":7542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7546},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581460,"byte_end":581467,"line_start":63,"line_end":63,"column_start":13,"column_end":20},"name":"st_mode","qualname":"::os::raw::arch::stat::st_mode","value":"u32","parent":{"krate":0,"index":7542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7547},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581486,"byte_end":581492,"line_start":64,"line_end":64,"column_start":13,"column_end":19},"name":"st_uid","qualname":"::os::raw::arch::stat::st_uid","value":"u32","parent":{"krate":0,"index":7542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7548},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581511,"byte_end":581517,"line_start":65,"line_end":65,"column_start":13,"column_end":19},"name":"st_gid","qualname":"::os::raw::arch::stat::st_gid","value":"u32","parent":{"krate":0,"index":7542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7549},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581536,"byte_end":581542,"line_start":66,"line_end":66,"column_start":13,"column_end":19},"name":"__pad0","qualname":"::os::raw::arch::stat::__pad0","value":"i32","parent":{"krate":0,"index":7542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7550},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581563,"byte_end":581570,"line_start":67,"line_end":67,"column_start":13,"column_end":20},"name":"st_rdev","qualname":"::os::raw::arch::stat::st_rdev","value":"u64","parent":{"krate":0,"index":7542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7551},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581589,"byte_end":581596,"line_start":68,"line_end":68,"column_start":13,"column_end":20},"name":"st_size","qualname":"::os::raw::arch::stat::st_size","value":"i64","parent":{"krate":0,"index":7542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7552},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581615,"byte_end":581625,"line_start":69,"line_end":69,"column_start":13,"column_end":23},"name":"st_blksize","qualname":"::os::raw::arch::stat::st_blksize","value":"i64","parent":{"krate":0,"index":7542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7553},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581644,"byte_end":581653,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"name":"st_blocks","qualname":"::os::raw::arch::stat::st_blocks","value":"i64","parent":{"krate":0,"index":7542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7554},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581672,"byte_end":581680,"line_start":71,"line_end":71,"column_start":13,"column_end":21},"name":"st_atime","qualname":"::os::raw::arch::stat::st_atime","value":"i64","parent":{"krate":0,"index":7542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7555},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581699,"byte_end":581712,"line_start":72,"line_end":72,"column_start":13,"column_end":26},"name":"st_atime_nsec","qualname":"::os::raw::arch::stat::st_atime_nsec","value":"i64","parent":{"krate":0,"index":7542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7556},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581734,"byte_end":581742,"line_start":73,"line_end":73,"column_start":13,"column_end":21},"name":"st_mtime","qualname":"::os::raw::arch::stat::st_mtime","value":"i64","parent":{"krate":0,"index":7542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7557},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581761,"byte_end":581774,"line_start":74,"line_end":74,"column_start":13,"column_end":26},"name":"st_mtime_nsec","qualname":"::os::raw::arch::stat::st_mtime_nsec","value":"i64","parent":{"krate":0,"index":7542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7558},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581796,"byte_end":581804,"line_start":75,"line_end":75,"column_start":13,"column_end":21},"name":"st_ctime","qualname":"::os::raw::arch::stat::st_ctime","value":"i64","parent":{"krate":0,"index":7542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7559},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581823,"byte_end":581836,"line_start":76,"line_end":76,"column_start":13,"column_end":26},"name":"st_ctime_nsec","qualname":"::os::raw::arch::stat::st_ctime_nsec","value":"i64","parent":{"krate":0,"index":7542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7560},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/raw.rs","byte_start":581858,"byte_end":581866,"line_start":77,"line_end":77,"column_start":13,"column_end":21},"name":"__unused","qualname":"::os::raw::arch::stat::__unused","value":"[i64; 3]","parent":{"krate":0,"index":7542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3383},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::os::fs","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","parent":null,"children":[{"krate":0,"index":3384},{"krate":0,"index":3385},{"krate":0,"index":3386},{"krate":0,"index":3387},{"krate":0,"index":3388},{"krate":0,"index":3406}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3388},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583023,"byte_end":583034,"line_start":31,"line_end":31,"column_start":11,"column_end":22},"name":"MetadataExt","qualname":"::os::fs::MetadataExt","value":"MetadataExt","parent":null,"children":[{"krate":0,"index":3389},{"krate":0,"index":3390},{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3393},{"krate":0,"index":3394},{"krate":0,"index":3395},{"krate":0,"index":3396},{"krate":0,"index":3397},{"krate":0,"index":3398},{"krate":0,"index":3399},{"krate":0,"index":3400},{"krate":0,"index":3401},{"krate":0,"index":3402},{"krate":0,"index":3403},{"krate":0,"index":3404},{"krate":0,"index":3405}],"decl_id":null,"docs":" OS-specific extensions to [`fs::Metadata`].","sig":null,"attributes":[{"value":"/ OS-specific extensions to [`fs::Metadata`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":582899,"byte_end":582946,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":582947,"byte_end":582950,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`fs::Metadata`]: ../../../../std/fs/struct.Metadata.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":582951,"byte_end":583012,"line_start":30,"line_end":30,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3389},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583397,"byte_end":583408,"line_start":39,"line_end":39,"column_start":8,"column_end":19},"name":"as_raw_stat","qualname":"::os::fs::MetadataExt::as_raw_stat","value":"pub fn as_raw_stat(&Self) -> &raw::stat","parent":{"krate":0,"index":3388},"children":[],"decl_id":null,"docs":" Gain a reference to the underlying `stat` structure which contains\n the raw information returned by the OS.","sig":null,"attributes":[{"value":"/ Gain a reference to the underlying `stat` structure which contains","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583041,"byte_end":583111,"line_start":32,"line_end":32,"column_start":5,"column_end":75}},{"value":"/ the raw information returned by the OS.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583116,"byte_end":583159,"line_start":33,"line_end":33,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583164,"byte_end":583167,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The contents of the returned [`stat`] are **not** consistent across","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583172,"byte_end":583243,"line_start":35,"line_end":35,"column_start":5,"column_end":76}},{"value":"/ Unix platforms. The `os::unix::fs::MetadataExt` trait contains the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583248,"byte_end":583318,"line_start":36,"line_end":36,"column_start":5,"column_end":75}},{"value":"/ cross-Unix abstractions contained within the raw stat.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583323,"byte_end":583381,"line_start":37,"line_end":37,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583386,"byte_end":583389,"line_start":38,"line_end":38,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3390},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583505,"byte_end":583511,"line_start":43,"line_end":43,"column_start":8,"column_end":14},"name":"st_dev","qualname":"::os::fs::MetadataExt::st_dev","value":"pub fn st_dev(&Self) -> u64","parent":{"krate":0,"index":3388},"children":[],"decl_id":null,"docs":" Returns the device ID on which this file resides.","sig":null,"attributes":[{"value":"/ Returns the device ID on which this file resides.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583436,"byte_end":583489,"line_start":41,"line_end":41,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583494,"byte_end":583497,"line_start":42,"line_end":42,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3391},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583576,"byte_end":583582,"line_start":46,"line_end":46,"column_start":8,"column_end":14},"name":"st_ino","qualname":"::os::fs::MetadataExt::st_ino","value":"pub fn st_ino(&Self) -> u64","parent":{"krate":0,"index":3388},"children":[],"decl_id":null,"docs":" Returns the inode number.","sig":null,"attributes":[{"value":"/ Returns the inode number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583531,"byte_end":583560,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583565,"byte_end":583568,"line_start":45,"line_end":45,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3392},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583653,"byte_end":583660,"line_start":49,"line_end":49,"column_start":8,"column_end":15},"name":"st_mode","qualname":"::os::fs::MetadataExt::st_mode","value":"pub fn st_mode(&Self) -> u32","parent":{"krate":0,"index":3388},"children":[],"decl_id":null,"docs":" Returns the file type and mode.","sig":null,"attributes":[{"value":"/ Returns the file type and mode.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583602,"byte_end":583637,"line_start":47,"line_end":47,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583642,"byte_end":583645,"line_start":48,"line_end":48,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3393},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583741,"byte_end":583749,"line_start":52,"line_end":52,"column_start":8,"column_end":16},"name":"st_nlink","qualname":"::os::fs::MetadataExt::st_nlink","value":"pub fn st_nlink(&Self) -> u64","parent":{"krate":0,"index":3388},"children":[],"decl_id":null,"docs":" Returns the number of hard links to file.","sig":null,"attributes":[{"value":"/ Returns the number of hard links to file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583680,"byte_end":583725,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583730,"byte_end":583733,"line_start":51,"line_end":51,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3394},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583827,"byte_end":583833,"line_start":55,"line_end":55,"column_start":8,"column_end":14},"name":"st_uid","qualname":"::os::fs::MetadataExt::st_uid","value":"pub fn st_uid(&Self) -> u32","parent":{"krate":0,"index":3388},"children":[],"decl_id":null,"docs":" Returns the user ID of the file owner.","sig":null,"attributes":[{"value":"/ Returns the user ID of the file owner.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583769,"byte_end":583811,"line_start":53,"line_end":53,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583816,"byte_end":583819,"line_start":54,"line_end":54,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3395},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583912,"byte_end":583918,"line_start":58,"line_end":58,"column_start":8,"column_end":14},"name":"st_gid","qualname":"::os::fs::MetadataExt::st_gid","value":"pub fn st_gid(&Self) -> u32","parent":{"krate":0,"index":3388},"children":[],"decl_id":null,"docs":" Returns the group ID of the file owner.","sig":null,"attributes":[{"value":"/ Returns the group ID of the file owner.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583853,"byte_end":583896,"line_start":56,"line_end":56,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583901,"byte_end":583904,"line_start":57,"line_end":57,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3396},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":584038,"byte_end":584045,"line_start":61,"line_end":61,"column_start":8,"column_end":15},"name":"st_rdev","qualname":"::os::fs::MetadataExt::st_rdev","value":"pub fn st_rdev(&Self) -> u64","parent":{"krate":0,"index":3388},"children":[],"decl_id":null,"docs":" Returns the device ID that this file represents. Only relevant for special file.","sig":null,"attributes":[{"value":"/ Returns the device ID that this file represents. Only relevant for special file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":583938,"byte_end":584022,"line_start":59,"line_end":59,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":584027,"byte_end":584030,"line_start":60,"line_end":60,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3397},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":584296,"byte_end":584303,"line_start":67,"line_end":67,"column_start":8,"column_end":15},"name":"st_size","qualname":"::os::fs::MetadataExt::st_size","value":"pub fn st_size(&Self) -> u64","parent":{"krate":0,"index":3388},"children":[],"decl_id":null,"docs":" Returns the size of the file (if it is a regular file or a symbolic link) in bytes.","sig":null,"attributes":[{"value":"/ Returns the size of the file (if it is a regular file or a symbolic link) in bytes.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":584065,"byte_end":584152,"line_start":62,"line_end":62,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":584157,"byte_end":584160,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ The size of a symbolic link is the length of the pathname it contains,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":584165,"byte_end":584239,"line_start":64,"line_end":64,"column_start":5,"column_end":79}},{"value":"/ without a terminating null byte.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":584244,"byte_end":584280,"line_start":65,"line_end":65,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":584285,"byte_end":584288,"line_start":66,"line_end":66,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3398},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":584372,"byte_end":584380,"line_start":70,"line_end":70,"column_start":8,"column_end":16},"name":"st_atime","qualname":"::os::fs::MetadataExt::st_atime","value":"pub fn st_atime(&Self) -> i64","parent":{"krate":0,"index":3388},"children":[],"decl_id":null,"docs":" Returns the last access time.","sig":null,"attributes":[{"value":"/ Returns the last access time.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":584323,"byte_end":584356,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":584361,"byte_end":584364,"line_start":69,"line_end":69,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3399},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":584496,"byte_end":584509,"line_start":73,"line_end":73,"column_start":8,"column_end":21},"name":"st_atime_nsec","qualname":"::os::fs::MetadataExt::st_atime_nsec","value":"pub fn st_atime_nsec(&Self) -> i64","parent":{"krate":0,"index":3388},"children":[],"decl_id":null,"docs":" Returns the last access time of the file, in nanoseconds since [`st_atime`].","sig":null,"attributes":[{"value":"/ Returns the last access time of the file, in nanoseconds since [`st_atime`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":584400,"byte_end":584480,"line_start":71,"line_end":71,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":584485,"byte_end":584488,"line_start":72,"line_end":72,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3400},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":584625,"byte_end":584633,"line_start":76,"line_end":76,"column_start":8,"column_end":16},"name":"st_mtime","qualname":"::os::fs::MetadataExt::st_mtime","value":"pub fn st_mtime(&Self) -> i64","parent":{"krate":0,"index":3388},"children":[],"decl_id":null,"docs":" Returns the last modification time of the file, in seconds since Unix Epoch.","sig":null,"attributes":[{"value":"/ Returns the last modification time of the file, in seconds since Unix Epoch.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":584529,"byte_end":584609,"line_start":74,"line_end":74,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":584614,"byte_end":584617,"line_start":75,"line_end":75,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3401},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":584755,"byte_end":584768,"line_start":79,"line_end":79,"column_start":8,"column_end":21},"name":"st_mtime_nsec","qualname":"::os::fs::MetadataExt::st_mtime_nsec","value":"pub fn st_mtime_nsec(&Self) -> i64","parent":{"krate":0,"index":3388},"children":[],"decl_id":null,"docs":" Returns the last modification time of the file, in nanoseconds since [`st_mtime`].","sig":null,"attributes":[{"value":"/ Returns the last modification time of the file, in nanoseconds since [`st_mtime`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":584653,"byte_end":584739,"line_start":77,"line_end":77,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":584744,"byte_end":584747,"line_start":78,"line_end":78,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3402},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":584885,"byte_end":584893,"line_start":82,"line_end":82,"column_start":8,"column_end":16},"name":"st_ctime","qualname":"::os::fs::MetadataExt::st_ctime","value":"pub fn st_ctime(&Self) -> i64","parent":{"krate":0,"index":3388},"children":[],"decl_id":null,"docs":" Returns the last status change time of the file, in seconds since Unix Epoch.","sig":null,"attributes":[{"value":"/ Returns the last status change time of the file, in seconds since Unix Epoch.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":584788,"byte_end":584869,"line_start":80,"line_end":80,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":584874,"byte_end":584877,"line_start":81,"line_end":81,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3403},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":584988,"byte_end":585001,"line_start":85,"line_end":85,"column_start":8,"column_end":21},"name":"st_ctime_nsec","qualname":"::os::fs::MetadataExt::st_ctime_nsec","value":"pub fn st_ctime_nsec(&Self) -> i64","parent":{"krate":0,"index":3388},"children":[],"decl_id":null,"docs":" Returns the last status change time, nano seconds part.","sig":null,"attributes":[{"value":"/ Returns the last status change time, nano seconds part.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":584913,"byte_end":584972,"line_start":83,"line_end":83,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":584977,"byte_end":584980,"line_start":84,"line_end":84,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3404},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":585104,"byte_end":585114,"line_start":88,"line_end":88,"column_start":8,"column_end":18},"name":"st_blksize","qualname":"::os::fs::MetadataExt::st_blksize","value":"pub fn st_blksize(&Self) -> u64","parent":{"krate":0,"index":3388},"children":[],"decl_id":null,"docs":" Returns the \"preferred\" blocksize for efficient filesystem I/O.","sig":null,"attributes":[{"value":"/ Returns the \"preferred\" blocksize for efficient filesystem I/O.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":585021,"byte_end":585088,"line_start":86,"line_end":86,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":585093,"byte_end":585096,"line_start":87,"line_end":87,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3405},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":585221,"byte_end":585230,"line_start":91,"line_end":91,"column_start":8,"column_end":17},"name":"st_blocks","qualname":"::os::fs::MetadataExt::st_blocks","value":"pub fn st_blocks(&Self) -> u64","parent":{"krate":0,"index":3388},"children":[],"decl_id":null,"docs":" Returns the number of blocks allocated to the file, 512-byte units.","sig":null,"attributes":[{"value":"/ Returns the number of blocks allocated to the file, 512-byte units.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":585134,"byte_end":585205,"line_start":89,"line_end":89,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":585210,"byte_end":585213,"line_start":90,"line_end":90,"column_start":5,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3424},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"panic","qualname":"::panic","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","parent":null,"children":[{"krate":0,"index":3425},{"krate":0,"index":3426},{"krate":0,"index":3427},{"krate":0,"index":3428},{"krate":0,"index":3429},{"krate":0,"index":3430},{"krate":0,"index":3431},{"krate":0,"index":3432},{"krate":0,"index":3433},{"krate":0,"index":3434},{"krate":0,"index":3435},{"krate":0,"index":3436},{"krate":0,"index":3437},{"krate":0,"index":3438},{"krate":0,"index":3439},{"krate":0,"index":3440},{"krate":0,"index":3441},{"krate":0,"index":3442},{"krate":0,"index":3443},{"krate":0,"index":3444},{"krate":0,"index":3445},{"krate":0,"index":3446},{"krate":0,"index":3447},{"krate":0,"index":3448},{"krate":0,"index":3449},{"krate":0,"index":3450},{"krate":0,"index":3451},{"krate":0,"index":3452},{"krate":0,"index":3453},{"krate":0,"index":3454},{"krate":0,"index":3455},{"krate":0,"index":3456},{"krate":0,"index":3457},{"krate":0,"index":3458},{"krate":0,"index":3462},{"krate":0,"index":3464},{"krate":0,"index":3466},{"krate":0,"index":3468},{"krate":0,"index":3470},{"krate":0,"index":3472},{"krate":0,"index":3474},{"krate":0,"index":3476},{"krate":0,"index":3478},{"krate":0,"index":3480},{"krate":0,"index":3482},{"krate":0,"index":3484},{"krate":0,"index":3486},{"krate":0,"index":3488},{"krate":0,"index":3490},{"krate":0,"index":3492},{"krate":0,"index":3494},{"krate":0,"index":3496},{"krate":0,"index":3497},{"krate":0,"index":3498},{"krate":0,"index":3499},{"krate":0,"index":3500},{"krate":0,"index":3501},{"krate":0,"index":3502},{"krate":0,"index":3503},{"krate":0,"index":3504},{"krate":0,"index":3505},{"krate":0,"index":3506},{"krate":0,"index":3507},{"krate":0,"index":3509},{"krate":0,"index":3513},{"krate":0,"index":3517},{"krate":0,"index":3520},{"krate":0,"index":3525},{"krate":0,"index":3528},{"krate":0,"index":3533},{"krate":0,"index":3536}],"decl_id":null,"docs":" Panic support in the standard library\n","sig":null,"attributes":[{"value":"/ Panic support in the standard library","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":587665,"byte_end":587706,"line_start":18,"line_end":18,"column_start":1,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":3456},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":592302,"byte_end":592312,"line_start":118,"line_end":118,"column_start":16,"column_end":26},"name":"UnwindSafe","qualname":"::panic::UnwindSafe","value":"UnwindSafe","parent":null,"children":[],"decl_id":null,"docs":" A marker trait which represents \"panic safe\" types in Rust.","sig":null,"attributes":[{"value":"/ A marker trait which represents \"panic safe\" types in Rust.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":588269,"byte_end":588332,"line_start":40,"line_end":40,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":588333,"byte_end":588336,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented by default for many types and behaves similarly in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":588337,"byte_end":588417,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ terms of inference of implementation to the [`Send`] and [`Sync`] traits. The","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":588418,"byte_end":588499,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/ purpose of this trait is to encode what types are safe to cross a [`catch_unwind`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":588500,"byte_end":588586,"line_start":44,"line_end":44,"column_start":1,"column_end":87}},{"value":"/ boundary with no fear of unwind safety.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":588587,"byte_end":588630,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":588631,"byte_end":588634,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [`Send`]: ../marker/trait.Send.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":588635,"byte_end":588674,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/ [`Sync`]: ../marker/trait.Sync.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":588675,"byte_end":588714,"line_start":48,"line_end":48,"column_start":1,"column_end":40}},{"value":"/ [`catch_unwind`]: ./fn.catch_unwind.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":588715,"byte_end":588759,"line_start":49,"line_end":49,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":588760,"byte_end":588763,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ## What is unwind safety?","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":588764,"byte_end":588793,"line_start":51,"line_end":51,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":588794,"byte_end":588797,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ In Rust a function can \"return\" early if it either panics or calls a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":588798,"byte_end":588870,"line_start":53,"line_end":53,"column_start":1,"column_end":73}},{"value":"/ function which transitively panics. This sort of control flow is not always","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":588871,"byte_end":588950,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"/ anticipated, and has the possibility of causing subtle bugs through a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":588951,"byte_end":589024,"line_start":55,"line_end":55,"column_start":1,"column_end":74}},{"value":"/ combination of two critical components:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":589025,"byte_end":589068,"line_start":56,"line_end":56,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":589069,"byte_end":589072,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ 1. A data structure is in a temporarily invalid state when the thread","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":589073,"byte_end":589146,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/    panics.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":589147,"byte_end":589161,"line_start":59,"line_end":59,"column_start":1,"column_end":15}},{"value":"/ 2. This broken invariant is then later observed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":589162,"byte_end":589214,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":589215,"byte_end":589218,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ Typically in Rust, it is difficult to perform step (2) because catching a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":589219,"byte_end":589296,"line_start":62,"line_end":62,"column_start":1,"column_end":78}},{"value":"/ panic involves either spawning a thread (which in turns makes it difficult","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":589297,"byte_end":589375,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ to later witness broken invariants) or using the `catch_unwind` function in this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":589376,"byte_end":589460,"line_start":64,"line_end":64,"column_start":1,"column_end":85}},{"value":"/ module. Additionally, even if an invariant is witnessed, it typically isn't a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":589461,"byte_end":589542,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"/ problem in Rust because there are no uninitialized values (like in C or C++).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":589543,"byte_end":589624,"line_start":66,"line_end":66,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":589625,"byte_end":589628,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ It is possible, however, for **logical** invariants to be broken in Rust,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":589629,"byte_end":589706,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/ which can end up causing behavioral bugs. Another key aspect of unwind safety","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":589707,"byte_end":589788,"line_start":69,"line_end":69,"column_start":1,"column_end":82}},{"value":"/ in Rust is that, in the absence of `unsafe` code, a panic cannot lead to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":589789,"byte_end":589865,"line_start":70,"line_end":70,"column_start":1,"column_end":77}},{"value":"/ memory unsafety.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":589866,"byte_end":589886,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":589887,"byte_end":589890,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ That was a bit of a whirlwind tour of unwind safety, but for more information","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":589891,"byte_end":589972,"line_start":73,"line_end":73,"column_start":1,"column_end":82}},{"value":"/ about unwind safety and how it applies to Rust, see an [associated RFC][rfc].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":589973,"byte_end":590054,"line_start":74,"line_end":74,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":590055,"byte_end":590058,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [rfc]: https://github.com/rust-lang/rfcs/blob/master/text/1236-stabilize-catch-panic.md","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":590059,"byte_end":590150,"line_start":76,"line_end":76,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":590151,"byte_end":590154,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ## What is `UnwindSafe`?","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":590155,"byte_end":590183,"line_start":78,"line_end":78,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":590184,"byte_end":590187,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Now that we've got an idea of what unwind safety is in Rust, it's also","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":590188,"byte_end":590262,"line_start":80,"line_end":80,"column_start":1,"column_end":75}},{"value":"/ important to understand what this trait represents. As mentioned above, one","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":590263,"byte_end":590342,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ way to witness broken invariants is through the `catch_unwind` function in this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":590343,"byte_end":590426,"line_start":82,"line_end":82,"column_start":1,"column_end":84}},{"value":"/ module as it allows catching a panic and then re-using the environment of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":590427,"byte_end":590504,"line_start":83,"line_end":83,"column_start":1,"column_end":78}},{"value":"/ the closure.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":590505,"byte_end":590521,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":590522,"byte_end":590525,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Simply put, a type `T` implements `UnwindSafe` if it cannot easily allow","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":590526,"byte_end":590602,"line_start":86,"line_end":86,"column_start":1,"column_end":77}},{"value":"/ witnessing a broken invariant through the use of `catch_unwind` (catching a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":590603,"byte_end":590682,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ panic). This trait is an auto trait, so it is automatically implemented for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":590683,"byte_end":590762,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ many types, and it is also structurally composed (e.g., a struct is unwind","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":590763,"byte_end":590841,"line_start":89,"line_end":89,"column_start":1,"column_end":79}},{"value":"/ safe if all of its components are unwind safe).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":590842,"byte_end":590893,"line_start":90,"line_end":90,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":590894,"byte_end":590897,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ Note, however, that this is not an unsafe trait, so there is not a succinct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":590898,"byte_end":590977,"line_start":92,"line_end":92,"column_start":1,"column_end":80}},{"value":"/ contract that this trait is providing. Instead it is intended as more of a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":590978,"byte_end":591056,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"/ \"speed bump\" to alert users of `catch_unwind` that broken invariants may be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":591057,"byte_end":591136,"line_start":94,"line_end":94,"column_start":1,"column_end":80}},{"value":"/ witnessed and may need to be accounted for.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":591137,"byte_end":591184,"line_start":95,"line_end":95,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":591185,"byte_end":591188,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ## Who implements `UnwindSafe`?","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":591189,"byte_end":591224,"line_start":97,"line_end":97,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":591225,"byte_end":591228,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ Types such as `&mut T` and `&RefCell<T>` are examples which are **not**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":591229,"byte_end":591304,"line_start":99,"line_end":99,"column_start":1,"column_end":76}},{"value":"/ unwind safe. The general idea is that any mutable state which can be shared","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":591305,"byte_end":591384,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/ across `catch_unwind` is not unwind safe by default. This is because it is very","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":591385,"byte_end":591468,"line_start":101,"line_end":101,"column_start":1,"column_end":84}},{"value":"/ easy to witness a broken invariant outside of `catch_unwind` as the data is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":591469,"byte_end":591548,"line_start":102,"line_end":102,"column_start":1,"column_end":80}},{"value":"/ simply accessed as usual.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":591549,"byte_end":591578,"line_start":103,"line_end":103,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":591579,"byte_end":591582,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Types like `&Mutex<T>`, however, are unwind safe because they implement","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":591583,"byte_end":591658,"line_start":105,"line_end":105,"column_start":1,"column_end":76}},{"value":"/ poisoning by default. They still allow witnessing a broken invariant, but","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":591659,"byte_end":591736,"line_start":106,"line_end":106,"column_start":1,"column_end":78}},{"value":"/ they already provide their own \"speed bumps\" to do so.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":591737,"byte_end":591795,"line_start":107,"line_end":107,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":591796,"byte_end":591799,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ ## When should `UnwindSafe` be used?","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":591800,"byte_end":591840,"line_start":109,"line_end":109,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":591841,"byte_end":591844,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ It is not intended that most types or functions need to worry about this trait.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":591845,"byte_end":591928,"line_start":111,"line_end":111,"column_start":1,"column_end":84}},{"value":"/ It is only used as a bound on the `catch_unwind` function and as mentioned","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":591929,"byte_end":592007,"line_start":112,"line_end":112,"column_start":1,"column_end":79}},{"value":"/ above, the lack of `unsafe` means it is mostly an advisory. The","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":592008,"byte_end":592075,"line_start":113,"line_end":113,"column_start":1,"column_end":68}},{"value":"/ [`AssertUnwindSafe`] wrapper struct can be used to force this trait to be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":592076,"byte_end":592153,"line_start":114,"line_end":114,"column_start":1,"column_end":78}},{"value":"/ implemented for any closed over variables passed to `catch_unwind`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":592154,"byte_end":592225,"line_start":115,"line_end":115,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":592226,"byte_end":592229,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ [`AssertUnwindSafe`]: ./struct.AssertUnwindSafe.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":592230,"byte_end":592286,"line_start":117,"line_end":117,"column_start":1,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":3457},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":592777,"byte_end":592790,"line_start":131,"line_end":131,"column_start":16,"column_end":29},"name":"RefUnwindSafe","qualname":"::panic::RefUnwindSafe","value":"RefUnwindSafe","parent":null,"children":[],"decl_id":null,"docs":" A marker trait representing types where a shared reference is considered\n unwind safe.","sig":null,"attributes":[{"value":"/ A marker trait representing types where a shared reference is considered","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":592317,"byte_end":592393,"line_start":120,"line_end":120,"column_start":1,"column_end":77}},{"value":"/ unwind safe.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":592394,"byte_end":592410,"line_start":121,"line_end":121,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":592411,"byte_end":592414,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ This trait is namely not implemented by [`UnsafeCell`], the root of all","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":592415,"byte_end":592490,"line_start":123,"line_end":123,"column_start":1,"column_end":76}},{"value":"/ interior mutability.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":592491,"byte_end":592515,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":592516,"byte_end":592519,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ This is a \"helper marker trait\" used to provide impl blocks for the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":592520,"byte_end":592591,"line_start":126,"line_end":126,"column_start":1,"column_end":72}},{"value":"/ [`UnwindSafe`] trait, for more information see that documentation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":592592,"byte_end":592662,"line_start":127,"line_end":127,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":592663,"byte_end":592666,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ [`UnsafeCell`]: ../cell/struct.UnsafeCell.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":592667,"byte_end":592717,"line_start":129,"line_end":129,"column_start":1,"column_end":51}},{"value":"/ [`UnwindSafe`]: ./trait.UnwindSafe.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":592718,"byte_end":592761,"line_start":130,"line_end":130,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":3458},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":593447,"byte_end":593463,"line_start":144,"line_end":144,"column_start":12,"column_end":28},"name":"AssertUnwindSafe","qualname":"::panic::AssertUnwindSafe","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple wrapper around a type to assert that it is unwind safe.","sig":null,"attributes":[{"value":"/ A simple wrapper around a type to assert that it is unwind safe.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":592795,"byte_end":592863,"line_start":133,"line_end":133,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":592864,"byte_end":592867,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ When using [`catch_unwind`] it may be the case that some of the closed over","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":592868,"byte_end":592947,"line_start":135,"line_end":135,"column_start":1,"column_end":80}},{"value":"/ variables are not unwind safe. For example if `&mut T` is captured the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":592948,"byte_end":593022,"line_start":136,"line_end":136,"column_start":1,"column_end":75}},{"value":"/ compiler will generate a warning indicating that it is not unwind safe. It","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":593023,"byte_end":593101,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/ may not be the case, however, that this is actually a problem due to the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":593102,"byte_end":593178,"line_start":138,"line_end":138,"column_start":1,"column_end":77}},{"value":"/ specific usage of [`catch_unwind`] if unwind safety is specifically taken into","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":593179,"byte_end":593261,"line_start":139,"line_end":139,"column_start":1,"column_end":83}},{"value":"/ account. This wrapper struct is useful for a quick and lightweight","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":593262,"byte_end":593332,"line_start":140,"line_end":140,"column_start":1,"column_end":71}},{"value":"/ annotation that a variable is indeed unwind safe.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":593333,"byte_end":593386,"line_start":141,"line_end":141,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":593387,"byte_end":593390,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ [`catch_unwind`]: ./fn.catch_unwind.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":593391,"byte_end":593435,"line_start":143,"line_end":143,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":3461},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":593472,"byte_end":593477,"line_start":145,"line_end":145,"column_start":5,"column_end":10},"name":"0","qualname":"::panic::AssertUnwindSafe::0","value":"T","parent":{"krate":0,"index":3458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3533},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":599366,"byte_end":599378,"line_start":300,"line_end":300,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::panic::catch_unwind","value":"pub fn catch_unwind<F: FnOnce() -> R + UnwindSafe, R>(F) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Invokes a closure, capturing the cause of an unwinding panic if one occurs.","sig":null,"attributes":[{"value":"/ Invokes a closure, capturing the cause of an unwinding panic if one occurs.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":597374,"byte_end":597453,"line_start":262,"line_end":262,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":597454,"byte_end":597457,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ This function will return `Ok` with the closure's result if the closure","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":597458,"byte_end":597533,"line_start":264,"line_end":264,"column_start":1,"column_end":76}},{"value":"/ does not panic, and will return `Err(cause)` if the closure panics. The","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":597534,"byte_end":597609,"line_start":265,"line_end":265,"column_start":1,"column_end":76}},{"value":"/ `cause` returned is the object with which panic was originally invoked.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":597610,"byte_end":597685,"line_start":266,"line_end":266,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":597686,"byte_end":597689,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ It is currently undefined behavior to unwind from Rust code into foreign","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":597690,"byte_end":597766,"line_start":268,"line_end":268,"column_start":1,"column_end":77}},{"value":"/ code, so this function is particularly useful when Rust is called from","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":597767,"byte_end":597841,"line_start":269,"line_end":269,"column_start":1,"column_end":75}},{"value":"/ another language (normally C). This can run arbitrary Rust code, capturing a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":597842,"byte_end":597922,"line_start":270,"line_end":270,"column_start":1,"column_end":81}},{"value":"/ panic and allowing a graceful handling of the error.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":597923,"byte_end":597979,"line_start":271,"line_end":271,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":597980,"byte_end":597983,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ It is **not** recommended to use this function for a general try/catch","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":597984,"byte_end":598058,"line_start":273,"line_end":273,"column_start":1,"column_end":75}},{"value":"/ mechanism. The [`Result`] type is more appropriate to use for functions that","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":598059,"byte_end":598139,"line_start":274,"line_end":274,"column_start":1,"column_end":81}},{"value":"/ can fail on a regular basis. Additionally, this function is not guaranteed","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":598140,"byte_end":598218,"line_start":275,"line_end":275,"column_start":1,"column_end":79}},{"value":"/ to catch all panics, see the \"Notes\" section below.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":598219,"byte_end":598274,"line_start":276,"line_end":276,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":598275,"byte_end":598278,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ [`Result`]: ../result/enum.Result.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":598279,"byte_end":598321,"line_start":278,"line_end":278,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":598322,"byte_end":598325,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ The closure provided is required to adhere to the [`UnwindSafe`] trait to ensure","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":598326,"byte_end":598410,"line_start":280,"line_end":280,"column_start":1,"column_end":85}},{"value":"/ that all captured variables are safe to cross this boundary. The purpose of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":598411,"byte_end":598490,"line_start":281,"line_end":281,"column_start":1,"column_end":80}},{"value":"/ this bound is to encode the concept of [exception safety][rfc] in the type","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":598491,"byte_end":598569,"line_start":282,"line_end":282,"column_start":1,"column_end":79}},{"value":"/ system. Most usage of this function should not need to worry about this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":598570,"byte_end":598645,"line_start":283,"line_end":283,"column_start":1,"column_end":76}},{"value":"/ bound as programs are naturally unwind safe without `unsafe` code. If it","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":598646,"byte_end":598722,"line_start":284,"line_end":284,"column_start":1,"column_end":77}},{"value":"/ becomes a problem the [`AssertUnwindSafe`] wrapper struct can be used to quickly","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":598723,"byte_end":598807,"line_start":285,"line_end":285,"column_start":1,"column_end":85}},{"value":"/ assert that the usage here is indeed unwind safe.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":598808,"byte_end":598861,"line_start":286,"line_end":286,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":598862,"byte_end":598865,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ [`AssertUnwindSafe`]: ./struct.AssertUnwindSafe.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":598866,"byte_end":598922,"line_start":288,"line_end":288,"column_start":1,"column_end":57}},{"value":"/ [`UnwindSafe`]: ./trait.UnwindSafe.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":598923,"byte_end":598966,"line_start":289,"line_end":289,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":598967,"byte_end":598970,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ [rfc]: https://github.com/rust-lang/rfcs/blob/master/text/1236-stabilize-catch-panic.md","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":598971,"byte_end":599062,"line_start":291,"line_end":291,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":599063,"byte_end":599066,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ # Notes","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":599067,"byte_end":599078,"line_start":293,"line_end":293,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":599079,"byte_end":599082,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ Note that this function **may not catch all panics** in Rust. A panic in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":599083,"byte_end":599159,"line_start":295,"line_end":295,"column_start":1,"column_end":77}},{"value":"/ Rust is not always implemented via unwinding, but can be implemented by","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":599160,"byte_end":599235,"line_start":296,"line_end":296,"column_start":1,"column_end":76}},{"value":"/ aborting the process as well. This function *only* catches unwinding panics,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":599236,"byte_end":599316,"line_start":297,"line_end":297,"column_start":1,"column_end":81}},{"value":"/ not those that abort the process.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":599317,"byte_end":599354,"line_start":298,"line_end":298,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":599355,"byte_end":599358,"line_start":299,"line_end":299,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":3536},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":600006,"byte_end":600019,"line_start":318,"line_end":318,"column_start":8,"column_end":21},"name":"resume_unwind","qualname":"::panic::resume_unwind","value":"pub fn resume_unwind(Box<Any + Send>) -> !","parent":null,"children":[],"decl_id":null,"docs":" Triggers a panic without invoking the panic hook.","sig":null,"attributes":[{"value":"/ Triggers a panic without invoking the panic hook.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":599472,"byte_end":599525,"line_start":304,"line_end":304,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":599526,"byte_end":599529,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ This is designed to be used in conjunction with [`catch_unwind`] to, for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":599530,"byte_end":599606,"line_start":306,"line_end":306,"column_start":1,"column_end":77}},{"value":"/ example, carry a panic across a layer of C code.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":599607,"byte_end":599659,"line_start":307,"line_end":307,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":599660,"byte_end":599663,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ [`catch_unwind`]: ./fn.catch_unwind.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":599664,"byte_end":599708,"line_start":309,"line_end":309,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":599709,"byte_end":599712,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/ # Notes","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":599713,"byte_end":599724,"line_start":311,"line_end":311,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":599725,"byte_end":599728,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ Note that panics in Rust are not always implemented via unwinding, but they","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":599729,"byte_end":599808,"line_start":313,"line_end":313,"column_start":1,"column_end":80}},{"value":"/ may be implemented by aborting the process. If this function is called when","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":599809,"byte_end":599888,"line_start":314,"line_end":314,"column_start":1,"column_end":80}},{"value":"/ panics are implemented this way then this function will abort the process,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":599889,"byte_end":599967,"line_start":315,"line_end":315,"column_start":1,"column_end":79}},{"value":"/ not trigger an unwind.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":599968,"byte_end":599994,"line_start":316,"line_end":316,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":599995,"byte_end":599998,"line_start":317,"line_end":317,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":3537},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"path","qualname":"::path","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","parent":null,"children":[{"krate":0,"index":3538},{"krate":0,"index":3539},{"krate":0,"index":3540},{"krate":0,"index":3541},{"krate":0,"index":3542},{"krate":0,"index":3543},{"krate":0,"index":3544},{"krate":0,"index":3545},{"krate":0,"index":3546},{"krate":0,"index":3547},{"krate":0,"index":3548},{"krate":0,"index":3549},{"krate":0,"index":3550},{"krate":0,"index":3551},{"krate":0,"index":3552},{"krate":0,"index":3553},{"krate":0,"index":3554},{"krate":0,"index":3555},{"krate":0,"index":3556},{"krate":0,"index":9636},{"krate":0,"index":3557},{"krate":0,"index":3558},{"krate":0,"index":3559},{"krate":0,"index":3560},{"krate":0,"index":3561},{"krate":0,"index":3562},{"krate":0,"index":3563},{"krate":0,"index":7564},{"krate":0,"index":7625},{"krate":0,"index":7622},{"krate":0,"index":7619},{"krate":0,"index":7615},{"krate":0,"index":7600},{"krate":0,"index":7597},{"krate":0,"index":7591},{"krate":0,"index":7593},{"krate":0,"index":7586},{"krate":0,"index":7588},{"krate":0,"index":3564},{"krate":0,"index":3573},{"krate":0,"index":3574},{"krate":0,"index":3575},{"krate":0,"index":3580},{"krate":0,"index":3581},{"krate":0,"index":3582},{"krate":0,"index":3583},{"krate":0,"index":7627},{"krate":0,"index":7649},{"krate":0,"index":7647},{"krate":0,"index":7644},{"krate":0,"index":7645},{"krate":0,"index":7642},{"krate":0,"index":7640},{"krate":0,"index":7650},{"krate":0,"index":7665},{"krate":0,"index":7662},{"krate":0,"index":7657},{"krate":0,"index":7659},{"krate":0,"index":7654},{"krate":0,"index":3587},{"krate":0,"index":3591},{"krate":0,"index":3594},{"krate":0,"index":3597},{"krate":0,"index":3599},{"krate":0,"index":7667},{"krate":0,"index":7712},{"krate":0,"index":7709},{"krate":0,"index":7703},{"krate":0,"index":7705},{"krate":0,"index":7698},{"krate":0,"index":7700},{"krate":0,"index":7691},{"krate":0,"index":7688},{"krate":0,"index":7684},{"krate":0,"index":7681},{"krate":0,"index":3602},{"krate":0,"index":3605},{"krate":0,"index":3607},{"krate":0,"index":7714},{"krate":0,"index":7721},{"krate":0,"index":7724},{"krate":0,"index":7727},{"krate":0,"index":3609},{"krate":0,"index":3617},{"krate":0,"index":3636},{"krate":0,"index":3638},{"krate":0,"index":3640},{"krate":0,"index":3648},{"krate":0,"index":3651},{"krate":0,"index":3653},{"krate":0,"index":3655},{"krate":0,"index":3659},{"krate":0,"index":3662},{"krate":0,"index":3663},{"krate":0,"index":3667},{"krate":0,"index":3670},{"krate":0,"index":3671},{"krate":0,"index":3674},{"krate":0,"index":3675},{"krate":0,"index":3678},{"krate":0,"index":7730},{"krate":0,"index":7739},{"krate":0,"index":7736},{"krate":0,"index":7733},{"krate":0,"index":3680},{"krate":0,"index":3684},{"krate":0,"index":7741},{"krate":0,"index":7743},{"krate":0,"index":3685},{"krate":0,"index":3710},{"krate":0,"index":3712},{"krate":0,"index":3714},{"krate":0,"index":3716},{"krate":0,"index":3718},{"krate":0,"index":3721},{"krate":0,"index":3723},{"krate":0,"index":3725},{"krate":0,"index":3727},{"krate":0,"index":3730},{"krate":0,"index":3734},{"krate":0,"index":3739},{"krate":0,"index":3741},{"krate":0,"index":3744},{"krate":0,"index":3746},{"krate":0,"index":3748},{"krate":0,"index":3751},{"krate":0,"index":3754},{"krate":0,"index":3757},{"krate":0,"index":3760},{"krate":0,"index":3762},{"krate":0,"index":3764},{"krate":0,"index":3766},{"krate":0,"index":3768},{"krate":0,"index":3772},{"krate":0,"index":3774},{"krate":0,"index":3777},{"krate":0,"index":3778},{"krate":0,"index":3780},{"krate":0,"index":3782},{"krate":0,"index":3784},{"krate":0,"index":7745},{"krate":0,"index":7757},{"krate":0,"index":7755},{"krate":0,"index":7751},{"krate":0,"index":7752},{"krate":0,"index":7748},{"krate":0,"index":7749},{"krate":0,"index":3786},{"krate":0,"index":3831},{"krate":0,"index":3833},{"krate":0,"index":3835},{"krate":0,"index":3838},{"krate":0,"index":3840},{"krate":0,"index":3842},{"krate":0,"index":3844},{"krate":0,"index":3847},{"krate":0,"index":3848},{"krate":0,"index":3850},{"krate":0,"index":3852},{"krate":0,"index":3854},{"krate":0,"index":3856},{"krate":0,"index":3858},{"krate":0,"index":3860},{"krate":0,"index":3862},{"krate":0,"index":3864},{"krate":0,"index":3866},{"krate":0,"index":3871},{"krate":0,"index":7759},{"krate":0,"index":7763},{"krate":0,"index":7767},{"krate":0,"index":7771},{"krate":0,"index":7775},{"krate":0,"index":7779},{"krate":0,"index":7783},{"krate":0,"index":7787},{"krate":0,"index":7791},{"krate":0,"index":7795},{"krate":0,"index":7799},{"krate":0,"index":7803},{"krate":0,"index":7807},{"krate":0,"index":7811},{"krate":0,"index":7815},{"krate":0,"index":7819},{"krate":0,"index":7823},{"krate":0,"index":7827},{"krate":0,"index":7831},{"krate":0,"index":7835},{"krate":0,"index":7839},{"krate":0,"index":7843},{"krate":0,"index":7847},{"krate":0,"index":7851},{"krate":0,"index":7855},{"krate":0,"index":7859},{"krate":0,"index":7863},{"krate":0,"index":7867},{"krate":0,"index":7871},{"krate":0,"index":7875},{"krate":0,"index":7879},{"krate":0,"index":7883},{"krate":0,"index":7887},{"krate":0,"index":7891},{"krate":0,"index":7895},{"krate":0,"index":7899},{"krate":0,"index":7903},{"krate":0,"index":7907},{"krate":0,"index":7911},{"krate":0,"index":7915},{"krate":0,"index":7919},{"krate":0,"index":7923},{"krate":0,"index":7927},{"krate":0,"index":7931},{"krate":0,"index":7935},{"krate":0,"index":7939},{"krate":0,"index":7943},{"krate":0,"index":7947},{"krate":0,"index":7951},{"krate":0,"index":7955},{"krate":0,"index":7959},{"krate":0,"index":7963},{"krate":0,"index":7967},{"krate":0,"index":7971},{"krate":0,"index":7975},{"krate":0,"index":7979},{"krate":0,"index":7983},{"krate":0,"index":7987},{"krate":0,"index":7991},{"krate":0,"index":7995},{"krate":0,"index":7999},{"krate":0,"index":8003},{"krate":0,"index":8007},{"krate":0,"index":8011},{"krate":0,"index":8015},{"krate":0,"index":8019},{"krate":0,"index":8023},{"krate":0,"index":8027},{"krate":0,"index":8031},{"krate":0,"index":8035},{"krate":0,"index":8039},{"krate":0,"index":8043},{"krate":0,"index":8047},{"krate":0,"index":8051},{"krate":0,"index":8055},{"krate":0,"index":8059},{"krate":0,"index":3878},{"krate":0,"index":3880}],"decl_id":null,"docs":" Cross-platform path manipulation.","sig":null,"attributes":[{"value":"/ Cross-platform path manipulation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":600911,"byte_end":600948,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":600949,"byte_end":600952,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This module provides two types, [`PathBuf`] and [`Path`] (akin to [`String`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":600953,"byte_end":601033,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ and [`str`]), for working with paths abstractly. These types are thin wrappers","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":601034,"byte_end":601116,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/ around [`OsString`] and [`OsStr`] respectively, meaning that they work directly","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":601117,"byte_end":601200,"line_start":22,"line_end":22,"column_start":1,"column_end":84}},{"value":"/ on strings according to the local platform's path syntax.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":601201,"byte_end":601262,"line_start":23,"line_end":23,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":601263,"byte_end":601266,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Paths can be parsed into [`Component`]s by iterating over the structure","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":601267,"byte_end":601342,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ returned by the [`components`] method on [`Path`]. [`Component`]s roughly","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":601343,"byte_end":601420,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ correspond to the substrings between path separators (`/` or `\\`). You can","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":601421,"byte_end":601499,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ reconstruct an equivalent path from components with the [`push`] method on","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":601500,"byte_end":601578,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ [`PathBuf`]; note that the paths may differ syntactically by the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":601579,"byte_end":601647,"line_start":29,"line_end":29,"column_start":1,"column_end":69}},{"value":"/ normalization described in the documentation for the [`components`] method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":601648,"byte_end":601727,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":601728,"byte_end":601731,"line_start":31,"line_end":31,"column_start":1,"column_end":4}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7566},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":603577,"byte_end":603585,"line_start":79,"line_end":79,"column_start":5,"column_end":13},"name":"Verbatim","qualname":"::path::Prefix::Verbatim","value":"Prefix::Verbatim(&'a OsStr)","parent":{"krate":0,"index":7564},"children":[],"decl_id":null,"docs":" Verbatim prefix, e.g. `\\\\?\\cat_pics`.","sig":null,"attributes":[{"value":"/ Verbatim prefix, e.g. `\\\\?\\cat_pics`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":603426,"byte_end":603467,"line_start":75,"line_end":75,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":603472,"byte_end":603475,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Verbatim prefixes consist of `\\\\?\\` immediately followed by the given","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":603480,"byte_end":603553,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/ component.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":603558,"byte_end":603572,"line_start":78,"line_end":78,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7569},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":603852,"byte_end":603863,"line_start":86,"line_end":86,"column_start":5,"column_end":16},"name":"VerbatimUNC","qualname":"::path::Prefix::VerbatimUNC","value":"Prefix::VerbatimUNC(&'a OsStr, &'a OsStr)","parent":{"krate":0,"index":7564},"children":[],"decl_id":null,"docs":" Verbatim prefix using Windows' _**U**niform **N**aming **C**onvention_,\n e.g. `\\\\?\\UNC\\server\\share`.","sig":null,"attributes":[{"value":"/ Verbatim prefix using Windows' _**U**niform **N**aming **C**onvention_,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":603603,"byte_end":603678,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/ e.g. `\\\\?\\UNC\\server\\share`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":603683,"byte_end":603715,"line_start":82,"line_end":82,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":603720,"byte_end":603723,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Verbatim UNC prefixes consist of `\\\\?\\UNC\\` immediately followed by the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":603728,"byte_end":603803,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ server's hostname and a share name.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":603808,"byte_end":603847,"line_start":85,"line_end":85,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7573},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":604054,"byte_end":604066,"line_start":92,"line_end":92,"column_start":5,"column_end":17},"name":"VerbatimDisk","qualname":"::path::Prefix::VerbatimDisk","value":"Prefix::VerbatimDisk(u8)","parent":{"krate":0,"index":7564},"children":[],"decl_id":null,"docs":" Verbatim disk prefix, e.g. `\\\\?\\C:\\`.","sig":null,"attributes":[{"value":"/ Verbatim disk prefix, e.g. `\\\\?\\C:\\`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":603892,"byte_end":603933,"line_start":88,"line_end":88,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":603938,"byte_end":603941,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Verbatim disk prefixes consist of `\\\\?\\` immediately followed by the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":603946,"byte_end":604018,"line_start":90,"line_end":90,"column_start":5,"column_end":77}},{"value":"/ drive letter and `:\\`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":604023,"byte_end":604049,"line_start":91,"line_end":91,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7576},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":604237,"byte_end":604245,"line_start":98,"line_end":98,"column_start":5,"column_end":13},"name":"DeviceNS","qualname":"::path::Prefix::DeviceNS","value":"Prefix::DeviceNS(&'a OsStr)","parent":{"krate":0,"index":7564},"children":[],"decl_id":null,"docs":" Device namespace prefix, e.g. `\\\\.\\COM42`.","sig":null,"attributes":[{"value":"/ Device namespace prefix, e.g. `\\\\.\\COM42`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":604077,"byte_end":604123,"line_start":94,"line_end":94,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":604128,"byte_end":604131,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Device namespace prefixes consist of `\\\\.\\` immediately followed by the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":604136,"byte_end":604211,"line_start":96,"line_end":96,"column_start":5,"column_end":80}},{"value":"/ device name.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":604216,"byte_end":604232,"line_start":97,"line_end":97,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7579},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":604445,"byte_end":604448,"line_start":104,"line_end":104,"column_start":5,"column_end":8},"name":"UNC","qualname":"::path::Prefix::UNC","value":"Prefix::UNC(&'a OsStr, &'a OsStr)","parent":{"krate":0,"index":7564},"children":[],"decl_id":null,"docs":" Prefix using Windows' _**U**niform **N**aming **C**onvention_, e.g.\n `\\\\server\\share`.","sig":null,"attributes":[{"value":"/ Prefix using Windows' _**U**niform **N**aming **C**onvention_, e.g.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":604263,"byte_end":604334,"line_start":100,"line_end":100,"column_start":5,"column_end":76}},{"value":"/ `\\\\server\\share`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":604339,"byte_end":604360,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":604365,"byte_end":604368,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ UNC prefixes consist of the server's hostname and a share name.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":604373,"byte_end":604440,"line_start":103,"line_end":103,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7583},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":604523,"byte_end":604527,"line_start":107,"line_end":107,"column_start":5,"column_end":9},"name":"Disk","qualname":"::path::Prefix::Disk","value":"Prefix::Disk(u8)","parent":{"krate":0,"index":7564},"children":[],"decl_id":null,"docs":" Prefix `C:` for the given disk drive.\n","sig":null,"attributes":[{"value":"/ Prefix `C:` for the given disk drive.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":604477,"byte_end":604518,"line_start":106,"line_end":106,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":7564},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":603409,"byte_end":603415,"line_start":74,"line_end":74,"column_start":10,"column_end":16},"name":"Prefix","qualname":"::path::Prefix","value":"pub enum Prefix<'a> {\n\n    /// Verbatim prefix, e.g. `\\\\?\\cat_pics`.\n    ///\n    /// Verbatim prefixes consist of `\\\\?\\` immediately followed by the given\n    /// component.\n    Verbatim(&'a OsStr),\n\n    /// Verbatim prefix using Windows' _**U**niform **N**aming **C**onvention_,\n    /// e.g. `\\\\?\\UNC\\server\\share`.\n    ///\n    /// Verbatim UNC prefixes consist of `\\\\?\\UNC\\` immediately followed by the\n    /// server's hostname and a share name.\n    VerbatimUNC(&'a OsStr, &'a OsStr),\n\n    /// Verbatim disk prefix, e.g. `\\\\?\\C:\\`.\n    ///\n    /// Verbatim disk prefixes consist of `\\\\?\\` immediately followed by the\n    /// drive letter and `:\\`.\n    VerbatimDisk(u8),\n\n    /// Device namespace prefix, e.g. `\\\\.\\COM42`.\n    ///\n    /// Device namespace prefixes consist of `\\\\.\\` immediately followed by the\n    /// device name.\n    DeviceNS(&'a OsStr),\n\n    /// Prefix using Windows' _**U**niform **N**aming **C**onvention_, e.g.\n    /// `\\\\server\\share`.\n    ///\n    /// UNC prefixes consist of the server's hostname and a share name.\n    UNC(&'a OsStr, &'a OsStr),\n\n    /// Prefix `C:` for the given disk drive.\n    Disk(u8),\n}","parent":null,"children":[{"krate":0,"index":7566},{"krate":0,"index":7569},{"krate":0,"index":7573},{"krate":0,"index":7576},{"krate":0,"index":7579},{"krate":0,"index":7583}],"decl_id":null,"docs":" Windows path prefixes, e.g., `C:` or `\\\\server\\share`.","sig":null,"attributes":[{"value":"/ Windows path prefixes, e.g., `C:` or `\\\\server\\share`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":602914,"byte_end":602972,"line_start":65,"line_end":65,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":602973,"byte_end":602976,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Windows uses a variety of path prefix styles, including references to drive","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":602977,"byte_end":603056,"line_start":67,"line_end":67,"column_start":1,"column_end":80}},{"value":"/ volumes (like `C:`), network shared folders (like `\\\\server\\share`), and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":603057,"byte_end":603133,"line_start":68,"line_end":68,"column_start":1,"column_end":77}},{"value":"/ others. In addition, some path prefixes are \"verbatim\" (i.e., prefixed with","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":603134,"byte_end":603213,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ `\\\\?\\`), in which case `/` is *not* treated as a separator and essentially","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":603214,"byte_end":603292,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ no normalization is performed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":603293,"byte_end":603327,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":603328,"byte_end":603331,"line_start":72,"line_end":72,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":3569},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":605259,"byte_end":605270,"line_start":132,"line_end":132,"column_start":12,"column_end":23},"name":"is_verbatim","qualname":"<Prefix>::is_verbatim","value":"pub fn is_verbatim(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines if the prefix is verbatim, i.e., begins with `\\\\?\\`.","sig":null,"attributes":[{"value":"/ Determines if the prefix is verbatim, i.e., begins with `\\\\?\\`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":605158,"byte_end":605225,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":605230,"byte_end":605233,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":605238,"byte_end":605247,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":3573},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":605890,"byte_end":605902,"line_start":155,"line_end":155,"column_start":8,"column_end":20},"name":"is_separator","qualname":"::path::is_separator","value":"pub fn is_separator(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether the character is one of the permitted path\n separators for the current platform.","sig":null,"attributes":[{"value":"/ Determines whether the character is one of the permitted path","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":605772,"byte_end":605837,"line_start":152,"line_end":152,"column_start":1,"column_end":66}},{"value":"/ separators for the current platform.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":605838,"byte_end":605878,"line_start":153,"line_end":153,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":605879,"byte_end":605882,"line_start":154,"line_end":154,"column_start":1,"column_end":4}}]},{"kind":"Const","id":{"krate":0,"index":3574},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":606100,"byte_end":606114,"line_start":162,"line_end":162,"column_start":11,"column_end":25},"name":"MAIN_SEPARATOR","qualname":"::path::MAIN_SEPARATOR","value":"char","parent":null,"children":[],"decl_id":null,"docs":" The primary separator of path components for the current platform.","sig":null,"attributes":[{"value":"/ The primary separator of path components for the current platform.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":605966,"byte_end":606036,"line_start":159,"line_end":159,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":606037,"byte_end":606040,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ For example, `/` on Unix and `\\` on Windows.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":606041,"byte_end":606089,"line_start":161,"line_end":161,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":7650},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":610150,"byte_end":610165,"line_start":268,"line_end":268,"column_start":12,"column_end":27},"name":"PrefixComponent","qualname":"::path::PrefixComponent","value":"PrefixComponent {  }","parent":null,"children":[{"krate":0,"index":7652},{"krate":0,"index":7653}],"decl_id":null,"docs":" A structure wrapping a Windows path prefix as well as its unparsed string\n representation.","sig":null,"attributes":[{"value":"/ A structure wrapping a Windows path prefix as well as its unparsed string","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":609674,"byte_end":609751,"line_start":255,"line_end":255,"column_start":1,"column_end":78}},{"value":"/ representation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":609752,"byte_end":609771,"line_start":256,"line_end":256,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":609772,"byte_end":609775,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ In addition to the parsed [`Prefix`] information returned by [`kind`],","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":609776,"byte_end":609850,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ `PrefixComponent` also holds the raw and unparsed [`OsStr`] slice,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":609851,"byte_end":609921,"line_start":259,"line_end":259,"column_start":1,"column_end":71}},{"value":"/ returned by [`as_os_str`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":609922,"byte_end":609952,"line_start":260,"line_end":260,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":609953,"byte_end":609956,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ Instances of this `struct` can be obtained by matching against the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":609957,"byte_end":610027,"line_start":262,"line_end":262,"column_start":1,"column_end":71}},{"value":"/ [`Prefix` variant] on [`Component`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":610028,"byte_end":610068,"line_start":263,"line_end":263,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":610069,"byte_end":610072,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Does not occur on Unix.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":610073,"byte_end":610100,"line_start":265,"line_end":265,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":610101,"byte_end":610104,"line_start":266,"line_end":266,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":3589},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":610540,"byte_end":610544,"line_start":283,"line_end":283,"column_start":12,"column_end":16},"name":"kind","qualname":"<PrefixComponent>::kind","value":"pub fn kind(&Self) -> Prefix","parent":null,"children":[],"decl_id":null,"docs":" Returns the parsed prefix data.","sig":null,"attributes":[{"value":"/ Returns the parsed prefix data.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":610336,"byte_end":610371,"line_start":277,"line_end":277,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":610376,"byte_end":610379,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ See [`Prefix`]'s documentation for more information on the different","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":610384,"byte_end":610456,"line_start":279,"line_end":279,"column_start":5,"column_end":77}},{"value":"/ kinds of prefixes.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":610461,"byte_end":610483,"line_start":280,"line_end":280,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":610488,"byte_end":610491,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ [`Prefix`]: enum.Prefix.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":610496,"byte_end":610528,"line_start":282,"line_end":282,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3590},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":610722,"byte_end":610731,"line_start":290,"line_end":290,"column_start":12,"column_end":21},"name":"as_os_str","qualname":"<PrefixComponent>::as_os_str","value":"pub fn as_os_str(&Self) -> &'a OsStr","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw [`OsStr`] slice for this prefix.","sig":null,"attributes":[{"value":"/ Returns the raw [`OsStr`] slice for this prefix.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":610599,"byte_end":610651,"line_start":287,"line_end":287,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":610656,"byte_end":610659,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ [`OsStr`]: ../../std/ffi/struct.OsStr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":610664,"byte_end":610710,"line_start":289,"line_end":289,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7669},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":612073,"byte_end":612079,"line_start":338,"line_end":338,"column_start":5,"column_end":11},"name":"Prefix","qualname":"::path::Component::Prefix","value":"Component::Prefix(PrefixComponent)","parent":{"krate":0,"index":7667},"children":[],"decl_id":null,"docs":" A Windows path prefix, e.g., `C:` or `\\\\server\\share`.","sig":null,"attributes":[{"value":"/ A Windows path prefix, e.g., `C:` or `\\\\server\\share`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":611818,"byte_end":611876,"line_start":330,"line_end":330,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":611881,"byte_end":611884,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ There is a large variety of prefix types, see [`Prefix`]'s documentation","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":611889,"byte_end":611965,"line_start":332,"line_end":332,"column_start":5,"column_end":81}},{"value":"/ for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":611970,"byte_end":611983,"line_start":333,"line_end":333,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":611988,"byte_end":611991,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Does not occur on Unix.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":611996,"byte_end":612023,"line_start":335,"line_end":335,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":612028,"byte_end":612031,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ [`Prefix`]: enum.Prefix.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":612036,"byte_end":612068,"line_start":337,"line_end":337,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7672},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":612284,"byte_end":612291,"line_start":343,"line_end":343,"column_start":5,"column_end":12},"name":"RootDir","qualname":"::path::Component::RootDir","value":"Component::RootDir","parent":{"krate":0,"index":7667},"children":[],"decl_id":null,"docs":" The root directory component, appears after any prefix and before anything else.","sig":null,"attributes":[{"value":"/ The root directory component, appears after any prefix and before anything else.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":612107,"byte_end":612191,"line_start":340,"line_end":340,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":612196,"byte_end":612199,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ It represents a separator that designates that a path starts from root.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":612204,"byte_end":612279,"line_start":342,"line_end":342,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7674},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":612354,"byte_end":612360,"line_start":346,"line_end":346,"column_start":5,"column_end":11},"name":"CurDir","qualname":"::path::Component::CurDir","value":"Component::CurDir","parent":{"krate":0,"index":7667},"children":[],"decl_id":null,"docs":" A reference to the current directory, i.e. `.`.\n","sig":null,"attributes":[{"value":"/ A reference to the current directory, i.e. `.`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":612298,"byte_end":612349,"line_start":345,"line_end":345,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7676},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":612423,"byte_end":612432,"line_start":349,"line_end":349,"column_start":5,"column_end":14},"name":"ParentDir","qualname":"::path::Component::ParentDir","value":"Component::ParentDir","parent":{"krate":0,"index":7667},"children":[],"decl_id":null,"docs":" A reference to the parent directory, i.e. `..`.\n","sig":null,"attributes":[{"value":"/ A reference to the parent directory, i.e. `..`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":612367,"byte_end":612418,"line_start":348,"line_end":348,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7678},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":612605,"byte_end":612611,"line_start":355,"line_end":355,"column_start":5,"column_end":11},"name":"Normal","qualname":"::path::Component::Normal","value":"Component::Normal(&'a OsStr)","parent":{"krate":0,"index":7667},"children":[],"decl_id":null,"docs":" A normal component, e.g. `a` and `b` in `a/b`.","sig":null,"attributes":[{"value":"/ A normal component, e.g. `a` and `b` in `a/b`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":612439,"byte_end":612489,"line_start":351,"line_end":351,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":612494,"byte_end":612497,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This variant is the most common one, it represents references to files","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":612502,"byte_end":612576,"line_start":353,"line_end":353,"column_start":5,"column_end":79}},{"value":"/ or directories.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":612581,"byte_end":612600,"line_start":354,"line_end":354,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":7667},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":611798,"byte_end":611807,"line_start":329,"line_end":329,"column_start":10,"column_end":19},"name":"Component","qualname":"::path::Component","value":"pub enum Component<'a> {\n\n    /// A Windows path prefix, e.g., `C:` or `\\\\server\\share`.\n    ///\n    /// There is a large variety of prefix types, see [`Prefix`]'s documentation\n    /// for more.\n    ///\n    /// Does not occur on Unix.\n    ///\n    /// [`Prefix`]: enum.Prefix.html\n    Prefix(PrefixComponent),\n\n    /// The root directory component, appears after any prefix and before anything else.\n    ///\n    /// It represents a separator that designates that a path starts from root.\n    RootDir,\n\n    /// A reference to the current directory, i.e. `.`.\n    CurDir,\n\n    /// A reference to the parent directory, i.e. `..`.\n    ParentDir,\n\n    /// A normal component, e.g. `a` and `b` in `a/b`.\n    ///\n    /// This variant is the most common one, it represents references to files\n    /// or directories.\n    Normal(&'a OsStr),\n}","parent":null,"children":[{"krate":0,"index":7669},{"krate":0,"index":7672},{"krate":0,"index":7674},{"krate":0,"index":7676},{"krate":0,"index":7678}],"decl_id":null,"docs":" A single component of a path.","sig":null,"attributes":[{"value":"/ A single component of a path.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":611427,"byte_end":611460,"line_start":319,"line_end":319,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":611461,"byte_end":611464,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ A `Component` roughly corresponds to a substring between path separators","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":611465,"byte_end":611541,"line_start":321,"line_end":321,"column_start":1,"column_end":77}},{"value":"/ (`/` or `\\`).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":611542,"byte_end":611559,"line_start":322,"line_end":322,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":611560,"byte_end":611563,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ This `enum` is created by iterating over [`Components`], which in turn is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":611564,"byte_end":611641,"line_start":324,"line_end":324,"column_start":1,"column_end":78}},{"value":"/ created by the [`components`][`Path::components`] method on [`Path`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":611642,"byte_end":611715,"line_start":325,"line_end":325,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":611716,"byte_end":611719,"line_start":326,"line_end":326,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":3604},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":612720,"byte_end":612729,"line_start":361,"line_end":361,"column_start":12,"column_end":21},"name":"as_os_str","qualname":"<Component>::as_os_str","value":"pub fn as_os_str(Self) -> &'a OsStr","parent":null,"children":[],"decl_id":null,"docs":" Extracts the underlying [`OsStr`] slice.","sig":null,"attributes":[{"value":"/ Extracts the underlying [`OsStr`] slice.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":612656,"byte_end":612700,"line_start":359,"line_end":359,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":612705,"byte_end":612708,"line_start":360,"line_end":360,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7714},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":613466,"byte_end":613476,"line_start":390,"line_end":390,"column_start":12,"column_end":22},"name":"Components","qualname":"::path::Components","value":"Components {  }","parent":null,"children":[{"krate":0,"index":7716},{"krate":0,"index":7717},{"krate":0,"index":7718},{"krate":0,"index":7719},{"krate":0,"index":7720}],"decl_id":null,"docs":" An iterator over the [`Component`]s of a [`Path`].","sig":null,"attributes":[{"value":"/ An iterator over the [`Component`]s of a [`Path`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":613268,"byte_end":613322,"line_start":384,"line_end":384,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":613323,"byte_end":613326,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`components`] method on [`Path`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":613327,"byte_end":613397,"line_start":386,"line_end":386,"column_start":1,"column_end":71}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":613398,"byte_end":613433,"line_start":387,"line_end":387,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":613434,"byte_end":613437,"line_start":388,"line_end":388,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":7724},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":614407,"byte_end":614411,"line_start":418,"line_end":418,"column_start":12,"column_end":16},"name":"Iter","qualname":"::path::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":7726}],"decl_id":null,"docs":" An iterator over the [`Component`]s of a [`Path`], as [`OsStr`] slices.","sig":null,"attributes":[{"value":"/ An iterator over the [`Component`]s of a [`Path`], as [`OsStr`] slices.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":614034,"byte_end":614109,"line_start":408,"line_end":408,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":614110,"byte_end":614113,"line_start":409,"line_end":409,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`Path`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":614114,"byte_end":614178,"line_start":410,"line_end":410,"column_start":1,"column_end":65}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":614179,"byte_end":614214,"line_start":411,"line_end":411,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":614215,"byte_end":614218,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":614219,"byte_end":614257,"line_start":413,"line_end":413,"column_start":1,"column_end":39}},{"value":"/ [`iter`]: struct.Path.html#method.iter","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":614258,"byte_end":614300,"line_start":414,"line_end":414,"column_start":1,"column_end":43}},{"value":"/ [`OsStr`]: ../../std/ffi/struct.OsStr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":614301,"byte_end":614347,"line_start":415,"line_end":415,"column_start":1,"column_end":47}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":614348,"byte_end":614378,"line_start":416,"line_end":416,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3625},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":616234,"byte_end":616241,"line_start":475,"line_end":475,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Components>::as_path","value":"pub fn as_path(&Self) -> &'a Path","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice corresponding to the portion of the path remaining for iteration.","sig":null,"attributes":[{"value":"/ Extracts a slice corresponding to the portion of the path remaining for iteration.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":616128,"byte_end":616214,"line_start":473,"line_end":473,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":616219,"byte_end":616222,"line_start":474,"line_end":474,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3650},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":620391,"byte_end":620398,"line_start":602,"line_end":602,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Iter>::as_path","value":"pub fn as_path(&Self) -> &'a Path","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice corresponding to the portion of the path remaining for iteration.","sig":null,"attributes":[{"value":"/ Extracts a slice corresponding to the portion of the path remaining for iteration.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":620285,"byte_end":620371,"line_start":600,"line_end":600,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":620376,"byte_end":620379,"line_start":601,"line_end":601,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7730},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":625770,"byte_end":625779,"line_start":761,"line_end":761,"column_start":12,"column_end":21},"name":"Ancestors","qualname":"::path::Ancestors","value":"Ancestors {  }","parent":null,"children":[{"krate":0,"index":7732}],"decl_id":null,"docs":" An iterator over [`Path`] and its ancestors.","sig":null,"attributes":[{"value":"/ An iterator over [`Path`] and its ancestors.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":625566,"byte_end":625614,"line_start":755,"line_end":755,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":625615,"byte_end":625618,"line_start":756,"line_end":756,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`ancestors`] method on [`Path`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":625619,"byte_end":625688,"line_start":757,"line_end":757,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":625689,"byte_end":625724,"line_start":758,"line_end":758,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":625725,"byte_end":625728,"line_start":759,"line_end":759,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":7741},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":626917,"byte_end":626924,"line_start":797,"line_end":797,"column_start":12,"column_end":19},"name":"PathBuf","qualname":"::path::PathBuf","value":"PathBuf {  }","parent":null,"children":[{"krate":0,"index":7742}],"decl_id":null,"docs":" An owned, mutable path (akin to [`String`]).","sig":null,"attributes":[{"value":"/ An owned, mutable path (akin to [`String`]).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":626260,"byte_end":626308,"line_start":781,"line_end":781,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":626309,"byte_end":626312,"line_start":782,"line_end":782,"column_start":1,"column_end":4}},{"value":"/ This type provides methods like [`push`] and [`set_extension`] that mutate","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":626313,"byte_end":626391,"line_start":783,"line_end":783,"column_start":1,"column_end":79}},{"value":"/ the path in place. It also implements [`Deref`] to [`Path`], meaning that","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":626392,"byte_end":626469,"line_start":784,"line_end":784,"column_start":1,"column_end":78}},{"value":"/ all methods on [`Path`] slices are available on `PathBuf` values as well.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":626470,"byte_end":626547,"line_start":785,"line_end":785,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":626548,"byte_end":626551,"line_start":786,"line_end":786,"column_start":1,"column_end":4}},{"value":"/ [`String`]: ../string/struct.String.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":626552,"byte_end":626596,"line_start":787,"line_end":787,"column_start":1,"column_end":45}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":626597,"byte_end":626627,"line_start":788,"line_end":788,"column_start":1,"column_end":31}},{"value":"/ [`push`]: struct.PathBuf.html#method.push","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":626628,"byte_end":626673,"line_start":789,"line_end":789,"column_start":1,"column_end":46}},{"value":"/ [`set_extension`]: struct.PathBuf.html#method.set_extension","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":626674,"byte_end":626737,"line_start":790,"line_end":790,"column_start":1,"column_end":64}},{"value":"/ [`Deref`]: ../ops/trait.Deref.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":626738,"byte_end":626776,"line_start":791,"line_end":791,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":626777,"byte_end":626780,"line_start":792,"line_end":792,"column_start":1,"column_end":4}},{"value":"/ More details about the overall approach can be found in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":626781,"byte_end":626840,"line_start":793,"line_end":793,"column_start":1,"column_end":60}},{"value":"/ the [module documentation](index.html).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":626841,"byte_end":626884,"line_start":794,"line_end":794,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":626885,"byte_end":626888,"line_start":795,"line_end":795,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":3687},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":627141,"byte_end":627144,"line_start":808,"line_end":808,"column_start":12,"column_end":15},"name":"new","qualname":"<PathBuf>::new","value":"pub fn new() -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Allocates an empty `PathBuf`.","sig":null,"attributes":[{"value":"/ Allocates an empty `PathBuf`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":627088,"byte_end":627121,"line_start":806,"line_end":806,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":627126,"byte_end":627129,"line_start":807,"line_end":807,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3688},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":627380,"byte_end":627393,"line_start":815,"line_end":815,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<PathBuf>::with_capacity","value":"pub fn with_capacity(usize) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PathBuf` with a given capacity used to create the\n internal [`OsString`]. See [`with_capacity`] defined on [`OsString`].","sig":null,"attributes":[{"value":"/ Creates a new `PathBuf` with a given capacity used to create the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":627214,"byte_end":627282,"line_start":812,"line_end":812,"column_start":5,"column_end":73}},{"value":"/ internal [`OsString`]. See [`with_capacity`] defined on [`OsString`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":627287,"byte_end":627360,"line_start":813,"line_end":813,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":627365,"byte_end":627368,"line_start":814,"line_end":814,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3689},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":627591,"byte_end":627598,"line_start":823,"line_end":823,"column_start":12,"column_end":19},"name":"as_path","qualname":"<PathBuf>::as_path","value":"pub fn as_path(&Self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Coerces to a [`Path`] slice.","sig":null,"attributes":[{"value":"/ Coerces to a [`Path`] slice.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":627496,"byte_end":627528,"line_start":819,"line_end":819,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":627533,"byte_end":627536,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":627541,"byte_end":627571,"line_start":821,"line_end":821,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":627576,"byte_end":627579,"line_start":822,"line_end":822,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3690},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":628003,"byte_end":628007,"line_start":837,"line_end":837,"column_start":12,"column_end":16},"name":"push","qualname":"<PathBuf>::push","value":"pub fn push<P: AsRef<Path>>(&mut Self, P)","parent":null,"children":[],"decl_id":null,"docs":" Extends `self` with `path`.","sig":null,"attributes":[{"value":"/ Extends `self` with `path`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":627641,"byte_end":627672,"line_start":827,"line_end":827,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":627677,"byte_end":627680,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ If `path` is absolute, it replaces the current path.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":627685,"byte_end":627741,"line_start":829,"line_end":829,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":627746,"byte_end":627749,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ On Windows:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":627754,"byte_end":627769,"line_start":831,"line_end":831,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":627774,"byte_end":627777,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ * if `path` has a root but no prefix (e.g., `\\windows`), it","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":627782,"byte_end":627845,"line_start":833,"line_end":833,"column_start":5,"column_end":68}},{"value":"/   replaces everything except for the prefix (if any) of `self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":627850,"byte_end":627917,"line_start":834,"line_end":834,"column_start":5,"column_end":72}},{"value":"/ * if `path` has a prefix but no root, it replaces `self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":627922,"byte_end":627983,"line_start":835,"line_end":835,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":627988,"byte_end":627991,"line_start":836,"line_end":836,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3694},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":629519,"byte_end":629522,"line_start":882,"line_end":882,"column_start":12,"column_end":15},"name":"pop","qualname":"<PathBuf>::pop","value":"pub fn pop(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Truncates `self` to [`self.parent`].","sig":null,"attributes":[{"value":"/ Truncates `self` to [`self.parent`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":629203,"byte_end":629243,"line_start":873,"line_end":873,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":629248,"byte_end":629251,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ Returns `false` and does nothing if [`self.parent`] is [`None`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":629256,"byte_end":629324,"line_start":875,"line_end":875,"column_start":5,"column_end":73}},{"value":"/ Otherwise, returns `true`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":629329,"byte_end":629359,"line_start":876,"line_end":876,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":629364,"byte_end":629367,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ [`None`]: ../../std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":629372,"byte_end":629432,"line_start":878,"line_end":878,"column_start":5,"column_end":65}},{"value":"/ [`self.parent`]: struct.PathBuf.html#method.parent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":629437,"byte_end":629491,"line_start":879,"line_end":879,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":629496,"byte_end":629499,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":629504,"byte_end":629507,"line_start":881,"line_end":881,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3696},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":630321,"byte_end":630334,"line_start":905,"line_end":905,"column_start":12,"column_end":25},"name":"set_file_name","qualname":"<PathBuf>::set_file_name","value":"pub fn set_file_name<S: AsRef<OsStr>>(&mut Self, S)","parent":null,"children":[],"decl_id":null,"docs":" Updates [`self.file_name`] to `file_name`.","sig":null,"attributes":[{"value":"/ Updates [`self.file_name`] to `file_name`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":629764,"byte_end":629810,"line_start":892,"line_end":892,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":629815,"byte_end":629818,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ If [`self.file_name`] was [`None`], this is equivalent to pushing","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":629823,"byte_end":629892,"line_start":894,"line_end":894,"column_start":5,"column_end":74}},{"value":"/ `file_name`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":629897,"byte_end":629913,"line_start":895,"line_end":895,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":629918,"byte_end":629921,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ Otherwise it is equivalent to calling [`pop`] and then pushing","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":629926,"byte_end":629992,"line_start":897,"line_end":897,"column_start":5,"column_end":71}},{"value":"/ `file_name`. The new path will be a sibling of the original path.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":629997,"byte_end":630066,"line_start":898,"line_end":898,"column_start":5,"column_end":74}},{"value":"/ (That is, it will have the same parent.)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":630071,"byte_end":630115,"line_start":899,"line_end":899,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":630120,"byte_end":630123,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ [`self.file_name`]: struct.PathBuf.html#method.file_name","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":630128,"byte_end":630188,"line_start":901,"line_end":901,"column_start":5,"column_end":65}},{"value":"/ [`None`]: ../../std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":630193,"byte_end":630253,"line_start":902,"line_end":902,"column_start":5,"column_end":65}},{"value":"/ [`pop`]: struct.PathBuf.html#method.pop","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":630258,"byte_end":630301,"line_start":903,"line_end":903,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":630306,"byte_end":630309,"line_start":904,"line_end":904,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3699},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":631173,"byte_end":631186,"line_start":929,"line_end":929,"column_start":12,"column_end":25},"name":"set_extension","qualname":"<PathBuf>::set_extension","value":"pub fn set_extension<S: AsRef<OsStr>>(&mut Self, S) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Updates [`self.extension`] to `extension`.","sig":null,"attributes":[{"value":"/ Updates [`self.extension`] to `extension`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":630651,"byte_end":630697,"line_start":917,"line_end":917,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":630702,"byte_end":630705,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ Returns `false` and does nothing if [`self.file_name`] is [`None`],","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":630710,"byte_end":630781,"line_start":919,"line_end":919,"column_start":5,"column_end":76}},{"value":"/ returns `true` and updates the extension otherwise.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":630786,"byte_end":630841,"line_start":920,"line_end":920,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":630846,"byte_end":630849,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ If [`self.extension`] is [`None`], the extension is added; otherwise","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":630854,"byte_end":630926,"line_start":922,"line_end":922,"column_start":5,"column_end":77}},{"value":"/ it is replaced.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":630931,"byte_end":630950,"line_start":923,"line_end":923,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":630955,"byte_end":630958,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ [`self.file_name`]: struct.PathBuf.html#method.file_name","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":630963,"byte_end":631023,"line_start":925,"line_end":925,"column_start":5,"column_end":65}},{"value":"/ [`self.extension`]: struct.PathBuf.html#method.extension","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":631028,"byte_end":631088,"line_start":926,"line_end":926,"column_start":5,"column_end":65}},{"value":"/ [`None`]: ../../std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":631093,"byte_end":631153,"line_start":927,"line_end":927,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":631158,"byte_end":631161,"line_start":928,"line_end":928,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3702},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":632198,"byte_end":632212,"line_start":960,"line_end":960,"column_start":12,"column_end":26},"name":"into_os_string","qualname":"<PathBuf>::into_os_string","value":"pub fn into_os_string(Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `PathBuf`, yielding its internal [`OsString`] storage.","sig":null,"attributes":[{"value":"/ Consumes the `PathBuf`, yielding its internal [`OsString`] storage.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":632049,"byte_end":632120,"line_start":956,"line_end":956,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":632125,"byte_end":632128,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ [`OsString`]: ../ffi/struct.OsString.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":632133,"byte_end":632178,"line_start":958,"line_end":958,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":632183,"byte_end":632186,"line_start":959,"line_end":959,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3703},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":632426,"byte_end":632441,"line_start":968,"line_end":968,"column_start":12,"column_end":27},"name":"into_boxed_path","qualname":"<PathBuf>::into_boxed_path","value":"pub fn into_boxed_path(Self) -> Box<Path>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `PathBuf` into a [boxed][`Box`] [`Path`].","sig":null,"attributes":[{"value":"/ Converts this `PathBuf` into a [boxed][`Box`] [`Path`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":632263,"byte_end":632322,"line_start":964,"line_end":964,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":632327,"byte_end":632330,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ [`Box`]: ../../std/boxed/struct.Box.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":632335,"byte_end":632379,"line_start":966,"line_end":966,"column_start":5,"column_end":49}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":632384,"byte_end":632414,"line_start":967,"line_end":967,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3704},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":632792,"byte_end":632800,"line_start":977,"line_end":977,"column_start":12,"column_end":20},"name":"capacity","qualname":"<PathBuf>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Invokes [`capacity`] on the underlying instance of [`OsString`].","sig":null,"attributes":[{"value":"/ Invokes [`capacity`] on the underlying instance of [`OsString`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":632588,"byte_end":632656,"line_start":973,"line_end":973,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":632661,"byte_end":632664,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ [`capacity`]: ../ffi/struct.OsString.html#method.capacity","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":632669,"byte_end":632730,"line_start":975,"line_end":975,"column_start":5,"column_end":66}},{"value":"/ [`OsString`]: ../ffi/struct.OsString.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":632735,"byte_end":632780,"line_start":976,"line_end":976,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3705},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":633055,"byte_end":633060,"line_start":985,"line_end":985,"column_start":12,"column_end":17},"name":"clear","qualname":"<PathBuf>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Invokes [`clear`] on the underlying instance of [`OsString`].","sig":null,"attributes":[{"value":"/ Invokes [`clear`] on the underlying instance of [`OsString`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":632860,"byte_end":632925,"line_start":981,"line_end":981,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":632930,"byte_end":632933,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ [`clear`]: ../ffi/struct.OsString.html#method.clear","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":632938,"byte_end":632993,"line_start":983,"line_end":983,"column_start":5,"column_end":60}},{"value":"/ [`OsString`]: ../ffi/struct.OsString.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":632998,"byte_end":633043,"line_start":984,"line_end":984,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3706},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":633313,"byte_end":633320,"line_start":993,"line_end":993,"column_start":12,"column_end":19},"name":"reserve","qualname":"<PathBuf>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Invokes [`reserve`] on the underlying instance of [`OsString`].","sig":null,"attributes":[{"value":"/ Invokes [`reserve`] on the underlying instance of [`OsString`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":633112,"byte_end":633179,"line_start":989,"line_end":989,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":633184,"byte_end":633187,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ [`reserve`]: ../ffi/struct.OsString.html#method.reserve","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":633192,"byte_end":633251,"line_start":991,"line_end":991,"column_start":5,"column_end":64}},{"value":"/ [`OsString`]: ../ffi/struct.OsString.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":633256,"byte_end":633301,"line_start":992,"line_end":992,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3707},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":633622,"byte_end":633635,"line_start":1001,"line_end":1001,"column_start":12,"column_end":25},"name":"reserve_exact","qualname":"<PathBuf>::reserve_exact","value":"pub fn reserve_exact(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Invokes [`reserve_exact`] on the underlying instance of [`OsString`].","sig":null,"attributes":[{"value":"/ Invokes [`reserve_exact`] on the underlying instance of [`OsString`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":633403,"byte_end":633476,"line_start":997,"line_end":997,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":633481,"byte_end":633484,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ [`reserve_exact`]: ../ffi/struct.OsString.html#method.reserve_exact","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":633489,"byte_end":633560,"line_start":999,"line_end":999,"column_start":5,"column_end":76}},{"value":"/ [`OsString`]: ../ffi/struct.OsString.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":633565,"byte_end":633610,"line_start":1000,"line_end":1000,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3708},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":633943,"byte_end":633956,"line_start":1009,"line_end":1009,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<PathBuf>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Invokes [`shrink_to_fit`] on the underlying instance of [`OsString`].","sig":null,"attributes":[{"value":"/ Invokes [`shrink_to_fit`] on the underlying instance of [`OsString`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":633724,"byte_end":633797,"line_start":1005,"line_end":1005,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":633802,"byte_end":633805,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ [`shrink_to_fit`]: ../ffi/struct.OsString.html#method.shrink_to_fit","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":633810,"byte_end":633881,"line_start":1007,"line_end":1007,"column_start":5,"column_end":76}},{"value":"/ [`OsString`]: ../ffi/struct.OsString.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":633886,"byte_end":633931,"line_start":1008,"line_end":1008,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3709},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":634223,"byte_end":634232,"line_start":1017,"line_end":1017,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<PathBuf>::shrink_to","value":"pub fn shrink_to(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Invokes [`shrink_to`] on the underlying instance of [`OsString`].","sig":null,"attributes":[{"value":"/ Invokes [`shrink_to`] on the underlying instance of [`OsString`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":634016,"byte_end":634085,"line_start":1013,"line_end":1013,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":634090,"byte_end":634093,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ [`shrink_to`]: ../ffi/struct.OsString.html#method.shrink_to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":634098,"byte_end":634161,"line_start":1015,"line_end":1015,"column_start":5,"column_end":68}},{"value":"/ [`OsString`]: ../ffi/struct.OsString.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":634166,"byte_end":634211,"line_start":1016,"line_end":1016,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3784},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":640505,"byte_end":640509,"line_start":1262,"line_end":1262,"column_start":12,"column_end":16},"name":"Path","qualname":"::path::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":3785}],"decl_id":null,"docs":" A slice of a path (akin to [`str`]).","sig":null,"attributes":[{"value":"/ A slice of a path (akin to [`str`]).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":639782,"byte_end":639822,"line_start":1244,"line_end":1244,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":639823,"byte_end":639826,"line_start":1245,"line_end":1245,"column_start":1,"column_end":4}},{"value":"/ This type supports a number of operations for inspecting a path, including","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":639827,"byte_end":639905,"line_start":1246,"line_end":1246,"column_start":1,"column_end":79}},{"value":"/ breaking the path into its components (separated by `/` on Unix and by either","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":639906,"byte_end":639987,"line_start":1247,"line_end":1247,"column_start":1,"column_end":82}},{"value":"/ `/` or `\\` on Windows), extracting the file name, determining whether the path","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":639988,"byte_end":640070,"line_start":1248,"line_end":1248,"column_start":1,"column_end":83}},{"value":"/ is absolute, and so on.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":640071,"byte_end":640098,"line_start":1249,"line_end":1249,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":640099,"byte_end":640102,"line_start":1250,"line_end":1250,"column_start":1,"column_end":4}},{"value":"/ This is an *unsized* type, meaning that it must always be used behind a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":640103,"byte_end":640178,"line_start":1251,"line_end":1251,"column_start":1,"column_end":76}},{"value":"/ pointer like `&` or [`Box`]. For an owned version of this type,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":640179,"byte_end":640246,"line_start":1252,"line_end":1252,"column_start":1,"column_end":68}},{"value":"/ see [`PathBuf`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":640247,"byte_end":640267,"line_start":1253,"line_end":1253,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":640268,"byte_end":640271,"line_start":1254,"line_end":1254,"column_start":1,"column_end":4}},{"value":"/ [`str`]: ../primitive.str.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":640272,"byte_end":640306,"line_start":1255,"line_end":1255,"column_start":1,"column_end":35}},{"value":"/ [`Box`]: ../boxed/struct.Box.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":640307,"byte_end":640344,"line_start":1256,"line_end":1256,"column_start":1,"column_end":38}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":640345,"byte_end":640381,"line_start":1257,"line_end":1257,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":640382,"byte_end":640385,"line_start":1258,"line_end":1258,"column_start":1,"column_end":4}},{"value":"/ More details about the overall approach can be found in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":640386,"byte_end":640445,"line_start":1259,"line_end":1259,"column_start":1,"column_end":60}},{"value":"/ the [module documentation](index.html).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":640446,"byte_end":640489,"line_start":1260,"line_end":1260,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":640490,"byte_end":640493,"line_start":1261,"line_end":1261,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":7745},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":640889,"byte_end":640905,"line_start":1275,"line_end":1275,"column_start":12,"column_end":28},"name":"StripPrefixError","qualname":"::path::StripPrefixError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error returned from [`Path::strip_prefix`][`strip_prefix`] if the prefix\n was not found.","sig":null,"attributes":[{"value":"/ An error returned from [`Path::strip_prefix`][`strip_prefix`] if the prefix","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":640533,"byte_end":640612,"line_start":1266,"line_end":1266,"column_start":1,"column_end":80}},{"value":"/ was not found.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":640613,"byte_end":640631,"line_start":1267,"line_end":1267,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":640632,"byte_end":640635,"line_start":1268,"line_end":1268,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`strip_prefix`] method on [`Path`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":640636,"byte_end":640708,"line_start":1269,"line_end":1269,"column_start":1,"column_end":73}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":640709,"byte_end":640744,"line_start":1270,"line_end":1270,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":640745,"byte_end":640748,"line_start":1271,"line_end":1271,"column_start":1,"column_end":4}},{"value":"/ [`strip_prefix`]: struct.Path.html#method.strip_prefix","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":640749,"byte_end":640807,"line_start":1272,"line_end":1272,"column_start":1,"column_end":59}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":640808,"byte_end":640838,"line_start":1273,"line_end":1273,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3789},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":641472,"byte_end":641475,"line_start":1292,"line_end":1292,"column_start":12,"column_end":15},"name":"new","qualname":"<Path>::new","value":"pub fn new<S: AsRef<OsStr> + ?Sized>(&S) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Directly wraps a string slice as a `Path` slice.","sig":null,"attributes":[{"value":"/ Directly wraps a string slice as a `Path` slice.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":641352,"byte_end":641404,"line_start":1288,"line_end":1288,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":641409,"byte_end":641412,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ This is a cost-free conversion.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":641417,"byte_end":641452,"line_start":1290,"line_end":1290,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":641457,"byte_end":641460,"line_start":1291,"line_end":1291,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3791},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":641710,"byte_end":641719,"line_start":1300,"line_end":1300,"column_start":12,"column_end":21},"name":"as_os_str","qualname":"<Path>::as_os_str","value":"pub fn as_os_str(&Self) -> &OsStr","parent":null,"children":[],"decl_id":null,"docs":" Yields the underlying [`OsStr`] slice.","sig":null,"attributes":[{"value":"/ Yields the underlying [`OsStr`] slice.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":641596,"byte_end":641638,"line_start":1296,"line_end":1296,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":641643,"byte_end":641646,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ [`OsStr`]: ../ffi/struct.OsStr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":641651,"byte_end":641690,"line_start":1298,"line_end":1298,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":641695,"byte_end":641698,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3792},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":642083,"byte_end":642089,"line_start":1312,"line_end":1312,"column_start":12,"column_end":18},"name":"to_str","qualname":"<Path>::to_str","value":"pub fn to_str(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Yields a [`&str`] slice if the `Path` is valid unicode.","sig":null,"attributes":[{"value":"/ Yields a [`&str`] slice if the `Path` is valid unicode.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":641770,"byte_end":641829,"line_start":1304,"line_end":1304,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":641834,"byte_end":641837,"line_start":1305,"line_end":1305,"column_start":5,"column_end":8}},{"value":"/ This conversion may entail doing a check for UTF-8 validity.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":641842,"byte_end":641906,"line_start":1306,"line_end":1306,"column_start":5,"column_end":69}},{"value":"/ Note that validation is performed because non-UTF-8 strings are","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":641911,"byte_end":641978,"line_start":1307,"line_end":1307,"column_start":5,"column_end":72}},{"value":"/ perfectly valid for some OS.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":641983,"byte_end":642015,"line_start":1308,"line_end":1308,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":642020,"byte_end":642023,"line_start":1309,"line_end":1309,"column_start":5,"column_end":8}},{"value":"/ [`&str`]: ../primitive.str.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":642028,"byte_end":642063,"line_start":1310,"line_end":1310,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":642068,"byte_end":642071,"line_start":1311,"line_end":1311,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3793},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":642440,"byte_end":642455,"line_start":1324,"line_end":1324,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<Path>::to_string_lossy","value":"pub fn to_string_lossy(&Self) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Path` to a [`Cow<str>`].","sig":null,"attributes":[{"value":"/ Converts a `Path` to a [`Cow<str>`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":642154,"byte_end":642194,"line_start":1316,"line_end":1316,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":642199,"byte_end":642202,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":642207,"byte_end":642254,"line_start":1318,"line_end":1318,"column_start":5,"column_end":52}},{"value":"/ [`U+FFFD REPLACEMENT CHARACTER`][U+FFFD].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":642259,"byte_end":642304,"line_start":1319,"line_end":1319,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":642309,"byte_end":642312,"line_start":1320,"line_end":1320,"column_start":5,"column_end":8}},{"value":"/ [`Cow<str>`]: ../borrow/enum.Cow.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":642317,"byte_end":642358,"line_start":1321,"line_end":1321,"column_start":5,"column_end":46}},{"value":"/ [U+FFFD]: ../char/constant.REPLACEMENT_CHARACTER.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":642363,"byte_end":642420,"line_start":1322,"line_end":1322,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":642425,"byte_end":642428,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3794},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":642679,"byte_end":642690,"line_start":1333,"line_end":1333,"column_start":12,"column_end":23},"name":"to_path_buf","qualname":"<Path>::to_path_buf","value":"pub fn to_path_buf(&Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Path` to an owned [`PathBuf`].","sig":null,"attributes":[{"value":"/ Converts a `Path` to an owned [`PathBuf`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":642529,"byte_end":642575,"line_start":1328,"line_end":1328,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":642580,"byte_end":642583,"line_start":1329,"line_end":1329,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":642588,"byte_end":642624,"line_start":1330,"line_end":1330,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":642629,"byte_end":642632,"line_start":1331,"line_end":1331,"column_start":5,"column_end":8}},{"value":"rustc_conversion_suggestion","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":642637,"byte_end":642667,"line_start":1332,"line_end":1332,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3795},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":643218,"byte_end":643229,"line_start":1347,"line_end":1347,"column_start":12,"column_end":23},"name":"is_absolute","qualname":"<Path>::is_absolute","value":"pub fn is_absolute(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` is absolute, i.e., if it is independent of\n the current directory.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` is absolute, i.e., if it is independent of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":642771,"byte_end":642846,"line_start":1337,"line_end":1337,"column_start":5,"column_end":80}},{"value":"/ the current directory.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":642851,"byte_end":642877,"line_start":1338,"line_end":1338,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":642882,"byte_end":642885,"line_start":1339,"line_end":1339,"column_start":5,"column_end":8}},{"value":"/ * On Unix, a path is absolute if it starts with the root, so","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":642890,"byte_end":642954,"line_start":1340,"line_end":1340,"column_start":5,"column_end":69}},{"value":"/ `is_absolute` and [`has_root`] are equivalent.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":642959,"byte_end":643009,"line_start":1341,"line_end":1341,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":643014,"byte_end":643017,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ * On Windows, a path is absolute if it has a prefix and starts with the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":643022,"byte_end":643097,"line_start":1343,"line_end":1343,"column_start":5,"column_end":80}},{"value":"/ root: `c:\\windows` is absolute, while `c:temp` and `\\temp` are not.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":643102,"byte_end":643173,"line_start":1344,"line_end":1344,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":643178,"byte_end":643181,"line_start":1345,"line_end":1345,"column_start":5,"column_end":8}},{"value":"allow(deprecated)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":643186,"byte_end":643206,"line_start":1346,"line_end":1346,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3796},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":643480,"byte_end":643491,"line_start":1355,"line_end":1355,"column_start":12,"column_end":23},"name":"is_relative","qualname":"<Path>::is_relative","value":"pub fn is_relative(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` is relative, i.e., not absolute.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` is relative, i.e., not absolute.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":643325,"byte_end":643390,"line_start":1351,"line_end":1351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":643395,"byte_end":643398,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ See [`is_absolute`]'s documentation for more details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":643403,"byte_end":643460,"line_start":1353,"line_end":1353,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":643465,"byte_end":643468,"line_start":1354,"line_end":1354,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3798},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":644047,"byte_end":644055,"line_start":1372,"line_end":1372,"column_start":12,"column_end":20},"name":"has_root","qualname":"<Path>::has_root","value":"pub fn has_root(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` has a root.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` has a root.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":643633,"byte_end":643677,"line_start":1363,"line_end":1363,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":643682,"byte_end":643685,"line_start":1364,"line_end":1364,"column_start":5,"column_end":8}},{"value":"/ * On Unix, a path has a root if it begins with `/`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":643690,"byte_end":643745,"line_start":1365,"line_end":1365,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":643750,"byte_end":643753,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ * On Windows, a path has a root if it:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":643758,"byte_end":643800,"line_start":1367,"line_end":1367,"column_start":5,"column_end":47}},{"value":"/     * has no prefix and begins with a separator, e.g., `\\windows`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":643805,"byte_end":643874,"line_start":1368,"line_end":1368,"column_start":5,"column_end":74}},{"value":"/     * has a prefix followed by a separator, e.g., `c:\\windows` but not `c:windows`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":643879,"byte_end":643965,"line_start":1369,"line_end":1369,"column_start":5,"column_end":91}},{"value":"/     * has any non-disk prefix, e.g., `\\\\server\\share`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":643970,"byte_end":644027,"line_start":1370,"line_end":1370,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":644032,"byte_end":644035,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3799},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":644359,"byte_end":644365,"line_start":1382,"line_end":1382,"column_start":12,"column_end":18},"name":"parent","qualname":"<Path>::parent","value":"pub fn parent(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Path` without its final component, if there is one.","sig":null,"attributes":[{"value":"/ Returns the `Path` without its final component, if there is one.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":644121,"byte_end":644189,"line_start":1376,"line_end":1376,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":644194,"byte_end":644197,"line_start":1377,"line_end":1377,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the path terminates in a root or prefix.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":644202,"byte_end":644266,"line_start":1378,"line_end":1378,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":644271,"byte_end":644274,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ [`None`]: ../../std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":644279,"byte_end":644339,"line_start":1380,"line_end":1380,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":644344,"byte_end":644347,"line_start":1381,"line_end":1381,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3801},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":645183,"byte_end":645192,"line_start":1401,"line_end":1401,"column_start":12,"column_end":21},"name":"ancestors","qualname":"<Path>::ancestors","value":"pub fn ancestors(&Self) -> Ancestors","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over `Path` and its ancestors.","sig":null,"attributes":[{"value":"/ Produces an iterator over `Path` and its ancestors.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":644687,"byte_end":644742,"line_start":1393,"line_end":1393,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":644747,"byte_end":644750,"line_start":1394,"line_end":1394,"column_start":5,"column_end":8}},{"value":"/ The iterator will yield the `Path` that is returned if the [`parent`] method is used zero","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":644755,"byte_end":644848,"line_start":1395,"line_end":1395,"column_start":5,"column_end":98}},{"value":"/ or more times. That means, the iterator will yield `&self`, `&self.parent().unwrap()`,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":644853,"byte_end":644943,"line_start":1396,"line_end":1396,"column_start":5,"column_end":95}},{"value":"/ `&self.parent().unwrap().parent().unwrap()` and so on. If the [`parent`] method returns","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":644948,"byte_end":645039,"line_start":1397,"line_end":1397,"column_start":5,"column_end":96}},{"value":"/ [`None`], the iterator will do likewise. The iterator will always yield at least one value,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":645044,"byte_end":645139,"line_start":1398,"line_end":1398,"column_start":5,"column_end":100}},{"value":"/ namely `&self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":645144,"byte_end":645163,"line_start":1399,"line_end":1399,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":645168,"byte_end":645171,"line_start":1400,"line_end":1400,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3802},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":645629,"byte_end":645638,"line_start":1414,"line_end":1414,"column_start":12,"column_end":21},"name":"file_name","qualname":"<Path>::file_name","value":"pub fn file_name(&Self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the final component of the `Path`, if there is one.","sig":null,"attributes":[{"value":"/ Returns the final component of the `Path`, if there is one.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":645270,"byte_end":645333,"line_start":1405,"line_end":1405,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":645338,"byte_end":645341,"line_start":1406,"line_end":1406,"column_start":5,"column_end":8}},{"value":"/ If the path is a normal file, this is the file name. If it's the path of a directory, this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":645346,"byte_end":645440,"line_start":1407,"line_end":1407,"column_start":5,"column_end":99}},{"value":"/ is the directory name.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":645445,"byte_end":645471,"line_start":1408,"line_end":1408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":645476,"byte_end":645479,"line_start":1409,"line_end":1409,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the path terminates in `..`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":645484,"byte_end":645536,"line_start":1410,"line_end":1410,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":645541,"byte_end":645544,"line_start":1411,"line_end":1411,"column_start":5,"column_end":8}},{"value":"/ [`None`]: ../../std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":645549,"byte_end":645609,"line_start":1412,"line_end":1412,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":645614,"byte_end":645617,"line_start":1413,"line_end":1413,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3804},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":646160,"byte_end":646172,"line_start":1431,"line_end":1431,"column_start":12,"column_end":24},"name":"strip_prefix","qualname":"<Path>::strip_prefix","value":"pub fn strip_prefix<P>(&Self, P) -> Result<&Path, StripPrefixError> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns a path that, when joined onto `base`, yields `self`.","sig":null,"attributes":[{"value":"/ Returns a path that, when joined onto `base`, yields `self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":645817,"byte_end":645881,"line_start":1421,"line_end":1421,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":645886,"byte_end":645889,"line_start":1422,"line_end":1422,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":645894,"byte_end":645906,"line_start":1423,"line_end":1423,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":645911,"byte_end":645914,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ If `base` is not a prefix of `self` (i.e., [`starts_with`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":645919,"byte_end":645981,"line_start":1425,"line_end":1425,"column_start":5,"column_end":67}},{"value":"/ returns `false`), returns [`Err`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":645986,"byte_end":646024,"line_start":1426,"line_end":1426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":646029,"byte_end":646032,"line_start":1427,"line_end":1427,"column_start":5,"column_end":8}},{"value":"/ [`starts_with`]: #method.starts_with","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":646037,"byte_end":646077,"line_start":1428,"line_end":1428,"column_start":5,"column_end":45}},{"value":"/ [`Err`]: ../../std/result/enum.Result.html#variant.Err","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":646082,"byte_end":646140,"line_start":1429,"line_end":1429,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":646145,"byte_end":646148,"line_start":1430,"line_end":1430,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3808},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":646672,"byte_end":646683,"line_start":1448,"line_end":1448,"column_start":12,"column_end":23},"name":"starts_with","qualname":"<Path>::starts_with","value":"pub fn starts_with<P: AsRef<Path>>(&Self, P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `base` is a prefix of `self`.","sig":null,"attributes":[{"value":"/ Determines whether `base` is a prefix of `self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":646537,"byte_end":646589,"line_start":1444,"line_end":1444,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":646594,"byte_end":646597,"line_start":1445,"line_end":1445,"column_start":5,"column_end":8}},{"value":"/ Only considers whole path components to match.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":646602,"byte_end":646652,"line_start":1446,"line_end":1446,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":646657,"byte_end":646660,"line_start":1447,"line_end":1447,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3811},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":647038,"byte_end":647047,"line_start":1460,"line_end":1460,"column_start":12,"column_end":21},"name":"ends_with","qualname":"<Path>::ends_with","value":"pub fn ends_with<P: AsRef<Path>>(&Self, P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `child` is a suffix of `self`.","sig":null,"attributes":[{"value":"/ Determines whether `child` is a suffix of `self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":646902,"byte_end":646955,"line_start":1456,"line_end":1456,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":646960,"byte_end":646963,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/ Only considers whole path components to match.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":646968,"byte_end":647018,"line_start":1458,"line_end":1458,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":647023,"byte_end":647026,"line_start":1459,"line_end":1459,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3814},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":647817,"byte_end":647826,"line_start":1481,"line_end":1481,"column_start":12,"column_end":21},"name":"file_stem","qualname":"<Path>::file_stem","value":"pub fn file_stem(&Self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the stem (non-extension) portion of [`self.file_name`].","sig":null,"attributes":[{"value":"/ Extracts the stem (non-extension) portion of [`self.file_name`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":647278,"byte_end":647346,"line_start":1468,"line_end":1468,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":647351,"byte_end":647354,"line_start":1469,"line_end":1469,"column_start":5,"column_end":8}},{"value":"/ [`self.file_name`]: struct.Path.html#method.file_name","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":647359,"byte_end":647416,"line_start":1470,"line_end":1470,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":647421,"byte_end":647424,"line_start":1471,"line_end":1471,"column_start":5,"column_end":8}},{"value":"/ The stem is:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":647429,"byte_end":647445,"line_start":1472,"line_end":1472,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":647450,"byte_end":647453,"line_start":1473,"line_end":1473,"column_start":5,"column_end":8}},{"value":"/ * [`None`], if there is no file name;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":647458,"byte_end":647499,"line_start":1474,"line_end":1474,"column_start":5,"column_end":46}},{"value":"/ * The entire file name if there is no embedded `.`;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":647504,"byte_end":647559,"line_start":1475,"line_end":1475,"column_start":5,"column_end":60}},{"value":"/ * The entire file name if the file name begins with `.` and has no other `.`s within;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":647564,"byte_end":647653,"line_start":1476,"line_end":1476,"column_start":5,"column_end":94}},{"value":"/ * Otherwise, the portion of the file name before the final `.`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":647658,"byte_end":647724,"line_start":1477,"line_end":1477,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":647729,"byte_end":647732,"line_start":1478,"line_end":1478,"column_start":5,"column_end":8}},{"value":"/ [`None`]: ../../std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":647737,"byte_end":647797,"line_start":1479,"line_end":1479,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":647802,"byte_end":647805,"line_start":1480,"line_end":1480,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3816},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":648465,"byte_end":648474,"line_start":1497,"line_end":1497,"column_start":12,"column_end":21},"name":"extension","qualname":"<Path>::extension","value":"pub fn extension(&Self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the extension of [`self.file_name`], if possible.","sig":null,"attributes":[{"value":"/ Extracts the extension of [`self.file_name`], if possible.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":647958,"byte_end":648020,"line_start":1485,"line_end":1485,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":648025,"byte_end":648028,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ The extension is:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":648033,"byte_end":648054,"line_start":1487,"line_end":1487,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":648059,"byte_end":648062,"line_start":1488,"line_end":1488,"column_start":5,"column_end":8}},{"value":"/ * [`None`], if there is no file name;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":648067,"byte_end":648108,"line_start":1489,"line_end":1489,"column_start":5,"column_end":46}},{"value":"/ * [`None`], if there is no embedded `.`;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":648113,"byte_end":648157,"line_start":1490,"line_end":1490,"column_start":5,"column_end":49}},{"value":"/ * [`None`], if the file name begins with `.` and has no other `.`s within;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":648162,"byte_end":648240,"line_start":1491,"line_end":1491,"column_start":5,"column_end":83}},{"value":"/ * Otherwise, the portion of the file name after the final `.`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":648245,"byte_end":648310,"line_start":1492,"line_end":1492,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":648315,"byte_end":648318,"line_start":1493,"line_end":1493,"column_start":5,"column_end":8}},{"value":"/ [`self.file_name`]: struct.Path.html#method.file_name","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":648323,"byte_end":648380,"line_start":1494,"line_end":1494,"column_start":5,"column_end":62}},{"value":"/ [`None`]: ../../std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":648385,"byte_end":648445,"line_start":1495,"line_end":1495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":648450,"byte_end":648453,"line_start":1496,"line_end":1496,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3818},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":648889,"byte_end":648893,"line_start":1508,"line_end":1508,"column_start":12,"column_end":16},"name":"join","qualname":"<Path>::join","value":"pub fn join<P: AsRef<Path>>(&Self, P) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] with `path` adjoined to `self`.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] with `path` adjoined to `self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":648607,"byte_end":648671,"line_start":1501,"line_end":1501,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":648676,"byte_end":648679,"line_start":1502,"line_end":1502,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::push`] for more details on what it means to adjoin a path.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":648684,"byte_end":648761,"line_start":1503,"line_end":1503,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":648766,"byte_end":648769,"line_start":1504,"line_end":1504,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":648774,"byte_end":648810,"line_start":1505,"line_end":1505,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::push`]: struct.PathBuf.html#method.push","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":648815,"byte_end":648869,"line_start":1506,"line_end":1506,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":648874,"byte_end":648877,"line_start":1507,"line_end":1507,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3821},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":649400,"byte_end":649414,"line_start":1525,"line_end":1525,"column_start":12,"column_end":26},"name":"with_file_name","qualname":"<Path>::with_file_name","value":"pub fn with_file_name<S: AsRef<OsStr>>(&Self, S) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] like `self` but with the given file name.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] like `self` but with the given file name.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":649115,"byte_end":649189,"line_start":1518,"line_end":1518,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":649194,"byte_end":649197,"line_start":1519,"line_end":1519,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::set_file_name`] for more details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":649202,"byte_end":649254,"line_start":1520,"line_end":1520,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":649259,"byte_end":649262,"line_start":1521,"line_end":1521,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":649267,"byte_end":649303,"line_start":1522,"line_end":1522,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::set_file_name`]: struct.PathBuf.html#method.set_file_name","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":649308,"byte_end":649380,"line_start":1523,"line_end":1523,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":649385,"byte_end":649388,"line_start":1524,"line_end":1524,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3824},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":649972,"byte_end":649986,"line_start":1542,"line_end":1542,"column_start":12,"column_end":26},"name":"with_extension","qualname":"<Path>::with_extension","value":"pub fn with_extension<S: AsRef<OsStr>>(&Self, S) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] like `self` but with the given extension.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] like `self` but with the given extension.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":649687,"byte_end":649761,"line_start":1535,"line_end":1535,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":649766,"byte_end":649769,"line_start":1536,"line_end":1536,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::set_extension`] for more details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":649774,"byte_end":649826,"line_start":1537,"line_end":1537,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":649831,"byte_end":649834,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":649839,"byte_end":649875,"line_start":1539,"line_end":1539,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::set_extension`]: struct.PathBuf.html#method.set_extension","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":649880,"byte_end":649952,"line_start":1540,"line_end":1540,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":649957,"byte_end":649960,"line_start":1541,"line_end":1541,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3827},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":651124,"byte_end":651134,"line_start":1570,"line_end":1570,"column_start":12,"column_end":22},"name":"components","qualname":"<Path>::components","value":"pub fn components(&Self) -> Components","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the [`Component`]s of the path.","sig":null,"attributes":[{"value":"/ Produces an iterator over the [`Component`]s of the path.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":650259,"byte_end":650320,"line_start":1552,"line_end":1552,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":650325,"byte_end":650328,"line_start":1553,"line_end":1553,"column_start":5,"column_end":8}},{"value":"/ When parsing the path, there is a small amount of normalization:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":650333,"byte_end":650401,"line_start":1554,"line_end":1554,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":650406,"byte_end":650409,"line_start":1555,"line_end":1555,"column_start":5,"column_end":8}},{"value":"/ * Repeated separators are ignored, so `a/b` and `a//b` both have","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":650414,"byte_end":650482,"line_start":1556,"line_end":1556,"column_start":5,"column_end":73}},{"value":"/   `a` and `b` as components.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":650487,"byte_end":650519,"line_start":1557,"line_end":1557,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":650524,"byte_end":650527,"line_start":1558,"line_end":1558,"column_start":5,"column_end":8}},{"value":"/ * Occurrences of `.` are normalized away, except if they are at the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":650532,"byte_end":650603,"line_start":1559,"line_end":1559,"column_start":5,"column_end":76}},{"value":"/   beginning of the path. For example, `a/./b`, `a/b/`, `a/b/.` and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":650608,"byte_end":650678,"line_start":1560,"line_end":1560,"column_start":5,"column_end":75}},{"value":"/   `a/b` all have `a` and `b` as components, but `./a/b` starts with","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":650683,"byte_end":650754,"line_start":1561,"line_end":1561,"column_start":5,"column_end":76}},{"value":"/   an additional [`CurDir`] component.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":650759,"byte_end":650800,"line_start":1562,"line_end":1562,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":650805,"byte_end":650808,"line_start":1563,"line_end":1563,"column_start":5,"column_end":8}},{"value":"/ * A trailing slash is normalized away, `/a/b` and `/a/b/` are equivalent.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":650813,"byte_end":650890,"line_start":1564,"line_end":1564,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":650895,"byte_end":650898,"line_start":1565,"line_end":1565,"column_start":5,"column_end":8}},{"value":"/ Note that no other normalization takes place; in particular, `a/c`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":650903,"byte_end":650973,"line_start":1566,"line_end":1566,"column_start":5,"column_end":75}},{"value":"/ and `a/b/../c` are distinct, to account for the possibility that `b`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":650978,"byte_end":651050,"line_start":1567,"line_end":1567,"column_start":5,"column_end":77}},{"value":"/ is a symbolic link (so its parent isn't `a`).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":651055,"byte_end":651104,"line_start":1568,"line_end":1568,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":651109,"byte_end":651112,"line_start":1569,"line_end":1569,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3828},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":651793,"byte_end":651797,"line_start":1590,"line_end":1590,"column_start":12,"column_end":16},"name":"iter","qualname":"<Path>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the path's components viewed as [`OsStr`]\n slices.","sig":null,"attributes":[{"value":"/ Produces an iterator over the path's components viewed as [`OsStr`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":651458,"byte_end":651529,"line_start":1581,"line_end":1581,"column_start":5,"column_end":76}},{"value":"/ slices.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":651534,"byte_end":651545,"line_start":1582,"line_end":1582,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":651550,"byte_end":651553,"line_start":1583,"line_end":1583,"column_start":5,"column_end":8}},{"value":"/ For more information about the particulars of how the path is separated","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":651558,"byte_end":651633,"line_start":1584,"line_end":1584,"column_start":5,"column_end":80}},{"value":"/ into components, see [`components`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":651638,"byte_end":651678,"line_start":1585,"line_end":1585,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":651683,"byte_end":651686,"line_start":1586,"line_end":1586,"column_start":5,"column_end":8}},{"value":"/ [`components`]: #method.components","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":651691,"byte_end":651729,"line_start":1587,"line_end":1587,"column_start":5,"column_end":43}},{"value":"/ [`OsStr`]: ../ffi/struct.OsStr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":651734,"byte_end":651773,"line_start":1588,"line_end":1588,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":651778,"byte_end":651781,"line_start":1589,"line_end":1589,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3829},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":652065,"byte_end":652072,"line_start":1599,"line_end":1599,"column_start":12,"column_end":19},"name":"display","qualname":"<Path>::display","value":"pub fn display(&Self) -> Display","parent":null,"children":[],"decl_id":null,"docs":" Returns an object that implements [`Display`] for safely printing paths\n that may contain non-Unicode data.","sig":null,"attributes":[{"value":"/ Returns an object that implements [`Display`] for safely printing paths","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":651872,"byte_end":651947,"line_start":1594,"line_end":1594,"column_start":5,"column_end":80}},{"value":"/ that may contain non-Unicode data.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":651952,"byte_end":651990,"line_start":1595,"line_end":1595,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":651995,"byte_end":651998,"line_start":1596,"line_end":1596,"column_start":5,"column_end":8}},{"value":"/ [`Display`]: ../fmt/trait.Display.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":652003,"byte_end":652045,"line_start":1597,"line_end":1597,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":652050,"byte_end":652053,"line_start":1598,"line_end":1598,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3830},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":656369,"byte_end":656382,"line_start":1723,"line_end":1723,"column_start":12,"column_end":25},"name":"into_path_buf","qualname":"<Path>::into_path_buf","value":"pub fn into_path_buf(Box<Path>) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] without copying or\n allocating.","sig":null,"attributes":[{"value":"/ Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] without copying or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":656166,"byte_end":656239,"line_start":1718,"line_end":1718,"column_start":5,"column_end":78}},{"value":"/ allocating.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":656244,"byte_end":656259,"line_start":1719,"line_end":1719,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":656264,"byte_end":656267,"line_start":1720,"line_end":1720,"column_start":5,"column_end":8}},{"value":"/ [`Box`]: ../../std/boxed/struct.Box.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":656272,"byte_end":656316,"line_start":1721,"line_end":1721,"column_start":5,"column_end":49}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":656321,"byte_end":656357,"line_start":1722,"line_end":1722,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3835},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":657111,"byte_end":657118,"line_start":1748,"line_end":1748,"column_start":12,"column_end":19},"name":"Display","qualname":"::path::Display","value":"Display {  }","parent":null,"children":[{"krate":0,"index":3837}],"decl_id":null,"docs":" Helper struct for safely printing paths with [`format!`] and `{}`.","sig":null,"attributes":[{"value":"/ Helper struct for safely printing paths with [`format!`] and `{}`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":656819,"byte_end":656889,"line_start":1742,"line_end":1742,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":656890,"byte_end":656893,"line_start":1743,"line_end":1743,"column_start":1,"column_end":4}},{"value":"/ A [`Path`] might contain non-Unicode data. This `struct` implements the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":656894,"byte_end":656969,"line_start":1744,"line_end":1744,"column_start":1,"column_end":76}},{"value":"/ [`Display`] trait in a way that mitigates that. It is created by the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":656970,"byte_end":657042,"line_start":1745,"line_end":1745,"column_start":1,"column_end":73}},{"value":"/ [`display`][`Path::display`] method on [`Path`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":657043,"byte_end":657095,"line_start":1746,"line_end":1746,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":657096,"byte_end":657099,"line_start":1747,"line_end":1747,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":3882},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":3883},{"krate":0,"index":3884},{"krate":0,"index":3885},{"krate":0,"index":3886},{"krate":0,"index":3887},{"krate":0,"index":3888},{"krate":0,"index":3889},{"krate":0,"index":3890},{"krate":0,"index":3891},{"krate":0,"index":3892},{"krate":0,"index":3893},{"krate":0,"index":3894},{"krate":0,"index":3895},{"krate":0,"index":3896},{"krate":0,"index":3897},{"krate":0,"index":3898},{"krate":0,"index":3899},{"krate":0,"index":3900},{"krate":0,"index":3901},{"krate":0,"index":3902},{"krate":0,"index":3903},{"krate":0,"index":3904},{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907},{"krate":0,"index":3908},{"krate":0,"index":3909},{"krate":0,"index":3910},{"krate":0,"index":3911},{"krate":0,"index":3912},{"krate":0,"index":3913},{"krate":0,"index":3914},{"krate":0,"index":3915},{"krate":0,"index":3916},{"krate":0,"index":3917},{"krate":0,"index":3918},{"krate":0,"index":3919},{"krate":0,"index":3920},{"krate":0,"index":3944},{"krate":0,"index":4024},{"krate":0,"index":4125},{"krate":0,"index":4196},{"krate":0,"index":4243},{"krate":0,"index":4370}],"decl_id":null,"docs":"\n The Intel(R) Software Guard Extensions SDK already supports mutex and conditional\n variable synchronization mechanisms by means of the following API and data types\n defined in the Types and Enumerations section. Some functions included in the\n trusted Thread Synchronization library may make calls outside the enclave (OCALLs).\n If you use any of the APIs below, you must first import the needed OCALL functions\n from sgx_tstd.edl. Otherwise, you will get a linker error when the enclave is\n being built; see Calling Functions outside the Enclave for additional details.\n The table below illustrates the primitives that the Intel(R) SGX Thread\n Synchronization library supports, as well as the OCALLs that each API function needs.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":662695,"byte_end":662698,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The Intel(R) Software Guard Extensions SDK already supports mutex and conditional","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":662699,"byte_end":662784,"line_start":19,"line_end":19,"column_start":1,"column_end":86}},{"value":"/ variable synchronization mechanisms by means of the following API and data types","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":662785,"byte_end":662869,"line_start":20,"line_end":20,"column_start":1,"column_end":85}},{"value":"/ defined in the Types and Enumerations section. Some functions included in the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":662870,"byte_end":662951,"line_start":21,"line_end":21,"column_start":1,"column_end":82}},{"value":"/ trusted Thread Synchronization library may make calls outside the enclave (OCALLs).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":662952,"byte_end":663039,"line_start":22,"line_end":22,"column_start":1,"column_end":88}},{"value":"/ If you use any of the APIs below, you must first import the needed OCALL functions","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663040,"byte_end":663126,"line_start":23,"line_end":23,"column_start":1,"column_end":87}},{"value":"/ from sgx_tstd.edl. Otherwise, you will get a linker error when the enclave is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663127,"byte_end":663208,"line_start":24,"line_end":24,"column_start":1,"column_end":82}},{"value":"/ being built; see Calling Functions outside the Enclave for additional details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663209,"byte_end":663291,"line_start":25,"line_end":25,"column_start":1,"column_end":83}},{"value":"/ The table below illustrates the primitives that the Intel(R) SGX Thread","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663292,"byte_end":663367,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ Synchronization library supports, as well as the OCALLs that each API function needs.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663368,"byte_end":663457,"line_start":27,"line_end":27,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mod.rs","byte_start":663458,"byte_end":663461,"line_start":28,"line_end":28,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":3925},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":665222,"byte_end":665229,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":3926},{"krate":0,"index":3927},{"krate":0,"index":3928}],"decl_id":null,"docs":" A barrier enables multiple threads to synchronize the beginning\n of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple threads to synchronize the beginning","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":665114,"byte_end":665181,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/ of some computation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":665182,"byte_end":665206,"line_start":22,"line_end":22,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":665207,"byte_end":665210,"line_start":23,"line_end":23,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":3932},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":665634,"byte_end":665651,"line_start":42,"line_end":42,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by [`wait`] when all threads in the [`Barrier`]\n have rendezvoused.","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by [`wait`] when all threads in the [`Barrier`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":665423,"byte_end":665508,"line_start":36,"line_end":36,"column_start":1,"column_end":86}},{"value":"/ have rendezvoused.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":665509,"byte_end":665531,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":665532,"byte_end":665535,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`wait`]: struct.Barrier.html#method.wait","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":665536,"byte_end":665581,"line_start":39,"line_end":39,"column_start":1,"column_end":46}},{"value":"/ [`Barrier`]: struct.Barrier.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":665582,"byte_end":665618,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":665619,"byte_end":665622,"line_start":41,"line_end":41,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":3938},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":666093,"byte_end":666096,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"pub fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of threads.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of threads.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":665813,"byte_end":665880,"line_start":51,"line_end":51,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":665885,"byte_end":665888,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 threads which call [`wait`] and then wake up","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":665893,"byte_end":665968,"line_start":53,"line_end":53,"column_start":5,"column_end":80}},{"value":"/ all threads at once when the `n`th thread calls [`wait`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":665973,"byte_end":666034,"line_start":54,"line_end":54,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":666039,"byte_end":666042,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ [`wait`]: #method.wait","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":666047,"byte_end":666073,"line_start":56,"line_end":56,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":666078,"byte_end":666081,"line_start":57,"line_end":57,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3939},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":666919,"byte_end":666923,"line_start":79,"line_end":79,"column_start":12,"column_end":16},"name":"wait","qualname":"<Barrier>::wait","value":"pub fn wait(&Self) -> BarrierWaitResult","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until all threads have rendezvoused here.","sig":null,"attributes":[{"value":"/ Blocks the current thread until all threads have rendezvoused here.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":666302,"byte_end":666373,"line_start":66,"line_end":66,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":666378,"byte_end":666381,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all threads have rendezvoused once, and can","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":666386,"byte_end":666462,"line_start":68,"line_end":68,"column_start":5,"column_end":81}},{"value":"/ be used continuously.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":666467,"byte_end":666492,"line_start":69,"line_end":69,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":666497,"byte_end":666500,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) thread will receive a [`BarrierWaitResult`] that","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":666505,"byte_end":666578,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ returns `true` from [`is_leader`] when returning from this function, and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":666583,"byte_end":666659,"line_start":72,"line_end":72,"column_start":5,"column_end":81}},{"value":"/ all other threads will receive a result that will return `false` from","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":666664,"byte_end":666737,"line_start":73,"line_end":73,"column_start":5,"column_end":78}},{"value":"/ [`is_leader`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":666742,"byte_end":666760,"line_start":74,"line_end":74,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":666765,"byte_end":666768,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`BarrierWaitResult`]: struct.BarrierWaitResult.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":666773,"byte_end":666829,"line_start":76,"line_end":76,"column_start":5,"column_end":61}},{"value":"/ [`is_leader`]: struct.BarrierWaitResult.html#method.is_leader","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":666834,"byte_end":666899,"line_start":77,"line_end":77,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":666904,"byte_end":666907,"line_start":78,"line_end":78,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3943},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":668154,"byte_end":668163,"line_start":113,"line_end":113,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"pub fn is_leader(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this thread from [`wait`] is the \"leader thread\".","sig":null,"attributes":[{"value":"/ Returns `true` if this thread from [`wait`] is the \"leader thread\".","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":667874,"byte_end":667945,"line_start":106,"line_end":106,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":667950,"byte_end":667953,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Only one thread will have `true` returned from their result, all other","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":667958,"byte_end":668032,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ threads will have `false` returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":668037,"byte_end":668076,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":668081,"byte_end":668084,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ [`wait`]: struct.Barrier.html#method.wait","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":668089,"byte_end":668134,"line_start":111,"line_end":111,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":668139,"byte_end":668142,"line_start":112,"line_end":112,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8063},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":670530,"byte_end":670547,"line_start":52,"line_end":52,"column_start":12,"column_end":29},"name":"WaitTimeoutResult","qualname":"::sync::condvar::WaitTimeoutResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type indicating whether a timed wait on a condition variable returned\n due to a time out or not.","sig":null,"attributes":[{"value":"/ A type indicating whether a timed wait on a condition variable returned","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":670247,"byte_end":670322,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"/ due to a time out or not.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":670323,"byte_end":670352,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":670353,"byte_end":670356,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ It is returned by the [`wait_timeout`] method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":670357,"byte_end":670407,"line_start":48,"line_end":48,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":670408,"byte_end":670411,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`wait_timeout`]: struct.Condvar.html#method.wait_timeout","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":670412,"byte_end":670473,"line_start":50,"line_end":50,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3967},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":670664,"byte_end":670673,"line_start":57,"line_end":57,"column_start":12,"column_end":21},"name":"timed_out","qualname":"<WaitTimeoutResult>::timed_out","value":"pub fn timed_out(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the wait was known to have timed out.","sig":null,"attributes":[{"value":"/ Returns `true` if the wait was known to have timed out.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":670585,"byte_end":670644,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":670649,"byte_end":670652,"line_start":56,"line_end":56,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3968},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":670726,"byte_end":670742,"line_start":62,"line_end":62,"column_start":12,"column_end":28},"name":"SgxThreadCondvar","qualname":"::sync::condvar::SgxThreadCondvar","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3974},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":670892,"byte_end":670895,"line_start":68,"line_end":68,"column_start":18,"column_end":21},"name":"new","qualname":"<SgxThreadCondvar>::new","value":"pub const fn new() -> SgxThreadCondvar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3975},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":671014,"byte_end":671018,"line_start":73,"line_end":73,"column_start":19,"column_end":23},"name":"wait","qualname":"<SgxThreadCondvar>::wait","value":"pub unsafe fn wait(&Self, &SgxThreadMutex) -> SysError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":670986,"byte_end":670995,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3976},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":671142,"byte_end":671154,"line_start":78,"line_end":78,"column_start":19,"column_end":31},"name":"wait_timeout","qualname":"<SgxThreadCondvar>::wait_timeout","value":"pub unsafe fn wait_timeout(&Self, &SgxThreadMutex, Duration) -> SysError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":671114,"byte_end":671123,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3977},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":671306,"byte_end":671312,"line_start":83,"line_end":83,"column_start":19,"column_end":25},"name":"signal","qualname":"<SgxThreadCondvar>::signal","value":"pub unsafe fn signal(&Self) -> SysError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":671278,"byte_end":671287,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3978},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":671397,"byte_end":671406,"line_start":88,"line_end":88,"column_start":19,"column_end":28},"name":"broadcast","qualname":"<SgxThreadCondvar>::broadcast","value":"pub unsafe fn broadcast(&Self) -> SysError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":671369,"byte_end":671378,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3979},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":671494,"byte_end":671504,"line_start":93,"line_end":93,"column_start":19,"column_end":29},"name":"notify_one","qualname":"<SgxThreadCondvar>::notify_one","value":"pub unsafe fn notify_one(&Self) -> SysError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":671466,"byte_end":671475,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3980},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":671587,"byte_end":671597,"line_start":98,"line_end":98,"column_start":19,"column_end":29},"name":"notify_all","qualname":"<SgxThreadCondvar>::notify_all","value":"pub unsafe fn notify_all(&Self) -> SysError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":671559,"byte_end":671568,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3981},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":671683,"byte_end":671690,"line_start":103,"line_end":103,"column_start":19,"column_end":26},"name":"destroy","qualname":"<SgxThreadCondvar>::destroy","value":"pub unsafe fn destroy(&Self) -> SysError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":671655,"byte_end":671664,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3982},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":672693,"byte_end":672703,"line_start":124,"line_end":124,"column_start":12,"column_end":22},"name":"SgxCondvar","qualname":"::sync::condvar::SgxCondvar","value":"SgxCondvar {  }","parent":null,"children":[{"krate":0,"index":3983},{"krate":0,"index":3984}],"decl_id":null,"docs":" A Condition Variable","sig":null,"attributes":[{"value":"/ A Condition Variable","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":671746,"byte_end":671770,"line_start":108,"line_end":108,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":671771,"byte_end":671774,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ Condition variables represent the ability to block a thread such that it","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":671775,"byte_end":671851,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ consumes no CPU time while waiting for an event to occur. Condition","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":671852,"byte_end":671923,"line_start":111,"line_end":111,"column_start":1,"column_end":72}},{"value":"/ variables are typically associated with a boolean predicate (a condition)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":671924,"byte_end":672001,"line_start":112,"line_end":112,"column_start":1,"column_end":78}},{"value":"/ and a mutex. The predicate is always verified inside of the mutex before","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":672002,"byte_end":672078,"line_start":113,"line_end":113,"column_start":1,"column_end":77}},{"value":"/ determining that a thread must block.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":672079,"byte_end":672120,"line_start":114,"line_end":114,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":672121,"byte_end":672124,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ Functions in this module will block the current **thread** of execution and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":672125,"byte_end":672204,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"/ are bindings to system-provided condition variables where possible. Note","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":672205,"byte_end":672281,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ that this module places one additional restriction over the system condition","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":672282,"byte_end":672362,"line_start":118,"line_end":118,"column_start":1,"column_end":81}},{"value":"/ variables: each condvar can be used with precisely one mutex at runtime. Any","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":672363,"byte_end":672443,"line_start":119,"line_end":119,"column_start":1,"column_end":81}},{"value":"/ attempt to use multiple mutexes on the same condition variable will result","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":672444,"byte_end":672522,"line_start":120,"line_end":120,"column_start":1,"column_end":79}},{"value":"/ in a runtime panic. If this is not desired, then the unsafe primitives in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":672523,"byte_end":672600,"line_start":121,"line_end":121,"column_start":1,"column_end":78}},{"value":"/ `sys` do not have this restriction but may result in undefined behavior.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":672601,"byte_end":672677,"line_start":122,"line_end":122,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":672678,"byte_end":672681,"line_start":123,"line_end":123,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":3986},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":672898,"byte_end":672901,"line_start":133,"line_end":133,"column_start":12,"column_end":15},"name":"new","qualname":"<SgxCondvar>::new","value":"pub fn new() -> SgxCondvar","parent":null,"children":[],"decl_id":null,"docs":"\n Creates a new condition variable which is ready to be waited on and notified.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":672789,"byte_end":672792,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Creates a new condition variable which is ready to be waited on and notified.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":672797,"byte_end":672878,"line_start":131,"line_end":131,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":672883,"byte_end":672886,"line_start":132,"line_end":132,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3987},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":674432,"byte_end":674436,"line_start":166,"line_end":166,"column_start":12,"column_end":16},"name":"wait","qualname":"<SgxCondvar>::wait","value":"pub fn wait<'a, T>(&Self, SgxMutexGuard) -> LockResult<SgxMutexGuard>","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until this condition variable receives a\n notification.","sig":null,"attributes":[{"value":"/ Blocks the current thread until this condition variable receives a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":673056,"byte_end":673126,"line_start":140,"line_end":140,"column_start":5,"column_end":75}},{"value":"/ notification.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":673131,"byte_end":673148,"line_start":141,"line_end":141,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":673153,"byte_end":673156,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This function will atomically unlock the mutex specified (represented by","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":673161,"byte_end":673237,"line_start":143,"line_end":143,"column_start":5,"column_end":81}},{"value":"/ `guard`) and block the current thread. This means that any calls","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":673242,"byte_end":673310,"line_start":144,"line_end":144,"column_start":5,"column_end":73}},{"value":"/ to [`notify_one`] or [`notify_all`] which happen logically after the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":673315,"byte_end":673387,"line_start":145,"line_end":145,"column_start":5,"column_end":77}},{"value":"/ mutex is unlocked are candidates to wake this thread up. When this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":673392,"byte_end":673462,"line_start":146,"line_end":146,"column_start":5,"column_end":75}},{"value":"/ function call returns, the lock specified will have been re-acquired.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":673467,"byte_end":673540,"line_start":147,"line_end":147,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":673545,"byte_end":673548,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Note that this function is susceptible to spurious wakeups. Condition","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":673553,"byte_end":673626,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ variables normally have a boolean predicate associated with them, and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":673631,"byte_end":673704,"line_start":150,"line_end":150,"column_start":5,"column_end":78}},{"value":"/ the predicate must always be checked each time this function returns to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":673709,"byte_end":673784,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/ protect against spurious wakeups.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":673789,"byte_end":673826,"line_start":152,"line_end":152,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":673831,"byte_end":673834,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":673839,"byte_end":673851,"line_start":154,"line_end":154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":673856,"byte_end":673859,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the mutex being waited on is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":673864,"byte_end":673934,"line_start":156,"line_end":156,"column_start":5,"column_end":75}},{"value":"/ poisoned when this thread re-acquires the lock. For more information,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":673939,"byte_end":674012,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ see information about [poisoning] on the [`SgxMutex`] type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":674017,"byte_end":674080,"line_start":158,"line_end":158,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":674085,"byte_end":674088,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":674093,"byte_end":674105,"line_start":160,"line_end":160,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":674110,"byte_end":674113,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ This function will [`panic!`] if it is used with more than one mutex","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":674118,"byte_end":674190,"line_start":162,"line_end":162,"column_start":5,"column_end":77}},{"value":"/ over time. Each condition variable is dynamically bound to exactly one","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":674195,"byte_end":674269,"line_start":163,"line_end":163,"column_start":5,"column_end":79}},{"value":"/ mutex to ensure defined behavior across platforms. If this functionality","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":674274,"byte_end":674350,"line_start":164,"line_end":164,"column_start":5,"column_end":81}},{"value":"/ is not desired, then unsafe primitives in `sys` are provided.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":674355,"byte_end":674420,"line_start":165,"line_end":165,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3990},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":675708,"byte_end":675718,"line_start":193,"line_end":193,"column_start":12,"column_end":22},"name":"wait_until","qualname":"<SgxCondvar>::wait_until","value":"pub fn wait_until<'a, T, F>(&Self, SgxMutexGuard, F)\n-> LockResult<SgxMutexGuard> where F: FnMut(&mut T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until this condition variable receives a\n notification and the required condition is met. Spurious wakeups are\n ignored and this function will only return once the condition has been\n met.","sig":null,"attributes":[{"value":"/ Blocks the current thread until this condition variable receives a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":674806,"byte_end":674876,"line_start":176,"line_end":176,"column_start":5,"column_end":75}},{"value":"/ notification and the required condition is met. Spurious wakeups are","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":674881,"byte_end":674953,"line_start":177,"line_end":177,"column_start":5,"column_end":77}},{"value":"/ ignored and this function will only return once the condition has been","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":674958,"byte_end":675032,"line_start":178,"line_end":178,"column_start":5,"column_end":79}},{"value":"/ met.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":675037,"byte_end":675045,"line_start":179,"line_end":179,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":675050,"byte_end":675053,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This function will atomically unlock the mutex specified (represented by","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":675058,"byte_end":675134,"line_start":181,"line_end":181,"column_start":5,"column_end":81}},{"value":"/ `guard`) and block the current thread. This means that any calls","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":675139,"byte_end":675207,"line_start":182,"line_end":182,"column_start":5,"column_end":73}},{"value":"/ to [`notify_one`] or [`notify_all`] which happen logically after the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":675212,"byte_end":675284,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/ mutex is unlocked are candidates to wake this thread up. When this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":675289,"byte_end":675359,"line_start":184,"line_end":184,"column_start":5,"column_end":75}},{"value":"/ function call returns, the lock specified will have been re-acquired.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":675364,"byte_end":675437,"line_start":185,"line_end":185,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":675442,"byte_end":675445,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":675450,"byte_end":675462,"line_start":187,"line_end":187,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":675467,"byte_end":675470,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the mutex being waited on is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":675475,"byte_end":675545,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/ poisoned when this thread re-acquires the lock. For more information,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":675550,"byte_end":675623,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ see information about [poisoning] on the [`Mutex`] type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":675628,"byte_end":675688,"line_start":191,"line_end":191,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":675693,"byte_end":675696,"line_start":192,"line_end":192,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3994},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":677008,"byte_end":677018,"line_start":227,"line_end":227,"column_start":12,"column_end":22},"name":"wait_while","qualname":"<SgxCondvar>::wait_while","value":"pub fn wait_while<'a, T, F>(&Self, SgxMutexGuard, F)\n-> LockResult<SgxMutexGuard> where F: FnMut(&mut T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until this condition variable receives a\n notification and the provided condition is false.","sig":null,"attributes":[{"value":"/ Blocks the current thread until this condition variable receives a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":676021,"byte_end":676091,"line_start":207,"line_end":207,"column_start":5,"column_end":75}},{"value":"/ notification and the provided condition is false.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":676096,"byte_end":676149,"line_start":208,"line_end":208,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":676154,"byte_end":676157,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ This function will atomically unlock the mutex specified (represented by","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":676162,"byte_end":676238,"line_start":210,"line_end":210,"column_start":5,"column_end":81}},{"value":"/ `guard`) and block the current thread. This means that any calls","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":676243,"byte_end":676311,"line_start":211,"line_end":211,"column_start":5,"column_end":73}},{"value":"/ to [`notify_one`] or [`notify_all`] which happen logically after the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":676316,"byte_end":676388,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ mutex is unlocked are candidates to wake this thread up. When this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":676393,"byte_end":676463,"line_start":213,"line_end":213,"column_start":5,"column_end":75}},{"value":"/ function call returns, the lock specified will have been re-acquired.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":676468,"byte_end":676541,"line_start":214,"line_end":214,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":676546,"byte_end":676549,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":676554,"byte_end":676566,"line_start":216,"line_end":216,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":676571,"byte_end":676574,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the mutex being waited on is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":676579,"byte_end":676649,"line_start":218,"line_end":218,"column_start":5,"column_end":75}},{"value":"/ poisoned when this thread re-acquires the lock. For more information,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":676654,"byte_end":676727,"line_start":219,"line_end":219,"column_start":5,"column_end":78}},{"value":"/ see information about [poisoning] on the [`Mutex`] type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":676732,"byte_end":676792,"line_start":220,"line_end":220,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":676797,"byte_end":676800,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ [`notify_one`]: #method.notify_one","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":676805,"byte_end":676843,"line_start":222,"line_end":222,"column_start":5,"column_end":43}},{"value":"/ [`notify_all`]: #method.notify_all","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":676848,"byte_end":676886,"line_start":223,"line_end":223,"column_start":5,"column_end":43}},{"value":"/ [poisoning]: ../sync/struct.Mutex.html#poisoning","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":676891,"byte_end":676943,"line_start":224,"line_end":224,"column_start":5,"column_end":57}},{"value":"/ [`Mutex`]: ../sync/struct.Mutex.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":676948,"byte_end":676988,"line_start":225,"line_end":225,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":676993,"byte_end":676996,"line_start":226,"line_end":226,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3998},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":678315,"byte_end":678330,"line_start":263,"line_end":263,"column_start":12,"column_end":27},"name":"wait_timeout_ms","qualname":"<SgxCondvar>::wait_timeout_ms","value":"pub fn wait_timeout_ms<'a, T>(&Self, SgxMutexGuard, u32)\n-> LockResult<(SgxMutexGuard, bool)>","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after a\n specified duration.","sig":null,"attributes":[{"value":"/ Waits on this condition variable for a notification, timing out after a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":677321,"byte_end":677396,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/ specified duration.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":677401,"byte_end":677424,"line_start":242,"line_end":242,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":677429,"byte_end":677432,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ The semantics of this function are equivalent to [`wait`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":677437,"byte_end":677498,"line_start":244,"line_end":244,"column_start":5,"column_end":66}},{"value":"/ except that the thread will be blocked for roughly no longer","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":677503,"byte_end":677567,"line_start":245,"line_end":245,"column_start":5,"column_end":69}},{"value":"/ than `ms` milliseconds. This method should not be used for","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":677572,"byte_end":677634,"line_start":246,"line_end":246,"column_start":5,"column_end":67}},{"value":"/ precise timing due to anomalies such as preemption or platform","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":677639,"byte_end":677705,"line_start":247,"line_end":247,"column_start":5,"column_end":71}},{"value":"/ differences that may not cause the maximum amount of time","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":677710,"byte_end":677771,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ waited to be precisely `ms`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":677776,"byte_end":677808,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":677813,"byte_end":677816,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Note that the best effort is made to ensure that the time waited is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":677821,"byte_end":677892,"line_start":251,"line_end":251,"column_start":5,"column_end":76}},{"value":"/ measured with a monotonic clock, and not affected by the changes made to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":677897,"byte_end":677973,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/ the system time.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":677978,"byte_end":677998,"line_start":253,"line_end":253,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":678003,"byte_end":678006,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ The returned boolean is `false` only if the timeout is known","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":678011,"byte_end":678075,"line_start":255,"line_end":255,"column_start":5,"column_end":69}},{"value":"/ to have elapsed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":678080,"byte_end":678100,"line_start":256,"line_end":256,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":678105,"byte_end":678108,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ Like [`wait`], the lock specified will be re-acquired when this function","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":678113,"byte_end":678189,"line_start":258,"line_end":258,"column_start":5,"column_end":81}},{"value":"/ returns, regardless of whether the timeout elapsed or not.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":678194,"byte_end":678256,"line_start":259,"line_end":259,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":678261,"byte_end":678264,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ [`wait`]: #method.wait","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":678269,"byte_end":678295,"line_start":261,"line_end":261,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":678300,"byte_end":678303,"line_start":262,"line_end":262,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4002},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":680285,"byte_end":680297,"line_start":302,"line_end":302,"column_start":12,"column_end":24},"name":"wait_timeout","qualname":"<SgxCondvar>::wait_timeout","value":"pub fn wait_timeout<'a, T>(&Self, SgxMutexGuard, Duration)\n-> LockResult<(SgxMutexGuard, WaitTimeoutResult)>","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after a\n specified duration.","sig":null,"attributes":[{"value":"/ Waits on this condition variable for a notification, timing out after a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":678611,"byte_end":678686,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/ specified duration.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":678691,"byte_end":678714,"line_start":273,"line_end":273,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":678719,"byte_end":678722,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ The semantics of this function are equivalent to [`wait`] except that","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":678727,"byte_end":678800,"line_start":275,"line_end":275,"column_start":5,"column_end":78}},{"value":"/ the thread will be blocked for roughly no longer than `dur`. This","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":678805,"byte_end":678874,"line_start":276,"line_end":276,"column_start":5,"column_end":74}},{"value":"/ method should not be used for precise timing due to anomalies such as","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":678879,"byte_end":678952,"line_start":277,"line_end":277,"column_start":5,"column_end":78}},{"value":"/ preemption or platform differences that may not cause the maximum","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":678957,"byte_end":679026,"line_start":278,"line_end":278,"column_start":5,"column_end":74}},{"value":"/ amount of time waited to be precisely `dur`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":679031,"byte_end":679079,"line_start":279,"line_end":279,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":679084,"byte_end":679087,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Note that the best effort is made to ensure that the time waited is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":679092,"byte_end":679163,"line_start":281,"line_end":281,"column_start":5,"column_end":76}},{"value":"/ measured with a monotonic clock, and not affected by the changes made to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":679168,"byte_end":679244,"line_start":282,"line_end":282,"column_start":5,"column_end":81}},{"value":"/ the system time. This function is susceptible to spurious wakeups.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":679249,"byte_end":679319,"line_start":283,"line_end":283,"column_start":5,"column_end":75}},{"value":"/ Condition variables normally have a boolean predicate associated with","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":679324,"byte_end":679397,"line_start":284,"line_end":284,"column_start":5,"column_end":78}},{"value":"/ them, and the predicate must always be checked each time this function","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":679402,"byte_end":679476,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ returns to protect against spurious wakeups. Additionally, it is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":679481,"byte_end":679549,"line_start":286,"line_end":286,"column_start":5,"column_end":73}},{"value":"/ typically desirable for the timeout to not exceed some duration in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":679554,"byte_end":679624,"line_start":287,"line_end":287,"column_start":5,"column_end":75}},{"value":"/ spite of spurious wakes, thus the sleep-duration is decremented by the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":679629,"byte_end":679703,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ amount slept. Alternatively, use the `wait_timeout_while` method","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":679708,"byte_end":679776,"line_start":289,"line_end":289,"column_start":5,"column_end":73}},{"value":"/ to wait with a timeout while a predicate is true.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":679781,"byte_end":679834,"line_start":290,"line_end":290,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":679839,"byte_end":679842,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ The returned [`WaitTimeoutResult`] value indicates if the timeout is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":679847,"byte_end":679919,"line_start":292,"line_end":292,"column_start":5,"column_end":77}},{"value":"/ known to have elapsed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":679924,"byte_end":679950,"line_start":293,"line_end":293,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":679955,"byte_end":679958,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Like [`wait`], the lock specified will be re-acquired when this function","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":679963,"byte_end":680039,"line_start":295,"line_end":295,"column_start":5,"column_end":81}},{"value":"/ returns, regardless of whether the timeout elapsed or not.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":680044,"byte_end":680106,"line_start":296,"line_end":296,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":680111,"byte_end":680114,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [`wait`]: #method.wait","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":680119,"byte_end":680145,"line_start":298,"line_end":298,"column_start":5,"column_end":31}},{"value":"/ [`wait_timeout_while`]: #method.wait_timeout_while","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":680150,"byte_end":680204,"line_start":299,"line_end":299,"column_start":5,"column_end":59}},{"value":"/ [`WaitTimeoutResult`]: struct.WaitTimeoutResult.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":680209,"byte_end":680265,"line_start":300,"line_end":300,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":680270,"byte_end":680273,"line_start":301,"line_end":301,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4005},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":682067,"byte_end":682085,"line_start":340,"line_end":340,"column_start":12,"column_end":30},"name":"wait_timeout_until","qualname":"<SgxCondvar>::wait_timeout_until","value":"pub fn wait_timeout_until<'a, T, F>(&Self, SgxMutexGuard, Duration, F)\n-> LockResult<(SgxMutexGuard, WaitTimeoutResult)> where F: FnMut(&mut T) ->\nbool","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after a\n specified duration.  Spurious wakes will not cause this function to\n return.","sig":null,"attributes":[{"value":"/ Waits on this condition variable for a notification, timing out after a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":680850,"byte_end":680925,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ specified duration.  Spurious wakes will not cause this function to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":680930,"byte_end":681001,"line_start":317,"line_end":317,"column_start":5,"column_end":76}},{"value":"/ return.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":681006,"byte_end":681017,"line_start":318,"line_end":318,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":681022,"byte_end":681025,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ The semantics of this function are equivalent to [`wait_until`] except","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":681030,"byte_end":681104,"line_start":320,"line_end":320,"column_start":5,"column_end":79}},{"value":"/ that the thread will be blocked for roughly no longer than `dur`. This","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":681109,"byte_end":681183,"line_start":321,"line_end":321,"column_start":5,"column_end":79}},{"value":"/ method should not be used for precise timing due to anomalies such as","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":681188,"byte_end":681261,"line_start":322,"line_end":322,"column_start":5,"column_end":78}},{"value":"/ preemption or platform differences that may not cause the maximum","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":681266,"byte_end":681335,"line_start":323,"line_end":323,"column_start":5,"column_end":74}},{"value":"/ amount of time waited to be precisely `dur`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":681340,"byte_end":681388,"line_start":324,"line_end":324,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":681393,"byte_end":681396,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ Note that the best effort is made to ensure that the time waited is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":681401,"byte_end":681472,"line_start":326,"line_end":326,"column_start":5,"column_end":76}},{"value":"/ measured with a monotonic clock, and not affected by the changes made to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":681477,"byte_end":681553,"line_start":327,"line_end":327,"column_start":5,"column_end":81}},{"value":"/ the system time.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":681558,"byte_end":681578,"line_start":328,"line_end":328,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":681583,"byte_end":681586,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ The returned [`WaitTimeoutResult`] value indicates if the timeout is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":681591,"byte_end":681663,"line_start":330,"line_end":330,"column_start":5,"column_end":77}},{"value":"/ known to have elapsed without the condition being met.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":681668,"byte_end":681726,"line_start":331,"line_end":331,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":681731,"byte_end":681734,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Like [`wait_until`], the lock specified will be re-acquired when this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":681739,"byte_end":681812,"line_start":333,"line_end":333,"column_start":5,"column_end":78}},{"value":"/ function returns, regardless of whether the timeout elapsed or not.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":681817,"byte_end":681888,"line_start":334,"line_end":334,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":681893,"byte_end":681896,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [`wait_until`]: #method.wait_until","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":681901,"byte_end":681939,"line_start":336,"line_end":336,"column_start":5,"column_end":43}},{"value":"/ [`wait_timeout`]: #method.wait_timeout","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":681944,"byte_end":681986,"line_start":337,"line_end":337,"column_start":5,"column_end":47}},{"value":"/ [`WaitTimeoutResult`]: struct.WaitTimeoutResult.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":681991,"byte_end":682047,"line_start":338,"line_end":338,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":682052,"byte_end":682055,"line_start":339,"line_end":339,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4009},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":683881,"byte_end":683899,"line_start":384,"line_end":384,"column_start":12,"column_end":30},"name":"wait_timeout_while","qualname":"<SgxCondvar>::wait_timeout_while","value":"pub fn wait_timeout_while<'a, T, F>(&Self, SgxMutexGuard, Duration, F)\n-> LockResult<(SgxMutexGuard, WaitTimeoutResult)> where F: FnMut(&mut T) ->\nbool","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after a\n specified duration.","sig":null,"attributes":[{"value":"/ Waits on this condition variable for a notification, timing out after a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":682728,"byte_end":682803,"line_start":361,"line_end":361,"column_start":5,"column_end":80}},{"value":"/ specified duration.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":682808,"byte_end":682831,"line_start":362,"line_end":362,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":682836,"byte_end":682839,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ The semantics of this function are equivalent to [`wait_while`] except","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":682844,"byte_end":682918,"line_start":364,"line_end":364,"column_start":5,"column_end":79}},{"value":"/ that the thread will be blocked for roughly no longer than `dur`. This","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":682923,"byte_end":682997,"line_start":365,"line_end":365,"column_start":5,"column_end":79}},{"value":"/ method should not be used for precise timing due to anomalies such as","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":683002,"byte_end":683075,"line_start":366,"line_end":366,"column_start":5,"column_end":78}},{"value":"/ preemption or platform differences that may not cause the maximum","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":683080,"byte_end":683149,"line_start":367,"line_end":367,"column_start":5,"column_end":74}},{"value":"/ amount of time waited to be precisely `dur`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":683154,"byte_end":683202,"line_start":368,"line_end":368,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":683207,"byte_end":683210,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ Note that the best effort is made to ensure that the time waited is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":683215,"byte_end":683286,"line_start":370,"line_end":370,"column_start":5,"column_end":76}},{"value":"/ measured with a monotonic clock, and not affected by the changes made to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":683291,"byte_end":683367,"line_start":371,"line_end":371,"column_start":5,"column_end":81}},{"value":"/ the system time.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":683372,"byte_end":683392,"line_start":372,"line_end":372,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":683397,"byte_end":683400,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ The returned [`WaitTimeoutResult`] value indicates if the timeout is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":683405,"byte_end":683477,"line_start":374,"line_end":374,"column_start":5,"column_end":77}},{"value":"/ known to have elapsed without the condition being met.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":683482,"byte_end":683540,"line_start":375,"line_end":375,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":683545,"byte_end":683548,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Like [`wait_while`], the lock specified will be re-acquired when this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":683553,"byte_end":683626,"line_start":377,"line_end":377,"column_start":5,"column_end":78}},{"value":"/ function returns, regardless of whether the timeout elapsed or not.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":683631,"byte_end":683702,"line_start":378,"line_end":378,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":683707,"byte_end":683710,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ [`wait_while`]: #method.wait_while","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":683715,"byte_end":683753,"line_start":380,"line_end":380,"column_start":5,"column_end":43}},{"value":"/ [`wait_timeout`]: #method.wait_timeout","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":683758,"byte_end":683800,"line_start":381,"line_end":381,"column_start":5,"column_end":47}},{"value":"/ [`WaitTimeoutResult`]: struct.WaitTimeoutResult.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":683805,"byte_end":683861,"line_start":382,"line_end":382,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":683866,"byte_end":683869,"line_start":383,"line_end":383,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4013},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":684900,"byte_end":684906,"line_start":413,"line_end":413,"column_start":12,"column_end":18},"name":"signal","qualname":"<SgxCondvar>::signal","value":"pub fn signal(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Wakes up one blocked thread on this condvar.","sig":null,"attributes":[{"value":"/ Wakes up one blocked thread on this condvar.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":684569,"byte_end":684617,"line_start":406,"line_end":406,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":684622,"byte_end":684625,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ If there is a blocked thread on this condition variable, then it will","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":684630,"byte_end":684703,"line_start":408,"line_end":408,"column_start":5,"column_end":78}},{"value":"/ be woken up from its call to [`wait`] or [`wait_timeout`]. Calls to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":684708,"byte_end":684779,"line_start":409,"line_end":409,"column_start":5,"column_end":76}},{"value":"/ `notify_one` are not buffered in any way.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":684784,"byte_end":684829,"line_start":410,"line_end":410,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":684834,"byte_end":684837,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ To wake up all threads, see [`broadcast`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":684842,"byte_end":684888,"line_start":412,"line_end":412,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4014},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":685259,"byte_end":685268,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<SgxCondvar>::broadcast","value":"pub fn broadcast(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Wakes up all blocked threads on this condvar.","sig":null,"attributes":[{"value":"/ Wakes up all blocked threads on this condvar.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":684967,"byte_end":685016,"line_start":417,"line_end":417,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":685021,"byte_end":685024,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ This method will ensure that any current waiters on the condition","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":685029,"byte_end":685098,"line_start":419,"line_end":419,"column_start":5,"column_end":74}},{"value":"/ variable are awoken. Calls to `broadcast()` are not buffered in any","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":685103,"byte_end":685174,"line_start":420,"line_end":420,"column_start":5,"column_end":76}},{"value":"/ way.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":685179,"byte_end":685187,"line_start":421,"line_end":421,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":685192,"byte_end":685195,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ To wake up only one thread, see [`signal`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":685200,"byte_end":685247,"line_start":423,"line_end":423,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4015},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":685560,"byte_end":685570,"line_start":437,"line_end":437,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<SgxCondvar>::notify_one","value":"pub fn notify_one(&Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":685539,"byte_end":685548,"line_start":436,"line_end":436,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4016},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":685634,"byte_end":685644,"line_start":442,"line_end":442,"column_start":12,"column_end":22},"name":"notify_all","qualname":"<SgxCondvar>::notify_all","value":"pub fn notify_all(&Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":685613,"byte_end":685622,"line_start":441,"line_end":441,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4040},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":688827,"byte_end":688841,"line_start":40,"line_end":40,"column_start":12,"column_end":26},"name":"SgxThreadMutex","qualname":"::sync::mutex::SgxThreadMutex","value":"","parent":null,"children":[],"decl_id":null,"docs":" The structure of sgx mutex.\n","sig":null,"attributes":[{"value":"/ The structure of sgx mutex.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":688784,"byte_end":688815,"line_start":39,"line_end":39,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4046},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":690015,"byte_end":690018,"line_start":69,"line_end":69,"column_start":18,"column_end":21},"name":"new","qualname":"<SgxThreadMutex>::new","value":"pub const fn new() -> SgxThreadMutex","parent":null,"children":[],"decl_id":null,"docs":"\n The function initializes a trusted mutex object within the enclave.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":688970,"byte_end":688973,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The function initializes a trusted mutex object within the enclave.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":688978,"byte_end":689049,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":689054,"byte_end":689057,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":689062,"byte_end":689079,"line_start":49,"line_end":49,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":689084,"byte_end":689087,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ When a thread creates a mutex within an enclave, sgx_thread_mutex_","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":689092,"byte_end":689162,"line_start":51,"line_end":51,"column_start":5,"column_end":75}},{"value":"/ init simply initializes the various fields of the mutex object to indicate that","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":689167,"byte_end":689250,"line_start":52,"line_end":52,"column_start":5,"column_end":88}},{"value":"/ the mutex is available. rsgx_thread_mutex_init creates a non-recursive","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":689255,"byte_end":689329,"line_start":53,"line_end":53,"column_start":5,"column_end":79}},{"value":"/ mutex. The results of using a mutex in a lock or unlock operation before it has","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":689334,"byte_end":689417,"line_start":54,"line_end":54,"column_start":5,"column_end":88}},{"value":"/ been fully initialized (for example, the function call to rsgx_thread_mutex_","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":689422,"byte_end":689502,"line_start":55,"line_end":55,"column_start":5,"column_end":85}},{"value":"/ init returns) are undefined. To avoid race conditions in the initialization of a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":689507,"byte_end":689591,"line_start":56,"line_end":56,"column_start":5,"column_end":89}},{"value":"/ trusted mutex, it is recommended statically initializing the mutex with the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":689596,"byte_end":689675,"line_start":57,"line_end":57,"column_start":5,"column_end":84}},{"value":"/ macro SGX_THREAD_MUTEX_INITIALIZER, SGX_THREAD_NON_RECURSIVE_MUTEX_INITIALIZER ,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":689680,"byte_end":689764,"line_start":58,"line_end":58,"column_start":5,"column_end":89}},{"value":"/ of, or SGX_THREAD_RECURSIVE_MUTEX_INITIALIZER instead.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":689769,"byte_end":689827,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":689832,"byte_end":689835,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":689840,"byte_end":689858,"line_start":61,"line_end":61,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":689863,"byte_end":689866,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Library: libsgx_tstdc.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":689871,"byte_end":689898,"line_start":63,"line_end":63,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":689903,"byte_end":689906,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":689911,"byte_end":689929,"line_start":65,"line_end":65,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":689934,"byte_end":689937,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ The trusted mutex object to be initialized.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":689942,"byte_end":689989,"line_start":67,"line_end":67,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":689994,"byte_end":689997,"line_start":68,"line_end":68,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4047},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691773,"byte_end":691777,"line_start":109,"line_end":109,"column_start":19,"column_end":23},"name":"lock","qualname":"<SgxThreadMutex>::lock","value":"pub unsafe fn lock(&Self) -> SysError","parent":null,"children":[],"decl_id":null,"docs":"\n The function locks a trusted mutex object within an enclave.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":690160,"byte_end":690163,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ The function locks a trusted mutex object within an enclave.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":690168,"byte_end":690232,"line_start":74,"line_end":74,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":690237,"byte_end":690240,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":690245,"byte_end":690262,"line_start":76,"line_end":76,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":690267,"byte_end":690270,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ To acquire a mutex, a thread first needs to acquire the corresponding spin","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":690275,"byte_end":690353,"line_start":78,"line_end":78,"column_start":5,"column_end":83}},{"value":"/ lock. After the spin lock is acquired, the thread checks whether the mutex is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":690358,"byte_end":690439,"line_start":79,"line_end":79,"column_start":5,"column_end":86}},{"value":"/ available. If the queue is empty or the thread is at the head of the queue the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":690444,"byte_end":690526,"line_start":80,"line_end":80,"column_start":5,"column_end":87}},{"value":"/ thread will now become the owner of the mutex. To confirm its ownership, the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":690531,"byte_end":690611,"line_start":81,"line_end":81,"column_start":5,"column_end":85}},{"value":"/ thread updates the refcount and owner fields. If the mutex is not available, the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":690616,"byte_end":690700,"line_start":82,"line_end":82,"column_start":5,"column_end":89}},{"value":"/ thread searches the queue. If the thread is already in the queue, but not at the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":690705,"byte_end":690789,"line_start":83,"line_end":83,"column_start":5,"column_end":89}},{"value":"/ head, it means that the thread has previously tried to lock the mutex, but it","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":690794,"byte_end":690875,"line_start":84,"line_end":84,"column_start":5,"column_end":86}},{"value":"/ did not succeed and had to wait outside the enclave and it has been","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":690880,"byte_end":690951,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ awakened unexpectedly. When this happens, the thread makes an OCALL and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":690956,"byte_end":691031,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ simply goes back to sleep. If the thread is trying to lock the mutex for the first","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691036,"byte_end":691122,"line_start":87,"line_end":87,"column_start":5,"column_end":91}},{"value":"/ time, it will update the waiting queue and make an OCALL to get suspended.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691127,"byte_end":691205,"line_start":88,"line_end":88,"column_start":5,"column_end":83}},{"value":"/ Note that threads release the spin lock after acquiring the mutex or before","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691210,"byte_end":691289,"line_start":89,"line_end":89,"column_start":5,"column_end":84}},{"value":"/ leaving the enclave.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691294,"byte_end":691318,"line_start":90,"line_end":90,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691323,"byte_end":691326,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ **Note**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691331,"byte_end":691343,"line_start":92,"line_end":92,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691348,"byte_end":691351,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ A thread should not exit an enclave returning from a root ECALL after acquiring","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691356,"byte_end":691439,"line_start":94,"line_end":94,"column_start":5,"column_end":88}},{"value":"/ the ownership of a mutex. Do not split the critical section protected by a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691444,"byte_end":691522,"line_start":95,"line_end":95,"column_start":5,"column_end":83}},{"value":"/ mutex across root ECALLs.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691527,"byte_end":691556,"line_start":96,"line_end":96,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691561,"byte_end":691564,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691569,"byte_end":691587,"line_start":98,"line_end":98,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691592,"byte_end":691595,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Library: libsgx_tstdc.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691600,"byte_end":691627,"line_start":100,"line_end":100,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691632,"byte_end":691635,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691640,"byte_end":691652,"line_start":102,"line_end":102,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691657,"byte_end":691660,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ **EINVAL**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691665,"byte_end":691679,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691684,"byte_end":691687,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ The trusted mutex object is invalid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691692,"byte_end":691732,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691737,"byte_end":691740,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691745,"byte_end":691754,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4048},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692973,"byte_end":692981,"line_start":146,"line_end":146,"column_start":19,"column_end":27},"name":"try_lock","qualname":"<SgxThreadMutex>::try_lock","value":"pub unsafe fn try_lock(&Self) -> SysError","parent":null,"children":[],"decl_id":null,"docs":"\n The function tries to lock a trusted mutex object within an enclave.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691832,"byte_end":691835,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ The function tries to lock a trusted mutex object within an enclave.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691840,"byte_end":691912,"line_start":114,"line_end":114,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691917,"byte_end":691920,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691925,"byte_end":691942,"line_start":116,"line_end":116,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691947,"byte_end":691950,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ A thread may check the status of the mutex, which implies acquiring the spin","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":691955,"byte_end":692035,"line_start":118,"line_end":118,"column_start":5,"column_end":85}},{"value":"/ lock and verifying that the mutex is available and that the queue is empty or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692040,"byte_end":692121,"line_start":119,"line_end":119,"column_start":5,"column_end":86}},{"value":"/ the thread is at the head of the queue. When this happens, the thread","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692126,"byte_end":692199,"line_start":120,"line_end":120,"column_start":5,"column_end":78}},{"value":"/ acquires the mutex, releases the spin lock and returns 0. Otherwise, the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692204,"byte_end":692280,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ thread releases the spin lock and returns EINVAL/EBUSY. The thread is not suspended","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692285,"byte_end":692372,"line_start":122,"line_end":122,"column_start":5,"column_end":92}},{"value":"/ in this case.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692377,"byte_end":692394,"line_start":123,"line_end":123,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692399,"byte_end":692402,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ **Note**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692407,"byte_end":692419,"line_start":125,"line_end":125,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692424,"byte_end":692427,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ A thread should not exit an enclave returning from a root ECALL after acquiring","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692432,"byte_end":692515,"line_start":127,"line_end":127,"column_start":5,"column_end":88}},{"value":"/ the ownership of a mutex. Do not split the critical section protected by a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692520,"byte_end":692598,"line_start":128,"line_end":128,"column_start":5,"column_end":83}},{"value":"/ mutex across root ECALLs.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692603,"byte_end":692632,"line_start":129,"line_end":129,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692637,"byte_end":692640,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692645,"byte_end":692663,"line_start":131,"line_end":131,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692668,"byte_end":692671,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Library: libsgx_tstdc.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692676,"byte_end":692703,"line_start":133,"line_end":133,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692708,"byte_end":692711,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692716,"byte_end":692728,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692733,"byte_end":692736,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ **EINVAL**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692741,"byte_end":692755,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692760,"byte_end":692763,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The trusted mutex object is invalid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692768,"byte_end":692808,"line_start":139,"line_end":139,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692813,"byte_end":692816,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ **EBUSY**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692821,"byte_end":692834,"line_start":141,"line_end":141,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692839,"byte_end":692842,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ The mutex is locked by another thread or has pending threads to acquire the mutex","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692847,"byte_end":692932,"line_start":143,"line_end":143,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692937,"byte_end":692940,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":692945,"byte_end":692954,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4049},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693989,"byte_end":693995,"line_start":177,"line_end":177,"column_start":19,"column_end":25},"name":"unlock","qualname":"<SgxThreadMutex>::unlock","value":"pub unsafe fn unlock(&Self) -> SysError","parent":null,"children":[],"decl_id":null,"docs":"\n The function unlocks a trusted mutex object within an enclave.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693040,"byte_end":693043,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ The function unlocks a trusted mutex object within an enclave.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693048,"byte_end":693114,"line_start":151,"line_end":151,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693119,"byte_end":693122,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693127,"byte_end":693144,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693149,"byte_end":693152,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ Before a thread releases a mutex, it has to verify it is the owner of the mutex. If","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693157,"byte_end":693244,"line_start":155,"line_end":155,"column_start":5,"column_end":92}},{"value":"/ that is the case, the thread decreases the refcount by 1 and then may either","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693249,"byte_end":693329,"line_start":156,"line_end":156,"column_start":5,"column_end":85}},{"value":"/ continue normal execution or wakeup the first thread in the queue. Note that","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693334,"byte_end":693414,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ to ensure the state of the mutex remains consistent, the thread that is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693419,"byte_end":693494,"line_start":158,"line_end":158,"column_start":5,"column_end":80}},{"value":"/ awakened by the thread releasing the mutex will then try to acquire the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693499,"byte_end":693574,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ mutex almost as in the initial call to the rsgx_thread_mutex_lock routine.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693579,"byte_end":693657,"line_start":160,"line_end":160,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693662,"byte_end":693665,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693670,"byte_end":693688,"line_start":162,"line_end":162,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693693,"byte_end":693696,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ Library: libsgx_tstdc.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693701,"byte_end":693728,"line_start":164,"line_end":164,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693733,"byte_end":693736,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693741,"byte_end":693753,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693758,"byte_end":693761,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ **EINVAL**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693766,"byte_end":693780,"line_start":168,"line_end":168,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693785,"byte_end":693788,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The trusted mutex object is invalid or it is not locked by any thread.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693793,"byte_end":693867,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693872,"byte_end":693875,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ **EPERM**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693880,"byte_end":693893,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693898,"byte_end":693901,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The mutex is locked by another thread.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693906,"byte_end":693948,"line_start":174,"line_end":174,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693953,"byte_end":693956,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":693961,"byte_end":693970,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4050},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694982,"byte_end":694989,"line_start":211,"line_end":211,"column_start":19,"column_end":26},"name":"destroy","qualname":"<SgxThreadMutex>::destroy","value":"pub unsafe fn destroy(&Self) -> SysError","parent":null,"children":[],"decl_id":null,"docs":"\n The function destroys a trusted mutex object within an enclave.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694052,"byte_end":694055,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ The function destroys a trusted mutex object within an enclave.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694060,"byte_end":694127,"line_start":182,"line_end":182,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694132,"byte_end":694135,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694140,"byte_end":694157,"line_start":184,"line_end":184,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694162,"byte_end":694165,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ rsgx_thread_mutex_destroy resets the mutex, which brings it to its initial","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694170,"byte_end":694248,"line_start":186,"line_end":186,"column_start":5,"column_end":83}},{"value":"/ status. In this process, certain fields are checked to prevent releasing a mutex","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694253,"byte_end":694337,"line_start":187,"line_end":187,"column_start":5,"column_end":89}},{"value":"/ that is still owned by a thread or on which threads are still waiting.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694342,"byte_end":694416,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694421,"byte_end":694424,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ **Note**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694429,"byte_end":694441,"line_start":190,"line_end":190,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694446,"byte_end":694449,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Locking or unlocking a mutex after it has been destroyed results in undefined","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694454,"byte_end":694535,"line_start":192,"line_end":192,"column_start":5,"column_end":86}},{"value":"/ behavior. After a mutex is destroyed, it must be re-created before it can be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694540,"byte_end":694620,"line_start":193,"line_end":193,"column_start":5,"column_end":85}},{"value":"/ used again.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694625,"byte_end":694640,"line_start":194,"line_end":194,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694645,"byte_end":694648,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694653,"byte_end":694671,"line_start":196,"line_end":196,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694676,"byte_end":694679,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Library: libsgx_tstdc.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694684,"byte_end":694711,"line_start":198,"line_end":198,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694716,"byte_end":694719,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694724,"byte_end":694736,"line_start":200,"line_end":200,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694741,"byte_end":694744,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ **EINVAL**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694749,"byte_end":694763,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694768,"byte_end":694771,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ The trusted mutex object is invalid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694776,"byte_end":694816,"line_start":204,"line_end":204,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694821,"byte_end":694824,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ **EBUSY**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694829,"byte_end":694842,"line_start":206,"line_end":206,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694847,"byte_end":694850,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ The mutex is locked by another thread or has pending threads to acquire the mutex.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694855,"byte_end":694941,"line_start":208,"line_end":208,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694946,"byte_end":694949,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":694954,"byte_end":694963,"line_start":210,"line_end":210,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4052},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":696953,"byte_end":696961,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"name":"SgxMutex","qualname":"::sync::mutex::SgxMutex","value":"SgxMutex {  }","parent":null,"children":[{"krate":0,"index":4054},{"krate":0,"index":4055},{"krate":0,"index":4056}],"decl_id":null,"docs":" A mutual exclusion primitive useful for protecting shared data","sig":null,"attributes":[{"value":"/ A mutual exclusion primitive useful for protecting shared data","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":695118,"byte_end":695184,"line_start":218,"line_end":218,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":695185,"byte_end":695188,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ This mutex will block threads waiting for the lock to become available. The","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":695189,"byte_end":695268,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ mutex can also be statically initialized or created via a [`new`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":695269,"byte_end":695338,"line_start":221,"line_end":221,"column_start":1,"column_end":70}},{"value":"/ constructor. Each mutex has a type parameter which represents the data that","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":695339,"byte_end":695418,"line_start":222,"line_end":222,"column_start":1,"column_end":80}},{"value":"/ it is protecting. The data can only be accessed through the RAII guards","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":695419,"byte_end":695494,"line_start":223,"line_end":223,"column_start":1,"column_end":76}},{"value":"/ returned from [`lock`] and [`try_lock`], which guarantees that the data is only","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":695495,"byte_end":695578,"line_start":224,"line_end":224,"column_start":1,"column_end":84}},{"value":"/ ever accessed when the mutex is locked.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":695579,"byte_end":695622,"line_start":225,"line_end":225,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":695623,"byte_end":695626,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ # Poisoning","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":695627,"byte_end":695642,"line_start":227,"line_end":227,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":695643,"byte_end":695646,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ The mutexes in this module implement a strategy called \"poisoning\" where a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":695647,"byte_end":695725,"line_start":229,"line_end":229,"column_start":1,"column_end":79}},{"value":"/ mutex is considered poisoned whenever a thread panics while holding the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":695726,"byte_end":695801,"line_start":230,"line_end":230,"column_start":1,"column_end":76}},{"value":"/ mutex. Once a mutex is poisoned, all other threads are unable to access the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":695802,"byte_end":695881,"line_start":231,"line_end":231,"column_start":1,"column_end":80}},{"value":"/ data by default as it is likely tainted (some invariant is not being","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":695882,"byte_end":695954,"line_start":232,"line_end":232,"column_start":1,"column_end":73}},{"value":"/ upheld).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":695955,"byte_end":695967,"line_start":233,"line_end":233,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":695968,"byte_end":695971,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ For a mutex, this means that the [`lock`] and [`try_lock`] methods return a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":695972,"byte_end":696051,"line_start":235,"line_end":235,"column_start":1,"column_end":80}},{"value":"/ [`Result`] which indicates whether a mutex has been poisoned or not. Most","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":696052,"byte_end":696129,"line_start":236,"line_end":236,"column_start":1,"column_end":78}},{"value":"/ usage of a mutex will simply [`unwrap()`] these results, propagating panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":696130,"byte_end":696209,"line_start":237,"line_end":237,"column_start":1,"column_end":80}},{"value":"/ among threads to ensure that a possibly invalid invariant is not witnessed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":696210,"byte_end":696289,"line_start":238,"line_end":238,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":696290,"byte_end":696293,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ A poisoned mutex, however, does not prevent all access to the underlying","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":696294,"byte_end":696370,"line_start":240,"line_end":240,"column_start":1,"column_end":77}},{"value":"/ data. The [`PoisonError`] type has an [`into_inner`] method which will return","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":696371,"byte_end":696452,"line_start":241,"line_end":241,"column_start":1,"column_end":82}},{"value":"/ the guard that would have otherwise been returned on a successful lock. This","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":696453,"byte_end":696533,"line_start":242,"line_end":242,"column_start":1,"column_end":81}},{"value":"/ allows access to the data, despite the lock being poisoned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":696534,"byte_end":696597,"line_start":243,"line_end":243,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":696598,"byte_end":696601,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ [`new`]: #method.new","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":696602,"byte_end":696626,"line_start":245,"line_end":245,"column_start":1,"column_end":25}},{"value":"/ [`lock`]: #method.lock","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":696627,"byte_end":696653,"line_start":246,"line_end":246,"column_start":1,"column_end":27}},{"value":"/ [`try_lock`]: #method.try_lock","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":696654,"byte_end":696688,"line_start":247,"line_end":247,"column_start":1,"column_end":35}},{"value":"/ [`Result`]: ../../std/result/enum.Result.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":696689,"byte_end":696738,"line_start":248,"line_end":248,"column_start":1,"column_end":50}},{"value":"/ [`unwrap()`]: ../../std/result/enum.Result.html#method.unwrap","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":696739,"byte_end":696804,"line_start":249,"line_end":249,"column_start":1,"column_end":66}},{"value":"/ [`PoisonError`]: ../../std/sync/struct.PoisonError.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":696805,"byte_end":696864,"line_start":250,"line_end":250,"column_start":1,"column_end":60}},{"value":"/ [`into_inner`]: ../../std/sync/struct.PoisonError.html#method.into_inner","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":696865,"byte_end":696941,"line_start":251,"line_end":251,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":4061},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":697894,"byte_end":697907,"line_start":278,"line_end":278,"column_start":12,"column_end":25},"name":"SgxMutexGuard","qualname":"::sync::mutex::SgxMutexGuard","value":"SgxMutexGuard {  }","parent":null,"children":[{"krate":0,"index":4064},{"krate":0,"index":4065}],"decl_id":null,"docs":"\n An RAII implementation of a \"scoped lock\" of a mutex. When this structure is\n dropped (falls out of scope), the lock will be unlocked.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":697282,"byte_end":697285,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ An RAII implementation of a \"scoped lock\" of a mutex. When this structure is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":697286,"byte_end":697366,"line_start":264,"line_end":264,"column_start":1,"column_end":81}},{"value":"/ dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":697367,"byte_end":697427,"line_start":265,"line_end":265,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":697428,"byte_end":697431,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ The data protected by the mutex can be accessed through this guard via its","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":697432,"byte_end":697510,"line_start":267,"line_end":267,"column_start":1,"column_end":79}},{"value":"/ [`Deref`] and [`DerefMut`] implementations.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":697511,"byte_end":697558,"line_start":268,"line_end":268,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":697559,"byte_end":697562,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`lock`] and [`try_lock`] methods on","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":697563,"byte_end":697636,"line_start":270,"line_end":270,"column_start":1,"column_end":74}},{"value":"/ [`Mutex`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":697637,"byte_end":697651,"line_start":271,"line_end":271,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":697652,"byte_end":697655,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ [`Deref`]: ../../std/ops/trait.Deref.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":697656,"byte_end":697701,"line_start":273,"line_end":273,"column_start":1,"column_end":46}},{"value":"/ [`DerefMut`]: ../../std/ops/trait.DerefMut.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":697702,"byte_end":697753,"line_start":274,"line_end":274,"column_start":1,"column_end":52}},{"value":"/ [`lock`]: struct.Mutex.html#method.lock","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":697754,"byte_end":697797,"line_start":275,"line_end":275,"column_start":1,"column_end":44}},{"value":"/ [`try_lock`]: struct.Mutex.html#method.try_lock","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":697798,"byte_end":697849,"line_start":276,"line_end":276,"column_start":1,"column_end":52}},{"value":"/ [`Mutex`]: struct.Mutex.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":697850,"byte_end":697882,"line_start":277,"line_end":277,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":4072},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":698214,"byte_end":698217,"line_start":290,"line_end":290,"column_start":12,"column_end":15},"name":"new","qualname":"<SgxMutex<T>>::new","value":"pub fn new(T) -> SgxMutex<T>","parent":null,"children":[],"decl_id":null,"docs":"\n Creates a new mutex in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":698127,"byte_end":698130,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Creates a new mutex in an unlocked state ready for use.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":698135,"byte_end":698194,"line_start":288,"line_end":288,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":698199,"byte_end":698202,"line_start":289,"line_end":289,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4075},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":699482,"byte_end":699486,"line_start":323,"line_end":323,"column_start":12,"column_end":16},"name":"lock","qualname":"<SgxMutex<T>>::lock","value":"pub fn lock(&Self) -> LockResult<SgxMutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":"\n The function locks a trusted mutex object within an enclave.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":698443,"byte_end":698446,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ The function locks a trusted mutex object within an enclave.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":698451,"byte_end":698515,"line_start":301,"line_end":301,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":698520,"byte_end":698523,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Acquires a mutex, blocking the current thread until it is able to do so.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":698528,"byte_end":698604,"line_start":303,"line_end":303,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":698609,"byte_end":698612,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ This function will block the local thread until it is available to acquire","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":698617,"byte_end":698695,"line_start":305,"line_end":305,"column_start":5,"column_end":83}},{"value":"/ the mutex. Upon returning, the thread is the only thread with the lock","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":698700,"byte_end":698774,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/ held. An RAII guard is returned to allow scoped unlock of the lock. When","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":698779,"byte_end":698855,"line_start":307,"line_end":307,"column_start":5,"column_end":81}},{"value":"/ the guard goes out of scope, the mutex will be unlocked.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":698860,"byte_end":698920,"line_start":308,"line_end":308,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":698925,"byte_end":698928,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ The exact behavior on locking a mutex in the thread which already holds","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":698933,"byte_end":699008,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ the lock is left unspecified. However, this function will not return on","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":699013,"byte_end":699088,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ the second call (it might panic or deadlock, for example).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":699093,"byte_end":699155,"line_start":312,"line_end":312,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":699160,"byte_end":699163,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":699168,"byte_end":699180,"line_start":314,"line_end":314,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":699185,"byte_end":699188,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ If another user of this mutex panicked while holding the mutex, then","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":699193,"byte_end":699265,"line_start":316,"line_end":316,"column_start":5,"column_end":77}},{"value":"/ this call will return an error once the mutex is acquired.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":699270,"byte_end":699332,"line_start":317,"line_end":317,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":699337,"byte_end":699340,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":699345,"byte_end":699357,"line_start":319,"line_end":319,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":699362,"byte_end":699365,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ This function might panic when called if the lock is already held by","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":699370,"byte_end":699442,"line_start":321,"line_end":321,"column_start":5,"column_end":77}},{"value":"/ the current thread.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":699447,"byte_end":699470,"line_start":322,"line_end":322,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4076},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":700289,"byte_end":700297,"line_start":348,"line_end":348,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<SgxMutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> TryLockResult<SgxMutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":"\n The function tries to lock a trusted mutex object within an enclave.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":699638,"byte_end":699641,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ The function tries to lock a trusted mutex object within an enclave.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":699646,"byte_end":699718,"line_start":331,"line_end":331,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":699723,"byte_end":699726,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Attempts to acquire this lock.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":699731,"byte_end":699765,"line_start":333,"line_end":333,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":699770,"byte_end":699773,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ If the lock could not be acquired at this time, then [`Err`] is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":699778,"byte_end":699855,"line_start":335,"line_end":335,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned. The lock will be unlocked when the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":699860,"byte_end":699936,"line_start":336,"line_end":336,"column_start":5,"column_end":81}},{"value":"/ guard is dropped.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":699941,"byte_end":699962,"line_start":337,"line_end":337,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":699967,"byte_end":699970,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ This function does not block.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":699975,"byte_end":700008,"line_start":339,"line_end":339,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":700013,"byte_end":700016,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":700021,"byte_end":700033,"line_start":341,"line_end":341,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":700038,"byte_end":700041,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ If another user of this mutex panicked while holding the mutex, then","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":700046,"byte_end":700118,"line_start":343,"line_end":343,"column_start":5,"column_end":77}},{"value":"/ this call will return failure if the mutex would otherwise be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":700123,"byte_end":700188,"line_start":344,"line_end":344,"column_start":5,"column_end":70}},{"value":"/ acquired.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":700193,"byte_end":700206,"line_start":345,"line_end":345,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":700211,"byte_end":700214,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ [`Err`]: ../../std/result/enum.Result.html#variant.Err","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":700219,"byte_end":700277,"line_start":347,"line_end":347,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4077},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":700831,"byte_end":700842,"line_start":363,"line_end":363,"column_start":12,"column_end":23},"name":"is_poisoned","qualname":"<SgxMutex<T>>::is_poisoned","value":"pub fn is_poisoned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether the mutex is poisoned.","sig":null,"attributes":[{"value":"/ Determines whether the mutex is poisoned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":700553,"byte_end":700598,"line_start":357,"line_end":357,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":700603,"byte_end":700606,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If another thread is active, the mutex can still become poisoned at any","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":700611,"byte_end":700686,"line_start":359,"line_end":359,"column_start":5,"column_end":80}},{"value":"/ time. You should not trust a `false` value for program correctness","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":700691,"byte_end":700761,"line_start":360,"line_end":360,"column_start":5,"column_end":75}},{"value":"/ without additional synchronization.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":700766,"byte_end":700805,"line_start":361,"line_end":361,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":700810,"byte_end":700819,"line_start":362,"line_end":362,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4078},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":701122,"byte_end":701132,"line_start":373,"line_end":373,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SgxMutex<T>>::into_inner","value":"pub fn into_inner(Self) -> LockResult<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this mutex, returning the underlying data.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":700897,"byte_end":700952,"line_start":367,"line_end":367,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":700957,"byte_end":700960,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":700965,"byte_end":700977,"line_start":369,"line_end":369,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":700982,"byte_end":700985,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ If another user of this mutex panicked while holding the mutex, then","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":700990,"byte_end":701062,"line_start":371,"line_end":371,"column_start":5,"column_end":77}},{"value":"/ this call will return an error instead.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":701067,"byte_end":701110,"line_start":372,"line_end":372,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4080},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":701985,"byte_end":701992,"line_start":400,"line_end":400,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SgxMutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> LockResult<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":701585,"byte_end":701640,"line_start":390,"line_end":390,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":701645,"byte_end":701648,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":701653,"byte_end":701728,"line_start":392,"line_end":392,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":701733,"byte_end":701807,"line_start":393,"line_end":393,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":701812,"byte_end":701815,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":701820,"byte_end":701832,"line_start":395,"line_end":395,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":701837,"byte_end":701840,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ If another user of this mutex panicked while holding the mutex, then","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":701845,"byte_end":701917,"line_start":397,"line_end":397,"column_start":5,"column_end":77}},{"value":"/ this call will return an error instead.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":701922,"byte_end":701965,"line_start":398,"line_end":398,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":701970,"byte_end":701973,"line_start":399,"line_end":399,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4136},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":706266,"byte_end":706289,"line_start":26,"line_end":26,"column_start":12,"column_end":35},"name":"SgxReentrantThreadMutex","qualname":"::sync::remutex::SgxReentrantThreadMutex","value":"","parent":null,"children":[],"decl_id":null,"docs":" The structure of sgx mutex.\n","sig":null,"attributes":[{"value":"/ The structure of sgx mutex.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":706223,"byte_end":706254,"line_start":25,"line_end":25,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4142},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":707490,"byte_end":707493,"line_start":55,"line_end":55,"column_start":18,"column_end":21},"name":"new","qualname":"<SgxReentrantThreadMutex>::new","value":"pub const fn new() -> SgxReentrantThreadMutex","parent":null,"children":[],"decl_id":null,"docs":"\n The function initializes a trusted mutex object within the enclave.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":706445,"byte_end":706448,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ The function initializes a trusted mutex object within the enclave.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":706453,"byte_end":706524,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":706529,"byte_end":706532,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":706537,"byte_end":706554,"line_start":35,"line_end":35,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":706559,"byte_end":706562,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ When a thread creates a mutex within an enclave, sgx_thread_mutex_","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":706567,"byte_end":706637,"line_start":37,"line_end":37,"column_start":5,"column_end":75}},{"value":"/ init simply initializes the various fields of the mutex object to indicate that","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":706642,"byte_end":706725,"line_start":38,"line_end":38,"column_start":5,"column_end":88}},{"value":"/ the mutex is available. rsgx_thread_mutex_init creates a non-recursive","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":706730,"byte_end":706804,"line_start":39,"line_end":39,"column_start":5,"column_end":79}},{"value":"/ mutex. The results of using a mutex in a lock or unlock operation before it has","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":706809,"byte_end":706892,"line_start":40,"line_end":40,"column_start":5,"column_end":88}},{"value":"/ been fully initialized (for example, the function call to rsgx_thread_mutex_","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":706897,"byte_end":706977,"line_start":41,"line_end":41,"column_start":5,"column_end":85}},{"value":"/ init returns) are undefined. To avoid race conditions in the initialization of a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":706982,"byte_end":707066,"line_start":42,"line_end":42,"column_start":5,"column_end":89}},{"value":"/ trusted mutex, it is recommended statically initializing the mutex with the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":707071,"byte_end":707150,"line_start":43,"line_end":43,"column_start":5,"column_end":84}},{"value":"/ macro SGX_THREAD_MUTEX_INITIALIZER, SGX_THREAD_NON_RECURSIVE_MUTEX_INITIALIZER ,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":707155,"byte_end":707239,"line_start":44,"line_end":44,"column_start":5,"column_end":89}},{"value":"/ of, or SGX_THREAD_RECURSIVE_MUTEX_INITIALIZER instead.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":707244,"byte_end":707302,"line_start":45,"line_end":45,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":707307,"byte_end":707310,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":707315,"byte_end":707333,"line_start":47,"line_end":47,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":707338,"byte_end":707341,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Library: libsgx_tstdc.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":707346,"byte_end":707373,"line_start":49,"line_end":49,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":707378,"byte_end":707381,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":707386,"byte_end":707404,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":707409,"byte_end":707412,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The trusted mutex object to be initialized.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":707417,"byte_end":707464,"line_start":53,"line_end":53,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":707469,"byte_end":707472,"line_start":54,"line_end":54,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4143},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709263,"byte_end":709267,"line_start":95,"line_end":95,"column_start":19,"column_end":23},"name":"lock","qualname":"<SgxReentrantThreadMutex>::lock","value":"pub unsafe fn lock(&Self) -> SysError","parent":null,"children":[],"decl_id":null,"docs":"\n The function locks a trusted mutex object within an enclave.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":707650,"byte_end":707653,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The function locks a trusted mutex object within an enclave.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":707658,"byte_end":707722,"line_start":60,"line_end":60,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":707727,"byte_end":707730,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":707735,"byte_end":707752,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":707757,"byte_end":707760,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ To acquire a mutex, a thread first needs to acquire the corresponding spin","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":707765,"byte_end":707843,"line_start":64,"line_end":64,"column_start":5,"column_end":83}},{"value":"/ lock. After the spin lock is acquired, the thread checks whether the mutex is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":707848,"byte_end":707929,"line_start":65,"line_end":65,"column_start":5,"column_end":86}},{"value":"/ available. If the queue is empty or the thread is at the head of the queue the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":707934,"byte_end":708016,"line_start":66,"line_end":66,"column_start":5,"column_end":87}},{"value":"/ thread will now become the owner of the mutex. To confirm its ownership, the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":708021,"byte_end":708101,"line_start":67,"line_end":67,"column_start":5,"column_end":85}},{"value":"/ thread updates the refcount and owner fields. If the mutex is not available, the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":708106,"byte_end":708190,"line_start":68,"line_end":68,"column_start":5,"column_end":89}},{"value":"/ thread searches the queue. If the thread is already in the queue, but not at the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":708195,"byte_end":708279,"line_start":69,"line_end":69,"column_start":5,"column_end":89}},{"value":"/ head, it means that the thread has previously tried to lock the mutex, but it","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":708284,"byte_end":708365,"line_start":70,"line_end":70,"column_start":5,"column_end":86}},{"value":"/ did not succeed and had to wait outside the enclave and it has been","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":708370,"byte_end":708441,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/ awakened unexpectedly. When this happens, the thread makes an OCALL and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":708446,"byte_end":708521,"line_start":72,"line_end":72,"column_start":5,"column_end":80}},{"value":"/ simply goes back to sleep. If the thread is trying to lock the mutex for the first","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":708526,"byte_end":708612,"line_start":73,"line_end":73,"column_start":5,"column_end":91}},{"value":"/ time, it will update the waiting queue and make an OCALL to get suspended.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":708617,"byte_end":708695,"line_start":74,"line_end":74,"column_start":5,"column_end":83}},{"value":"/ Note that threads release the spin lock after acquiring the mutex or before","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":708700,"byte_end":708779,"line_start":75,"line_end":75,"column_start":5,"column_end":84}},{"value":"/ leaving the enclave.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":708784,"byte_end":708808,"line_start":76,"line_end":76,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":708813,"byte_end":708816,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ **Note**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":708821,"byte_end":708833,"line_start":78,"line_end":78,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":708838,"byte_end":708841,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ A thread should not exit an enclave returning from a root ECALL after acquiring","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":708846,"byte_end":708929,"line_start":80,"line_end":80,"column_start":5,"column_end":88}},{"value":"/ the ownership of a mutex. Do not split the critical section protected by a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":708934,"byte_end":709012,"line_start":81,"line_end":81,"column_start":5,"column_end":83}},{"value":"/ mutex across root ECALLs.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709017,"byte_end":709046,"line_start":82,"line_end":82,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709051,"byte_end":709054,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709059,"byte_end":709077,"line_start":84,"line_end":84,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709082,"byte_end":709085,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Library: libsgx_tstdc.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709090,"byte_end":709117,"line_start":86,"line_end":86,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709122,"byte_end":709125,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709130,"byte_end":709142,"line_start":88,"line_end":88,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709147,"byte_end":709150,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ **EINVAL**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709155,"byte_end":709169,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709174,"byte_end":709177,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ The trusted mutex object is invalid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709182,"byte_end":709222,"line_start":92,"line_end":92,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709227,"byte_end":709230,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709235,"byte_end":709244,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4144},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710463,"byte_end":710471,"line_start":132,"line_end":132,"column_start":19,"column_end":27},"name":"try_lock","qualname":"<SgxReentrantThreadMutex>::try_lock","value":"pub unsafe fn try_lock(&Self) -> SysError","parent":null,"children":[],"decl_id":null,"docs":"\n The function tries to lock a trusted mutex object within an enclave.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709322,"byte_end":709325,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ The function tries to lock a trusted mutex object within an enclave.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709330,"byte_end":709402,"line_start":100,"line_end":100,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709407,"byte_end":709410,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709415,"byte_end":709432,"line_start":102,"line_end":102,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709437,"byte_end":709440,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ A thread may check the status of the mutex, which implies acquiring the spin","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709445,"byte_end":709525,"line_start":104,"line_end":104,"column_start":5,"column_end":85}},{"value":"/ lock and verifying that the mutex is available and that the queue is empty or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709530,"byte_end":709611,"line_start":105,"line_end":105,"column_start":5,"column_end":86}},{"value":"/ the thread is at the head of the queue. When this happens, the thread","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709616,"byte_end":709689,"line_start":106,"line_end":106,"column_start":5,"column_end":78}},{"value":"/ acquires the mutex, releases the spin lock and returns 0. Otherwise, the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709694,"byte_end":709770,"line_start":107,"line_end":107,"column_start":5,"column_end":81}},{"value":"/ thread releases the spin lock and returns EINVAL/EBUSY. The thread is not suspended","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709775,"byte_end":709862,"line_start":108,"line_end":108,"column_start":5,"column_end":92}},{"value":"/ in this case.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709867,"byte_end":709884,"line_start":109,"line_end":109,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709889,"byte_end":709892,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ **Note**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709897,"byte_end":709909,"line_start":111,"line_end":111,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709914,"byte_end":709917,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ A thread should not exit an enclave returning from a root ECALL after acquiring","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":709922,"byte_end":710005,"line_start":113,"line_end":113,"column_start":5,"column_end":88}},{"value":"/ the ownership of a mutex. Do not split the critical section protected by a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710010,"byte_end":710088,"line_start":114,"line_end":114,"column_start":5,"column_end":83}},{"value":"/ mutex across root ECALLs.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710093,"byte_end":710122,"line_start":115,"line_end":115,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710127,"byte_end":710130,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710135,"byte_end":710153,"line_start":117,"line_end":117,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710158,"byte_end":710161,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Library: libsgx_tstdc.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710166,"byte_end":710193,"line_start":119,"line_end":119,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710198,"byte_end":710201,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710206,"byte_end":710218,"line_start":121,"line_end":121,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710223,"byte_end":710226,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ **EINVAL**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710231,"byte_end":710245,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710250,"byte_end":710253,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ The trusted mutex object is invalid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710258,"byte_end":710298,"line_start":125,"line_end":125,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710303,"byte_end":710306,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ **EBUSY**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710311,"byte_end":710324,"line_start":127,"line_end":127,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710329,"byte_end":710332,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The mutex is locked by another thread or has pending threads to acquire the mutex","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710337,"byte_end":710422,"line_start":129,"line_end":129,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710427,"byte_end":710430,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710435,"byte_end":710444,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4145},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711479,"byte_end":711485,"line_start":163,"line_end":163,"column_start":19,"column_end":25},"name":"unlock","qualname":"<SgxReentrantThreadMutex>::unlock","value":"pub unsafe fn unlock(&Self) -> SysError","parent":null,"children":[],"decl_id":null,"docs":"\n The function unlocks a trusted mutex object within an enclave.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710530,"byte_end":710533,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ The function unlocks a trusted mutex object within an enclave.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710538,"byte_end":710604,"line_start":137,"line_end":137,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710609,"byte_end":710612,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710617,"byte_end":710634,"line_start":139,"line_end":139,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710639,"byte_end":710642,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Before a thread releases a mutex, it has to verify it is the owner of the mutex. If","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710647,"byte_end":710734,"line_start":141,"line_end":141,"column_start":5,"column_end":92}},{"value":"/ that is the case, the thread decreases the refcount by 1 and then may either","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710739,"byte_end":710819,"line_start":142,"line_end":142,"column_start":5,"column_end":85}},{"value":"/ continue normal execution or wakeup the first thread in the queue. Note that","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710824,"byte_end":710904,"line_start":143,"line_end":143,"column_start":5,"column_end":85}},{"value":"/ to ensure the state of the mutex remains consistent, the thread that is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710909,"byte_end":710984,"line_start":144,"line_end":144,"column_start":5,"column_end":80}},{"value":"/ awakened by the thread releasing the mutex will then try to acquire the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":710989,"byte_end":711064,"line_start":145,"line_end":145,"column_start":5,"column_end":80}},{"value":"/ mutex almost as in the initial call to the rsgx_thread_mutex_lock routine.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711069,"byte_end":711147,"line_start":146,"line_end":146,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711152,"byte_end":711155,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711160,"byte_end":711178,"line_start":148,"line_end":148,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711183,"byte_end":711186,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Library: libsgx_tstdc.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711191,"byte_end":711218,"line_start":150,"line_end":150,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711223,"byte_end":711226,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711231,"byte_end":711243,"line_start":152,"line_end":152,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711248,"byte_end":711251,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ **EINVAL**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711256,"byte_end":711270,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711275,"byte_end":711278,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The trusted mutex object is invalid or it is not locked by any thread.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711283,"byte_end":711357,"line_start":156,"line_end":156,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711362,"byte_end":711365,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ **EPERM**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711370,"byte_end":711383,"line_start":158,"line_end":158,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711388,"byte_end":711391,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The mutex is locked by another thread.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711396,"byte_end":711438,"line_start":160,"line_end":160,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711443,"byte_end":711446,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711451,"byte_end":711460,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4146},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712472,"byte_end":712479,"line_start":197,"line_end":197,"column_start":19,"column_end":26},"name":"destroy","qualname":"<SgxReentrantThreadMutex>::destroy","value":"pub unsafe fn destroy(&Self) -> SysError","parent":null,"children":[],"decl_id":null,"docs":"\n The function destroys a trusted mutex object within an enclave.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711542,"byte_end":711545,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The function destroys a trusted mutex object within an enclave.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711550,"byte_end":711617,"line_start":168,"line_end":168,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711622,"byte_end":711625,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Description","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711630,"byte_end":711647,"line_start":170,"line_end":170,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711652,"byte_end":711655,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ rsgx_thread_mutex_destroy resets the mutex, which brings it to its initial","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711660,"byte_end":711738,"line_start":172,"line_end":172,"column_start":5,"column_end":83}},{"value":"/ status. In this process, certain fields are checked to prevent releasing a mutex","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711743,"byte_end":711827,"line_start":173,"line_end":173,"column_start":5,"column_end":89}},{"value":"/ that is still owned by a thread or on which threads are still waiting.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711832,"byte_end":711906,"line_start":174,"line_end":174,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711911,"byte_end":711914,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ **Note**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711919,"byte_end":711931,"line_start":176,"line_end":176,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711936,"byte_end":711939,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Locking or unlocking a mutex after it has been destroyed results in undefined","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":711944,"byte_end":712025,"line_start":178,"line_end":178,"column_start":5,"column_end":86}},{"value":"/ behavior. After a mutex is destroyed, it must be re-created before it can be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712030,"byte_end":712110,"line_start":179,"line_end":179,"column_start":5,"column_end":85}},{"value":"/ used again.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712115,"byte_end":712130,"line_start":180,"line_end":180,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712135,"byte_end":712138,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Requirements","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712143,"byte_end":712161,"line_start":182,"line_end":182,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712166,"byte_end":712169,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Library: libsgx_tstdc.a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712174,"byte_end":712201,"line_start":184,"line_end":184,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712206,"byte_end":712209,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712214,"byte_end":712226,"line_start":186,"line_end":186,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712231,"byte_end":712234,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ **EINVAL**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712239,"byte_end":712253,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712258,"byte_end":712261,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ The trusted mutex object is invalid.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712266,"byte_end":712306,"line_start":190,"line_end":190,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712311,"byte_end":712314,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ **EBUSY**","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712319,"byte_end":712332,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712337,"byte_end":712340,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ The mutex is locked by another thread or has pending threads to acquire the mutex.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712345,"byte_end":712431,"line_start":194,"line_end":194,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712436,"byte_end":712439,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712444,"byte_end":712453,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4147},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712808,"byte_end":712825,"line_start":207,"line_end":207,"column_start":12,"column_end":29},"name":"SgxReentrantMutex","qualname":"::sync::remutex::SgxReentrantMutex","value":"SgxReentrantMutex {  }","parent":null,"children":[{"krate":0,"index":4149},{"krate":0,"index":4150},{"krate":0,"index":4151}],"decl_id":null,"docs":" A re-entrant mutual exclusion","sig":null,"attributes":[{"value":"/ A re-entrant mutual exclusion","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712535,"byte_end":712568,"line_start":202,"line_end":202,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712569,"byte_end":712572,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ This mutex will block *other* threads waiting for the lock to become","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712573,"byte_end":712645,"line_start":204,"line_end":204,"column_start":1,"column_end":73}},{"value":"/ available. The thread which has already locked the mutex can lock it","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712646,"byte_end":712718,"line_start":205,"line_end":205,"column_start":1,"column_end":73}},{"value":"/ multiple times without blocking, preventing a common source of deadlocks.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712719,"byte_end":712796,"line_start":206,"line_end":206,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":4158},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":713125,"byte_end":713128,"line_start":218,"line_end":218,"column_start":12,"column_end":15},"name":"new","qualname":"<SgxReentrantMutex<T>>::new","value":"pub fn new(T) -> SgxReentrantMutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reentrant mutex in an unlocked state.\n","sig":null,"attributes":[{"value":"/ Creates a new reentrant mutex in an unlocked state.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":713058,"byte_end":713113,"line_start":217,"line_end":217,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4159},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":713906,"byte_end":713910,"line_start":238,"line_end":238,"column_start":12,"column_end":16},"name":"lock","qualname":"<SgxReentrantMutex<T>>::lock","value":"pub fn lock(&Self) -> LockResult<SgxReentrantMutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutex, blocking the current thread until it is able to do so.","sig":null,"attributes":[{"value":"/ Acquires a mutex, blocking the current thread until it is able to do so.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":713332,"byte_end":713408,"line_start":226,"line_end":226,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":713413,"byte_end":713416,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ This function will block the caller until it is available to acquire the mutex.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":713421,"byte_end":713504,"line_start":228,"line_end":228,"column_start":5,"column_end":88}},{"value":"/ Upon returning, the thread is the only thread with the mutex held. When the thread","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":713509,"byte_end":713595,"line_start":229,"line_end":229,"column_start":5,"column_end":91}},{"value":"/ calling this method already holds the lock, the call shall succeed without","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":713600,"byte_end":713678,"line_start":230,"line_end":230,"column_start":5,"column_end":83}},{"value":"/ blocking.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":713683,"byte_end":713696,"line_start":231,"line_end":231,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":713701,"byte_end":713704,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":713709,"byte_end":713721,"line_start":233,"line_end":233,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":713726,"byte_end":713729,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ If another user of this mutex panicked while holding the mutex, then","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":713734,"byte_end":713806,"line_start":235,"line_end":235,"column_start":5,"column_end":77}},{"value":"/ this call will return failure if the mutex would otherwise be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":713811,"byte_end":713876,"line_start":236,"line_end":236,"column_start":5,"column_end":70}},{"value":"/ acquired.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":713881,"byte_end":713894,"line_start":237,"line_end":237,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4160},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":714481,"byte_end":714489,"line_start":255,"line_end":255,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<SgxReentrantMutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> TryLockResult<SgxReentrantMutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this lock.","sig":null,"attributes":[{"value":"/ Attempts to acquire this lock.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":714057,"byte_end":714091,"line_start":243,"line_end":243,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":714096,"byte_end":714099,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ If the lock could not be acquired at this time, then `Err` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":714104,"byte_end":714179,"line_start":245,"line_end":245,"column_start":5,"column_end":80}},{"value":"/ Otherwise, an RAII guard is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":714184,"byte_end":714225,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":714230,"byte_end":714233,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ This function does not block.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":714238,"byte_end":714271,"line_start":248,"line_end":248,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":714276,"byte_end":714279,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":714284,"byte_end":714296,"line_start":250,"line_end":250,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":714301,"byte_end":714304,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ If another user of this mutex panicked while holding the mutex, then","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":714309,"byte_end":714381,"line_start":252,"line_end":252,"column_start":5,"column_end":77}},{"value":"/ this call will return failure if the mutex would otherwise be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":714386,"byte_end":714451,"line_start":253,"line_end":253,"column_start":5,"column_end":70}},{"value":"/ acquired.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":714456,"byte_end":714469,"line_start":254,"line_end":254,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":4171},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":716571,"byte_end":716593,"line_start":307,"line_end":307,"column_start":12,"column_end":34},"name":"SgxReentrantMutexGuard","qualname":"::sync::remutex::SgxReentrantMutexGuard","value":"SgxReentrantMutexGuard {  }","parent":null,"children":[{"krate":0,"index":4174},{"krate":0,"index":4175}],"decl_id":null,"docs":" An RAII implementation of a \"scoped lock\" of a mutex. When this structure is\n dropped (falls out of scope), the lock will be unlocked.","sig":null,"attributes":[{"value":"/ An RAII implementation of a \"scoped lock\" of a mutex. When this structure is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":716016,"byte_end":716096,"line_start":294,"line_end":294,"column_start":1,"column_end":81}},{"value":"/ dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":716097,"byte_end":716157,"line_start":295,"line_end":295,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":716158,"byte_end":716161,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ The data protected by the mutex can be accessed through this guard via its","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":716162,"byte_end":716240,"line_start":297,"line_end":297,"column_start":1,"column_end":79}},{"value":"/ Deref implementation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":716241,"byte_end":716266,"line_start":298,"line_end":298,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":716267,"byte_end":716270,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ # Mutability","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":716271,"byte_end":716287,"line_start":300,"line_end":300,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":716288,"byte_end":716291,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ Unlike `MutexGuard`, `ReentrantMutexGuard` does not implement `DerefMut`,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":716292,"byte_end":716369,"line_start":302,"line_end":302,"column_start":1,"column_end":78}},{"value":"/ because implementation of the trait would violate Rust’s reference aliasing","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":716370,"byte_end":716451,"line_start":303,"line_end":303,"column_start":1,"column_end":80}},{"value":"/ rules. Use interior mutability (usually `RefCell`) in order to mutate the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":716452,"byte_end":716529,"line_start":304,"line_end":304,"column_start":1,"column_end":78}},{"value":"/ guarded data.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":716530,"byte_end":716547,"line_start":305,"line_end":305,"column_start":1,"column_end":18}},{"value":"must_use","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":716548,"byte_end":716559,"line_start":306,"line_end":306,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4207},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":722275,"byte_end":722279,"line_start":85,"line_end":85,"column_start":12,"column_end":16},"name":"Once","qualname":"::sync::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":4208},{"krate":0,"index":4209}],"decl_id":null,"docs":" A synchronization primitive which can be used to run a one-time global\n initialization. Useful for one-time initialization for FFI or related\n functionality. This type can only be constructed with the [`Once::new`]\n constructor.","sig":null,"attributes":[{"value":"/ A synchronization primitive which can be used to run a one-time global","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":721967,"byte_end":722041,"line_start":78,"line_end":78,"column_start":1,"column_end":75}},{"value":"/ initialization. Useful for one-time initialization for FFI or related","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":722042,"byte_end":722115,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/ functionality. This type can only be constructed with the [`Once::new`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":722116,"byte_end":722191,"line_start":80,"line_end":80,"column_start":1,"column_end":76}},{"value":"/ constructor.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":722192,"byte_end":722208,"line_start":81,"line_end":81,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":722209,"byte_end":722212,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ [`Once::new`]: struct.Once.html#method.new","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":722213,"byte_end":722259,"line_start":83,"line_end":83,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":722260,"byte_end":722263,"line_start":84,"line_end":84,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":8078},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":722977,"byte_end":722986,"line_start":103,"line_end":103,"column_start":12,"column_end":21},"name":"OnceState","qualname":"::sync::once::OnceState","value":"OnceState {  }","parent":null,"children":[{"krate":0,"index":8079}],"decl_id":null,"docs":" State yielded to [`call_once_force`]’s closure parameter. The state can be\n used to query the poison status of the [`Once`].","sig":null,"attributes":[{"value":"/ State yielded to [`call_once_force`]’s closure parameter. The state can be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":722715,"byte_end":722795,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ used to query the poison status of the [`Once`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":722796,"byte_end":722848,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":722849,"byte_end":722852,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ [`call_once_force`]: struct.Once.html#method.call_once_force","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":722853,"byte_end":722917,"line_start":100,"line_end":100,"column_start":1,"column_end":65}},{"value":"/ [`Once`]: struct.Once.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":722918,"byte_end":722948,"line_start":101,"line_end":101,"column_start":1,"column_end":31}}]},{"kind":"Const","id":{"krate":0,"index":4212},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":723114,"byte_end":723123,"line_start":111,"line_end":111,"column_start":11,"column_end":20},"name":"ONCE_INIT","qualname":"::sync::once::ONCE_INIT","value":"Once","parent":null,"children":[],"decl_id":null,"docs":" Initialization value for static [`Once`] values.","sig":null,"attributes":[{"value":"/ Initialization value for static [`Once`] values.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":723012,"byte_end":723064,"line_start":107,"line_end":107,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":723065,"byte_end":723068,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ [`Once`]: struct.Once.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":723069,"byte_end":723099,"line_start":109,"line_end":109,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":723100,"byte_end":723103,"line_start":110,"line_end":110,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":4227},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":724400,"byte_end":724403,"line_start":147,"line_end":147,"column_start":18,"column_end":21},"name":"new","qualname":"<Once>::new","value":"pub const fn new() -> Once","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Once` value.\n","sig":null,"attributes":[{"value":"/ Creates a new `Once` value.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":724351,"byte_end":724382,"line_start":146,"line_end":146,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4228},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":725899,"byte_end":725908,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"call_once","qualname":"<Once>::call_once","value":"pub fn call_once<F>(&Self, F) where F: FnOnce() -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs an initialization routine once and only once. The given closure\n will be executed if this is the first time `call_once` has been called,\n and otherwise the routine will *not* be invoked.","sig":null,"attributes":[{"value":"/ Performs an initialization routine once and only once. The given closure","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":724520,"byte_end":724596,"line_start":151,"line_end":151,"column_start":5,"column_end":81}},{"value":"/ will be executed if this is the first time `call_once` has been called,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":724601,"byte_end":724676,"line_start":152,"line_end":152,"column_start":5,"column_end":80}},{"value":"/ and otherwise the routine will *not* be invoked.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":724681,"byte_end":724733,"line_start":153,"line_end":153,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":724738,"byte_end":724741,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This method will block the calling thread if another initialization","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":724746,"byte_end":724817,"line_start":155,"line_end":155,"column_start":5,"column_end":76}},{"value":"/ routine is currently running.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":724822,"byte_end":724855,"line_start":156,"line_end":156,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":724860,"byte_end":724863,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ When this function returns, it is guaranteed that some initialization","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":724868,"byte_end":724941,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/ has run and completed (it may not be the closure specified). It is also","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":724946,"byte_end":725021,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ guaranteed that any memory writes performed by the executed closure can","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":725026,"byte_end":725101,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ be reliably observed by other threads at this point (there is a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":725106,"byte_end":725173,"line_start":161,"line_end":161,"column_start":5,"column_end":72}},{"value":"/ happens-before relation between the closure and code executing after the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":725178,"byte_end":725254,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ return).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":725259,"byte_end":725271,"line_start":163,"line_end":163,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":725276,"byte_end":725279,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ If the given closure recursively invokes `call_once` on the same `Once`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":725284,"byte_end":725359,"line_start":165,"line_end":165,"column_start":5,"column_end":80}},{"value":"/ instance the exact behavior is not specified, allowed outcomes are","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":725364,"byte_end":725434,"line_start":166,"line_end":166,"column_start":5,"column_end":75}},{"value":"/ a panic or a deadlock.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":725439,"byte_end":725465,"line_start":167,"line_end":167,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":725470,"byte_end":725473,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":725478,"byte_end":725490,"line_start":169,"line_end":169,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":725495,"byte_end":725498,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ The closure `f` will only be executed once if this is called","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":725503,"byte_end":725567,"line_start":171,"line_end":171,"column_start":5,"column_end":69}},{"value":"/ concurrently amongst many threads. If that closure panics, however, then","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":725572,"byte_end":725648,"line_start":172,"line_end":172,"column_start":5,"column_end":81}},{"value":"/ it will *poison* this `Once` instance, causing all future invocations of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":725653,"byte_end":725729,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ `call_once` to also panic.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":725734,"byte_end":725764,"line_start":174,"line_end":174,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":725769,"byte_end":725772,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This is similar to [poisoning with mutexes][poison].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":725777,"byte_end":725833,"line_start":176,"line_end":176,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":725838,"byte_end":725841,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ [poison]: struct.Mutex.html#poisoning","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":725846,"byte_end":725887,"line_start":178,"line_end":178,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":4231},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":726996,"byte_end":727011,"line_start":208,"line_end":208,"column_start":12,"column_end":27},"name":"call_once_force","qualname":"<Once>::call_once_force","value":"pub fn call_once_force<F>(&Self, F) where F: FnOnce(&OnceState) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs the same function as [`call_once`] except ignores poisoning.","sig":null,"attributes":[{"value":"/ Performs the same function as [`call_once`] except ignores poisoning.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":726155,"byte_end":726228,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":726233,"byte_end":726236,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Unlike [`call_once`], if this `Once` has been poisoned (i.e., a previous","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":726241,"byte_end":726317,"line_start":194,"line_end":194,"column_start":5,"column_end":81}},{"value":"/ call to `call_once` or `call_once_force` caused a panic), calling","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":726322,"byte_end":726391,"line_start":195,"line_end":195,"column_start":5,"column_end":74}},{"value":"/ `call_once_force` will still invoke the closure `f` and will _not_","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":726396,"byte_end":726466,"line_start":196,"line_end":196,"column_start":5,"column_end":75}},{"value":"/ result in an immediate panic. If `f` panics, the `Once` will remain","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":726471,"byte_end":726542,"line_start":197,"line_end":197,"column_start":5,"column_end":76}},{"value":"/ in a poison state. If `f` does _not_ panic, the `Once` will no","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":726547,"byte_end":726613,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ longer be in a poison state and all future calls to `call_once` or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":726618,"byte_end":726688,"line_start":199,"line_end":199,"column_start":5,"column_end":75}},{"value":"/ `call_one_force` will be no-ops.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":726693,"byte_end":726729,"line_start":200,"line_end":200,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":726734,"byte_end":726737,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is yielded a [`OnceState`] structure which can be used","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":726742,"byte_end":726816,"line_start":202,"line_end":202,"column_start":5,"column_end":79}},{"value":"/ to query the poison status of the `Once`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":726821,"byte_end":726866,"line_start":203,"line_end":203,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":726871,"byte_end":726874,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ [`call_once`]: struct.Once.html#method.call_once","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":726879,"byte_end":726931,"line_start":205,"line_end":205,"column_start":5,"column_end":57}},{"value":"/ [`OnceState`]: struct.OnceState.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":726936,"byte_end":726976,"line_start":206,"line_end":206,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":726981,"byte_end":726984,"line_start":207,"line_end":207,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4234},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":727982,"byte_end":727994,"line_start":235,"line_end":235,"column_start":12,"column_end":24},"name":"is_completed","qualname":"<Once>::is_completed","value":"pub fn is_completed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if some `call_once` call has completed\n successfully. Specifically, `is_completed` will return false in\n the following situations:\n   * `call_once` was not called at all,\n   * `call_once` was called, but has not yet completed,\n   * the `Once` instance is poisoned","sig":null,"attributes":[{"value":"/ Returns `true` if some `call_once` call has completed","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":727293,"byte_end":727350,"line_start":221,"line_end":221,"column_start":5,"column_end":62}},{"value":"/ successfully. Specifically, `is_completed` will return false in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":727355,"byte_end":727422,"line_start":222,"line_end":222,"column_start":5,"column_end":72}},{"value":"/ the following situations:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":727427,"byte_end":727456,"line_start":223,"line_end":223,"column_start":5,"column_end":34}},{"value":"/   * `call_once` was not called at all,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":727461,"byte_end":727503,"line_start":224,"line_end":224,"column_start":5,"column_end":47}},{"value":"/   * `call_once` was called, but has not yet completed,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":727508,"byte_end":727566,"line_start":225,"line_end":225,"column_start":5,"column_end":63}},{"value":"/   * the `Once` instance is poisoned","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":727571,"byte_end":727610,"line_start":226,"line_end":226,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":727615,"byte_end":727618,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ This function returning `false` does not mean that `Once` has not been","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":727623,"byte_end":727697,"line_start":228,"line_end":228,"column_start":5,"column_end":79}},{"value":"/ executed. For example, it may have been executed in the time between","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":727702,"byte_end":727774,"line_start":229,"line_end":229,"column_start":5,"column_end":77}},{"value":"/ when `is_completed` starts executing and when it returns, in which case","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":727779,"byte_end":727854,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ the `false` return value would be stale (but still permissible).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":727859,"byte_end":727927,"line_start":231,"line_end":231,"column_start":5,"column_end":73}},{"value":"/ `call_once`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":727932,"byte_end":727948,"line_start":232,"line_end":232,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":727953,"byte_end":727956,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":727961,"byte_end":727970,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4242},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":734534,"byte_end":734542,"line_start":384,"line_end":384,"column_start":12,"column_end":20},"name":"poisoned","qualname":"<OnceState>::poisoned","value":"pub fn poisoned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Once`] was poisoned prior to the\n invocation of the closure passed to [`call_once_force`].","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Once`] was poisoned prior to the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":734266,"byte_end":734337,"line_start":378,"line_end":378,"column_start":5,"column_end":76}},{"value":"/ invocation of the closure passed to [`call_once_force`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":734342,"byte_end":734402,"line_start":379,"line_end":379,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":734407,"byte_end":734410,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ [`call_once_force`]: struct.Once.html#method.call_once_force","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":734415,"byte_end":734479,"line_start":381,"line_end":381,"column_start":5,"column_end":69}},{"value":"/ [`Once`]: struct.Once.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":734484,"byte_end":734514,"line_start":382,"line_end":382,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":734519,"byte_end":734522,"line_start":383,"line_end":383,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4260},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":735955,"byte_end":735970,"line_start":34,"line_end":34,"column_start":12,"column_end":27},"name":"SgxThreadRwLock","qualname":"::sync::rwlock::SgxThreadRwLock","value":"","parent":null,"children":[],"decl_id":null,"docs":" An OS-based reader-writer lock.","sig":null,"attributes":[{"value":"/ An OS-based reader-writer lock.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":735686,"byte_end":735721,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":735722,"byte_end":735725,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This structure is entirely unsafe and serves as the lowest layer of a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":735726,"byte_end":735799,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ cross-platform binding of system rwlocks. It is recommended to use the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":735800,"byte_end":735874,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ safer types at the top level of this crate instead of this type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":735875,"byte_end":735943,"line_start":33,"line_end":33,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4266},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":736167,"byte_end":736170,"line_start":42,"line_end":42,"column_start":18,"column_end":21},"name":"new","qualname":"<SgxThreadRwLock>::new","value":"pub const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reader-writer lock for use.\n","sig":null,"attributes":[{"value":"/ Creates a new reader-writer lock for use.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":736104,"byte_end":736149,"line_start":41,"line_end":41,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4267},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":736376,"byte_end":736380,"line_start":49,"line_end":49,"column_start":19,"column_end":23},"name":"read","qualname":"<SgxThreadRwLock>::read","value":"pub unsafe fn read(&Self) -> SysError","parent":null,"children":[],"decl_id":null,"docs":" Acquires shared access to the underlying lock, blocking the current\n thread to do so.\n","sig":null,"attributes":[{"value":"/ Acquires shared access to the underlying lock, blocking the current","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":736247,"byte_end":736318,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ thread to do so.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":736323,"byte_end":736343,"line_start":47,"line_end":47,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":736348,"byte_end":736357,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4268},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":736631,"byte_end":736639,"line_start":58,"line_end":58,"column_start":19,"column_end":27},"name":"try_read","qualname":"<SgxThreadRwLock>::try_read","value":"pub unsafe fn try_read(&Self) -> SysError","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire shared access to this lock, returning whether it\n succeeded or not.","sig":null,"attributes":[{"value":"/ Attempts to acquire shared access to this lock, returning whether it","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":736435,"byte_end":736507,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ succeeded or not.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":736512,"byte_end":736533,"line_start":54,"line_end":54,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":736538,"byte_end":736541,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This function does not block the current thread.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":736546,"byte_end":736598,"line_start":56,"line_end":56,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":736603,"byte_end":736612,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4269},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":736826,"byte_end":736831,"line_start":65,"line_end":65,"column_start":19,"column_end":24},"name":"write","qualname":"<SgxThreadRwLock>::write","value":"pub unsafe fn write(&Self) -> SysError","parent":null,"children":[],"decl_id":null,"docs":" Acquires write access to the underlying lock, blocking the current thread\n to do so.\n","sig":null,"attributes":[{"value":"/ Acquires write access to the underlying lock, blocking the current thread","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":736698,"byte_end":736775,"line_start":62,"line_end":62,"column_start":5,"column_end":82}},{"value":"/ to do so.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":736780,"byte_end":736793,"line_start":63,"line_end":63,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":736798,"byte_end":736807,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4270},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":737086,"byte_end":737095,"line_start":74,"line_end":74,"column_start":19,"column_end":28},"name":"try_write","qualname":"<SgxThreadRwLock>::try_write","value":"pub unsafe fn try_write(&Self) -> SysError","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire exclusive access to this lock, returning whether it\n succeeded or not.","sig":null,"attributes":[{"value":"/ Attempts to acquire exclusive access to this lock, returning whether it","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":736887,"byte_end":736962,"line_start":69,"line_end":69,"column_start":5,"column_end":80}},{"value":"/ succeeded or not.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":736967,"byte_end":736988,"line_start":70,"line_end":70,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":736993,"byte_end":736996,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This function does not block the current thread.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":737001,"byte_end":737053,"line_start":72,"line_end":72,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":737058,"byte_end":737067,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4271},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":737247,"byte_end":737258,"line_start":80,"line_end":80,"column_start":19,"column_end":30},"name":"read_unlock","qualname":"<SgxThreadRwLock>::read_unlock","value":"pub unsafe fn read_unlock(&Self) -> SysError","parent":null,"children":[],"decl_id":null,"docs":" Unlocks previously acquired shared access to this lock.\n","sig":null,"attributes":[{"value":"/ Unlocks previously acquired shared access to this lock.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":737155,"byte_end":737214,"line_start":78,"line_end":78,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":737219,"byte_end":737228,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4272},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":737415,"byte_end":737427,"line_start":86,"line_end":86,"column_start":19,"column_end":31},"name":"write_unlock","qualname":"<SgxThreadRwLock>::write_unlock","value":"pub unsafe fn write_unlock(&Self) -> SysError","parent":null,"children":[],"decl_id":null,"docs":" Unlocks previously acquired exclusive access to this lock.\n","sig":null,"attributes":[{"value":"/ Unlocks previously acquired exclusive access to this lock.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":737320,"byte_end":737382,"line_start":84,"line_end":84,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":737387,"byte_end":737396,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4273},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":737574,"byte_end":737581,"line_start":92,"line_end":92,"column_start":19,"column_end":26},"name":"destroy","qualname":"<SgxThreadRwLock>::destroy","value":"pub unsafe fn destroy(&Self) -> SysError","parent":null,"children":[],"decl_id":null,"docs":" Destroys OS-related resources with this RWLock.\n","sig":null,"attributes":[{"value":"/ Destroys OS-related resources with this RWLock.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":737490,"byte_end":737541,"line_start":90,"line_end":90,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":737546,"byte_end":737555,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4274},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":739131,"byte_end":739140,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"SgxRwLock","qualname":"::sync::rwlock::SgxRwLock","value":"SgxRwLock {  }","parent":null,"children":[{"krate":0,"index":4276},{"krate":0,"index":4277},{"krate":0,"index":4278}],"decl_id":null,"docs":" A reader-writer lock","sig":null,"attributes":[{"value":"/ A reader-writer lock","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":737637,"byte_end":737661,"line_start":97,"line_end":97,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":737662,"byte_end":737665,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":737666,"byte_end":737743,"line_start":99,"line_end":99,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":737744,"byte_end":737823,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":737824,"byte_end":737903,"line_start":101,"line_end":101,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":737904,"byte_end":737962,"line_start":102,"line_end":102,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":737963,"byte_end":737966,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":737967,"byte_end":738045,"line_start":104,"line_end":104,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore blocking any threads waiting for the lock to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":738046,"byte_end":738127,"line_start":105,"line_end":105,"column_start":1,"column_end":82}},{"value":"/ become available. An `RwLock` will allow any number of readers to acquire the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":738128,"byte_end":738209,"line_start":106,"line_end":106,"column_start":1,"column_end":82}},{"value":"/ lock as long as a writer is not holding the lock.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":738210,"byte_end":738263,"line_start":107,"line_end":107,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":738264,"byte_end":738267,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ The priority policy of the lock is dependent on the underlying operating","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":738268,"byte_end":738344,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/ system's implementation, and this type does not guarantee that any","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":738345,"byte_end":738415,"line_start":110,"line_end":110,"column_start":1,"column_end":71}},{"value":"/ particular policy will be used.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":738416,"byte_end":738451,"line_start":111,"line_end":111,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":738452,"byte_end":738455,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":738456,"byte_end":738533,"line_start":113,"line_end":113,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":738534,"byte_end":738606,"line_start":114,"line_end":114,"column_start":1,"column_end":73}},{"value":"/ [`Sync`] to allow concurrent access through readers. The RAII guards","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":738607,"byte_end":738679,"line_start":115,"line_end":115,"column_start":1,"column_end":73}},{"value":"/ returned from the locking methods implement [`Deref`] (and [`DerefMut`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":738680,"byte_end":738755,"line_start":116,"line_end":116,"column_start":1,"column_end":76}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":738756,"byte_end":738828,"line_start":117,"line_end":117,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":738829,"byte_end":738832,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ # Poisoning","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":738833,"byte_end":738848,"line_start":119,"line_end":119,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":738849,"byte_end":738852,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ An `RwLock`, like [`Mutex`], will become poisoned on a panic. Note, however,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":738853,"byte_end":738933,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/ that an `RwLock` may only be poisoned if a panic occurs while it is locked","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":738934,"byte_end":739012,"line_start":122,"line_end":122,"column_start":1,"column_end":79}},{"value":"/ exclusively (write mode). If a panic occurs in any reader, then the lock","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":739013,"byte_end":739089,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/ will not be poisoned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":739090,"byte_end":739115,"line_start":124,"line_end":124,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":739116,"byte_end":739119,"line_start":125,"line_end":125,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":4283},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":739550,"byte_end":739568,"line_start":140,"line_end":140,"column_start":12,"column_end":30},"name":"SgxRwLockReadGuard","qualname":"::sync::rwlock::SgxRwLockReadGuard","value":"SgxRwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":4286},{"krate":0,"index":4287}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":739359,"byte_end":739431,"line_start":135,"line_end":135,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":739432,"byte_end":739444,"line_start":136,"line_end":136,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":739445,"byte_end":739448,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] and [`try_read`] methods on","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":739449,"byte_end":739522,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ [`RwLock`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":739523,"byte_end":739538,"line_start":139,"line_end":139,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":4292},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":739970,"byte_end":739989,"line_start":153,"line_end":153,"column_start":12,"column_end":31},"name":"SgxRwLockWriteGuard","qualname":"::sync::rwlock::SgxRwLockWriteGuard","value":"SgxRwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":4295},{"krate":0,"index":4296}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":739773,"byte_end":739849,"line_start":148,"line_end":148,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":739850,"byte_end":739862,"line_start":149,"line_end":149,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":739863,"byte_end":739866,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] and [`try_write`] methods","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":739867,"byte_end":739939,"line_start":151,"line_end":151,"column_start":1,"column_end":73}},{"value":"/ on [`RwLock`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":739940,"byte_end":739958,"line_start":152,"line_end":152,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":4303},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":740298,"byte_end":740301,"line_start":163,"line_end":163,"column_start":12,"column_end":15},"name":"new","qualname":"<SgxRwLock<T>>::new","value":"pub fn new(T) -> SgxRwLock<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.\n","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":740223,"byte_end":740286,"line_start":162,"line_end":162,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4306},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":741522,"byte_end":741526,"line_start":194,"line_end":194,"column_start":12,"column_end":16},"name":"read","qualname":"<SgxRwLock<T>>::read","value":"pub fn read(&Self) -> LockResult<SgxRwLockReadGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with shared read access, blocking the current thread\n until it can be acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with shared read access, blocking the current thread","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":740532,"byte_end":740606,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ until it can be acquired.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":740611,"byte_end":740640,"line_start":174,"line_end":174,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":740645,"byte_end":740648,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ The calling thread will be blocked until there are no more writers which","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":740653,"byte_end":740729,"line_start":176,"line_end":176,"column_start":5,"column_end":81}},{"value":"/ hold the lock. There may be other readers currently inside the lock when","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":740734,"byte_end":740810,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ this method returns. This method does not provide any guarantees with","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":740815,"byte_end":740888,"line_start":178,"line_end":178,"column_start":5,"column_end":78}},{"value":"/ respect to the ordering of whether contentious readers or writers will","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":740893,"byte_end":740967,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ acquire the lock first.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":740972,"byte_end":740999,"line_start":180,"line_end":180,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":741004,"byte_end":741007,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will release this thread's shared access","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":741012,"byte_end":741084,"line_start":182,"line_end":182,"column_start":5,"column_end":77}},{"value":"/ once it is dropped.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":741089,"byte_end":741112,"line_start":183,"line_end":183,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":741117,"byte_end":741120,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":741125,"byte_end":741137,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":741142,"byte_end":741145,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the RwLock is poisoned. An RwLock","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":741150,"byte_end":741225,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ is poisoned whenever a writer panics while holding an exclusive lock.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":741230,"byte_end":741303,"line_start":188,"line_end":188,"column_start":5,"column_end":78}},{"value":"/ The failure will occur immediately after the lock has been acquired.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":741308,"byte_end":741380,"line_start":189,"line_end":189,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":741385,"byte_end":741388,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":741393,"byte_end":741405,"line_start":191,"line_end":191,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":741410,"byte_end":741413,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This function might panic when called if the lock is already held by the current thread.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":741418,"byte_end":741510,"line_start":193,"line_end":193,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":4307},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":742695,"byte_end":742703,"line_start":222,"line_end":222,"column_start":12,"column_end":20},"name":"try_read","qualname":"<SgxRwLock<T>>::try_read","value":"pub fn try_read(&Self) -> TryLockResult<SgxRwLockReadGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this rwlock with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this rwlock with shared read access.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":741922,"byte_end":741982,"line_start":205,"line_end":205,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":741987,"byte_end":741990,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ If the access could not be granted at this time, then `Err` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":741995,"byte_end":742071,"line_start":207,"line_end":207,"column_start":5,"column_end":81}},{"value":"/ Otherwise, an RAII guard is returned which will release the shared access","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":742076,"byte_end":742153,"line_start":208,"line_end":208,"column_start":5,"column_end":82}},{"value":"/ when it is dropped.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":742158,"byte_end":742181,"line_start":209,"line_end":209,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":742186,"byte_end":742189,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ This function does not block.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":742194,"byte_end":742227,"line_start":211,"line_end":211,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":742232,"byte_end":742235,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ This function does not provide any guarantees with respect to the ordering","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":742240,"byte_end":742318,"line_start":213,"line_end":213,"column_start":5,"column_end":83}},{"value":"/ of whether contentious readers or writers will acquire the lock first.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":742323,"byte_end":742397,"line_start":214,"line_end":214,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":742402,"byte_end":742405,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":742410,"byte_end":742422,"line_start":216,"line_end":216,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":742427,"byte_end":742430,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the RwLock is poisoned. An RwLock","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":742435,"byte_end":742510,"line_start":218,"line_end":218,"column_start":5,"column_end":80}},{"value":"/ is poisoned whenever a writer panics while holding an exclusive lock. An","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":742515,"byte_end":742591,"line_start":219,"line_end":219,"column_start":5,"column_end":81}},{"value":"/ error will only be returned if the lock would have otherwise been","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":742596,"byte_end":742665,"line_start":220,"line_end":220,"column_start":5,"column_end":74}},{"value":"/ acquired.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":742670,"byte_end":742683,"line_start":221,"line_end":221,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4308},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":743736,"byte_end":743741,"line_start":250,"line_end":250,"column_start":12,"column_end":17},"name":"write","qualname":"<SgxRwLock<T>>::write","value":"pub fn write(&Self) -> LockResult<SgxRwLockWriteGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with exclusive write access, blocking the current\n thread until it can be acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with exclusive write access, blocking the current","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":742996,"byte_end":743067,"line_start":232,"line_end":232,"column_start":5,"column_end":76}},{"value":"/ thread until it can be acquired.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":743072,"byte_end":743108,"line_start":233,"line_end":233,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":743113,"byte_end":743116,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ This function will not return while other writers or other readers","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":743121,"byte_end":743191,"line_start":235,"line_end":235,"column_start":5,"column_end":75}},{"value":"/ currently have access to the lock.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":743196,"byte_end":743234,"line_start":236,"line_end":236,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":743239,"byte_end":743242,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this rwlock","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":743247,"byte_end":743320,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ when dropped.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":743325,"byte_end":743342,"line_start":239,"line_end":239,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":743347,"byte_end":743350,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":743355,"byte_end":743367,"line_start":241,"line_end":241,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":743372,"byte_end":743375,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the RwLock is poisoned. An RwLock","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":743380,"byte_end":743455,"line_start":243,"line_end":243,"column_start":5,"column_end":80}},{"value":"/ is poisoned whenever a writer panics while holding an exclusive lock.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":743460,"byte_end":743533,"line_start":244,"line_end":244,"column_start":5,"column_end":78}},{"value":"/ An error will be returned when the lock is acquired.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":743538,"byte_end":743594,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":743599,"byte_end":743602,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":743607,"byte_end":743619,"line_start":247,"line_end":247,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":743624,"byte_end":743627,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This function might panic when called if the lock is already held by the current thread.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":743632,"byte_end":743724,"line_start":249,"line_end":249,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":4309},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":744905,"byte_end":744914,"line_start":278,"line_end":278,"column_start":12,"column_end":21},"name":"try_write","qualname":"<SgxRwLock<T>>::try_write","value":"pub fn try_write(&Self) -> TryLockResult<SgxRwLockWriteGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to lock this rwlock with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to lock this rwlock with exclusive write access.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":744141,"byte_end":744202,"line_start":261,"line_end":261,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":744207,"byte_end":744210,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ If the lock could not be acquired at this time, then `Err` is returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":744215,"byte_end":744290,"line_start":263,"line_end":263,"column_start":5,"column_end":80}},{"value":"/ Otherwise, an RAII guard is returned which will release the lock when","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":744295,"byte_end":744368,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/ it is dropped.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":744373,"byte_end":744391,"line_start":265,"line_end":265,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":744396,"byte_end":744399,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ This function does not block.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":744404,"byte_end":744437,"line_start":267,"line_end":267,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":744442,"byte_end":744445,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This function does not provide any guarantees with respect to the ordering","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":744450,"byte_end":744528,"line_start":269,"line_end":269,"column_start":5,"column_end":83}},{"value":"/ of whether contentious readers or writers will acquire the lock first.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":744533,"byte_end":744607,"line_start":270,"line_end":270,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":744612,"byte_end":744615,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":744620,"byte_end":744632,"line_start":272,"line_end":272,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":744637,"byte_end":744640,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the RwLock is poisoned. An RwLock","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":744645,"byte_end":744720,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ is poisoned whenever a writer panics while holding an exclusive lock. An","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":744725,"byte_end":744801,"line_start":275,"line_end":275,"column_start":5,"column_end":81}},{"value":"/ error will only be returned if the lock would have otherwise been","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":744806,"byte_end":744875,"line_start":276,"line_end":276,"column_start":5,"column_end":74}},{"value":"/ acquired.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":744880,"byte_end":744893,"line_start":277,"line_end":277,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4310},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":745494,"byte_end":745505,"line_start":295,"line_end":295,"column_start":12,"column_end":23},"name":"is_poisoned","qualname":"<SgxRwLock<T>>::is_poisoned","value":"pub fn is_poisoned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether the lock is poisoned.","sig":null,"attributes":[{"value":"/ Determines whether the lock is poisoned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":745210,"byte_end":745254,"line_start":288,"line_end":288,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":745259,"byte_end":745262,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ If another thread is active, the lock can still become poisoned at any","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":745267,"byte_end":745341,"line_start":290,"line_end":290,"column_start":5,"column_end":79}},{"value":"/ time. You should not trust a `false` value for program correctness","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":745346,"byte_end":745416,"line_start":291,"line_end":291,"column_start":5,"column_end":75}},{"value":"/ without additional synchronization.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":745421,"byte_end":745460,"line_start":292,"line_end":292,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":745465,"byte_end":745468,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":745473,"byte_end":745482,"line_start":294,"line_end":294,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4311},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":745916,"byte_end":745926,"line_start":307,"line_end":307,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SgxRwLock<T>>::into_inner","value":"pub fn into_inner(Self) -> LockResult<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `RwLock`, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this `RwLock`, returning the underlying data.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":745560,"byte_end":745618,"line_start":299,"line_end":299,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":745623,"byte_end":745626,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":745631,"byte_end":745643,"line_start":301,"line_end":301,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":745648,"byte_end":745651,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the RwLock is poisoned. An RwLock","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":745656,"byte_end":745731,"line_start":303,"line_end":303,"column_start":5,"column_end":80}},{"value":"/ is poisoned whenever a writer panics while holding an exclusive lock. An","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":745736,"byte_end":745812,"line_start":304,"line_end":304,"column_start":5,"column_end":81}},{"value":"/ error will only be returned if the lock would have otherwise been","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":745817,"byte_end":745886,"line_start":305,"line_end":305,"column_start":5,"column_end":74}},{"value":"/ acquired.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":745891,"byte_end":745904,"line_start":306,"line_end":306,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4313},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":747271,"byte_end":747278,"line_start":342,"line_end":342,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SgxRwLock<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> LockResult<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":746742,"byte_end":746797,"line_start":330,"line_end":330,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":746802,"byte_end":746805,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `RwLock` mutably, no actual locking needs to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":746810,"byte_end":746886,"line_start":332,"line_end":332,"column_start":5,"column_end":81}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":746891,"byte_end":746965,"line_start":333,"line_end":333,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":746970,"byte_end":746973,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":746978,"byte_end":746990,"line_start":335,"line_end":335,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":746995,"byte_end":746998,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the RwLock is poisoned. An RwLock","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":747003,"byte_end":747078,"line_start":337,"line_end":337,"column_start":5,"column_end":80}},{"value":"/ is poisoned whenever a writer panics while holding an exclusive lock. An","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":747083,"byte_end":747159,"line_start":338,"line_end":338,"column_start":5,"column_end":81}},{"value":"/ error will only be returned if the lock would have otherwise been","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":747164,"byte_end":747233,"line_start":339,"line_end":339,"column_start":5,"column_end":74}},{"value":"/ acquired.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":747238,"byte_end":747251,"line_start":340,"line_end":340,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":747256,"byte_end":747259,"line_start":341,"line_end":341,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4379},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":753744,"byte_end":753761,"line_start":72,"line_end":72,"column_start":12,"column_end":29},"name":"SgxThreadSpinlock","qualname":"::sync::spinlock::SgxThreadSpinlock","value":"SgxThreadSpinlock {  }","parent":null,"children":[{"krate":0,"index":4380}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4384},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":753933,"byte_end":753936,"line_start":81,"line_end":81,"column_start":18,"column_end":21},"name":"new","qualname":"<SgxThreadSpinlock>::new","value":"pub const fn new() -> SgxThreadSpinlock","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4385},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":754075,"byte_end":754079,"line_start":85,"line_end":85,"column_start":19,"column_end":23},"name":"lock","qualname":"<SgxThreadSpinlock>::lock","value":"pub unsafe fn lock(&Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4386},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":754161,"byte_end":754167,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"name":"unlock","qualname":"<SgxThreadSpinlock>::unlock","value":"pub unsafe fn unlock(&Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4387},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":754247,"byte_end":754258,"line_start":95,"line_end":95,"column_start":12,"column_end":23},"name":"SgxSpinlock","qualname":"::sync::spinlock::SgxSpinlock","value":"SgxSpinlock {  }","parent":null,"children":[{"krate":0,"index":4388}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4392},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":754397,"byte_end":754400,"line_start":103,"line_end":103,"column_start":12,"column_end":15},"name":"new","qualname":"<SgxSpinlock>::new","value":"pub fn new() -> SgxSpinlock","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4393},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":754491,"byte_end":754495,"line_start":107,"line_end":107,"column_start":12,"column_end":16},"name":"lock","qualname":"<SgxSpinlock>::lock","value":"pub fn lock(&Self) -> SgxSpinlockGuard","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4396},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":754744,"byte_end":754760,"line_start":121,"line_end":121,"column_start":12,"column_end":28},"name":"SgxSpinlockGuard","qualname":"::sync::spinlock::SgxSpinlockGuard","value":"SgxSpinlockGuard {  }","parent":null,"children":[{"krate":0,"index":4398}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4407},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","parent":null,"children":[{"krate":0,"index":4408},{"krate":0,"index":4409},{"krate":0,"index":4410},{"krate":0,"index":4411},{"krate":0,"index":4412},{"krate":0,"index":4413},{"krate":0,"index":4414},{"krate":0,"index":4415},{"krate":0,"index":4416},{"krate":0,"index":4417},{"krate":0,"index":4418},{"krate":0,"index":4419},{"krate":0,"index":8082},{"krate":0,"index":8105},{"krate":0,"index":8103},{"krate":0,"index":8099},{"krate":0,"index":8100},{"krate":0,"index":8096},{"krate":0,"index":8097},{"krate":0,"index":8090},{"krate":0,"index":8088},{"krate":0,"index":8085},{"krate":0,"index":8106},{"krate":0,"index":8129},{"krate":0,"index":8127},{"krate":0,"index":8123},{"krate":0,"index":8124},{"krate":0,"index":8120},{"krate":0,"index":8121},{"krate":0,"index":8114},{"krate":0,"index":8112},{"krate":0,"index":8109},{"krate":0,"index":8130},{"krate":0,"index":8135},{"krate":0,"index":8133},{"krate":0,"index":4420},{"krate":0,"index":4430},{"krate":0,"index":4433},{"krate":0,"index":4435},{"krate":0,"index":4438},{"krate":0,"index":4440},{"krate":0,"index":4443},{"krate":0,"index":4445},{"krate":0,"index":4452},{"krate":0,"index":4455},{"krate":0,"index":4457},{"krate":0,"index":4460},{"krate":0,"index":4462},{"krate":0,"index":4464},{"krate":0,"index":4465},{"krate":0,"index":4467},{"krate":0,"index":4469},{"krate":0,"index":4471}],"decl_id":null,"docs":" Temporal quantification.\n","sig":null,"attributes":[{"value":"/ Temporal quantification.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":755944,"byte_end":755972,"line_start":18,"line_end":18,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":8082},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":757263,"byte_end":757270,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::Instant","value":"","parent":null,"children":[],"decl_id":null,"docs":" A measurement of a monotonically nondecreasing clock.\n Opaque and useful only with `Duration`.","sig":null,"attributes":[{"value":"/ A measurement of a monotonically nondecreasing clock.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":756199,"byte_end":756256,"line_start":30,"line_end":30,"column_start":1,"column_end":58}},{"value":"/ Opaque and useful only with `Duration`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":756257,"byte_end":756300,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":756301,"byte_end":756304,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Instants are always guaranteed to be no less than any previously measured","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":756305,"byte_end":756382,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ instant when created, and are often useful for tasks such as measuring","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":756383,"byte_end":756457,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ benchmarks or timing how long an operation takes.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":756458,"byte_end":756511,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":756512,"byte_end":756515,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Note, however, that instants are not guaranteed to be **steady**. In other","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":756516,"byte_end":756594,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ words, each tick of the underlying clock may not be the same length (e.g.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":756595,"byte_end":756672,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ some seconds may be longer than others). An instant may jump forwards or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":756673,"byte_end":756749,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"/ experience time dilation (slow down or speed up), but it will never go","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":756750,"byte_end":756824,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ backwards.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":756825,"byte_end":756839,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":756840,"byte_end":756843,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Instants are opaque types that can only be compared to one another. There is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":756844,"byte_end":756924,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ no method to get \"the number of seconds\" from an instant. Instead, it only","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":756925,"byte_end":757003,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ allows measuring the duration between two instants (or comparing two","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":757004,"byte_end":757076,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ instants).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":757077,"byte_end":757091,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":757092,"byte_end":757095,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The size of an `Instant` struct may vary depending on the target operating","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":757096,"byte_end":757174,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ system.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":757175,"byte_end":757186,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":757187,"byte_end":757190,"line_start":50,"line_end":50,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":8106},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":758587,"byte_end":758597,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"SystemTime","qualname":"::time::SystemTime","value":"","parent":null,"children":[],"decl_id":null,"docs":" A measurement of the system clock, useful for talking to\n external entities like the file system or other processes.","sig":null,"attributes":[{"value":"/ A measurement of the system clock, useful for talking to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":757288,"byte_end":757348,"line_start":54,"line_end":54,"column_start":1,"column_end":61}},{"value":"/ external entities like the file system or other processes.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":757349,"byte_end":757411,"line_start":55,"line_end":55,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":757412,"byte_end":757415,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Distinct from the [`Instant`] type, this time measurement **is not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":757416,"byte_end":757486,"line_start":57,"line_end":57,"column_start":1,"column_end":71}},{"value":"/ monotonic**. This means that you can save a file to the file system, then","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":757487,"byte_end":757564,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ save another file to the file system, **and the second file has a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":757565,"byte_end":757634,"line_start":59,"line_end":59,"column_start":1,"column_end":70}},{"value":"/ `SystemTime` measurement earlier than the first**. In other words, an","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":757635,"byte_end":757708,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/ operation that happens after another operation in real time may have an","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":757709,"byte_end":757784,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ earlier `SystemTime`!","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":757785,"byte_end":757810,"line_start":62,"line_end":62,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":757811,"byte_end":757814,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Consequently, comparing two `SystemTime` instances to learn about the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":757815,"byte_end":757888,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ duration between them returns a [`Result`] instead of an infallible [`Duration`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":757889,"byte_end":757973,"line_start":65,"line_end":65,"column_start":1,"column_end":85}},{"value":"/ to indicate that this sort of time drift may happen and needs to be handled.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":757974,"byte_end":758054,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":758055,"byte_end":758058,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Although a `SystemTime` cannot be directly inspected, the [`UNIX_EPOCH`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":758059,"byte_end":758135,"line_start":68,"line_end":68,"column_start":1,"column_end":77}},{"value":"/ constant is provided in this module as an anchor in time to learn","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":758136,"byte_end":758205,"line_start":69,"line_end":69,"column_start":1,"column_end":70}},{"value":"/ information about a `SystemTime`. By calculating the duration from this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":758206,"byte_end":758281,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ fixed point in time, a `SystemTime` can be converted to a human-readable time,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":758282,"byte_end":758364,"line_start":71,"line_end":71,"column_start":1,"column_end":83}},{"value":"/ or perhaps some other string representation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":758365,"byte_end":758413,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":758414,"byte_end":758417,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The size of a `SystemTime` struct may vary depending on the target operating","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":758418,"byte_end":758498,"line_start":74,"line_end":74,"column_start":1,"column_end":81}},{"value":"/ system.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":758499,"byte_end":758510,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":758511,"byte_end":758514,"line_start":76,"line_end":76,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":8130},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":758820,"byte_end":758835,"line_start":85,"line_end":85,"column_start":12,"column_end":27},"name":"SystemTimeError","qualname":"::time::SystemTimeError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error returned from the `duration_since` and `elapsed` methods on\n `SystemTime`, used to learn how far in the opposite direction a system time\n lies.","sig":null,"attributes":[{"value":"/ An error returned from the `duration_since` and `elapsed` methods on","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":758618,"byte_end":758690,"line_start":80,"line_end":80,"column_start":1,"column_end":73}},{"value":"/ `SystemTime`, used to learn how far in the opposite direction a system time","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":758691,"byte_end":758770,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ lies.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":758771,"byte_end":758780,"line_start":82,"line_end":82,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":758781,"byte_end":758784,"line_start":83,"line_end":83,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":4424},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":761252,"byte_end":761266,"line_start":149,"line_end":149,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"pub fn duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":761059,"byte_end":761131,"line_start":143,"line_end":143,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":761136,"byte_end":761139,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":761144,"byte_end":761156,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":761161,"byte_end":761164,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":761169,"byte_end":761232,"line_start":147,"line_end":147,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":761237,"byte_end":761240,"line_start":148,"line_end":148,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4425},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":761558,"byte_end":761580,"line_start":156,"line_end":156,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"pub fn checked_duration_since(&Self, Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one,\n or None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":761410,"byte_end":761482,"line_start":153,"line_end":153,"column_start":5,"column_end":77}},{"value":"/ or None if that instant is later than this one.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":761487,"byte_end":761538,"line_start":154,"line_end":154,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":761543,"byte_end":761546,"line_start":155,"line_end":155,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4426},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":761843,"byte_end":761868,"line_start":163,"line_end":163,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"pub fn saturating_duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one,\n or zero duration if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":761686,"byte_end":761758,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ or zero duration if that instant is later than this one.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":761763,"byte_end":761823,"line_start":161,"line_end":161,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":761828,"byte_end":761831,"line_start":162,"line_end":162,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4427},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":762621,"byte_end":762632,"line_start":183,"line_end":183,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be represented as\n `Instant` (which means it's inside the bounds of the underlying data structure), `None`\n otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be represented as","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":762404,"byte_end":762494,"line_start":180,"line_end":180,"column_start":5,"column_end":95}},{"value":"/ `Instant` (which means it's inside the bounds of the underlying data structure), `None`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":762499,"byte_end":762590,"line_start":181,"line_end":181,"column_start":5,"column_end":96}},{"value":"/ otherwise.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":762595,"byte_end":762609,"line_start":182,"line_end":182,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":4428},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":762969,"byte_end":762980,"line_start":190,"line_end":190,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be represented as\n `Instant` (which means it's inside the bounds of the underlying data structure), `None`\n otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be represented as","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":762752,"byte_end":762842,"line_start":187,"line_end":187,"column_start":5,"column_end":95}},{"value":"/ `Instant` (which means it's inside the bounds of the underlying data structure), `None`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":762847,"byte_end":762938,"line_start":188,"line_end":188,"column_start":5,"column_end":96}},{"value":"/ otherwise.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":762943,"byte_end":762957,"line_start":189,"line_end":189,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":4429},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":763148,"byte_end":763155,"line_start":196,"line_end":196,"column_start":12,"column_end":19},"name":"get_tup","qualname":"<Instant>::get_tup","value":"pub fn get_tup(&Self) -> (i64, i64)","parent":null,"children":[],"decl_id":null,"docs":" Return a tup (sec, nsec)","sig":null,"attributes":[{"value":"/ Return a tup (sec, nsec)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":763100,"byte_end":763128,"line_start":194,"line_end":194,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":763133,"byte_end":763136,"line_start":195,"line_end":195,"column_start":5,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":4446},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":765019,"byte_end":765029,"line_start":259,"line_end":259,"column_start":15,"column_end":25},"name":"UNIX_EPOCH","qualname":"::time::SystemTime::UNIX_EPOCH","value":"SystemTime","parent":{"krate":0,"index":4445},"children":[],"decl_id":null,"docs":" An anchor in time which can be used to create new `SystemTime` instances or\n learn about where in time a `SystemTime` lies.","sig":null,"attributes":[{"value":"/ An anchor in time which can be used to create new `SystemTime` instances or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":764460,"byte_end":764539,"line_start":250,"line_end":250,"column_start":5,"column_end":84}},{"value":"/ learn about where in time a `SystemTime` lies.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":764544,"byte_end":764594,"line_start":251,"line_end":251,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":764599,"byte_end":764602,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ This constant is defined to be \"1970-01-01 00:00:00 UTC\" on all systems with","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":764607,"byte_end":764687,"line_start":253,"line_end":253,"column_start":5,"column_end":85}},{"value":"/ respect to the system clock. Using `duration_since` on an existing","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":764692,"byte_end":764762,"line_start":254,"line_end":254,"column_start":5,"column_end":75}},{"value":"/ `SystemTime` instance can tell how far away from this point in time a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":764767,"byte_end":764840,"line_start":255,"line_end":255,"column_start":5,"column_end":78}},{"value":"/ measurement lies, and using `UNIX_EPOCH + duration` can be used to create a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":764845,"byte_end":764924,"line_start":256,"line_end":256,"column_start":5,"column_end":84}},{"value":"/ `SystemTime` instance to represent another fixed point in time.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":764929,"byte_end":764996,"line_start":257,"line_end":257,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":765001,"byte_end":765004,"line_start":258,"line_end":258,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4448},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":766292,"byte_end":766306,"line_start":290,"line_end":290,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<SystemTime>::duration_since","value":"pub fn duration_since(&Self, SystemTime) -> Result<Duration, SystemTimeError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from an earlier point in time.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from an earlier point in time.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":765323,"byte_end":765392,"line_start":272,"line_end":272,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":765397,"byte_end":765400,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ This function may fail because measurements taken earlier are not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":765405,"byte_end":765474,"line_start":274,"line_end":274,"column_start":5,"column_end":74}},{"value":"/ guaranteed to always be before later measurements (due to anomalies such","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":765479,"byte_end":765555,"line_start":275,"line_end":275,"column_start":5,"column_end":81}},{"value":"/ as the system clock being adjusted either forwards or backwards).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":765560,"byte_end":765629,"line_start":276,"line_end":276,"column_start":5,"column_end":74}},{"value":"/ [`Instant`] can be used to measure elapsed time without this risk of failure.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":765634,"byte_end":765715,"line_start":277,"line_end":277,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":765720,"byte_end":765723,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ If successful, [`Ok`]`(`[`Duration`]`)` is returned where the duration represents","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":765728,"byte_end":765813,"line_start":279,"line_end":279,"column_start":5,"column_end":90}},{"value":"/ the amount of time elapsed from the specified measurement to this one.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":765818,"byte_end":765892,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":765897,"byte_end":765900,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Returns an [`Err`] if `earlier` is later than `self`, and the error","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":765905,"byte_end":765976,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/ contains how far from `self` the time is.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":765981,"byte_end":766026,"line_start":283,"line_end":283,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":766031,"byte_end":766034,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ [`Ok`]: ../../std/result/enum.Result.html#variant.Ok","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":766039,"byte_end":766095,"line_start":285,"line_end":285,"column_start":5,"column_end":61}},{"value":"/ [`Duration`]: ../../std/time/struct.Duration.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":766100,"byte_end":766153,"line_start":286,"line_end":286,"column_start":5,"column_end":58}},{"value":"/ [`Err`]: ../../std/result/enum.Result.html#variant.Err","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":766158,"byte_end":766216,"line_start":287,"line_end":287,"column_start":5,"column_end":63}},{"value":"/ [`Instant`]: ../../std/time/struct.Instant.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":766221,"byte_end":766272,"line_start":288,"line_end":288,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":766277,"byte_end":766280,"line_start":289,"line_end":289,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4449},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":767823,"byte_end":767834,"line_start":321,"line_end":321,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<SystemTime>::checked_add","value":"pub fn checked_add(&Self, Duration) -> Option<SystemTime>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be represented as\n `SystemTime` (which means it's inside the bounds of the underlying data structure), `None`\n otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be represented as","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":767603,"byte_end":767693,"line_start":318,"line_end":318,"column_start":5,"column_end":95}},{"value":"/ `SystemTime` (which means it's inside the bounds of the underlying data structure), `None`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":767698,"byte_end":767792,"line_start":319,"line_end":319,"column_start":5,"column_end":99}},{"value":"/ otherwise.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":767797,"byte_end":767811,"line_start":320,"line_end":320,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":4450},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":768180,"byte_end":768191,"line_start":328,"line_end":328,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<SystemTime>::checked_sub","value":"pub fn checked_sub(&Self, Duration) -> Option<SystemTime>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be represented as\n `SystemTime` (which means it's inside the bounds of the underlying data structure), `None`\n otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be represented as","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":767960,"byte_end":768050,"line_start":325,"line_end":325,"column_start":5,"column_end":95}},{"value":"/ `SystemTime` (which means it's inside the bounds of the underlying data structure), `None`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":768055,"byte_end":768149,"line_start":326,"line_end":326,"column_start":5,"column_end":99}},{"value":"/ otherwise.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":768154,"byte_end":768168,"line_start":327,"line_end":327,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":4451},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":768365,"byte_end":768372,"line_start":334,"line_end":334,"column_start":12,"column_end":19},"name":"get_tup","qualname":"<SystemTime>::get_tup","value":"pub fn get_tup(&Self) -> (i64, i64)","parent":null,"children":[],"decl_id":null,"docs":" Return a tup (sec, nsec)","sig":null,"attributes":[{"value":"/ Return a tup (sec, nsec)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":768317,"byte_end":768345,"line_start":332,"line_end":332,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":768350,"byte_end":768353,"line_start":333,"line_end":333,"column_start":5,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":4464},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":770114,"byte_end":770124,"line_start":390,"line_end":390,"column_start":11,"column_end":21},"name":"UNIX_EPOCH","qualname":"::time::UNIX_EPOCH","value":"SystemTime","parent":null,"children":[],"decl_id":null,"docs":" An anchor in time which can be used to create new `SystemTime` instances or\n learn about where in time a `SystemTime` lies.","sig":null,"attributes":[{"value":"/ An anchor in time which can be used to create new `SystemTime` instances or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":769525,"byte_end":769604,"line_start":379,"line_end":379,"column_start":1,"column_end":80}},{"value":"/ learn about where in time a `SystemTime` lies.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":769605,"byte_end":769655,"line_start":380,"line_end":380,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":769656,"byte_end":769659,"line_start":381,"line_end":381,"column_start":1,"column_end":4}},{"value":"/ This constant is defined to be \"1970-01-01 00:00:00 UTC\" on all systems with","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":769660,"byte_end":769740,"line_start":382,"line_end":382,"column_start":1,"column_end":81}},{"value":"/ respect to the system clock. Using `duration_since` on an existing","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":769741,"byte_end":769811,"line_start":383,"line_end":383,"column_start":1,"column_end":71}},{"value":"/ [`SystemTime`] instance can tell how far away from this point in time a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":769812,"byte_end":769887,"line_start":384,"line_end":384,"column_start":1,"column_end":76}},{"value":"/ measurement lies, and using `UNIX_EPOCH + duration` can be used to create a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":769888,"byte_end":769967,"line_start":385,"line_end":385,"column_start":1,"column_end":80}},{"value":"/ [`SystemTime`] instance to represent another fixed point in time.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":769968,"byte_end":770037,"line_start":386,"line_end":386,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":770038,"byte_end":770041,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ [`SystemTime`]: ../../std/time/struct.SystemTime.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":770042,"byte_end":770099,"line_start":388,"line_end":388,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":770100,"byte_end":770103,"line_start":389,"line_end":389,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":4466},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":770801,"byte_end":770809,"line_start":404,"line_end":404,"column_start":12,"column_end":20},"name":"duration","qualname":"<SystemTimeError>::duration","value":"pub fn duration(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the positive duration which represents how far forward the\n second system time was from the first.","sig":null,"attributes":[{"value":"/ Returns the positive duration which represents how far forward the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":770197,"byte_end":770267,"line_start":393,"line_end":393,"column_start":5,"column_end":75}},{"value":"/ second system time was from the first.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":770272,"byte_end":770314,"line_start":394,"line_end":394,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":770319,"byte_end":770322,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ A `SystemTimeError` is returned from the [`duration_since`] and [`elapsed`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":770327,"byte_end":770406,"line_start":396,"line_end":396,"column_start":5,"column_end":84}},{"value":"/ methods of [`SystemTime`] whenever the second system time represents a point later","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":770411,"byte_end":770497,"line_start":397,"line_end":397,"column_start":5,"column_end":91}},{"value":"/ in time than the `self` of the method call.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":770502,"byte_end":770549,"line_start":398,"line_end":398,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":770554,"byte_end":770557,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ [`duration_since`]: ../../std/time/struct.SystemTime.html#method.duration_since","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":770562,"byte_end":770645,"line_start":400,"line_end":400,"column_start":5,"column_end":88}},{"value":"/ [`elapsed`]: ../../std/time/struct.SystemTime.html#method.elapsed","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":770650,"byte_end":770719,"line_start":401,"line_end":401,"column_start":5,"column_end":74}},{"value":"/ [`SystemTime`]: ../../std/time/struct.SystemTime.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":770724,"byte_end":770781,"line_start":402,"line_end":402,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":770786,"byte_end":770789,"line_start":403,"line_end":403,"column_start":5,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":4473},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"enclave","qualname":"::enclave","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","parent":null,"children":[{"krate":0,"index":4474},{"krate":0,"index":4475},{"krate":0,"index":4476},{"krate":0,"index":4477},{"krate":0,"index":4478},{"krate":0,"index":4479},{"krate":0,"index":4480},{"krate":0,"index":4481},{"krate":0,"index":4482},{"krate":0,"index":4483},{"krate":0,"index":4484},{"krate":0,"index":4485},{"krate":0,"index":4486},{"krate":0,"index":4487},{"krate":0,"index":4488},{"krate":0,"index":4489},{"krate":0,"index":4490},{"krate":0,"index":4491},{"krate":0,"index":4492},{"krate":0,"index":4493},{"krate":0,"index":4494},{"krate":0,"index":4495},{"krate":0,"index":4496},{"krate":0,"index":4497},{"krate":0,"index":4498},{"krate":0,"index":4499},{"krate":0,"index":4501}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4489},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":772584,"byte_end":772600,"line_start":36,"line_end":36,"column_start":8,"column_end":24},"name":"get_enclave_base","qualname":"::enclave::get_enclave_base","value":"pub fn get_enclave_base() -> *const u8","parent":null,"children":[],"decl_id":null,"docs":"\n get_enclave_base is to get enclave map base address.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":772502,"byte_end":772505,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ get_enclave_base is to get enclave map base address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":772506,"byte_end":772562,"line_start":33,"line_end":33,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":772563,"byte_end":772566,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":772567,"byte_end":772576,"line_start":35,"line_end":35,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4490},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":772732,"byte_end":772748,"line_start":44,"line_end":44,"column_start":8,"column_end":24},"name":"get_enclave_size","qualname":"::enclave::get_enclave_size","value":"pub fn get_enclave_size() -> usize","parent":null,"children":[],"decl_id":null,"docs":"\n get_enclave_size is to get enclave map size.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":772658,"byte_end":772661,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ get_enclave_size is to get enclave map size.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":772662,"byte_end":772710,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":772711,"byte_end":772714,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":772715,"byte_end":772724,"line_start":43,"line_end":43,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4491},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":772874,"byte_end":772887,"line_start":52,"line_end":52,"column_start":8,"column_end":21},"name":"get_heap_base","qualname":"::enclave::get_heap_base","value":"pub fn get_heap_base() -> *const u8","parent":null,"children":[],"decl_id":null,"docs":"\n get_heap_base is to get heap base address.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":772802,"byte_end":772805,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ get_heap_base is to get heap base address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":772806,"byte_end":772852,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":772853,"byte_end":772856,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":772857,"byte_end":772866,"line_start":51,"line_end":51,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4492},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773006,"byte_end":773019,"line_start":60,"line_end":60,"column_start":8,"column_end":21},"name":"get_heap_size","qualname":"::enclave::get_heap_size","value":"pub fn get_heap_size() -> usize","parent":null,"children":[],"decl_id":null,"docs":"\n get_heap_size is to get heap size.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":772942,"byte_end":772945,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ get_heap_size is to get heap size.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":772946,"byte_end":772984,"line_start":57,"line_end":57,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":772985,"byte_end":772988,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":772989,"byte_end":772998,"line_start":59,"line_end":59,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4493},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773153,"byte_end":773166,"line_start":68,"line_end":68,"column_start":8,"column_end":21},"name":"get_rsrv_base","qualname":"::enclave::get_rsrv_base","value":"pub fn get_rsrv_base() -> *const u8","parent":null,"children":[],"decl_id":null,"docs":"\n get_rsrv_base is to get reserved memory base address.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773070,"byte_end":773073,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ get_rsrv_base is to get reserved memory base address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773074,"byte_end":773131,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773132,"byte_end":773135,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773136,"byte_end":773145,"line_start":67,"line_end":67,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4494},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773296,"byte_end":773309,"line_start":76,"line_end":76,"column_start":8,"column_end":21},"name":"get_rsrv_size","qualname":"::enclave::get_rsrv_size","value":"pub fn get_rsrv_size() -> usize","parent":null,"children":[],"decl_id":null,"docs":"\n get_rsrv_size is to get reserved memory size.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773221,"byte_end":773224,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ get_rsrv_size is to get reserved memory size.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773225,"byte_end":773274,"line_start":73,"line_end":73,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773275,"byte_end":773278,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773279,"byte_end":773288,"line_start":75,"line_end":75,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4495},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773431,"byte_end":773446,"line_start":84,"line_end":84,"column_start":8,"column_end":23},"name":"get_tcs_max_num","qualname":"::enclave::get_tcs_max_num","value":"pub fn get_tcs_max_num() -> u32","parent":null,"children":[],"decl_id":null,"docs":"\n get_tcs_max_num is to get max tcs number.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773360,"byte_end":773363,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ get_tcs_max_num is to get max tcs number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773364,"byte_end":773409,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773410,"byte_end":773413,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773414,"byte_end":773423,"line_start":83,"line_end":83,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4496},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773565,"byte_end":773582,"line_start":91,"line_end":91,"column_start":8,"column_end":25},"name":"get_thread_policy","qualname":"::enclave::get_thread_policy","value":"pub fn get_thread_policy() -> SgxThreadPolicy","parent":null,"children":[],"decl_id":null,"docs":"\n get_thread_policy is to get TCS policy.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773496,"byte_end":773499,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ get_thread_policy is to get TCS policy.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773500,"byte_end":773543,"line_start":88,"line_end":88,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773544,"byte_end":773547,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"inline","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773548,"byte_end":773557,"line_start":90,"line_end":90,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4497},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773703,"byte_end":773717,"line_start":98,"line_end":98,"column_start":8,"column_end":22},"name":"get_enclave_id","qualname":"::enclave::get_enclave_id","value":"pub fn get_enclave_id() -> sgx_enclave_id_t","parent":null,"children":[],"decl_id":null,"docs":"\n get_enclave_id is to get enclave ID.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773647,"byte_end":773650,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ get_enclave_id is to get enclave ID.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773651,"byte_end":773691,"line_start":96,"line_end":96,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773692,"byte_end":773695,"line_start":97,"line_end":97,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":4498},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773859,"byte_end":773873,"line_start":105,"line_end":105,"column_start":8,"column_end":22},"name":"set_enclave_id","qualname":"::enclave::set_enclave_id","value":"pub fn set_enclave_id(sgx_enclave_id_t)","parent":null,"children":[],"decl_id":null,"docs":"\n set_enclave_id is to set enclave ID.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773803,"byte_end":773806,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ set_enclave_id is to set enclave ID.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773807,"byte_end":773847,"line_start":103,"line_end":103,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773848,"byte_end":773851,"line_start":104,"line_end":104,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":4499},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":774033,"byte_end":774049,"line_start":112,"line_end":112,"column_start":8,"column_end":24},"name":"get_enclave_path","qualname":"::enclave::get_enclave_path","value":"pub fn get_enclave_path() -> Option<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":"\n get_enclave_path is to get the path or name of the enclave.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773954,"byte_end":773957,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ get_enclave_path is to get the path or name of the enclave.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":773958,"byte_end":774021,"line_start":110,"line_end":110,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":774022,"byte_end":774025,"line_start":111,"line_end":111,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":4501},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":774295,"byte_end":774311,"line_start":124,"line_end":124,"column_start":8,"column_end":24},"name":"set_enclave_path","qualname":"::enclave::set_enclave_path","value":"pub fn set_enclave_path<P: AsRef<Path>>(P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"\n set_enclave_path is to set the path or name of the enclave.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":774216,"byte_end":774219,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ set_enclave_path is to set the path or name of the enclave.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":774220,"byte_end":774283,"line_start":122,"line_end":122,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/enclave.rs","byte_start":774284,"byte_end":774287,"line_start":123,"line_end":123,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":4503},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"untrusted","qualname":"::untrusted","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/mod.rs","parent":null,"children":[{"krate":0,"index":4504},{"krate":0,"index":4506},{"krate":0,"index":4531}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4504},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/fs.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::untrusted::fs","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/fs.rs","parent":null,"children":[{"krate":0,"index":4505}],"decl_id":null,"docs":" Filesystem manipulation operations.\n","sig":null,"attributes":[{"value":"/ Filesystem manipulation operations.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/fs.rs","byte_start":776223,"byte_end":776262,"line_start":18,"line_end":18,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":4506},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/path.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"path","qualname":"::untrusted::path","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/path.rs","parent":null,"children":[{"krate":0,"index":4507},{"krate":0,"index":4508},{"krate":0,"index":4509},{"krate":0,"index":4510},{"krate":0,"index":4511},{"krate":0,"index":4520}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4511},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/path.rs","byte_start":777189,"byte_end":777195,"line_start":23,"line_end":23,"column_start":11,"column_end":17},"name":"PathEx","qualname":"::untrusted::path::PathEx","value":"PathEx","parent":null,"children":[{"krate":0,"index":4512},{"krate":0,"index":4513},{"krate":0,"index":4514},{"krate":0,"index":4515},{"krate":0,"index":4516},{"krate":0,"index":4517},{"krate":0,"index":4518},{"krate":0,"index":4519}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4512},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/path.rs","byte_start":777205,"byte_end":777213,"line_start":24,"line_end":24,"column_start":8,"column_end":16},"name":"metadata","qualname":"::untrusted::path::PathEx::metadata","value":"pub fn metadata(&Self) -> io::Result<fs::Metadata>","parent":{"krate":0,"index":4511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4513},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/path.rs","byte_start":777257,"byte_end":777273,"line_start":25,"line_end":25,"column_start":8,"column_end":24},"name":"symlink_metadata","qualname":"::untrusted::path::PathEx::symlink_metadata","value":"pub fn symlink_metadata(&Self) -> io::Result<fs::Metadata>","parent":{"krate":0,"index":4511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4514},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/path.rs","byte_start":777317,"byte_end":777329,"line_start":26,"line_end":26,"column_start":8,"column_end":20},"name":"canonicalize","qualname":"::untrusted::path::PathEx::canonicalize","value":"pub fn canonicalize(&Self) -> io::Result<PathBuf>","parent":{"krate":0,"index":4511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4515},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/path.rs","byte_start":777368,"byte_end":777377,"line_start":27,"line_end":27,"column_start":8,"column_end":17},"name":"read_link","qualname":"::untrusted::path::PathEx::read_link","value":"pub fn read_link(&Self) -> io::Result<PathBuf>","parent":{"krate":0,"index":4511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4516},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/path.rs","byte_start":777416,"byte_end":777424,"line_start":28,"line_end":28,"column_start":8,"column_end":16},"name":"read_dir","qualname":"::untrusted::path::PathEx::read_dir","value":"pub fn read_dir(&Self) -> io::Result<fs::ReadDir>","parent":{"krate":0,"index":4511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4517},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/path.rs","byte_start":777467,"byte_end":777473,"line_start":29,"line_end":29,"column_start":8,"column_end":14},"name":"exists","qualname":"::untrusted::path::PathEx::exists","value":"pub fn exists(&Self) -> bool","parent":{"krate":0,"index":4511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4518},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/path.rs","byte_start":777497,"byte_end":777504,"line_start":30,"line_end":30,"column_start":8,"column_end":15},"name":"is_file","qualname":"::untrusted::path::PathEx::is_file","value":"pub fn is_file(&Self) -> bool","parent":{"krate":0,"index":4511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4519},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/path.rs","byte_start":777528,"byte_end":777534,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"is_dir","qualname":"::untrusted::path::PathEx::is_dir","value":"pub fn is_dir(&Self) -> bool","parent":{"krate":0,"index":4511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4531},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/time.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::untrusted::time","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/time.rs","parent":null,"children":[{"krate":0,"index":4532},{"krate":0,"index":4533},{"krate":0,"index":4534},{"krate":0,"index":4535},{"krate":0,"index":4536},{"krate":0,"index":4537},{"krate":0,"index":4540},{"krate":0,"index":4543},{"krate":0,"index":4546}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4537},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/time.rs","byte_start":781374,"byte_end":781383,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"name":"InstantEx","qualname":"::untrusted::time::InstantEx","value":"InstantEx","parent":null,"children":[{"krate":0,"index":4538},{"krate":0,"index":4539}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4538},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/time.rs","byte_start":781393,"byte_end":781396,"line_start":21,"line_end":21,"column_start":8,"column_end":11},"name":"now","qualname":"::untrusted::time::InstantEx::now","value":"pub fn now() -> Instant","parent":{"krate":0,"index":4537},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4539},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/time.rs","byte_start":781418,"byte_end":781425,"line_start":22,"line_end":22,"column_start":8,"column_end":15},"name":"elapsed","qualname":"::untrusted::time::InstantEx::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":{"krate":0,"index":4537},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4543},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/time.rs","byte_start":781973,"byte_end":781985,"line_start":45,"line_end":45,"column_start":11,"column_end":23},"name":"SystemTimeEx","qualname":"::untrusted::time::SystemTimeEx","value":"SystemTimeEx","parent":null,"children":[{"krate":0,"index":4544},{"krate":0,"index":4545}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4544},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/time.rs","byte_start":781995,"byte_end":781998,"line_start":46,"line_end":46,"column_start":8,"column_end":11},"name":"now","qualname":"::untrusted::time::SystemTimeEx::now","value":"pub fn now() -> SystemTime","parent":{"krate":0,"index":4543},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4545},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/time.rs","byte_start":782023,"byte_end":782030,"line_start":47,"line_end":47,"column_start":8,"column_end":15},"name":"elapsed","qualname":"::untrusted::time::SystemTimeEx::elapsed","value":"pub fn elapsed(&Self) -> Result<Duration, SystemTimeError>","parent":{"krate":0,"index":4543},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4549},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5974,"byte_end":5978,"line_start":216,"line_end":216,"column_start":9,"column_end":13},"name":"task","qualname":"::task","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","parent":null,"children":[{"krate":0,"index":4550}],"decl_id":null,"docs":" Types and Traits for working with asynchronous tasks.\n","sig":null,"attributes":[{"value":"/ Types and Traits for working with asynchronous tasks.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5985,"byte_end":6042,"line_start":217,"line_end":217,"column_start":5,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":4551},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/future.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/future.rs","parent":null,"children":[{"krate":0,"index":4552}],"decl_id":null,"docs":" Asynchronous values.\n","sig":null,"attributes":[{"value":"/ Asynchronous values.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/future.rs","byte_start":783793,"byte_end":783817,"line_start":18,"line_end":18,"column_start":1,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":4637},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":801237,"byte_end":801248,"line_start":256,"line_end":256,"column_start":11,"column_end":22},"name":"OsStringExt","qualname":"::sys_common::os_str_bytes::OsStringExt","value":"OsStringExt","parent":null,"children":[{"krate":0,"index":4638},{"krate":0,"index":4639}],"decl_id":null,"docs":" Platform-specific extensions to [`OsString`].","sig":null,"attributes":[{"value":"/ Platform-specific extensions to [`OsString`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":801114,"byte_end":801163,"line_start":253,"line_end":253,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":801164,"byte_end":801167,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ [`OsString`]: ../../../../std/ffi/struct.OsString.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":801168,"byte_end":801226,"line_start":255,"line_end":255,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4638},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":801434,"byte_end":801442,"line_start":262,"line_end":262,"column_start":8,"column_end":16},"name":"from_vec","qualname":"::sys_common::os_str_bytes::OsStringExt::from_vec","value":"pub fn from_vec(Vec<u8>) -> Self","parent":{"krate":0,"index":4637},"children":[],"decl_id":null,"docs":" Creates an [`OsString`] from a byte vector.","sig":null,"attributes":[{"value":"/ Creates an [`OsString`] from a byte vector.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":801255,"byte_end":801302,"line_start":257,"line_end":257,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":801307,"byte_end":801310,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ See the module docmentation for an example.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":801315,"byte_end":801362,"line_start":259,"line_end":259,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":801367,"byte_end":801370,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ [`OsString`]: ../../../ffi/struct.OsString.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":801375,"byte_end":801426,"line_start":261,"line_end":261,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4639},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":801662,"byte_end":801670,"line_start":269,"line_end":269,"column_start":8,"column_end":16},"name":"into_vec","qualname":"::sys_common::os_str_bytes::OsStringExt::into_vec","value":"pub fn into_vec(Self) -> Vec<u8>","parent":{"krate":0,"index":4637},"children":[],"decl_id":null,"docs":" Yields the underlying byte vector of this [`OsString`].","sig":null,"attributes":[{"value":"/ Yields the underlying byte vector of this [`OsString`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":801471,"byte_end":801530,"line_start":264,"line_end":264,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":801535,"byte_end":801538,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ See the module docmentation for an example.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":801543,"byte_end":801590,"line_start":266,"line_end":266,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":801595,"byte_end":801598,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ [`OsString`]: ../../../ffi/struct.OsString.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":801603,"byte_end":801654,"line_start":268,"line_end":268,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":4643},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":802014,"byte_end":802022,"line_start":284,"line_end":284,"column_start":11,"column_end":19},"name":"OsStrExt","qualname":"::sys_common::os_str_bytes::OsStrExt","value":"OsStrExt","parent":null,"children":[{"krate":0,"index":4644},{"krate":0,"index":4645}],"decl_id":null,"docs":" Platform-specific extensions to [`OsStr`].","sig":null,"attributes":[{"value":"/ Platform-specific extensions to [`OsStr`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":801900,"byte_end":801946,"line_start":281,"line_end":281,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":801947,"byte_end":801950,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ [`OsStr`]: ../../../../std/ffi/struct.OsStr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":801951,"byte_end":802003,"line_start":283,"line_end":283,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4644},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":802199,"byte_end":802209,"line_start":290,"line_end":290,"column_start":8,"column_end":18},"name":"from_bytes","qualname":"::sys_common::os_str_bytes::OsStrExt::from_bytes","value":"pub fn from_bytes(&[u8]) -> &Self","parent":{"krate":0,"index":4643},"children":[],"decl_id":null,"docs":" Creates an [`OsStr`] from a byte slice.","sig":null,"attributes":[{"value":"/ Creates an [`OsStr`] from a byte slice.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":802029,"byte_end":802072,"line_start":285,"line_end":285,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":802077,"byte_end":802080,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ See the module documentation for an example.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":802085,"byte_end":802133,"line_start":287,"line_end":287,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":802138,"byte_end":802141,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ [`OsStr`]: ../../../ffi/struct.OsStr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":802146,"byte_end":802191,"line_start":289,"line_end":289,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4645},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":802423,"byte_end":802431,"line_start":297,"line_end":297,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::sys_common::os_str_bytes::OsStrExt::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":{"krate":0,"index":4643},"children":[],"decl_id":null,"docs":" Gets the underlying byte view of the [`OsStr`] slice.","sig":null,"attributes":[{"value":"/ Gets the underlying byte view of the [`OsStr`] slice.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":802239,"byte_end":802296,"line_start":292,"line_end":292,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":802301,"byte_end":802304,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ See the module documentation for an example.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":802309,"byte_end":802357,"line_start":294,"line_end":294,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":802362,"byte_end":802365,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ [`OsStr`]: ../../../ffi/struct.OsStr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":802370,"byte_end":802415,"line_start":296,"line_end":296,"column_start":5,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":4686},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/backtrace.rs","byte_start":806800,"byte_end":806828,"line_start":133,"line_end":133,"column_start":8,"column_end":36},"name":"__rust_begin_short_backtrace","qualname":"::sys_common::backtrace::__rust_begin_short_backtrace","value":"pub fn __rust_begin_short_backtrace<F, T>(F) -> T where F: FnOnce() -> T,\nF: Send, T: Send","parent":null,"children":[],"decl_id":null,"docs":" Fixed frame used to clean the backtrace with `RUST_BACKTRACE=1`. Note that\n this is only inline(never) when backtraces in libstd are enabled, otherwise\n it's fine to optimize away.\n","sig":null,"attributes":[{"value":"/ Fixed frame used to clean the backtrace with `RUST_BACKTRACE=1`. Note that","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/backtrace.rs","byte_start":806552,"byte_end":806630,"line_start":129,"line_end":129,"column_start":1,"column_end":79}},{"value":"/ this is only inline(never) when backtraces in libstd are enabled, otherwise","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/backtrace.rs","byte_start":806631,"byte_end":806710,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ it's fine to optimize away.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/backtrace.rs","byte_start":806711,"byte_end":806742,"line_start":131,"line_end":131,"column_start":1,"column_end":32}},{"value":"inline(never)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/backtrace.rs","byte_start":806777,"byte_end":806790,"line_start":132,"line_end":132,"column_start":35,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8145},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/backtrace.rs","byte_start":807173,"byte_end":807178,"line_start":152,"line_end":152,"column_start":5,"column_end":10},"name":"Short","qualname":"::sys_common::backtrace::PrintFormat::Short","value":"PrintFormat::Short","parent":{"krate":0,"index":8144},"children":[],"decl_id":null,"docs":" Show only relevant data from the backtrace.\n","sig":null,"attributes":[{"value":"/ Show only relevant data from the backtrace.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/backtrace.rs","byte_start":807121,"byte_end":807168,"line_start":151,"line_end":151,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8148},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/backtrace.rs","byte_start":807246,"byte_end":807250,"line_start":154,"line_end":154,"column_start":5,"column_end":9},"name":"Full","qualname":"::sys_common::backtrace::PrintFormat::Full","value":"PrintFormat::Full","parent":{"krate":0,"index":8144},"children":[],"decl_id":null,"docs":" Show all the frames with absolute path for files.\n","sig":null,"attributes":[{"value":"/ Show all the frames with absolute path for files.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/backtrace.rs","byte_start":807188,"byte_end":807241,"line_start":153,"line_end":153,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":8144},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/backtrace.rs","byte_start":807103,"byte_end":807114,"line_start":150,"line_end":150,"column_start":10,"column_end":21},"name":"PrintFormat","qualname":"::sys_common::backtrace::PrintFormat","value":"pub enum PrintFormat {\n\n    /// Show only relevant data from the backtrace.\n    Short = ,\n\n    /// Show all the frames with absolute path for files.\n    Full = ,\n}","parent":null,"children":[{"krate":0,"index":8145},{"krate":0,"index":8148}],"decl_id":null,"docs":" Controls how the backtrace should be formatted.\n","sig":null,"attributes":[{"value":"/ Controls how the backtrace should be formatted.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/backtrace.rs","byte_start":806997,"byte_end":807048,"line_start":148,"line_end":148,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4862},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":838859,"byte_end":838870,"line_start":72,"line_end":72,"column_start":12,"column_end":23},"name":"PoisonError","qualname":"::sys_common::poison::PoisonError","value":"PoisonError {  }","parent":null,"children":[{"krate":0,"index":4864}],"decl_id":null,"docs":" A type of error which can be returned whenever a lock is acquired.","sig":null,"attributes":[{"value":"/ A type of error which can be returned whenever a lock is acquired.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":838498,"byte_end":838568,"line_start":66,"line_end":66,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":838569,"byte_end":838572,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Both [`SgxMutex`]es and [`SgxRwLock`]s are poisoned whenever a thread fails while the lock","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":838573,"byte_end":838667,"line_start":68,"line_end":68,"column_start":1,"column_end":95}},{"value":"/ is held. The precise semantics for when a lock is poisoned is documented on","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":838668,"byte_end":838747,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ each lock, but once a lock is poisoned then all future acquisitions will","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":838748,"byte_end":838824,"line_start":70,"line_end":70,"column_start":1,"column_end":77}},{"value":"/ return this error.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":838825,"byte_end":838847,"line_start":71,"line_end":71,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4867},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":839267,"byte_end":839275,"line_start":83,"line_end":83,"column_start":5,"column_end":13},"name":"Poisoned","qualname":"::sys_common::poison::TryLockError::Poisoned","value":"TryLockError::Poisoned(PoisonError<T>)","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":" The lock could not be acquired because another thread failed while holding\n the lock.\n","sig":null,"attributes":[{"value":"/ The lock could not be acquired because another thread failed while holding","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":839166,"byte_end":839244,"line_start":81,"line_end":81,"column_start":5,"column_end":83}},{"value":"/ the lock.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":839249,"byte_end":839262,"line_start":82,"line_end":82,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4870},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":839402,"byte_end":839412,"line_start":86,"line_end":86,"column_start":5,"column_end":15},"name":"WouldBlock","qualname":"::sys_common::poison::TryLockError::WouldBlock","value":"TryLockError::WouldBlock","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":" The lock could not be acquired at this time because the operation would\n otherwise block.\n","sig":null,"attributes":[{"value":"/ The lock could not be acquired at this time because the operation would","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":839297,"byte_end":839372,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ otherwise block.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":839377,"byte_end":839397,"line_start":85,"line_end":85,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":4865},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":839144,"byte_end":839156,"line_start":80,"line_end":80,"column_start":10,"column_end":22},"name":"TryLockError","qualname":"::sys_common::poison::TryLockError","value":"pub enum TryLockError<T> {\n\n    /// The lock could not be acquired because another thread failed while holding\n    /// the lock.\n    Poisoned(PoisonError<T>),\n\n    /// The lock could not be acquired at this time because the operation would\n    /// otherwise block.\n    WouldBlock,\n}","parent":null,"children":[{"krate":0,"index":4867},{"krate":0,"index":4870}],"decl_id":null,"docs":" An enumeration of possible errors associated with a [`TryLockResult`] which\n can occur while trying to acquire a lock, from the [`try_lock`] method on a\n [`Mutex`] or the [`try_read`] and [`try_write`] methods on an [`RwLock`].","sig":null,"attributes":[{"value":"/ An enumeration of possible errors associated with a [`TryLockResult`] which","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":838893,"byte_end":838972,"line_start":76,"line_end":76,"column_start":1,"column_end":80}},{"value":"/ can occur while trying to acquire a lock, from the [`try_lock`] method on a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":838973,"byte_end":839052,"line_start":77,"line_end":77,"column_start":1,"column_end":80}},{"value":"/ [`Mutex`] or the [`try_read`] and [`try_write`] methods on an [`RwLock`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":839053,"byte_end":839130,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":839131,"byte_end":839134,"line_start":79,"line_end":79,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":4872},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":839832,"byte_end":839842,"line_start":97,"line_end":97,"column_start":10,"column_end":20},"name":"LockResult","qualname":"::sys_common::poison::LockResult","value":"Result<Guard, PoisonError<Guard>>","parent":null,"children":[],"decl_id":null,"docs":" A type alias for the result of a lock method which can be poisoned.","sig":null,"attributes":[{"value":"/ A type alias for the result of a lock method which can be poisoned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":839417,"byte_end":839488,"line_start":89,"line_end":89,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":839489,"byte_end":839492,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ The [`Ok`] variant of this result indicates that the primitive was not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":839493,"byte_end":839567,"line_start":91,"line_end":91,"column_start":1,"column_end":75}},{"value":"/ poisoned, and the `Guard` is contained within. The [`Err`] variant indicates","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":839568,"byte_end":839648,"line_start":92,"line_end":92,"column_start":1,"column_end":81}},{"value":"/ that the primitive was poisoned. Note that the [`Err`] variant *also* carries","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":839649,"byte_end":839730,"line_start":93,"line_end":93,"column_start":1,"column_end":82}},{"value":"/ the associated guard, and it can be acquired through the [`into_inner`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":839731,"byte_end":839806,"line_start":94,"line_end":94,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":839807,"byte_end":839818,"line_start":95,"line_end":95,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":839819,"byte_end":839822,"line_start":96,"line_end":96,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":4874},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":840162,"byte_end":840175,"line_start":104,"line_end":104,"column_start":10,"column_end":23},"name":"TryLockResult","qualname":"::sys_common::poison::TryLockResult","value":"Result<Guard, TryLockError<Guard>>","parent":null,"children":[],"decl_id":null,"docs":" A type alias for the result of a nonblocking locking method.","sig":null,"attributes":[{"value":"/ A type alias for the result of a nonblocking locking method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":839888,"byte_end":839952,"line_start":99,"line_end":99,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":839953,"byte_end":839956,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ For more information, see [`LockResult`]. A `TryLockResult` doesn't","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":839957,"byte_end":840028,"line_start":101,"line_end":101,"column_start":1,"column_end":72}},{"value":"/ necessarily hold the associated guard in the [`Err`] type as the lock may not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":840029,"byte_end":840110,"line_start":102,"line_end":102,"column_start":1,"column_end":82}},{"value":"/ have been acquired for other reasons.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":840111,"byte_end":840152,"line_start":103,"line_end":103,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4887},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":840860,"byte_end":840863,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"new","qualname":"<PoisonError<T>>::new","value":"pub fn new(T) -> PoisonError<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `PoisonError`.","sig":null,"attributes":[{"value":"/ Creates a `PoisonError`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":840711,"byte_end":840739,"line_start":125,"line_end":125,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":840744,"byte_end":840747,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This is generally created by methods like [`SgxMutex::lock`] or [`SgxRwLock::read`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":840752,"byte_end":840840,"line_start":127,"line_end":127,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":840845,"byte_end":840848,"line_start":128,"line_end":128,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4888},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":841081,"byte_end":841091,"line_start":136,"line_end":136,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PoisonError<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this error indicating that a lock is poisoned, returning the\n underlying guard to allow access regardless.","sig":null,"attributes":[{"value":"/ Consumes this error indicating that a lock is poisoned, returning the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":840935,"byte_end":841008,"line_start":133,"line_end":133,"column_start":5,"column_end":78}},{"value":"/ underlying guard to allow access regardless.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":841013,"byte_end":841061,"line_start":134,"line_end":134,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":841066,"byte_end":841069,"line_start":135,"line_end":135,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4889},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":841300,"byte_end":841307,"line_start":143,"line_end":143,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PoisonError<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Reaches into this error indicating that a lock is poisoned, returning a\n reference to the underlying guard to allow access regardless.","sig":null,"attributes":[{"value":"/ Reaches into this error indicating that a lock is poisoned, returning a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":841135,"byte_end":841210,"line_start":140,"line_end":140,"column_start":5,"column_end":80}},{"value":"/ reference to the underlying guard to allow access regardless.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":841215,"byte_end":841280,"line_start":141,"line_end":141,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":841285,"byte_end":841288,"line_start":142,"line_end":142,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4890},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":841527,"byte_end":841534,"line_start":150,"line_end":150,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<PoisonError<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Reaches into this error indicating that a lock is poisoned, returning a\n mutable reference to the underlying guard to allow access regardless.","sig":null,"attributes":[{"value":"/ Reaches into this error indicating that a lock is poisoned, returning a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":841354,"byte_end":841429,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ mutable reference to the underlying guard to allow access regardless.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":841434,"byte_end":841507,"line_start":148,"line_end":148,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":841512,"byte_end":841515,"line_start":149,"line_end":149,"column_start":5,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5297},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/mod.rs","byte_start":790169,"byte_end":790176,"line_start":99,"line_end":99,"column_start":8,"column_end":15},"name":"at_exit","qualname":"::sys_common::at_exit","value":"pub fn at_exit<F: FnOnce() -> () + Send + 'static>(F) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Enqueues a procedure to run when the main thread exits.","sig":null,"attributes":[{"value":"/ Enqueues a procedure to run when the main thread exits.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/mod.rs","byte_start":789613,"byte_end":789672,"line_start":89,"line_end":89,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/mod.rs","byte_start":789673,"byte_end":789676,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Currently these closures are only run once the main *Rust* thread exits.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/mod.rs","byte_start":789677,"byte_end":789753,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/ Once the `at_exit` handlers begin running, more may be enqueued, but not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/mod.rs","byte_start":789754,"byte_end":789830,"line_start":92,"line_end":92,"column_start":1,"column_end":77}},{"value":"/ infinitely so. Eventually a handler registration will be forced to fail.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/mod.rs","byte_start":789831,"byte_end":789907,"line_start":93,"line_end":93,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/mod.rs","byte_start":789908,"byte_end":789911,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Returns `Ok` if the handler was successfully registered, meaning that the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/mod.rs","byte_start":789912,"byte_end":789989,"line_start":95,"line_end":95,"column_start":1,"column_end":78}},{"value":"/ closure will be run once the main thread exits. Returns `Err` to indicate","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/mod.rs","byte_start":789990,"byte_end":790067,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/ that the closure could not be registered, meaning that it is not scheduled","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/mod.rs","byte_start":790068,"byte_end":790146,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ to be run.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/mod.rs","byte_start":790147,"byte_end":790161,"line_start":98,"line_end":98,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8253},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fd.rs","byte_start":932158,"byte_end":932166,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"FileDesc","qualname":"::sys::fd::FileDesc","value":"FileDesc {  }","parent":null,"children":[{"krate":0,"index":8254}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5479},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fd.rs","byte_start":932851,"byte_end":932854,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<FileDesc>::new","value":"pub fn new(c_int) -> FileDesc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5480},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fd.rs","byte_start":932922,"byte_end":932925,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"raw","qualname":"<FileDesc>::raw","value":"pub fn raw(&Self) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5481},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fd.rs","byte_start":933042,"byte_end":933050,"line_start":57,"line_end":57,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<FileDesc>::into_raw","value":"pub fn into_raw(Self) -> c_int","parent":null,"children":[],"decl_id":null,"docs":" Extracts the actual file descriptor without closing it.\n","sig":null,"attributes":[{"value":"/ Extracts the actual file descriptor without closing it.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fd.rs","byte_start":932971,"byte_end":933030,"line_start":56,"line_end":56,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":5482},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fd.rs","byte_start":933150,"byte_end":933154,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"read","qualname":"<FileDesc>::read","value":"pub fn read(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5483},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fd.rs","byte_start":933385,"byte_end":933398,"line_start":70,"line_end":70,"column_start":12,"column_end":25},"name":"read_vectored","qualname":"<FileDesc>::read_vectored","value":"pub fn read_vectored(&Self, &mut [IoSliceMut]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5484},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fd.rs","byte_start":933738,"byte_end":933749,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"<FileDesc>::read_to_end","value":"pub fn read_to_end(&Self, &mut Vec<u8>) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5485},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fd.rs","byte_start":933879,"byte_end":933886,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"read_at","qualname":"<FileDesc>::read_at","value":"pub fn read_at(&Self, &mut [u8], u64) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5489},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fd.rs","byte_start":934475,"byte_end":934480,"line_start":108,"line_end":108,"column_start":12,"column_end":17},"name":"write","qualname":"<FileDesc>::write","value":"pub fn write(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5490},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fd.rs","byte_start":934706,"byte_end":934720,"line_start":115,"line_end":115,"column_start":12,"column_end":26},"name":"write_vectored","qualname":"<FileDesc>::write_vectored","value":"pub fn write_vectored(&Self, &[IoSlice]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5491},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fd.rs","byte_start":935054,"byte_end":935062,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"write_at","qualname":"<FileDesc>::write_at","value":"pub fn write_at(&Self, &[u8], u64) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5495},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fd.rs","byte_start":935651,"byte_end":935662,"line_start":148,"line_end":148,"column_start":12,"column_end":23},"name":"get_cloexec","qualname":"<FileDesc>::get_cloexec","value":"pub fn get_cloexec(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5496},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fd.rs","byte_start":935806,"byte_end":935817,"line_start":152,"line_end":152,"column_start":12,"column_end":23},"name":"set_cloexec","qualname":"<FileDesc>::set_cloexec","value":"pub fn set_cloexec(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5497},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fd.rs","byte_start":936151,"byte_end":936166,"line_start":163,"line_end":163,"column_start":12,"column_end":27},"name":"set_nonblocking","qualname":"<FileDesc>::set_nonblocking","value":"pub fn set_nonblocking(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5498},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fd.rs","byte_start":936405,"byte_end":936414,"line_start":171,"line_end":171,"column_start":12,"column_end":21},"name":"duplicate","qualname":"<FileDesc>::duplicate","value":"pub fn duplicate(&Self) -> io::Result<FileDesc>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5893},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ext","qualname":"::sys::ext","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/mod.rs","parent":null,"children":[{"krate":0,"index":5894},{"krate":0,"index":5896},{"krate":0,"index":5987},{"krate":0,"index":6025},{"krate":0,"index":6229},{"krate":0,"index":6244}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5894},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/ffi.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ffi","qualname":"::sys::ext::ffi","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/ffi.rs","parent":null,"children":[{"krate":0,"index":5895}],"decl_id":null,"docs":" Unix-specific extension to the primitives in the `std::ffi` module\n","sig":null,"attributes":[{"value":"/ Unix-specific extension to the primitives in the `std::ffi` module","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/ffi.rs","byte_start":990896,"byte_end":990966,"line_start":18,"line_end":18,"column_start":1,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":5896},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::sys::ext::fs","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","parent":null,"children":[{"krate":0,"index":5897},{"krate":0,"index":5898},{"krate":0,"index":5899},{"krate":0,"index":5900},{"krate":0,"index":5901},{"krate":0,"index":5902},{"krate":0,"index":5903},{"krate":0,"index":5904},{"krate":0,"index":5905},{"krate":0,"index":5906},{"krate":0,"index":5907},{"krate":0,"index":5908},{"krate":0,"index":5909},{"krate":0,"index":5910},{"krate":0,"index":5915},{"krate":0,"index":5918},{"krate":0,"index":5922},{"krate":0,"index":5926},{"krate":0,"index":5929},{"krate":0,"index":5932},{"krate":0,"index":5949},{"krate":0,"index":5966},{"krate":0,"index":5971},{"krate":0,"index":5976},{"krate":0,"index":5978},{"krate":0,"index":5980},{"krate":0,"index":5983},{"krate":0,"index":5985}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":5910},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":992228,"byte_end":992235,"line_start":30,"line_end":30,"column_start":11,"column_end":18},"name":"FileExt","qualname":"::sys::ext::fs::FileExt","value":"FileExt","parent":null,"children":[{"krate":0,"index":5911},{"krate":0,"index":5912},{"krate":0,"index":5913},{"krate":0,"index":5914}],"decl_id":null,"docs":" Unix-specific extensions to `File`\n","sig":null,"attributes":[{"value":"/ Unix-specific extensions to `File`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":992179,"byte_end":992217,"line_start":29,"line_end":29,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5911},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":992746,"byte_end":992753,"line_start":45,"line_end":45,"column_start":8,"column_end":15},"name":"read_at","qualname":"::sys::ext::fs::FileExt::read_at","value":"pub fn read_at(&Self, &mut [u8], u64) -> io::Result<usize>","parent":{"krate":0,"index":5910},"children":[],"decl_id":null,"docs":" Reads a number of bytes starting from a given offset.","sig":null,"attributes":[{"value":"/ Reads a number of bytes starting from a given offset.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":992242,"byte_end":992299,"line_start":31,"line_end":31,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":992304,"byte_end":992307,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":992312,"byte_end":992349,"line_start":33,"line_end":33,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":992354,"byte_end":992357,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The offset is relative to the start of the file and thus independent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":992362,"byte_end":992434,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ from the current cursor.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":992439,"byte_end":992467,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":992472,"byte_end":992475,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ The current file cursor is not affected by this function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":992480,"byte_end":992541,"line_start":38,"line_end":38,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":992546,"byte_end":992549,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Note that similar to [`File::read`], it is not an error to return with a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":992554,"byte_end":992630,"line_start":40,"line_end":40,"column_start":5,"column_end":81}},{"value":"/ short read.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":992635,"byte_end":992650,"line_start":41,"line_end":41,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":992655,"byte_end":992658,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`File::read`]: ../../../../std/fs/struct.File.html#method.read","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":992663,"byte_end":992730,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":992735,"byte_end":992738,"line_start":44,"line_end":44,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5912},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":994297,"byte_end":994310,"line_start":79,"line_end":79,"column_start":8,"column_end":21},"name":"read_exact_at","qualname":"::sys::ext::fs::FileExt::read_exact_at","value":"pub fn read_exact_at(&Self, &mut [u8], u64) -> io::Result<()>","parent":{"krate":0,"index":5910},"children":[],"decl_id":null,"docs":" Reads the exact number of byte required to fill `buf` from the given offset.","sig":null,"attributes":[{"value":"/ Reads the exact number of byte required to fill `buf` from the given offset.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":992817,"byte_end":992897,"line_start":47,"line_end":47,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":992902,"byte_end":992905,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ The offset is relative to the start of the file and thus independent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":992910,"byte_end":992982,"line_start":49,"line_end":49,"column_start":5,"column_end":77}},{"value":"/ from the current cursor.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":992987,"byte_end":993015,"line_start":50,"line_end":50,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":993020,"byte_end":993023,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ The current file cursor is not affected by this function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":993028,"byte_end":993089,"line_start":52,"line_end":52,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":993094,"byte_end":993097,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Similar to [`Read::read_exact`] but uses [`read_at`] instead of `read`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":993102,"byte_end":993177,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":993182,"byte_end":993185,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ [`Read::read_exact`]: ../../../../std/io/trait.Read.html#method.read_exact","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":993190,"byte_end":993268,"line_start":56,"line_end":56,"column_start":5,"column_end":83}},{"value":"/ [`read_at`]: #tymethod.read_at","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":993273,"byte_end":993307,"line_start":57,"line_end":57,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":993312,"byte_end":993315,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":993320,"byte_end":993332,"line_start":59,"line_end":59,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":993337,"byte_end":993340,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ If this function encounters an error of the kind","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":993345,"byte_end":993397,"line_start":61,"line_end":61,"column_start":5,"column_end":57}},{"value":"/ [`ErrorKind::Interrupted`] then the error is ignored and the operation","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":993402,"byte_end":993476,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ will continue.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":993481,"byte_end":993499,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":993504,"byte_end":993507,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ If this function encounters an \"end of file\" before completely filling","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":993512,"byte_end":993586,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ the buffer, it returns an error of the kind [`ErrorKind::UnexpectedEof`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":993591,"byte_end":993668,"line_start":66,"line_end":66,"column_start":5,"column_end":82}},{"value":"/ The contents of `buf` are unspecified in this case.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":993673,"byte_end":993728,"line_start":67,"line_end":67,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":993733,"byte_end":993736,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If any other read error is encountered then this function immediately","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":993741,"byte_end":993814,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ returns. The contents of `buf` are unspecified in this case.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":993819,"byte_end":993883,"line_start":70,"line_end":70,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":993888,"byte_end":993891,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ If this function returns an error, it is unspecified how many bytes it","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":993896,"byte_end":993970,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ has read, but it will never read more than would be necessary to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":993975,"byte_end":994043,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ completely fill the buffer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":994048,"byte_end":994079,"line_start":74,"line_end":74,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":994084,"byte_end":994087,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind::Interrupted`]: ../../../../std/io/enum.ErrorKind.html#variant.Interrupted","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":994092,"byte_end":994182,"line_start":76,"line_end":76,"column_start":5,"column_end":95}},{"value":"/ [`ErrorKind::UnexpectedEof`]: ../../../../std/io/enum.ErrorKind.html#variant.UnexpectedEof","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":994187,"byte_end":994281,"line_start":77,"line_end":77,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":994286,"byte_end":994289,"line_start":78,"line_end":78,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5913},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":995628,"byte_end":995636,"line_start":116,"line_end":116,"column_start":8,"column_end":16},"name":"write_at","qualname":"::sys::ext::fs::FileExt::write_at","value":"pub fn write_at(&Self, &[u8], u64) -> io::Result<usize>","parent":{"krate":0,"index":5910},"children":[],"decl_id":null,"docs":" Writes a number of bytes starting from a given offset.","sig":null,"attributes":[{"value":"/ Writes a number of bytes starting from a given offset.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":994965,"byte_end":995023,"line_start":99,"line_end":99,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":995028,"byte_end":995031,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes written.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":995036,"byte_end":995076,"line_start":101,"line_end":101,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":995081,"byte_end":995084,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ The offset is relative to the start of the file and thus independent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":995089,"byte_end":995161,"line_start":103,"line_end":103,"column_start":5,"column_end":77}},{"value":"/ from the current cursor.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":995166,"byte_end":995194,"line_start":104,"line_end":104,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":995199,"byte_end":995202,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ The current file cursor is not affected by this function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":995207,"byte_end":995268,"line_start":106,"line_end":106,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":995273,"byte_end":995276,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ When writing beyond the end of the file, the file is appropriately","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":995281,"byte_end":995351,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/ extended and the intermediate bytes are initialized with the value 0.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":995356,"byte_end":995429,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":995434,"byte_end":995437,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Note that similar to [`File::write`], it is not an error to return a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":995442,"byte_end":995514,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/ short write.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":995519,"byte_end":995535,"line_start":112,"line_end":112,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":995540,"byte_end":995543,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ [`File::write`]: ../../../../std/fs/struct.File.html#write.v","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":995548,"byte_end":995612,"line_start":114,"line_end":114,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":995617,"byte_end":995620,"line_start":115,"line_end":115,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5914},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":996698,"byte_end":996710,"line_start":140,"line_end":140,"column_start":8,"column_end":20},"name":"write_all_at","qualname":"::sys::ext::fs::FileExt::write_all_at","value":"pub fn write_all_at(&Self, &[u8], u64) -> io::Result<()>","parent":{"krate":0,"index":5910},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer starting from a given offset.","sig":null,"attributes":[{"value":"/ Attempts to write an entire buffer starting from a given offset.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":995696,"byte_end":995764,"line_start":118,"line_end":118,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":995769,"byte_end":995772,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The offset is relative to the start of the file and thus independent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":995777,"byte_end":995849,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ from the current cursor.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":995854,"byte_end":995882,"line_start":121,"line_end":121,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":995887,"byte_end":995890,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ The current file cursor is not affected by this function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":995895,"byte_end":995956,"line_start":123,"line_end":123,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":995961,"byte_end":995964,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This method will continuously call [`write_at`] until there is no more data","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":995969,"byte_end":996048,"line_start":125,"line_end":125,"column_start":5,"column_end":84}},{"value":"/ to be written or an error of non-[`ErrorKind::Interrupted`] kind is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":996053,"byte_end":996124,"line_start":126,"line_end":126,"column_start":5,"column_end":76}},{"value":"/ returned. This method will not return until the entire buffer has been","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":996129,"byte_end":996203,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ successfully written or such an error occurs. The first error that is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":996208,"byte_end":996281,"line_start":128,"line_end":128,"column_start":5,"column_end":78}},{"value":"/ not of [`ErrorKind::Interrupted`] kind generated from this method will be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":996286,"byte_end":996363,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/ returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":996368,"byte_end":996381,"line_start":130,"line_end":130,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":996386,"byte_end":996389,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":996394,"byte_end":996406,"line_start":132,"line_end":132,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":996411,"byte_end":996414,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function will return the first error of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":996419,"byte_end":996467,"line_start":134,"line_end":134,"column_start":5,"column_end":53}},{"value":"/ non-[`ErrorKind::Interrupted`] kind that [`write_at`] returns.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":996472,"byte_end":996538,"line_start":135,"line_end":135,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":996543,"byte_end":996546,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind::Interrupted`]: ../../../../std/io/enum.ErrorKind.html#variant.Interrupted","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":996551,"byte_end":996641,"line_start":137,"line_end":137,"column_start":5,"column_end":95}},{"value":"/ [`write_at`]: #tymethod.write_at","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":996646,"byte_end":996682,"line_start":138,"line_end":138,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":996687,"byte_end":996690,"line_start":139,"line_end":139,"column_start":5,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":5918},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":997771,"byte_end":997785,"line_start":173,"line_end":173,"column_start":11,"column_end":25},"name":"PermissionsExt","qualname":"::sys::ext::fs::PermissionsExt","value":"PermissionsExt","parent":null,"children":[{"krate":0,"index":5919},{"krate":0,"index":5920},{"krate":0,"index":5921}],"decl_id":null,"docs":" Unix-specific extensions to [`fs::Permissions`].","sig":null,"attributes":[{"value":"/ Unix-specific extensions to [`fs::Permissions`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":997636,"byte_end":997688,"line_start":170,"line_end":170,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":997689,"byte_end":997692,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ [`fs::Permissions`]: ../../../../std/fs/struct.Permissions.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":997693,"byte_end":997760,"line_start":172,"line_end":172,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5919},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":997919,"byte_end":997923,"line_start":177,"line_end":177,"column_start":8,"column_end":12},"name":"mode","qualname":"::sys::ext::fs::PermissionsExt::mode","value":"pub fn mode(&Self) -> u32","parent":{"krate":0,"index":5918},"children":[],"decl_id":null,"docs":" Returns the underlying raw `st_mode` bits that contain the standard\n Unix permissions for this file.","sig":null,"attributes":[{"value":"/ Returns the underlying raw `st_mode` bits that contain the standard","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":997792,"byte_end":997863,"line_start":174,"line_end":174,"column_start":5,"column_end":76}},{"value":"/ Unix permissions for this file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":997868,"byte_end":997903,"line_start":175,"line_end":175,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":997908,"byte_end":997911,"line_start":176,"line_end":176,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5920},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":998021,"byte_end":998029,"line_start":181,"line_end":181,"column_start":8,"column_end":16},"name":"set_mode","qualname":"::sys::ext::fs::PermissionsExt::set_mode","value":"pub fn set_mode(&mut Self, u32)","parent":{"krate":0,"index":5918},"children":[],"decl_id":null,"docs":" Sets the underlying raw bits for this set of permissions.","sig":null,"attributes":[{"value":"/ Sets the underlying raw bits for this set of permissions.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":997944,"byte_end":998005,"line_start":179,"line_end":179,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":998010,"byte_end":998013,"line_start":180,"line_end":180,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5921},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":998169,"byte_end":998178,"line_start":186,"line_end":186,"column_start":8,"column_end":17},"name":"from_mode","qualname":"::sys::ext::fs::PermissionsExt::from_mode","value":"pub fn from_mode(u32) -> Self","parent":{"krate":0,"index":5918},"children":[],"decl_id":null,"docs":" Creates a new instance of `Permissions` from the given set of Unix\n permission bits.","sig":null,"attributes":[{"value":"/ Creates a new instance of `Permissions` from the given set of Unix","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":998058,"byte_end":998128,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ permission bits.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":998133,"byte_end":998153,"line_start":184,"line_end":184,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":998158,"byte_end":998161,"line_start":185,"line_end":185,"column_start":5,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":5926},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":998673,"byte_end":998687,"line_start":206,"line_end":206,"column_start":11,"column_end":25},"name":"OpenOptionsExt","qualname":"::sys::ext::fs::OpenOptionsExt","value":"OpenOptionsExt","parent":null,"children":[{"krate":0,"index":5927},{"krate":0,"index":5928}],"decl_id":null,"docs":" Unix-specific extensions to [`fs::OpenOptions`].","sig":null,"attributes":[{"value":"/ Unix-specific extensions to [`fs::OpenOptions`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":998538,"byte_end":998590,"line_start":203,"line_end":203,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":998591,"byte_end":998594,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ [`fs::OpenOptions`]: ../../../../std/fs/struct.OpenOptions.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":998595,"byte_end":998662,"line_start":205,"line_end":205,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5927},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":999118,"byte_end":999122,"line_start":215,"line_end":215,"column_start":8,"column_end":12},"name":"mode","qualname":"::sys::ext::fs::OpenOptionsExt::mode","value":"pub fn mode(&mut Self, u32) -> &mut Self","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" Sets the mode bits that a new file will be created with.","sig":null,"attributes":[{"value":"/ Sets the mode bits that a new file will be created with.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":998694,"byte_end":998754,"line_start":207,"line_end":207,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":998759,"byte_end":998762,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ If a new file is created as part of an `OpenOptions::open` call then this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":998767,"byte_end":998844,"line_start":209,"line_end":209,"column_start":5,"column_end":82}},{"value":"/ specified `mode` will be used as the permission bits for the new file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":998849,"byte_end":998923,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ If no `mode` is set, the default of `0o666` will be used.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":998928,"byte_end":998989,"line_start":211,"line_end":211,"column_start":5,"column_end":66}},{"value":"/ The operating system masks out bits with the system's `umask`, to produce","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":998994,"byte_end":999071,"line_start":212,"line_end":212,"column_start":5,"column_end":82}},{"value":"/ the final permissions.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":999076,"byte_end":999102,"line_start":213,"line_end":213,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":999107,"byte_end":999110,"line_start":214,"line_end":214,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5928},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":999558,"byte_end":999570,"line_start":225,"line_end":225,"column_start":8,"column_end":20},"name":"custom_flags","qualname":"::sys::ext::fs::OpenOptionsExt::custom_flags","value":"pub fn custom_flags(&mut Self, i32) -> &mut Self","parent":{"krate":0,"index":5926},"children":[],"decl_id":null,"docs":" Pass custom flags to the `flags` argument of `open`.","sig":null,"attributes":[{"value":"/ Pass custom flags to the `flags` argument of `open`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":999164,"byte_end":999220,"line_start":217,"line_end":217,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":999225,"byte_end":999228,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The bits that define the access mode are masked out with `O_ACCMODE`, to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":999233,"byte_end":999309,"line_start":219,"line_end":219,"column_start":5,"column_end":81}},{"value":"/ ensure they do not interfere with the access mode set by Rusts options.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":999314,"byte_end":999389,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":999394,"byte_end":999397,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Custom flags can only set flags, not remove flags set by Rusts options.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":999402,"byte_end":999477,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ This options overwrites any previously set custom flags.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":999482,"byte_end":999542,"line_start":223,"line_end":223,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":999547,"byte_end":999550,"line_start":224,"line_end":224,"column_start":5,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":5932},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000027,"byte_end":1000038,"line_start":243,"line_end":243,"column_start":11,"column_end":22},"name":"MetadataExt","qualname":"::sys::ext::fs::MetadataExt","value":"MetadataExt","parent":null,"children":[{"krate":0,"index":5933},{"krate":0,"index":5934},{"krate":0,"index":5935},{"krate":0,"index":5936},{"krate":0,"index":5937},{"krate":0,"index":5938},{"krate":0,"index":5939},{"krate":0,"index":5940},{"krate":0,"index":5941},{"krate":0,"index":5942},{"krate":0,"index":5943},{"krate":0,"index":5944},{"krate":0,"index":5945},{"krate":0,"index":5946},{"krate":0,"index":5947},{"krate":0,"index":5948}],"decl_id":null,"docs":" Unix-specific extensions to [`fs::Metadata`].","sig":null,"attributes":[{"value":"/ Unix-specific extensions to [`fs::Metadata`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":999901,"byte_end":999950,"line_start":240,"line_end":240,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":999951,"byte_end":999954,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ [`fs::Metadata`]: ../../../../std/fs/struct.Metadata.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":999955,"byte_end":1000016,"line_start":242,"line_end":242,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5933},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000114,"byte_end":1000117,"line_start":246,"line_end":246,"column_start":8,"column_end":11},"name":"dev","qualname":"::sys::ext::fs::MetadataExt::dev","value":"pub fn dev(&Self) -> u64","parent":{"krate":0,"index":5932},"children":[],"decl_id":null,"docs":" Returns the ID of the device containing the file.","sig":null,"attributes":[{"value":"/ Returns the ID of the device containing the file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000045,"byte_end":1000098,"line_start":244,"line_end":244,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000103,"byte_end":1000106,"line_start":245,"line_end":245,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5934},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000182,"byte_end":1000185,"line_start":249,"line_end":249,"column_start":8,"column_end":11},"name":"ino","qualname":"::sys::ext::fs::MetadataExt::ino","value":"pub fn ino(&Self) -> u64","parent":{"krate":0,"index":5932},"children":[],"decl_id":null,"docs":" Returns the inode number.","sig":null,"attributes":[{"value":"/ Returns the inode number.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000137,"byte_end":1000166,"line_start":247,"line_end":247,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000171,"byte_end":1000174,"line_start":248,"line_end":248,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5935},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000265,"byte_end":1000269,"line_start":252,"line_end":252,"column_start":8,"column_end":12},"name":"mode","qualname":"::sys::ext::fs::MetadataExt::mode","value":"pub fn mode(&Self) -> u32","parent":{"krate":0,"index":5932},"children":[],"decl_id":null,"docs":" Returns the rights applied to this file.","sig":null,"attributes":[{"value":"/ Returns the rights applied to this file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000205,"byte_end":1000249,"line_start":250,"line_end":250,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000254,"byte_end":1000257,"line_start":251,"line_end":251,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5936},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000364,"byte_end":1000369,"line_start":255,"line_end":255,"column_start":8,"column_end":13},"name":"nlink","qualname":"::sys::ext::fs::MetadataExt::nlink","value":"pub fn nlink(&Self) -> u64","parent":{"krate":0,"index":5932},"children":[],"decl_id":null,"docs":" Returns the number of hard links pointing to this file.","sig":null,"attributes":[{"value":"/ Returns the number of hard links pointing to this file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000289,"byte_end":1000348,"line_start":253,"line_end":253,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000353,"byte_end":1000356,"line_start":254,"line_end":254,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5937},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000455,"byte_end":1000458,"line_start":258,"line_end":258,"column_start":8,"column_end":11},"name":"uid","qualname":"::sys::ext::fs::MetadataExt::uid","value":"pub fn uid(&Self) -> u32","parent":{"krate":0,"index":5932},"children":[],"decl_id":null,"docs":" Returns the user ID of the owner of this file.","sig":null,"attributes":[{"value":"/ Returns the user ID of the owner of this file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000389,"byte_end":1000439,"line_start":256,"line_end":256,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000444,"byte_end":1000447,"line_start":257,"line_end":257,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5938},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000545,"byte_end":1000548,"line_start":261,"line_end":261,"column_start":8,"column_end":11},"name":"gid","qualname":"::sys::ext::fs::MetadataExt::gid","value":"pub fn gid(&Self) -> u32","parent":{"krate":0,"index":5932},"children":[],"decl_id":null,"docs":" Returns the group ID of the owner of this file.","sig":null,"attributes":[{"value":"/ Returns the group ID of the owner of this file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000478,"byte_end":1000529,"line_start":259,"line_end":259,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000534,"byte_end":1000537,"line_start":260,"line_end":260,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5939},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000648,"byte_end":1000652,"line_start":264,"line_end":264,"column_start":8,"column_end":12},"name":"rdev","qualname":"::sys::ext::fs::MetadataExt::rdev","value":"pub fn rdev(&Self) -> u64","parent":{"krate":0,"index":5932},"children":[],"decl_id":null,"docs":" Returns the device ID of this file (if it is a special one).","sig":null,"attributes":[{"value":"/ Returns the device ID of this file (if it is a special one).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000568,"byte_end":1000632,"line_start":262,"line_end":262,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000637,"byte_end":1000640,"line_start":263,"line_end":263,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5940},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000737,"byte_end":1000741,"line_start":267,"line_end":267,"column_start":8,"column_end":12},"name":"size","qualname":"::sys::ext::fs::MetadataExt::size","value":"pub fn size(&Self) -> u64","parent":{"krate":0,"index":5932},"children":[],"decl_id":null,"docs":" Returns the total size of this file in bytes.","sig":null,"attributes":[{"value":"/ Returns the total size of this file in bytes.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000672,"byte_end":1000721,"line_start":265,"line_end":265,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000726,"byte_end":1000729,"line_start":266,"line_end":266,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5941},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000851,"byte_end":1000856,"line_start":270,"line_end":270,"column_start":8,"column_end":13},"name":"atime","qualname":"::sys::ext::fs::MetadataExt::atime","value":"pub fn atime(&Self) -> i64","parent":{"krate":0,"index":5932},"children":[],"decl_id":null,"docs":" Returns the last access time of the file, in seconds since Unix Epoch.","sig":null,"attributes":[{"value":"/ Returns the last access time of the file, in seconds since Unix Epoch.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000761,"byte_end":1000835,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000840,"byte_end":1000843,"line_start":269,"line_end":269,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5942},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001012,"byte_end":1001022,"line_start":275,"line_end":275,"column_start":8,"column_end":18},"name":"atime_nsec","qualname":"::sys::ext::fs::MetadataExt::atime_nsec","value":"pub fn atime_nsec(&Self) -> i64","parent":{"krate":0,"index":5932},"children":[],"decl_id":null,"docs":" Returns the last access time of the file, in nanoseconds since [`atime`].","sig":null,"attributes":[{"value":"/ Returns the last access time of the file, in nanoseconds since [`atime`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000876,"byte_end":1000953,"line_start":271,"line_end":271,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000958,"byte_end":1000961,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ [`atime`]: #tymethod.atime","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1000966,"byte_end":1000996,"line_start":273,"line_end":273,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001001,"byte_end":1001004,"line_start":274,"line_end":274,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5943},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001138,"byte_end":1001143,"line_start":278,"line_end":278,"column_start":8,"column_end":13},"name":"mtime","qualname":"::sys::ext::fs::MetadataExt::mtime","value":"pub fn mtime(&Self) -> i64","parent":{"krate":0,"index":5932},"children":[],"decl_id":null,"docs":" Returns the last modification time of the file, in seconds since Unix Epoch.","sig":null,"attributes":[{"value":"/ Returns the last modification time of the file, in seconds since Unix Epoch.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001042,"byte_end":1001122,"line_start":276,"line_end":276,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001127,"byte_end":1001130,"line_start":277,"line_end":277,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5944},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001305,"byte_end":1001315,"line_start":283,"line_end":283,"column_start":8,"column_end":18},"name":"mtime_nsec","qualname":"::sys::ext::fs::MetadataExt::mtime_nsec","value":"pub fn mtime_nsec(&Self) -> i64","parent":{"krate":0,"index":5932},"children":[],"decl_id":null,"docs":" Returns the last modification time of the file, in nanoseconds since [`mtime`].","sig":null,"attributes":[{"value":"/ Returns the last modification time of the file, in nanoseconds since [`mtime`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001163,"byte_end":1001246,"line_start":279,"line_end":279,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001251,"byte_end":1001254,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ [`mtime`]: #tymethod.mtime","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001259,"byte_end":1001289,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001294,"byte_end":1001297,"line_start":282,"line_end":282,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5945},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001432,"byte_end":1001437,"line_start":286,"line_end":286,"column_start":8,"column_end":13},"name":"ctime","qualname":"::sys::ext::fs::MetadataExt::ctime","value":"pub fn ctime(&Self) -> i64","parent":{"krate":0,"index":5932},"children":[],"decl_id":null,"docs":" Returns the last status change time of the file, in seconds since Unix Epoch.","sig":null,"attributes":[{"value":"/ Returns the last status change time of the file, in seconds since Unix Epoch.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001335,"byte_end":1001416,"line_start":284,"line_end":284,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001421,"byte_end":1001424,"line_start":285,"line_end":285,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5946},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001600,"byte_end":1001610,"line_start":291,"line_end":291,"column_start":8,"column_end":18},"name":"ctime_nsec","qualname":"::sys::ext::fs::MetadataExt::ctime_nsec","value":"pub fn ctime_nsec(&Self) -> i64","parent":{"krate":0,"index":5932},"children":[],"decl_id":null,"docs":" Returns the last status change time of the file, in nanoseconds since [`ctime`].","sig":null,"attributes":[{"value":"/ Returns the last status change time of the file, in nanoseconds since [`ctime`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001457,"byte_end":1001541,"line_start":287,"line_end":287,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001546,"byte_end":1001549,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ [`ctime`]: #tymethod.ctime","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001554,"byte_end":1001584,"line_start":289,"line_end":289,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001589,"byte_end":1001592,"line_start":290,"line_end":290,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5947},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001691,"byte_end":1001698,"line_start":294,"line_end":294,"column_start":8,"column_end":15},"name":"blksize","qualname":"::sys::ext::fs::MetadataExt::blksize","value":"pub fn blksize(&Self) -> u64","parent":{"krate":0,"index":5932},"children":[],"decl_id":null,"docs":" Returns the blocksize for filesystem I/O.","sig":null,"attributes":[{"value":"/ Returns the blocksize for filesystem I/O.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001630,"byte_end":1001675,"line_start":292,"line_end":292,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001680,"byte_end":1001683,"line_start":293,"line_end":293,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5948},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001907,"byte_end":1001913,"line_start":299,"line_end":299,"column_start":8,"column_end":14},"name":"blocks","qualname":"::sys::ext::fs::MetadataExt::blocks","value":"pub fn blocks(&Self) -> u64","parent":{"krate":0,"index":5932},"children":[],"decl_id":null,"docs":" Returns the number of blocks allocated to the file, in 512-byte units.","sig":null,"attributes":[{"value":"/ Returns the number of blocks allocated to the file, in 512-byte units.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001718,"byte_end":1001792,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001797,"byte_end":1001800,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ Please note that this may be smaller than `st_size / 512` when the file has holes.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001805,"byte_end":1001891,"line_start":297,"line_end":297,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001896,"byte_end":1001899,"line_start":298,"line_end":298,"column_start":5,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":5966},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1003154,"byte_end":1003165,"line_start":359,"line_end":359,"column_start":11,"column_end":22},"name":"FileTypeExt","qualname":"::sys::ext::fs::FileTypeExt","value":"FileTypeExt","parent":null,"children":[{"krate":0,"index":5967},{"krate":0,"index":5968},{"krate":0,"index":5969},{"krate":0,"index":5970}],"decl_id":null,"docs":" Unix-specific extensions for [`FileType`].","sig":null,"attributes":[{"value":"/ Unix-specific extensions for [`FileType`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1002929,"byte_end":1002975,"line_start":353,"line_end":353,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1002976,"byte_end":1002979,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ Adds support for special Unix file types such as block/character devices,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1002980,"byte_end":1003057,"line_start":355,"line_end":355,"column_start":1,"column_end":78}},{"value":"/ pipes, and sockets.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1003058,"byte_end":1003081,"line_start":356,"line_end":356,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1003082,"byte_end":1003085,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/ [`FileType`]: ../../../../std/fs/struct.FileType.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1003086,"byte_end":1003143,"line_start":358,"line_end":358,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5967},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1003243,"byte_end":1003258,"line_start":362,"line_end":362,"column_start":8,"column_end":23},"name":"is_block_device","qualname":"::sys::ext::fs::FileTypeExt::is_block_device","value":"pub fn is_block_device(&Self) -> bool","parent":{"krate":0,"index":5966},"children":[],"decl_id":null,"docs":" Returns `true` if this file type is a block device.","sig":null,"attributes":[{"value":"/ Returns `true` if this file type is a block device.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1003172,"byte_end":1003227,"line_start":360,"line_end":360,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1003232,"byte_end":1003235,"line_start":361,"line_end":361,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5968},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1003349,"byte_end":1003363,"line_start":365,"line_end":365,"column_start":8,"column_end":22},"name":"is_char_device","qualname":"::sys::ext::fs::FileTypeExt::is_char_device","value":"pub fn is_char_device(&Self) -> bool","parent":{"krate":0,"index":5966},"children":[],"decl_id":null,"docs":" Returns `true` if this file type is a char device.","sig":null,"attributes":[{"value":"/ Returns `true` if this file type is a char device.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1003279,"byte_end":1003333,"line_start":363,"line_end":363,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1003338,"byte_end":1003341,"line_start":364,"line_end":364,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5969},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1003447,"byte_end":1003454,"line_start":368,"line_end":368,"column_start":8,"column_end":15},"name":"is_fifo","qualname":"::sys::ext::fs::FileTypeExt::is_fifo","value":"pub fn is_fifo(&Self) -> bool","parent":{"krate":0,"index":5966},"children":[],"decl_id":null,"docs":" Returns `true` if this file type is a fifo.","sig":null,"attributes":[{"value":"/ Returns `true` if this file type is a fifo.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1003384,"byte_end":1003431,"line_start":366,"line_end":366,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1003436,"byte_end":1003439,"line_start":367,"line_end":367,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5970},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1003540,"byte_end":1003549,"line_start":371,"line_end":371,"column_start":8,"column_end":17},"name":"is_socket","qualname":"::sys::ext::fs::FileTypeExt::is_socket","value":"pub fn is_socket(&Self) -> bool","parent":{"krate":0,"index":5966},"children":[],"decl_id":null,"docs":" Returns `true` if this file type is a socket.","sig":null,"attributes":[{"value":"/ Returns `true` if this file type is a socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1003475,"byte_end":1003524,"line_start":369,"line_end":369,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1003529,"byte_end":1003532,"line_start":370,"line_end":370,"column_start":5,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":5976},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1004017,"byte_end":1004028,"line_start":390,"line_end":390,"column_start":11,"column_end":22},"name":"DirEntryExt","qualname":"::sys::ext::fs::DirEntryExt","value":"DirEntryExt","parent":null,"children":[{"krate":0,"index":5977}],"decl_id":null,"docs":" Unix-specific extension methods for [`fs::DirEntry`].","sig":null,"attributes":[{"value":"/ Unix-specific extension methods for [`fs::DirEntry`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1003945,"byte_end":1004002,"line_start":388,"line_end":388,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1004003,"byte_end":1004006,"line_start":389,"line_end":389,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":5977},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1004128,"byte_end":1004131,"line_start":393,"line_end":393,"column_start":8,"column_end":11},"name":"ino","qualname":"::sys::ext::fs::DirEntryExt::ino","value":"pub fn ino(&Self) -> u64","parent":{"krate":0,"index":5976},"children":[],"decl_id":null,"docs":" Returns the underlying `d_ino` field in the contained `dirent`\n structure.\n","sig":null,"attributes":[{"value":"/ Returns the underlying `d_ino` field in the contained `dirent`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1004035,"byte_end":1004101,"line_start":391,"line_end":391,"column_start":5,"column_end":71}},{"value":"/ structure.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1004106,"byte_end":1004120,"line_start":392,"line_end":392,"column_start":5,"column_end":19}}]},{"kind":"Function","id":{"krate":0,"index":5980},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1004780,"byte_end":1004787,"line_start":415,"line_end":415,"column_start":8,"column_end":15},"name":"symlink","qualname":"::sys::ext::fs::symlink","value":"pub fn symlink<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new symbolic link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new symbolic link on the filesystem.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1004252,"byte_end":1004302,"line_start":402,"line_end":402,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1004303,"byte_end":1004306,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a symbolic link pointing to the `src` path.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1004307,"byte_end":1004377,"line_start":404,"line_end":404,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1004378,"byte_end":1004381,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1004382,"byte_end":1004392,"line_start":406,"line_end":406,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1004393,"byte_end":1004396,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ On Windows, you must specify whether a symbolic link points to a file","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1004397,"byte_end":1004470,"line_start":408,"line_end":408,"column_start":1,"column_end":74}},{"value":"/ or directory. Use `os::windows::fs::symlink_file` to create a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1004471,"byte_end":1004536,"line_start":409,"line_end":409,"column_start":1,"column_end":66}},{"value":"/ symbolic link to a file, or `os::windows::fs::symlink_dir` to create a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1004537,"byte_end":1004611,"line_start":410,"line_end":410,"column_start":1,"column_end":75}},{"value":"/ symbolic link to a directory. Additionally, the process must have","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1004612,"byte_end":1004681,"line_start":411,"line_end":411,"column_start":1,"column_end":70}},{"value":"/ `SeCreateSymbolicLinkPrivilege` in order to be able to create a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1004682,"byte_end":1004749,"line_start":412,"line_end":412,"column_start":1,"column_end":68}},{"value":"/ symbolic link.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1004750,"byte_end":1004768,"line_start":413,"line_end":413,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1004769,"byte_end":1004772,"line_start":414,"line_end":414,"column_start":1,"column_end":4}}]},{"kind":"Trait","id":{"krate":0,"index":5983},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1004918,"byte_end":1004931,"line_start":419,"line_end":419,"column_start":11,"column_end":24},"name":"DirBuilderExt","qualname":"::sys::ext::fs::DirBuilderExt","value":"DirBuilderExt","parent":null,"children":[{"krate":0,"index":5984}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5984},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1004941,"byte_end":1004945,"line_start":420,"line_end":420,"column_start":8,"column_end":12},"name":"mode","qualname":"::sys::ext::fs::DirBuilderExt::mode","value":"pub fn mode(&mut Self, u32) -> &mut Self","parent":{"krate":0,"index":5983},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5987},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::sys::ext::io","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","parent":null,"children":[{"krate":0,"index":5988},{"krate":0,"index":5989},{"krate":0,"index":5990},{"krate":0,"index":5991},{"krate":0,"index":5992},{"krate":0,"index":5993},{"krate":0,"index":5994},{"krate":0,"index":5995},{"krate":0,"index":5996},{"krate":0,"index":5997},{"krate":0,"index":5998},{"krate":0,"index":6000},{"krate":0,"index":6002},{"krate":0,"index":6004},{"krate":0,"index":6006},{"krate":0,"index":6008},{"krate":0,"index":6010},{"krate":0,"index":6012},{"krate":0,"index":6014},{"krate":0,"index":6016},{"krate":0,"index":6019},{"krate":0,"index":6022}],"decl_id":null,"docs":" Unix-specific extensions to general I/O primitives\n","sig":null,"attributes":[{"value":"/ Unix-specific extensions to general I/O primitives","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1005952,"byte_end":1006006,"line_start":18,"line_end":18,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":5997},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1006283,"byte_end":1006288,"line_start":31,"line_end":31,"column_start":10,"column_end":15},"name":"RawFd","qualname":"::sys::ext::io::RawFd","value":"raw::c_int","parent":null,"children":[],"decl_id":null,"docs":" Raw file descriptors.\n","sig":null,"attributes":[{"value":"/ Raw file descriptors.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1006248,"byte_end":1006273,"line_start":30,"line_end":30,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":5998},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1006590,"byte_end":1006597,"line_start":39,"line_end":39,"column_start":11,"column_end":18},"name":"AsRawFd","qualname":"::sys::ext::io::AsRawFd","value":"AsRawFd","parent":null,"children":[{"krate":0,"index":5999}],"decl_id":null,"docs":" A trait to extract the raw unix file descriptor from an underlying\n object.","sig":null,"attributes":[{"value":"/ A trait to extract the raw unix file descriptor from an underlying","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1006304,"byte_end":1006374,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/ object.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1006375,"byte_end":1006386,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1006387,"byte_end":1006390,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This is only available on unix platforms and must be imported in order","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1006391,"byte_end":1006465,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ to call the method. Windows platforms have a corresponding `AsRawHandle`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1006466,"byte_end":1006542,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ and `AsRawSocket` set of traits.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1006543,"byte_end":1006579,"line_start":38,"line_end":38,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":5999},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1006863,"byte_end":1006872,"line_start":45,"line_end":45,"column_start":8,"column_end":17},"name":"as_raw_fd","qualname":"::sys::ext::io::AsRawFd::as_raw_fd","value":"pub fn as_raw_fd(&Self) -> RawFd","parent":{"krate":0,"index":5998},"children":[],"decl_id":null,"docs":" Extracts the raw file descriptor.","sig":null,"attributes":[{"value":"/ Extracts the raw file descriptor.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1006604,"byte_end":1006641,"line_start":40,"line_end":40,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1006646,"byte_end":1006649,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This method does **not** pass ownership of the raw file descriptor","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1006654,"byte_end":1006724,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ to the caller. The descriptor is only guaranteed to be valid while","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1006729,"byte_end":1006799,"line_start":43,"line_end":43,"column_start":5,"column_end":75}},{"value":"/ the original object has not yet been destroyed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1006804,"byte_end":1006855,"line_start":44,"line_end":44,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":6000},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1006993,"byte_end":1007002,"line_start":50,"line_end":50,"column_start":11,"column_end":20},"name":"FromRawFd","qualname":"::sys::ext::io::FromRawFd","value":"FromRawFd","parent":null,"children":[{"krate":0,"index":6001}],"decl_id":null,"docs":" A trait to express the ability to construct an object from a raw file\n descriptor.\n","sig":null,"attributes":[{"value":"/ A trait to express the ability to construct an object from a raw file","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1006893,"byte_end":1006966,"line_start":48,"line_end":48,"column_start":1,"column_end":74}},{"value":"/ descriptor.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1006967,"byte_end":1006982,"line_start":49,"line_end":49,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":6001},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1007650,"byte_end":1007661,"line_start":63,"line_end":63,"column_start":15,"column_end":26},"name":"from_raw_fd","qualname":"::sys::ext::io::FromRawFd::from_raw_fd","value":"pub unsafe fn from_raw_fd(RawFd) -> Self","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":" Constructs a new instance of `Self` from the given raw file\n descriptor.","sig":null,"attributes":[{"value":"/ Constructs a new instance of `Self` from the given raw file","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1007009,"byte_end":1007072,"line_start":51,"line_end":51,"column_start":5,"column_end":68}},{"value":"/ descriptor.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1007077,"byte_end":1007092,"line_start":52,"line_end":52,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1007097,"byte_end":1007100,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ This function **consumes ownership** of the specified file","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1007105,"byte_end":1007167,"line_start":54,"line_end":54,"column_start":5,"column_end":67}},{"value":"/ descriptor. The returned object will take responsibility for closing","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1007172,"byte_end":1007244,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ it when the object goes out of scope.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1007249,"byte_end":1007290,"line_start":56,"line_end":56,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1007295,"byte_end":1007298,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This function is also unsafe as the primitives currently returned","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1007303,"byte_end":1007372,"line_start":58,"line_end":58,"column_start":5,"column_end":74}},{"value":"/ have the contract that they are the sole owner of the file","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1007377,"byte_end":1007439,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/ descriptor they are wrapping. Usage of this function could","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1007444,"byte_end":1007506,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"/ accidentally allow violating this contract which can cause memory","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1007511,"byte_end":1007580,"line_start":61,"line_end":61,"column_start":5,"column_end":74}},{"value":"/ unsafety in code that relies on it being true.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1007585,"byte_end":1007635,"line_start":62,"line_end":62,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":6002},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1007805,"byte_end":1007814,"line_start":68,"line_end":68,"column_start":11,"column_end":20},"name":"IntoRawFd","qualname":"::sys::ext::io::IntoRawFd","value":"IntoRawFd","parent":null,"children":[{"krate":0,"index":6003}],"decl_id":null,"docs":" A trait to express the ability to consume an object and acquire ownership of\n its raw file descriptor.\n","sig":null,"attributes":[{"value":"/ A trait to express the ability to consume an object and acquire ownership of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1007685,"byte_end":1007765,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ its raw file descriptor.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1007766,"byte_end":1007794,"line_start":67,"line_end":67,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":6003},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1008135,"byte_end":1008146,"line_start":74,"line_end":74,"column_start":8,"column_end":19},"name":"into_raw_fd","qualname":"::sys::ext::io::IntoRawFd::into_raw_fd","value":"pub fn into_raw_fd(Self) -> RawFd","parent":{"krate":0,"index":6002},"children":[],"decl_id":null,"docs":" Consumes this object, returning the raw underlying file descriptor.","sig":null,"attributes":[{"value":"/ Consumes this object, returning the raw underlying file descriptor.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1007821,"byte_end":1007892,"line_start":69,"line_end":69,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1007897,"byte_end":1007900,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This function **transfers ownership** of the underlying file descriptor","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1007905,"byte_end":1007980,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ to the caller. Callers are then the unique owners of the file descriptor","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1007985,"byte_end":1008061,"line_start":72,"line_end":72,"column_start":5,"column_end":81}},{"value":"/ and must close the descriptor once it's no longer needed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1008066,"byte_end":1008127,"line_start":73,"line_end":73,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":6025},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::sys::ext::net","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","parent":null,"children":[{"krate":0,"index":6026},{"krate":0,"index":6027},{"krate":0,"index":6028},{"krate":0,"index":6029},{"krate":0,"index":6030},{"krate":0,"index":6031},{"krate":0,"index":6032},{"krate":0,"index":6033},{"krate":0,"index":6034},{"krate":0,"index":6035},{"krate":0,"index":6036},{"krate":0,"index":6037},{"krate":0,"index":6038},{"krate":0,"index":6039},{"krate":0,"index":6040},{"krate":0,"index":6041},{"krate":0,"index":6042},{"krate":0,"index":6043},{"krate":0,"index":6044},{"krate":0,"index":6045},{"krate":0,"index":6046},{"krate":0,"index":6047},{"krate":0,"index":6048},{"krate":0,"index":6049},{"krate":0,"index":6050},{"krate":0,"index":6051},{"krate":0,"index":6052},{"krate":0,"index":6053},{"krate":0,"index":6054},{"krate":0,"index":6055},{"krate":0,"index":6056},{"krate":0,"index":6057},{"krate":0,"index":8336},{"krate":0,"index":8339},{"krate":0,"index":6067},{"krate":0,"index":6074},{"krate":0,"index":6076},{"krate":0,"index":6080},{"krate":0,"index":6083},{"krate":0,"index":6086},{"krate":0,"index":6088},{"krate":0,"index":6105},{"krate":0,"index":6109},{"krate":0,"index":6114},{"krate":0,"index":6118},{"krate":0,"index":6123},{"krate":0,"index":6125},{"krate":0,"index":6127},{"krate":0,"index":6129},{"krate":0,"index":6131},{"krate":0,"index":6133},{"krate":0,"index":6135},{"krate":0,"index":6137},{"krate":0,"index":6139},{"krate":0,"index":6141},{"krate":0,"index":6143},{"krate":0,"index":6145},{"krate":0,"index":6147},{"krate":0,"index":6150},{"krate":0,"index":6152},{"krate":0,"index":6163},{"krate":0,"index":6165},{"krate":0,"index":6167},{"krate":0,"index":6169},{"krate":0,"index":8341},{"krate":0,"index":8344},{"krate":0,"index":6174},{"krate":0,"index":6180},{"krate":0,"index":6183},{"krate":0,"index":6185},{"krate":0,"index":6213},{"krate":0,"index":6215},{"krate":0,"index":6217},{"krate":0,"index":6219}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/mod.rs","byte_start":989504,"byte_end":989527,"line_start":21,"line_end":21,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8336},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1012003,"byte_end":1012013,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"SocketAddr","qualname":"::sys::ext::net::SocketAddr","value":"SocketAddr {  }","parent":null,"children":[{"krate":0,"index":8337},{"krate":0,"index":8338}],"decl_id":null,"docs":" An address associated with a Unix socket.","sig":null,"attributes":[{"value":"/ An address associated with a Unix socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1011925,"byte_end":1011970,"line_start":78,"line_end":78,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1011971,"byte_end":1011974,"line_start":79,"line_end":79,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":6071},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1013210,"byte_end":1013220,"line_start":116,"line_end":116,"column_start":12,"column_end":22},"name":"is_unnamed","qualname":"<SocketAddr>::is_unnamed","value":"pub fn is_unnamed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the address is unnamed.","sig":null,"attributes":[{"value":"/ Returns `true` if the address is unnamed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1013145,"byte_end":1013190,"line_start":114,"line_end":114,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1013195,"byte_end":1013198,"line_start":115,"line_end":115,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6072},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1013417,"byte_end":1013428,"line_start":122,"line_end":122,"column_start":12,"column_end":23},"name":"as_pathname","qualname":"<SocketAddr>::as_pathname","value":"pub fn as_pathname(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of this address if it is a `pathname` address.","sig":null,"attributes":[{"value":"/ Returns the contents of this address if it is a `pathname` address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1013326,"byte_end":1013397,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1013402,"byte_end":1013405,"line_start":121,"line_end":121,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6083},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1014886,"byte_end":1014896,"line_start":166,"line_end":166,"column_start":12,"column_end":22},"name":"UnixStream","qualname":"::sys::ext::net::UnixStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" A Unix stream socket.","sig":null,"attributes":[{"value":"/ A Unix stream socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1014845,"byte_end":1014870,"line_start":164,"line_end":164,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1014871,"byte_end":1014874,"line_start":165,"line_end":165,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":6089},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1015426,"byte_end":1015433,"line_start":185,"line_end":185,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixStream>::connect","value":"pub fn connect<P: AsRef<Path>>(P) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1015363,"byte_end":1015406,"line_start":183,"line_end":183,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1015411,"byte_end":1015414,"line_start":184,"line_end":184,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6092},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1016041,"byte_end":1016045,"line_start":202,"line_end":202,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"pub fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1015895,"byte_end":1015944,"line_start":198,"line_end":198,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1015949,"byte_end":1015952,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Returns two `UnixStream`s which are connected to each other.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1015957,"byte_end":1016021,"line_start":200,"line_end":200,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1016026,"byte_end":1016029,"line_start":201,"line_end":201,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6093},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1016569,"byte_end":1016578,"line_start":214,"line_end":214,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<UnixStream>::try_clone","value":"pub fn try_clone(&Self) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned handle to the underlying socket.","sig":null,"attributes":[{"value":"/ Creates a new independently owned handle to the underlying socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1016222,"byte_end":1016292,"line_start":207,"line_end":207,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1016297,"byte_end":1016300,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ The returned `UnixStream` is a reference to the same stream that this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1016305,"byte_end":1016378,"line_start":209,"line_end":209,"column_start":5,"column_end":78}},{"value":"/ object references. Both handles will read and write the same stream of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1016383,"byte_end":1016457,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ data, and options set on one stream will be propagated to the other","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1016462,"byte_end":1016533,"line_start":211,"line_end":211,"column_start":5,"column_end":76}},{"value":"/ stream.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1016538,"byte_end":1016549,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1016554,"byte_end":1016557,"line_start":213,"line_end":213,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6094},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1016756,"byte_end":1016766,"line_start":220,"line_end":220,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1016668,"byte_end":1016736,"line_start":218,"line_end":218,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1016741,"byte_end":1016744,"line_start":219,"line_end":219,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6096},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1016999,"byte_end":1017008,"line_start":226,"line_end":226,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1016910,"byte_end":1016979,"line_start":224,"line_end":224,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1016984,"byte_end":1016987,"line_start":225,"line_end":225,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6098},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1017678,"byte_end":1017694,"line_start":241,"line_end":241,"column_start":12,"column_end":28},"name":"set_read_timeout","qualname":"<UnixStream>::set_read_timeout","value":"pub fn set_read_timeout(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the read timeout for the socket.","sig":null,"attributes":[{"value":"/ Sets the read timeout for the socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1017152,"byte_end":1017193,"line_start":230,"line_end":230,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1017198,"byte_end":1017201,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ If the provided value is [`None`], then [`read`] calls will block","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1017206,"byte_end":1017275,"line_start":232,"line_end":232,"column_start":5,"column_end":74}},{"value":"/ indefinitely. An [`Err`] is returned if the zero [`Duration`] is passed to this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1017280,"byte_end":1017363,"line_start":233,"line_end":233,"column_start":5,"column_end":88}},{"value":"/ method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1017368,"byte_end":1017379,"line_start":234,"line_end":234,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1017384,"byte_end":1017387,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ [`None`]: ../../../../std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1017392,"byte_end":1017458,"line_start":236,"line_end":236,"column_start":5,"column_end":71}},{"value":"/ [`Err`]: ../../../../std/result/enum.Result.html#variant.Err","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1017463,"byte_end":1017527,"line_start":237,"line_end":237,"column_start":5,"column_end":69}},{"value":"/ [`read`]: ../../../../std/io/trait.Read.html#tymethod.read","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1017532,"byte_end":1017594,"line_start":238,"line_end":238,"column_start":5,"column_end":67}},{"value":"/ [`Duration`]: ../../../../std/time/struct.Duration.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1017599,"byte_end":1017658,"line_start":239,"line_end":239,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1017663,"byte_end":1017666,"line_start":240,"line_end":240,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6099},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1018346,"byte_end":1018363,"line_start":256,"line_end":256,"column_start":12,"column_end":29},"name":"set_write_timeout","qualname":"<UnixStream>::set_write_timeout","value":"pub fn set_write_timeout(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the write timeout for the socket.","sig":null,"attributes":[{"value":"/ Sets the write timeout for the socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1017815,"byte_end":1017857,"line_start":245,"line_end":245,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1017862,"byte_end":1017865,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ If the provided value is [`None`], then [`write`] calls will block","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1017870,"byte_end":1017940,"line_start":247,"line_end":247,"column_start":5,"column_end":75}},{"value":"/ indefinitely. An [`Err`] is returned if the zero [`Duration`] is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1017945,"byte_end":1018013,"line_start":248,"line_end":248,"column_start":5,"column_end":73}},{"value":"/ passed to this method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1018018,"byte_end":1018044,"line_start":249,"line_end":249,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1018049,"byte_end":1018052,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ [`None`]: ../../../../std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1018057,"byte_end":1018123,"line_start":251,"line_end":251,"column_start":5,"column_end":71}},{"value":"/ [`Err`]: ../../../../std/result/enum.Result.html#variant.Err","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1018128,"byte_end":1018192,"line_start":252,"line_end":252,"column_start":5,"column_end":69}},{"value":"/ [`write`]: ../../../../std/io/trait.Write.html#tymethod.write","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1018197,"byte_end":1018262,"line_start":253,"line_end":253,"column_start":5,"column_end":70}},{"value":"/ [`Duration`]: ../../../../std/time/struct.Duration.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1018267,"byte_end":1018326,"line_start":254,"line_end":254,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1018331,"byte_end":1018334,"line_start":255,"line_end":255,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6100},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1018548,"byte_end":1018560,"line_start":262,"line_end":262,"column_start":12,"column_end":24},"name":"read_timeout","qualname":"<UnixStream>::read_timeout","value":"pub fn read_timeout(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the read timeout of this socket.","sig":null,"attributes":[{"value":"/ Returns the read timeout of this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1018484,"byte_end":1018528,"line_start":260,"line_end":260,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1018533,"byte_end":1018536,"line_start":261,"line_end":261,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6101},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1018720,"byte_end":1018733,"line_start":268,"line_end":268,"column_start":12,"column_end":25},"name":"write_timeout","qualname":"<UnixStream>::write_timeout","value":"pub fn write_timeout(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the write timeout of this socket.","sig":null,"attributes":[{"value":"/ Returns the write timeout of this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1018655,"byte_end":1018700,"line_start":266,"line_end":266,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1018705,"byte_end":1018708,"line_start":267,"line_end":267,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6102},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1018901,"byte_end":1018916,"line_start":274,"line_end":274,"column_start":12,"column_end":27},"name":"set_nonblocking","qualname":"<UnixStream>::set_nonblocking","value":"pub fn set_nonblocking(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Moves the socket into or out of nonblocking mode.","sig":null,"attributes":[{"value":"/ Moves the socket into or out of nonblocking mode.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1018828,"byte_end":1018881,"line_start":272,"line_end":272,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1018886,"byte_end":1018889,"line_start":273,"line_end":273,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6103},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1019085,"byte_end":1019095,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1019018,"byte_end":1019065,"line_start":278,"line_end":278,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1019070,"byte_end":1019073,"line_start":279,"line_end":279,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6104},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1019537,"byte_end":1019545,"line_start":292,"line_end":292,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1019177,"byte_end":1019243,"line_start":284,"line_end":284,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1019248,"byte_end":1019251,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1019256,"byte_end":1019324,"line_start":286,"line_end":286,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1019329,"byte_end":1019399,"line_start":287,"line_end":287,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of [`Shutdown`]).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1019404,"byte_end":1019448,"line_start":288,"line_end":288,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1019453,"byte_end":1019456,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: ../../../../std/net/enum.Shutdown.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1019461,"byte_end":1019517,"line_start":290,"line_end":290,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1019522,"byte_end":1019525,"line_start":291,"line_end":291,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6147},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1022978,"byte_end":1022990,"line_start":432,"line_end":432,"column_start":12,"column_end":24},"name":"UnixListener","qualname":"::sys::ext::net::UnixListener","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure representing a Unix domain socket server.","sig":null,"attributes":[{"value":"/ A structure representing a Unix domain socket server.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1022905,"byte_end":1022962,"line_start":430,"line_end":430,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1022963,"byte_end":1022966,"line_start":431,"line_end":431,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":6153},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1023449,"byte_end":1023453,"line_start":448,"line_end":448,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"pub fn bind<P: AsRef<Path>>(P) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified socket.","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1023366,"byte_end":1023429,"line_start":446,"line_end":446,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1023434,"byte_end":1023437,"line_start":447,"line_end":447,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6156},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1024278,"byte_end":1024284,"line_start":469,"line_end":469,"column_start":12,"column_end":18},"name":"accept","qualname":"<UnixListener>::accept","value":"pub fn accept(&Self) -> io::Result<(UnixStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1023984,"byte_end":1024039,"line_start":463,"line_end":463,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1024044,"byte_end":1024047,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ This function will block the calling thread until a new Unix connection","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1024052,"byte_end":1024127,"line_start":465,"line_end":465,"column_start":5,"column_end":80}},{"value":"/ is established. When established, the corresponding [`UnixStream`] and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1024132,"byte_end":1024206,"line_start":466,"line_end":466,"column_start":5,"column_end":79}},{"value":"/ the remote peer's address will be returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1024211,"byte_end":1024258,"line_start":467,"line_end":467,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1024263,"byte_end":1024266,"line_start":468,"line_end":468,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6157},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1024983,"byte_end":1024992,"line_start":483,"line_end":483,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<UnixListener>::try_clone","value":"pub fn try_clone(&Self) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned handle to the underlying socket.","sig":null,"attributes":[{"value":"/ Creates a new independently owned handle to the underlying socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1024659,"byte_end":1024729,"line_start":477,"line_end":477,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1024734,"byte_end":1024737,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ The returned `UnixListener` is a reference to the same socket that this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1024742,"byte_end":1024817,"line_start":479,"line_end":479,"column_start":5,"column_end":80}},{"value":"/ object references. Both handles can be used to accept incoming","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1024822,"byte_end":1024888,"line_start":480,"line_end":480,"column_start":5,"column_end":71}},{"value":"/ connections and options set on one listener will affect the other.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1024893,"byte_end":1024963,"line_start":481,"line_end":481,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1024968,"byte_end":1024971,"line_start":482,"line_end":482,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6158},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1025160,"byte_end":1025170,"line_start":489,"line_end":489,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1025086,"byte_end":1025140,"line_start":487,"line_end":487,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1025145,"byte_end":1025148,"line_start":488,"line_end":488,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6160},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1025387,"byte_end":1025402,"line_start":495,"line_end":495,"column_start":12,"column_end":27},"name":"set_nonblocking","qualname":"<UnixListener>::set_nonblocking","value":"pub fn set_nonblocking(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Moves the socket into or out of nonblocking mode.","sig":null,"attributes":[{"value":"/ Moves the socket into or out of nonblocking mode.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1025314,"byte_end":1025367,"line_start":493,"line_end":493,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1025372,"byte_end":1025375,"line_start":494,"line_end":494,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6161},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1025571,"byte_end":1025581,"line_start":501,"line_end":501,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1025504,"byte_end":1025551,"line_start":499,"line_end":499,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1025556,"byte_end":1025559,"line_start":500,"line_end":500,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6162},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1025984,"byte_end":1025992,"line_start":513,"line_end":513,"column_start":12,"column_end":20},"name":"incoming","qualname":"<UnixListener>::incoming","value":"pub fn incoming(&Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over incoming connections.","sig":null,"attributes":[{"value":"/ Returns an iterator over incoming connections.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1025663,"byte_end":1025713,"line_start":505,"line_end":505,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1025718,"byte_end":1025721,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ The iterator will never return [`None`] and will also not yield the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1025726,"byte_end":1025797,"line_start":507,"line_end":507,"column_start":5,"column_end":76}},{"value":"/ peer's [`SocketAddr`] structure.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1025802,"byte_end":1025838,"line_start":508,"line_end":508,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1025843,"byte_end":1025846,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ [`None`]: ../../../../std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1025851,"byte_end":1025917,"line_start":510,"line_end":510,"column_start":5,"column_end":71}},{"value":"/ [`SocketAddr`]: struct.SocketAddr.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1025922,"byte_end":1025964,"line_start":511,"line_end":511,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1025969,"byte_end":1025972,"line_start":512,"line_end":512,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8341},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1026864,"byte_end":1026872,"line_start":553,"line_end":553,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::sys::ext::net::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":8343}],"decl_id":null,"docs":" An iterator over incoming connections to a [`UnixListener`].","sig":null,"attributes":[{"value":"/ An iterator over incoming connections to a [`UnixListener`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1026610,"byte_end":1026674,"line_start":545,"line_end":545,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1026675,"byte_end":1026678,"line_start":546,"line_end":546,"column_start":1,"column_end":4}},{"value":"/ It will never return [`None`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1026679,"byte_end":1026713,"line_start":547,"line_end":547,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1026714,"byte_end":1026717,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/ [`None`]: ../../../../std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1026718,"byte_end":1026784,"line_start":549,"line_end":549,"column_start":1,"column_end":67}},{"value":"/ [`UnixListener`]: struct.UnixListener.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1026785,"byte_end":1026831,"line_start":550,"line_end":550,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1026832,"byte_end":1026835,"line_start":551,"line_end":551,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":6180},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1027247,"byte_end":1027259,"line_start":571,"line_end":571,"column_start":12,"column_end":24},"name":"UnixDatagram","qualname":"::sys::ext::net::UnixDatagram","value":"","parent":null,"children":[],"decl_id":null,"docs":" A Unix datagram socket.","sig":null,"attributes":[{"value":"/ A Unix datagram socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1027204,"byte_end":1027231,"line_start":569,"line_end":569,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1027232,"byte_end":1027235,"line_start":570,"line_end":570,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":6186},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1027811,"byte_end":1027815,"line_start":590,"line_end":590,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"pub fn bind<P: AsRef<Path>>(P) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram socket bound to the given path.","sig":null,"attributes":[{"value":"/ Creates a Unix datagram socket bound to the given path.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1027732,"byte_end":1027791,"line_start":588,"line_end":588,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1027796,"byte_end":1027799,"line_start":589,"line_end":589,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6189},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1028340,"byte_end":1028347,"line_start":606,"line_end":606,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"pub fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix Datagram socket which is not bound to any address.","sig":null,"attributes":[{"value":"/ Creates a Unix Datagram socket which is not bound to any address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1028251,"byte_end":1028320,"line_start":604,"line_end":604,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1028325,"byte_end":1028328,"line_start":605,"line_end":605,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6190},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1028643,"byte_end":1028647,"line_start":615,"line_end":615,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1028494,"byte_end":1028543,"line_start":611,"line_end":611,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1028548,"byte_end":1028551,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ Returns two `UnixDatagrams`s which are connected to each other.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1028556,"byte_end":1028623,"line_start":613,"line_end":613,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1028628,"byte_end":1028631,"line_start":614,"line_end":614,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6191},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1029175,"byte_end":1029182,"line_start":629,"line_end":629,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"pub fn connect<P: AsRef<Path>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1028831,"byte_end":1028880,"line_start":620,"line_end":620,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1028885,"byte_end":1028888,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ The [`send`] method may be used to send data to the specified address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1028893,"byte_end":1028967,"line_start":622,"line_end":622,"column_start":5,"column_end":79}},{"value":"/ [`recv`] and [`recv_from`] will only receive data from that address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1028972,"byte_end":1029044,"line_start":623,"line_end":623,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1029049,"byte_end":1029052,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ [`send`]: #method.send","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1029057,"byte_end":1029083,"line_start":625,"line_end":625,"column_start":5,"column_end":31}},{"value":"/ [`recv`]: #method.recv","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1029088,"byte_end":1029114,"line_start":626,"line_end":626,"column_start":5,"column_end":31}},{"value":"/ [`recv_from`]: #method.recv_from","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1029119,"byte_end":1029155,"line_start":627,"line_end":627,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1029160,"byte_end":1029163,"line_start":628,"line_end":628,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6194},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1029883,"byte_end":1029892,"line_start":648,"line_end":648,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<UnixDatagram>::try_clone","value":"pub fn try_clone(&Self) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned handle to the underlying socket.","sig":null,"attributes":[{"value":"/ Creates a new independently owned handle to the underlying socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1029563,"byte_end":1029633,"line_start":642,"line_end":642,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1029638,"byte_end":1029641,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ The returned `UnixDatagram` is a reference to the same socket that this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1029646,"byte_end":1029721,"line_start":644,"line_end":644,"column_start":5,"column_end":80}},{"value":"/ object references. Both handles can be used to accept incoming","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1029726,"byte_end":1029792,"line_start":645,"line_end":645,"column_start":5,"column_end":71}},{"value":"/ connections and options set on one side will affect the other.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1029797,"byte_end":1029863,"line_start":646,"line_end":646,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1029868,"byte_end":1029871,"line_start":647,"line_end":647,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6195},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1030045,"byte_end":1030055,"line_start":654,"line_end":654,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket.","sig":null,"attributes":[{"value":"/ Returns the address of this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1029986,"byte_end":1030025,"line_start":652,"line_end":652,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1030030,"byte_end":1030033,"line_start":653,"line_end":653,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6197},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1030384,"byte_end":1030393,"line_start":664,"line_end":664,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1030199,"byte_end":1030245,"line_start":658,"line_end":658,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1030250,"byte_end":1030253,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect the socket to a peer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1030258,"byte_end":1030319,"line_start":660,"line_end":660,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1030324,"byte_end":1030327,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1030332,"byte_end":1030364,"line_start":662,"line_end":662,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1030369,"byte_end":1030372,"line_start":663,"line_end":663,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6199},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1030703,"byte_end":1030712,"line_start":673,"line_end":673,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"pub fn recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1030537,"byte_end":1030571,"line_start":668,"line_end":668,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1030576,"byte_end":1030579,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the address from","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1030584,"byte_end":1030653,"line_start":670,"line_end":670,"column_start":5,"column_end":74}},{"value":"/ whence the data came.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1030658,"byte_end":1030683,"line_start":671,"line_end":671,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1030688,"byte_end":1030691,"line_start":672,"line_end":672,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6201},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1031404,"byte_end":1031408,"line_start":700,"line_end":700,"column_start":12,"column_end":16},"name":"recv","qualname":"<UnixDatagram>::recv","value":"pub fn recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1031288,"byte_end":1031322,"line_start":696,"line_end":696,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1031327,"byte_end":1031330,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1031335,"byte_end":1031384,"line_start":698,"line_end":698,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1031389,"byte_end":1031392,"line_start":699,"line_end":699,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6202},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1031630,"byte_end":1031637,"line_start":708,"line_end":708,"column_start":12,"column_end":19},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"pub fn send_to<P: AsRef<Path>>(&Self, &[u8], P) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1031491,"byte_end":1031545,"line_start":704,"line_end":704,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1031550,"byte_end":1031553,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1031558,"byte_end":1031610,"line_start":706,"line_end":706,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1031615,"byte_end":1031618,"line_start":707,"line_end":707,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6205},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1032566,"byte_end":1032570,"line_start":734,"line_end":734,"column_start":12,"column_end":16},"name":"send","qualname":"<UnixDatagram>::send","value":"pub fn send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1032271,"byte_end":1032321,"line_start":727,"line_end":727,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1032326,"byte_end":1032329,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ The peer address may be set by the `connect` method, and this method","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1032334,"byte_end":1032406,"line_start":729,"line_end":729,"column_start":5,"column_end":77}},{"value":"/ will return an error if the socket has not already been connected.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1032411,"byte_end":1032481,"line_start":730,"line_end":730,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1032486,"byte_end":1032489,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1032494,"byte_end":1032546,"line_start":732,"line_end":732,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1032551,"byte_end":1032554,"line_start":733,"line_end":733,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6206},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1033199,"byte_end":1033215,"line_start":750,"line_end":750,"column_start":12,"column_end":28},"name":"set_read_timeout","qualname":"<UnixDatagram>::set_read_timeout","value":"pub fn set_read_timeout(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the read timeout for the socket.","sig":null,"attributes":[{"value":"/ Sets the read timeout for the socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1032650,"byte_end":1032691,"line_start":738,"line_end":738,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1032696,"byte_end":1032699,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ If the provided value is [`None`], then [`recv`] and [`recv_from`] calls will","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1032704,"byte_end":1032785,"line_start":740,"line_end":740,"column_start":5,"column_end":86}},{"value":"/ block indefinitely. An [`Err`] is returned if the zero [`Duration`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1032790,"byte_end":1032861,"line_start":741,"line_end":741,"column_start":5,"column_end":76}},{"value":"/ is passed to this method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1032866,"byte_end":1032895,"line_start":742,"line_end":742,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1032900,"byte_end":1032903,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ [`None`]: ../../../../std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1032908,"byte_end":1032974,"line_start":744,"line_end":744,"column_start":5,"column_end":71}},{"value":"/ [`Err`]: ../../../../std/result/enum.Result.html#variant.Err","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1032979,"byte_end":1033043,"line_start":745,"line_end":745,"column_start":5,"column_end":69}},{"value":"/ [`recv`]: #method.recv","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1033048,"byte_end":1033074,"line_start":746,"line_end":746,"column_start":5,"column_end":31}},{"value":"/ [`recv_from`]: #method.recv_from","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1033079,"byte_end":1033115,"line_start":747,"line_end":747,"column_start":5,"column_end":41}},{"value":"/ [`Duration`]: ../../../../std/time/struct.Duration.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1033120,"byte_end":1033179,"line_start":748,"line_end":748,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1033184,"byte_end":1033187,"line_start":749,"line_end":749,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6207},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1033811,"byte_end":1033828,"line_start":765,"line_end":765,"column_start":12,"column_end":29},"name":"set_write_timeout","qualname":"<UnixDatagram>::set_write_timeout","value":"pub fn set_write_timeout(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the write timeout for the socket.","sig":null,"attributes":[{"value":"/ Sets the write timeout for the socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1033336,"byte_end":1033378,"line_start":754,"line_end":754,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1033383,"byte_end":1033386,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ If the provided value is [`None`], then [`send`] and [`send_to`] calls will","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1033391,"byte_end":1033470,"line_start":756,"line_end":756,"column_start":5,"column_end":84}},{"value":"/ block indefinitely. An [`Err`] is returned if the zero [`Duration`] is passed to this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1033475,"byte_end":1033564,"line_start":757,"line_end":757,"column_start":5,"column_end":94}},{"value":"/ method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1033569,"byte_end":1033580,"line_start":758,"line_end":758,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1033585,"byte_end":1033588,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ [`None`]: ../../../../std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1033593,"byte_end":1033659,"line_start":760,"line_end":760,"column_start":5,"column_end":71}},{"value":"/ [`send`]: #method.send","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1033664,"byte_end":1033690,"line_start":761,"line_end":761,"column_start":5,"column_end":31}},{"value":"/ [`send_to`]: #method.send_to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1033695,"byte_end":1033727,"line_start":762,"line_end":762,"column_start":5,"column_end":37}},{"value":"/ [`Duration`]: ../../../../std/time/struct.Duration.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1033732,"byte_end":1033791,"line_start":763,"line_end":763,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1033796,"byte_end":1033799,"line_start":764,"line_end":764,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6208},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1034013,"byte_end":1034025,"line_start":771,"line_end":771,"column_start":12,"column_end":24},"name":"read_timeout","qualname":"<UnixDatagram>::read_timeout","value":"pub fn read_timeout(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the read timeout of this socket.","sig":null,"attributes":[{"value":"/ Returns the read timeout of this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1033949,"byte_end":1033993,"line_start":769,"line_end":769,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1033998,"byte_end":1034001,"line_start":770,"line_end":770,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6209},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1034185,"byte_end":1034198,"line_start":777,"line_end":777,"column_start":12,"column_end":25},"name":"write_timeout","qualname":"<UnixDatagram>::write_timeout","value":"pub fn write_timeout(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the write timeout of this socket.","sig":null,"attributes":[{"value":"/ Returns the write timeout of this socket.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1034120,"byte_end":1034165,"line_start":775,"line_end":775,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1034170,"byte_end":1034173,"line_start":776,"line_end":776,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6210},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1034366,"byte_end":1034381,"line_start":783,"line_end":783,"column_start":12,"column_end":27},"name":"set_nonblocking","qualname":"<UnixDatagram>::set_nonblocking","value":"pub fn set_nonblocking(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Moves the socket into or out of nonblocking mode.","sig":null,"attributes":[{"value":"/ Moves the socket into or out of nonblocking mode.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1034293,"byte_end":1034346,"line_start":781,"line_end":781,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1034351,"byte_end":1034354,"line_start":782,"line_end":782,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6211},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1034550,"byte_end":1034560,"line_start":789,"line_end":789,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1034483,"byte_end":1034530,"line_start":787,"line_end":787,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1034535,"byte_end":1034538,"line_start":788,"line_end":788,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6212},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1034932,"byte_end":1034940,"line_start":799,"line_end":799,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shut down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shut down the read, write, or both halves of this connection.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1034642,"byte_end":1034707,"line_start":793,"line_end":793,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1034712,"byte_end":1034715,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1034720,"byte_end":1034788,"line_start":795,"line_end":795,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1034793,"byte_end":1034863,"line_start":796,"line_end":796,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of [`Shutdown`]).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1034868,"byte_end":1034912,"line_start":797,"line_end":797,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1034917,"byte_end":1034920,"line_start":798,"line_end":798,"column_start":5,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":6229},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/raw.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"raw","qualname":"::sys::ext::raw","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/raw.rs","parent":null,"children":[{"krate":0,"index":6230},{"krate":0,"index":6231},{"krate":0,"index":6232},{"krate":0,"index":6233},{"krate":0,"index":6234},{"krate":0,"index":6235},{"krate":0,"index":6236},{"krate":0,"index":6237},{"krate":0,"index":6238},{"krate":0,"index":6239},{"krate":0,"index":6240},{"krate":0,"index":6241},{"krate":0,"index":6242},{"krate":0,"index":6243}],"decl_id":null,"docs":" Unix-specific primitives available on all unix platforms\n","sig":null,"attributes":[{"value":"/ Unix-specific primitives available on all unix platforms","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/raw.rs","byte_start":1036325,"byte_end":1036385,"line_start":18,"line_end":18,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":6230},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/raw.rs","byte_start":1036396,"byte_end":1036401,"line_start":20,"line_end":20,"column_start":10,"column_end":15},"name":"uid_t","qualname":"::sys::ext::raw::uid_t","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6231},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/raw.rs","byte_start":1036418,"byte_end":1036423,"line_start":21,"line_end":21,"column_start":10,"column_end":15},"name":"gid_t","qualname":"::sys::ext::raw::gid_t","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6232},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/raw.rs","byte_start":1036440,"byte_end":1036445,"line_start":22,"line_end":22,"column_start":10,"column_end":15},"name":"pid_t","qualname":"::sys::ext::raw::pid_t","value":"i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6244},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/mod.rs","byte_start":989745,"byte_end":989752,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"name":"prelude","qualname":"::sys::ext::prelude","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/mod.rs","parent":null,"children":[{"krate":0,"index":6245},{"krate":0,"index":6246},{"krate":0,"index":6247},{"krate":0,"index":6248},{"krate":0,"index":6249},{"krate":0,"index":6250},{"krate":0,"index":6251},{"krate":0,"index":6252},{"krate":0,"index":6253},{"krate":0,"index":6254},{"krate":0,"index":6255},{"krate":0,"index":6256},{"krate":0,"index":6257},{"krate":0,"index":6258},{"krate":0,"index":6259}],"decl_id":null,"docs":" A prelude for conveniently writing platform-specific code.","sig":null,"attributes":[{"value":"/ A prelude for conveniently writing platform-specific code.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/mod.rs","byte_start":989598,"byte_end":989660,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/mod.rs","byte_start":989661,"byte_end":989664,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Includes all extension traits, and some important type definitions.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/mod.rs","byte_start":989665,"byte_end":989736,"line_start":29,"line_end":29,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":6301},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/os.rs","byte_start":1039500,"byte_end":1039505,"line_start":41,"line_end":41,"column_start":8,"column_end":13},"name":"errno","qualname":"::sys::os::errno","value":"pub fn errno() -> i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6302},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/os.rs","byte_start":1039551,"byte_end":1039560,"line_start":45,"line_end":45,"column_start":8,"column_end":17},"name":"set_errno","qualname":"::sys::os::set_errno","value":"pub fn set_errno(i32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6303},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/os.rs","byte_start":1039610,"byte_end":1039622,"line_start":49,"line_end":49,"column_start":8,"column_end":20},"name":"error_string","qualname":"::sys::os::error_string","value":"pub fn error_string(i32) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6607},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"alloc","qualname":"::alloc","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","parent":null,"children":[{"krate":0,"index":6608},{"krate":0,"index":6609},{"krate":0,"index":6610},{"krate":0,"index":6611},{"krate":0,"index":6612},{"krate":0,"index":6613},{"krate":0,"index":6614},{"krate":0,"index":6615},{"krate":0,"index":6616},{"krate":0,"index":10880},{"krate":0,"index":6617},{"krate":0,"index":6618},{"krate":0,"index":6619},{"krate":0,"index":6620},{"krate":0,"index":6621},{"krate":0,"index":6622}],"decl_id":null,"docs":" Memory allocation APIs","sig":null,"attributes":[{"value":"/ Memory allocation APIs","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1082541,"byte_end":1082567,"line_start":18,"line_end":18,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1082568,"byte_end":1082571,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ In a given program, the standard library has one “global” memory allocator","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1082572,"byte_end":1082654,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ that is used for example by `Box<T>` and `Vec<T>`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1082655,"byte_end":1082709,"line_start":21,"line_end":21,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1082710,"byte_end":1082713,"line_start":22,"line_end":22,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":6618},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1083528,"byte_end":1083548,"line_start":46,"line_end":46,"column_start":8,"column_end":28},"name":"set_alloc_error_hook","qualname":"::alloc::set_alloc_error_hook","value":"pub fn set_alloc_error_hook(fn(: Layout))","parent":null,"children":[],"decl_id":null,"docs":" Registers a custom allocation error hook, replacing any that was previously registered.","sig":null,"attributes":[{"value":"/ Registers a custom allocation error hook, replacing any that was previously registered.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1082964,"byte_end":1083055,"line_start":35,"line_end":35,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1083056,"byte_end":1083059,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ The allocation error hook is invoked when an infallible memory allocation fails, before","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1083060,"byte_end":1083151,"line_start":37,"line_end":37,"column_start":1,"column_end":92}},{"value":"/ the runtime aborts. The default hook prints a message to standard error,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1083152,"byte_end":1083228,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ but this behavior can be customized with the [`set_alloc_error_hook`] and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1083229,"byte_end":1083306,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ [`take_alloc_error_hook`] functions.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1083307,"byte_end":1083347,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1083348,"byte_end":1083351,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The hook is provided with a `Layout` struct which contains information","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1083352,"byte_end":1083426,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ about the allocation that failed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1083427,"byte_end":1083464,"line_start":43,"line_end":43,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1083465,"byte_end":1083468,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The allocation error hook is a global resource.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1083469,"byte_end":1083520,"line_start":45,"line_end":45,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":6619},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1083829,"byte_end":1083850,"line_start":55,"line_end":55,"column_start":8,"column_end":29},"name":"take_alloc_error_hook","qualname":"::alloc::take_alloc_error_hook","value":"pub fn take_alloc_error_hook() -> fn(: Layout)","parent":null,"children":[],"decl_id":null,"docs":" Unregisters the current allocation error hook, returning it.","sig":null,"attributes":[{"value":"/ Unregisters the current allocation error hook, returning it.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1083623,"byte_end":1083687,"line_start":50,"line_end":50,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1083688,"byte_end":1083691,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ *See also the function [`set_alloc_error_hook`].*","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1083692,"byte_end":1083745,"line_start":52,"line_end":52,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1083746,"byte_end":1083749,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ If no custom hook is registered, the default hook will be returned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1083750,"byte_end":1083821,"line_start":54,"line_end":54,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":6621},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1084204,"byte_end":1084212,"line_start":66,"line_end":66,"column_start":8,"column_end":16},"name":"rust_oom","qualname":"::alloc::rust_oom","value":"pub fn rust_oom(Layout) -> !","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"alloc_error_handler","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1084174,"byte_end":1084196,"line_start":65,"line_end":65,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":6622},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1084520,"byte_end":1084543,"line_start":76,"line_end":76,"column_start":9,"column_end":32},"name":"__default_lib_allocator","qualname":"::alloc::__default_lib_allocator","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","parent":null,"children":[{"krate":0,"index":6623},{"krate":0,"index":6624},{"krate":0,"index":6625},{"krate":0,"index":6626},{"krate":0,"index":10886},{"krate":0,"index":6627},{"krate":0,"index":6628},{"krate":0,"index":6629},{"krate":0,"index":6630}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(unused_attributes)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1084484,"byte_end":1084511,"line_start":75,"line_end":75,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":6627},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1085059,"byte_end":1085070,"line_start":89,"line_end":89,"column_start":30,"column_end":41},"name":"__rdl_alloc","qualname":"::alloc::__default_lib_allocator::__rdl_alloc","value":"pub unsafe extern \"C\" fn __rdl_alloc(usize, usize) -> *mut u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"rustc_std_internal_symbol","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1085001,"byte_end":1085029,"line_start":88,"line_end":88,"column_start":5,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":6628},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1085278,"byte_end":1085291,"line_start":95,"line_end":95,"column_start":30,"column_end":43},"name":"__rdl_dealloc","qualname":"::alloc::__default_lib_allocator::__rdl_dealloc","value":"pub unsafe extern \"C\" fn __rdl_dealloc(*mut u8, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"rustc_std_internal_symbol","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1085220,"byte_end":1085248,"line_start":94,"line_end":94,"column_start":5,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":6629},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1085480,"byte_end":1085493,"line_start":100,"line_end":100,"column_start":30,"column_end":43},"name":"__rdl_realloc","qualname":"::alloc::__default_lib_allocator::__rdl_realloc","value":"pub unsafe extern \"C\" fn __rdl_realloc(*mut u8, usize, usize, usize)\n-> *mut u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"rustc_std_internal_symbol","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1085422,"byte_end":1085450,"line_start":99,"line_end":99,"column_start":5,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":6630},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1085804,"byte_end":1085822,"line_start":111,"line_end":111,"column_start":30,"column_end":48},"name":"__rdl_alloc_zeroed","qualname":"::alloc::__default_lib_allocator::__rdl_alloc_zeroed","value":"pub unsafe extern \"C\" fn __rdl_alloc_zeroed(usize, usize) -> *mut u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"rustc_std_internal_symbol","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/alloc.rs","byte_start":1085746,"byte_end":1085774,"line_start":110,"line_end":110,"column_start":5,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":6669},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1091052,"byte_end":1091069,"line_start":143,"line_end":143,"column_start":8,"column_end":25},"name":"set_panic_handler","qualname":"::panicking::set_panic_handler","value":"pub fn set_panic_handler(fn(: &PanicInfo))","parent":null,"children":[],"decl_id":null,"docs":" Registers a custom panic handler, replacing any that was previously registered.\n","sig":null,"attributes":[{"value":"/ Registers a custom panic handler, replacing any that was previously registered.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1090961,"byte_end":1091044,"line_start":142,"line_end":142,"column_start":1,"column_end":84}}]},{"kind":"Function","id":{"krate":0,"index":6670},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1091281,"byte_end":1091299,"line_start":150,"line_end":150,"column_start":8,"column_end":26},"name":"take_panic_handler","qualname":"::panicking::take_panic_handler","value":"pub fn take_panic_handler() -> fn(: &PanicInfo)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6672},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1091743,"byte_end":1091761,"line_start":162,"line_end":162,"column_start":8,"column_end":26},"name":"update_panic_count","qualname":"::panicking::update_panic_count","value":"pub fn update_panic_count(isize) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6693},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1096831,"byte_end":1096846,"line_start":289,"line_end":289,"column_start":8,"column_end":23},"name":"begin_panic_fmt","qualname":"::panicking::begin_panic_fmt","value":"pub fn begin_panic_fmt(&fmt::Arguments) -> !","parent":null,"children":[],"decl_id":null,"docs":" The entry point for panicking with a formatted message.","sig":null,"attributes":[{"value":"/ The entry point for panicking with a formatted message.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1096350,"byte_end":1096409,"line_start":278,"line_end":278,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1096410,"byte_end":1096413,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ This is designed to reduce the amount of code required at the call","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1096414,"byte_end":1096484,"line_start":280,"line_end":280,"column_start":1,"column_end":71}},{"value":"/ site as much as possible (so that `panic!()` has as low an impact","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1096485,"byte_end":1096554,"line_start":281,"line_end":281,"column_start":1,"column_end":70}},{"value":"/ on (e.g.) the inlining of other functions as possible), by moving","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1096555,"byte_end":1096624,"line_start":282,"line_end":282,"column_start":1,"column_end":70}},{"value":"/ the actual formatting into this shared place.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1096625,"byte_end":1096674,"line_start":283,"line_end":283,"column_start":1,"column_end":50}},{"value":"cold","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1096675,"byte_end":1096682,"line_start":284,"line_end":284,"column_start":1,"column_end":8}},{"value":"track_caller","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1096791,"byte_end":1096806,"line_start":287,"line_end":287,"column_start":1,"column_end":16}},{"value":"inline(never)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1096807,"byte_end":1096823,"line_start":288,"line_end":288,"column_start":1,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":6709},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1099019,"byte_end":1099030,"line_start":349,"line_end":349,"column_start":8,"column_end":19},"name":"begin_panic","qualname":"::panicking::begin_panic","value":"pub fn begin_panic<M: Any + Send>(M) -> !","parent":null,"children":[],"decl_id":null,"docs":" This is the entry point of panicking for the non-format-string variants of\n panic!() and assert!(). In particular, this is the only entry point that supports\n arbitrary payloads, not just format strings.\n","sig":null,"attributes":[{"value":"/ This is the entry point of panicking for the non-format-string variants of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1098608,"byte_end":1098686,"line_start":340,"line_end":340,"column_start":1,"column_end":79}},{"value":"/ panic!() and assert!(). In particular, this is the only entry point that supports","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1098687,"byte_end":1098772,"line_start":341,"line_end":341,"column_start":1,"column_end":86}},{"value":"/ arbitrary payloads, not just format strings.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1098773,"byte_end":1098821,"line_start":342,"line_end":342,"column_start":1,"column_end":49}},{"value":"lang = \"begin_panic\"","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1098822,"byte_end":1098845,"line_start":343,"line_end":343,"column_start":1,"column_end":24}},{"value":"cold","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1098988,"byte_end":1098995,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"track_caller","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1098996,"byte_end":1099011,"line_start":348,"line_end":348,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":6758},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1106934,"byte_end":1106938,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"File","qualname":"::fs::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":6759}],"decl_id":null,"docs":" A reference to an open file on the filesystem.","sig":null,"attributes":[{"value":"/ A reference to an open file on the filesystem.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1106444,"byte_end":1106494,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1106495,"byte_end":1106498,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ An instance of a `File` can be read and/or written depending on what options","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1106499,"byte_end":1106579,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ it was opened with. Files also implement [`Seek`] to alter the logical cursor","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1106580,"byte_end":1106661,"line_start":33,"line_end":33,"column_start":1,"column_end":82}},{"value":"/ that the file contains internally.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1106662,"byte_end":1106700,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1106701,"byte_end":1106704,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Files are automatically closed when they go out of scope.  Errors detected","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1106705,"byte_end":1106783,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ on closing are ignored by the implementation of `Drop`.  Use the method","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1106784,"byte_end":1106859,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"/ [`sync_all`] if these errors must be manually handled.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1106860,"byte_end":1106918,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1106919,"byte_end":1106922,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":8447},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1107251,"byte_end":1107259,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"Metadata","qualname":"::fs::Metadata","value":"","parent":null,"children":[],"decl_id":null,"docs":" Metadata information about a file.","sig":null,"attributes":[{"value":"/ Metadata information about a file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1106969,"byte_end":1107007,"line_start":44,"line_end":44,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1107008,"byte_end":1107011,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This structure is returned from the [`metadata`] or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1107012,"byte_end":1107067,"line_start":46,"line_end":46,"column_start":1,"column_end":56}},{"value":"/ [`symlink_metadata`] function or method and represents known","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1107068,"byte_end":1107132,"line_start":47,"line_end":47,"column_start":1,"column_end":65}},{"value":"/ metadata about a file such as its permissions, size, modification","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1107133,"byte_end":1107202,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ times, etc.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1107203,"byte_end":1107218,"line_start":49,"line_end":49,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1107219,"byte_end":1107222,"line_start":50,"line_end":50,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":8452},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1108013,"byte_end":1108020,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"ReadDir","qualname":"::fs::ReadDir","value":"","parent":null,"children":[],"decl_id":null,"docs":" Iterator over the entries in a directory.","sig":null,"attributes":[{"value":"/ Iterator over the entries in a directory.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1107280,"byte_end":1107325,"line_start":54,"line_end":54,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1107326,"byte_end":1107329,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This iterator is returned from the [`read_dir`] function of this module and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1107330,"byte_end":1107409,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ will yield instances of [`io::Result`]`<`[`DirEntry`]`>`. Through a [`DirEntry`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1107410,"byte_end":1107494,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/ information like the entry's path and possibly other metadata can be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1107495,"byte_end":1107567,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/ learned.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1107568,"byte_end":1107580,"line_start":59,"line_end":59,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1107581,"byte_end":1107584,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ The order in which this iterator returns entries is platform and filesystem","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1107585,"byte_end":1107664,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ dependent.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1107665,"byte_end":1107679,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1107680,"byte_end":1107683,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1107684,"byte_end":1107696,"line_start":64,"line_end":64,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1107697,"byte_end":1107700,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ This [`io::Result`] will be an [`Err`] if there's some sort of intermittent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1107701,"byte_end":1107780,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ IO error during iteration.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1107781,"byte_end":1107811,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1107812,"byte_end":1107815,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1107816,"byte_end":1107850,"line_start":69,"line_end":69,"column_start":1,"column_end":35}},{"value":"/ [`DirEntry`]: struct.DirEntry.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1107851,"byte_end":1107889,"line_start":70,"line_end":70,"column_start":1,"column_end":39}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1107890,"byte_end":1107932,"line_start":71,"line_end":71,"column_start":1,"column_end":43}},{"value":"/ [`Err`]: ../result/enum.Result.html#variant.Err","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1107933,"byte_end":1107984,"line_start":72,"line_end":72,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":6760},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1108380,"byte_end":1108388,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"DirEntry","qualname":"::fs::DirEntry","value":"","parent":null,"children":[],"decl_id":null,"docs":" Entries returned by the [`ReadDir`] iterator.","sig":null,"attributes":[{"value":"/ Entries returned by the [`ReadDir`] iterator.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1108040,"byte_end":1108089,"line_start":76,"line_end":76,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1108090,"byte_end":1108093,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ [`ReadDir`]: struct.ReadDir.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1108094,"byte_end":1108130,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1108131,"byte_end":1108134,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ An instance of `DirEntry` represents an entry inside of a directory on the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1108135,"byte_end":1108213,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ filesystem. Each entry can be inspected via methods to learn about the full","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1108214,"byte_end":1108293,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ path or possibly other metadata through per-platform extension traits.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1108294,"byte_end":1108368,"line_start":82,"line_end":82,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":8457},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1109400,"byte_end":1109411,"line_start":108,"line_end":108,"column_start":12,"column_end":23},"name":"OpenOptions","qualname":"::fs::OpenOptions","value":"","parent":null,"children":[],"decl_id":null,"docs":" Options and flags which can be used to configure how a file is opened.","sig":null,"attributes":[{"value":"/ Options and flags which can be used to configure how a file is opened.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1108409,"byte_end":1108483,"line_start":85,"line_end":85,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1108484,"byte_end":1108487,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This builder exposes the ability to configure how a [`File`] is opened and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1108488,"byte_end":1108566,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/ what operations are permitted on the open file. The [`File::open`] and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1108567,"byte_end":1108641,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"/ [`File::create`] methods are aliases for commonly used options using this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1108642,"byte_end":1108719,"line_start":89,"line_end":89,"column_start":1,"column_end":78}},{"value":"/ builder.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1108720,"byte_end":1108732,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1108733,"byte_end":1108736,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ [`File`]: struct.File.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1108737,"byte_end":1108767,"line_start":92,"line_end":92,"column_start":1,"column_end":31}},{"value":"/ [`File::open`]: struct.File.html#method.open","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1108768,"byte_end":1108816,"line_start":93,"line_end":93,"column_start":1,"column_end":49}},{"value":"/ [`File::create`]: struct.File.html#method.create","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1108817,"byte_end":1108869,"line_start":94,"line_end":94,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1108870,"byte_end":1108873,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ Generally speaking, when using `OpenOptions`, you'll first call [`new`],","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1108874,"byte_end":1108950,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/ then chain calls to methods to set each option, then call [`open`],","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1108951,"byte_end":1109022,"line_start":97,"line_end":97,"column_start":1,"column_end":72}},{"value":"/ passing the path of the file you're trying to open. This will give you a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1109023,"byte_end":1109099,"line_start":98,"line_end":98,"column_start":1,"column_end":77}},{"value":"/ [`io::Result`][result] with a [`File`][file] inside that you can further","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1109100,"byte_end":1109176,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ operate on.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1109177,"byte_end":1109192,"line_start":100,"line_end":100,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1109193,"byte_end":1109196,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [`new`]: struct.OpenOptions.html#method.new","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1109197,"byte_end":1109244,"line_start":102,"line_end":102,"column_start":1,"column_end":48}},{"value":"/ [`open`]: struct.OpenOptions.html#method.open","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1109245,"byte_end":1109294,"line_start":103,"line_end":103,"column_start":1,"column_end":50}},{"value":"/ [result]: ../io/type.Result.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1109295,"byte_end":1109331,"line_start":104,"line_end":104,"column_start":1,"column_end":37}},{"value":"/ [file]: struct.File.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1109332,"byte_end":1109360,"line_start":105,"line_end":105,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1109361,"byte_end":1109364,"line_start":106,"line_end":106,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":8464},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1109916,"byte_end":1109927,"line_start":120,"line_end":120,"column_start":12,"column_end":23},"name":"Permissions","qualname":"::fs::Permissions","value":"","parent":null,"children":[],"decl_id":null,"docs":" Representation of the various permissions on a file.","sig":null,"attributes":[{"value":"/ Representation of the various permissions on a file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1109435,"byte_end":1109491,"line_start":110,"line_end":110,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1109492,"byte_end":1109495,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ This module only currently provides one bit of information, [`readonly`],","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1109496,"byte_end":1109573,"line_start":112,"line_end":112,"column_start":1,"column_end":78}},{"value":"/ which is exposed on all currently supported platforms. Unix-specific","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1109574,"byte_end":1109646,"line_start":113,"line_end":113,"column_start":1,"column_end":73}},{"value":"/ functionality, such as mode bits, is available through the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1109647,"byte_end":1109709,"line_start":114,"line_end":114,"column_start":1,"column_end":63}},{"value":"/ [`PermissionsExt`] trait.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1109710,"byte_end":1109739,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1109740,"byte_end":1109743,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ [`readonly`]: struct.Permissions.html#method.readonly","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1109744,"byte_end":1109801,"line_start":117,"line_end":117,"column_start":1,"column_end":58}},{"value":"/ [`PermissionsExt`]: ../os/unix/fs/trait.PermissionsExt.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1109802,"byte_end":1109865,"line_start":118,"line_end":118,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":8478},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1110221,"byte_end":1110229,"line_start":127,"line_end":127,"column_start":12,"column_end":20},"name":"FileType","qualname":"::fs::FileType","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure representing a type of file with accessors for each file type.\n It is returned by [`Metadata::file_type`] method.","sig":null,"attributes":[{"value":"/ A structure representing a type of file with accessors for each file type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1109955,"byte_end":1110033,"line_start":122,"line_end":122,"column_start":1,"column_end":79}},{"value":"/ It is returned by [`Metadata::file_type`] method.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1110034,"byte_end":1110087,"line_start":123,"line_end":123,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1110088,"byte_end":1110091,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ [`Metadata::file_type`]: struct.Metadata.html#method.file_type","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1110092,"byte_end":1110158,"line_start":125,"line_end":125,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":8496},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1110401,"byte_end":1110411,"line_start":133,"line_end":133,"column_start":12,"column_end":22},"name":"DirBuilder","qualname":"::fs::DirBuilder","value":"DirBuilder {  }","parent":null,"children":[{"krate":0,"index":8497},{"krate":0,"index":8498}],"decl_id":null,"docs":" A builder used to create directories in various manners.","sig":null,"attributes":[{"value":"/ A builder used to create directories in various manners.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1110250,"byte_end":1110310,"line_start":129,"line_end":129,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1110311,"byte_end":1110314,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ This builder also supports platform-specific options.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1110315,"byte_end":1110372,"line_start":131,"line_end":131,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":6765},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1111821,"byte_end":1111825,"line_start":168,"line_end":168,"column_start":8,"column_end":12},"name":"read","qualname":"::fs::read","value":"pub fn read<P: AsRef<Path>>(P) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Read the entire contents of a file into a bytes vector.","sig":null,"attributes":[{"value":"/ Read the entire contents of a file into a bytes vector.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1110883,"byte_end":1110942,"line_start":146,"line_end":146,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1110943,"byte_end":1110946,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for using [`File::open`] and [`read_to_end`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1110947,"byte_end":1111026,"line_start":148,"line_end":148,"column_start":1,"column_end":80}},{"value":"/ with fewer imports and without an intermediate variable. It pre-allocates a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1111027,"byte_end":1111106,"line_start":149,"line_end":149,"column_start":1,"column_end":80}},{"value":"/ buffer based on the file size when available, so it is generally faster than","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1111107,"byte_end":1111187,"line_start":150,"line_end":150,"column_start":1,"column_end":81}},{"value":"/ reading into a vector created with `Vec::new()`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1111188,"byte_end":1111240,"line_start":151,"line_end":151,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1111241,"byte_end":1111244,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ [`File::open`]: struct.File.html#method.open","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1111245,"byte_end":1111293,"line_start":153,"line_end":153,"column_start":1,"column_end":49}},{"value":"/ [`read_to_end`]: ../io/trait.Read.html#method.read_to_end","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1111294,"byte_end":1111355,"line_start":154,"line_end":154,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1111356,"byte_end":1111359,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1111360,"byte_end":1111372,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1111373,"byte_end":1111376,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ This function will return an error if `path` does not already exist.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1111377,"byte_end":1111449,"line_start":158,"line_end":158,"column_start":1,"column_end":73}},{"value":"/ Other errors may also be returned according to [`OpenOptions::open`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1111450,"byte_end":1111523,"line_start":159,"line_end":159,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1111524,"byte_end":1111527,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ [`OpenOptions::open`]: struct.OpenOptions.html#method.open","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1111528,"byte_end":1111590,"line_start":161,"line_end":161,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1111591,"byte_end":1111594,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ It will also return an error if it encounters while reading an error","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1111595,"byte_end":1111667,"line_start":163,"line_end":163,"column_start":1,"column_end":73}},{"value":"/ of a kind other than [`ErrorKind::Interrupted`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1111668,"byte_end":1111720,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1111721,"byte_end":1111724,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ [`ErrorKind::Interrupted`]: ../../std/io/enum.ErrorKind.html#variant.Interrupted","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1111725,"byte_end":1111809,"line_start":166,"line_end":166,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1111810,"byte_end":1111813,"line_start":167,"line_end":167,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":6768},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1113132,"byte_end":1113146,"line_start":201,"line_end":201,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::fs::read_to_string","value":"pub fn read_to_string<P: AsRef<Path>>(P) -> io::Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Read the entire contents of a file into a string.","sig":null,"attributes":[{"value":"/ Read the entire contents of a file into a string.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1112132,"byte_end":1112185,"line_start":178,"line_end":178,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1112186,"byte_end":1112189,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for using [`File::open`] and [`read_to_string`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1112190,"byte_end":1112272,"line_start":180,"line_end":180,"column_start":1,"column_end":83}},{"value":"/ with fewer imports and without an intermediate variable. It pre-allocates a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1112273,"byte_end":1112352,"line_start":181,"line_end":181,"column_start":1,"column_end":80}},{"value":"/ buffer based on the file size when available, so it is generally faster than","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1112353,"byte_end":1112433,"line_start":182,"line_end":182,"column_start":1,"column_end":81}},{"value":"/ reading into a string created with `String::new()`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1112434,"byte_end":1112489,"line_start":183,"line_end":183,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1112490,"byte_end":1112493,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ [`File::open`]: struct.File.html#method.open","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1112494,"byte_end":1112542,"line_start":185,"line_end":185,"column_start":1,"column_end":49}},{"value":"/ [`read_to_string`]: ../io/trait.Read.html#method.read_to_string","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1112543,"byte_end":1112610,"line_start":186,"line_end":186,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1112611,"byte_end":1112614,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1112615,"byte_end":1112627,"line_start":188,"line_end":188,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1112628,"byte_end":1112631,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ This function will return an error if `path` does not already exist.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1112632,"byte_end":1112704,"line_start":190,"line_end":190,"column_start":1,"column_end":73}},{"value":"/ Other errors may also be returned according to [`OpenOptions::open`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1112705,"byte_end":1112778,"line_start":191,"line_end":191,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1112779,"byte_end":1112782,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ [`OpenOptions::open`]: struct.OpenOptions.html#method.open","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1112783,"byte_end":1112845,"line_start":193,"line_end":193,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1112846,"byte_end":1112849,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ It will also return an error if it encounters while reading an error","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1112850,"byte_end":1112922,"line_start":195,"line_end":195,"column_start":1,"column_end":73}},{"value":"/ of a kind other than [`ErrorKind::Interrupted`],","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1112923,"byte_end":1112975,"line_start":196,"line_end":196,"column_start":1,"column_end":53}},{"value":"/ or if the contents of the file are not valid UTF-8.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1112976,"byte_end":1113031,"line_start":197,"line_end":197,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1113032,"byte_end":1113035,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ [`ErrorKind::Interrupted`]: ../../std/io/enum.ErrorKind.html#variant.Interrupted","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1113036,"byte_end":1113120,"line_start":199,"line_end":199,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1113121,"byte_end":1113124,"line_start":200,"line_end":200,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":6771},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1113865,"byte_end":1113870,"line_start":222,"line_end":222,"column_start":8,"column_end":13},"name":"write","qualname":"::fs::write","value":"pub fn write<P: AsRef<Path>, C: AsRef<[u8]>>(P, C) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a slice as the entire contents of a file.","sig":null,"attributes":[{"value":"/ Write a slice as the entire contents of a file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1113460,"byte_end":1113511,"line_start":211,"line_end":211,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1113512,"byte_end":1113515,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ This function will create a file if it does not exist,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1113516,"byte_end":1113574,"line_start":213,"line_end":213,"column_start":1,"column_end":59}},{"value":"/ and will entirely replace its contents if it does.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1113575,"byte_end":1113629,"line_start":214,"line_end":214,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1113630,"byte_end":1113633,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for using [`File::create`] and [`write_all`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1113634,"byte_end":1113713,"line_start":216,"line_end":216,"column_start":1,"column_end":80}},{"value":"/ with fewer imports.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1113714,"byte_end":1113737,"line_start":217,"line_end":217,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1113738,"byte_end":1113741,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ [`File::create`]: struct.File.html#method.create","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1113742,"byte_end":1113794,"line_start":219,"line_end":219,"column_start":1,"column_end":53}},{"value":"/ [`write_all`]: ../io/trait.Write.html#method.write_all","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1113795,"byte_end":1113853,"line_start":220,"line_end":220,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1113854,"byte_end":1113857,"line_start":221,"line_end":221,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":6776},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1114525,"byte_end":1114529,"line_start":241,"line_end":241,"column_start":12,"column_end":16},"name":"open","qualname":"<File>::open","value":"pub fn open<P: AsRef<Path>>(P) -> io::Result<File>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to open a file in read-only mode.","sig":null,"attributes":[{"value":"/ Attempts to open a file in read-only mode.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1114125,"byte_end":1114171,"line_start":230,"line_end":230,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1114176,"byte_end":1114179,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ See the [`OpenOptions::open`] method for more details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1114184,"byte_end":1114242,"line_start":232,"line_end":232,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1114247,"byte_end":1114250,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1114255,"byte_end":1114267,"line_start":234,"line_end":234,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1114272,"byte_end":1114275,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if `path` does not already exist.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1114280,"byte_end":1114352,"line_start":236,"line_end":236,"column_start":5,"column_end":77}},{"value":"/ Other errors may also be returned according to [`OpenOptions::open`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1114357,"byte_end":1114430,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1114435,"byte_end":1114438,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions::open`]: struct.OpenOptions.html#method.open","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1114443,"byte_end":1114505,"line_start":239,"line_end":239,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1114510,"byte_end":1114513,"line_start":240,"line_end":240,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6778},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1114962,"byte_end":1114968,"line_start":254,"line_end":254,"column_start":12,"column_end":18},"name":"create","qualname":"<File>::create","value":"pub fn create<P: AsRef<Path>>(P) -> io::Result<File>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in write-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in write-only mode.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1114646,"byte_end":1114682,"line_start":245,"line_end":245,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1114687,"byte_end":1114690,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ This function will create a file if it does not exist,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1114695,"byte_end":1114753,"line_start":247,"line_end":247,"column_start":5,"column_end":63}},{"value":"/ and will truncate it if it does.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1114758,"byte_end":1114794,"line_start":248,"line_end":248,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1114799,"byte_end":1114802,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ See the [`OpenOptions::open`] function for more details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1114807,"byte_end":1114867,"line_start":250,"line_end":250,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1114872,"byte_end":1114875,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions::open`]: struct.OpenOptions.html#method.open","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1114880,"byte_end":1114942,"line_start":252,"line_end":252,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1114947,"byte_end":1114950,"line_start":253,"line_end":253,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6780},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1115806,"byte_end":1115818,"line_start":273,"line_end":273,"column_start":12,"column_end":24},"name":"with_options","qualname":"<File>::with_options","value":"pub fn with_options() -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns a new OpenOptions object.","sig":null,"attributes":[{"value":"/ Returns a new OpenOptions object.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1115114,"byte_end":1115151,"line_start":258,"line_end":258,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1115156,"byte_end":1115159,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This function returns a new OpenOptions object that you can use to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1115164,"byte_end":1115234,"line_start":260,"line_end":260,"column_start":5,"column_end":75}},{"value":"/ open or create a file with specific options if `open()` or `create()`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1115239,"byte_end":1115312,"line_start":261,"line_end":261,"column_start":5,"column_end":78}},{"value":"/ are not appropriate.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1115317,"byte_end":1115341,"line_start":262,"line_end":262,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1115346,"byte_end":1115349,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ It is equivalent to `OpenOptions::new()` but allows you to write more","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1115354,"byte_end":1115427,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/ readable code. Instead of `OpenOptions::new().read(true).open(\"foo.txt\")`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1115432,"byte_end":1115509,"line_start":265,"line_end":265,"column_start":5,"column_end":82}},{"value":"/ you can write `File::with_options().read(true).open(\"foo.txt\")`. This","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1115514,"byte_end":1115587,"line_start":266,"line_end":266,"column_start":5,"column_end":78}},{"value":"/ also avoids the need to import `OpenOptions`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1115592,"byte_end":1115641,"line_start":267,"line_end":267,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1115646,"byte_end":1115649,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ See the [`OpenOptions::new`] function for more details.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1115654,"byte_end":1115713,"line_start":269,"line_end":269,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1115718,"byte_end":1115721,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions::new`]: struct.OpenOptions.html#method.new","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1115726,"byte_end":1115786,"line_start":271,"line_end":271,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1115791,"byte_end":1115794,"line_start":272,"line_end":272,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6781},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1116279,"byte_end":1116287,"line_start":286,"line_end":286,"column_start":12,"column_end":20},"name":"sync_all","qualname":"<File>::sync_all","value":"pub fn sync_all(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to sync all OS-internal metadata to disk.","sig":null,"attributes":[{"value":"/ Attempts to sync all OS-internal metadata to disk.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1115876,"byte_end":1115930,"line_start":277,"line_end":277,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1115935,"byte_end":1115938,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This function will attempt to ensure that all in-memory data reaches the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1115943,"byte_end":1116019,"line_start":279,"line_end":279,"column_start":5,"column_end":81}},{"value":"/ filesystem before returning.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1116024,"byte_end":1116056,"line_start":280,"line_end":280,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1116061,"byte_end":1116064,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ This can be used to handle errors that would otherwise only be caught","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1116069,"byte_end":1116142,"line_start":282,"line_end":282,"column_start":5,"column_end":78}},{"value":"/ when the `File` is closed.  Dropping a file will ignore errors in","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1116147,"byte_end":1116216,"line_start":283,"line_end":283,"column_start":5,"column_end":74}},{"value":"/ synchronizing this in-memory data.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1116221,"byte_end":1116259,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1116264,"byte_end":1116267,"line_start":285,"line_end":285,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6782},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1116843,"byte_end":1116852,"line_start":302,"line_end":302,"column_start":12,"column_end":21},"name":"sync_data","qualname":"<File>::sync_data","value":"pub fn sync_data(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" This function is similar to [`sync_all`], except that it may not\n synchronize file metadata to the filesystem.","sig":null,"attributes":[{"value":"/ This function is similar to [`sync_all`], except that it may not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1116353,"byte_end":1116421,"line_start":290,"line_end":290,"column_start":5,"column_end":73}},{"value":"/ synchronize file metadata to the filesystem.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1116426,"byte_end":1116474,"line_start":291,"line_end":291,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1116479,"byte_end":1116482,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ This is intended for use cases that must synchronize content, but don't","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1116487,"byte_end":1116562,"line_start":293,"line_end":293,"column_start":5,"column_end":80}},{"value":"/ need the metadata on disk. The goal of this method is to reduce disk","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1116567,"byte_end":1116639,"line_start":294,"line_end":294,"column_start":5,"column_end":77}},{"value":"/ operations.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1116644,"byte_end":1116659,"line_start":295,"line_end":295,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1116664,"byte_end":1116667,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ Note that some platforms may simply implement this in terms of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1116672,"byte_end":1116738,"line_start":297,"line_end":297,"column_start":5,"column_end":71}},{"value":"/ [`sync_all`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1116743,"byte_end":1116760,"line_start":298,"line_end":298,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1116765,"byte_end":1116768,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ [`sync_all`]: struct.File.html#method.sync_all","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1116773,"byte_end":1116823,"line_start":300,"line_end":300,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1116828,"byte_end":1116831,"line_start":301,"line_end":301,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6783},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1117771,"byte_end":1117778,"line_start":324,"line_end":324,"column_start":12,"column_end":19},"name":"set_len","qualname":"<File>::set_len","value":"pub fn set_len(&Self, u64) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Truncates or extends the underlying file, updating the size of\n this file to become `size`.","sig":null,"attributes":[{"value":"/ Truncates or extends the underlying file, updating the size of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1116921,"byte_end":1116987,"line_start":306,"line_end":306,"column_start":5,"column_end":71}},{"value":"/ this file to become `size`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1116992,"byte_end":1117023,"line_start":307,"line_end":307,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1117028,"byte_end":1117031,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ If the `size` is less than the current file's size, then the file will","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1117036,"byte_end":1117110,"line_start":309,"line_end":309,"column_start":5,"column_end":79}},{"value":"/ be shrunk. If it is greater than the current file's size, then the file","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1117115,"byte_end":1117190,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ will be extended to `size` and have all of the intermediate data filled","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1117195,"byte_end":1117270,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ in with 0s.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1117275,"byte_end":1117290,"line_start":312,"line_end":312,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1117295,"byte_end":1117298,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ The file's cursor isn't changed. In particular, if the cursor was at the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1117303,"byte_end":1117379,"line_start":314,"line_end":314,"column_start":5,"column_end":81}},{"value":"/ end and the file is shrunk using this operation, the cursor will now be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1117384,"byte_end":1117459,"line_start":315,"line_end":315,"column_start":5,"column_end":80}},{"value":"/ past the end.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1117464,"byte_end":1117481,"line_start":316,"line_end":316,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1117486,"byte_end":1117489,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1117494,"byte_end":1117506,"line_start":318,"line_end":318,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1117511,"byte_end":1117514,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the file is not opened for writing.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1117519,"byte_end":1117596,"line_start":320,"line_end":320,"column_start":5,"column_end":82}},{"value":"/ Also, std::io::ErrorKind::InvalidInput will be returned if the desired","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1117601,"byte_end":1117675,"line_start":321,"line_end":321,"column_start":5,"column_end":79}},{"value":"/ length would cause an overflow due to the implementation specifics.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1117680,"byte_end":1117751,"line_start":322,"line_end":322,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1117756,"byte_end":1117759,"line_start":323,"line_end":323,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6784},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1117929,"byte_end":1117937,"line_start":330,"line_end":330,"column_start":12,"column_end":20},"name":"metadata","qualname":"<File>::metadata","value":"pub fn metadata(&Self) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Queries metadata about the underlying file.","sig":null,"attributes":[{"value":"/ Queries metadata about the underlying file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1117862,"byte_end":1117909,"line_start":328,"line_end":328,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1117914,"byte_end":1117917,"line_start":329,"line_end":329,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6785},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1118248,"byte_end":1118257,"line_start":338,"line_end":338,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<File>::try_clone","value":"pub fn try_clone(&Self) -> io::Result<File>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `File` instance that shares the same underlying file handle\n as the existing `File` instance. Reads, writes, and seeks will affect\n both `File` instances simultaneously.","sig":null,"attributes":[{"value":"/ Creates a new `File` instance that shares the same underlying file handle","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1118027,"byte_end":1118104,"line_start":334,"line_end":334,"column_start":5,"column_end":82}},{"value":"/ as the existing `File` instance. Reads, writes, and seeks will affect","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1118109,"byte_end":1118182,"line_start":335,"line_end":335,"column_start":5,"column_end":78}},{"value":"/ both `File` instances simultaneously.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1118187,"byte_end":1118228,"line_start":336,"line_end":336,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1118233,"byte_end":1118236,"line_start":337,"line_end":337,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6786},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1118980,"byte_end":1118995,"line_start":358,"line_end":358,"column_start":12,"column_end":27},"name":"set_permissions","qualname":"<File>::set_permissions","value":"pub fn set_permissions(&Self, Permissions) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions on the underlying file.","sig":null,"attributes":[{"value":"/ Changes the permissions on the underlying file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1118350,"byte_end":1118401,"line_start":342,"line_end":342,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1118406,"byte_end":1118409,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1118414,"byte_end":1118446,"line_start":344,"line_end":344,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1118451,"byte_end":1118454,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This function currently corresponds to the `fchmod` function on Unix and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1118459,"byte_end":1118535,"line_start":346,"line_end":346,"column_start":5,"column_end":81}},{"value":"/ the `SetFileInformationByHandle` function on Windows. Note that, this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1118540,"byte_end":1118613,"line_start":347,"line_end":347,"column_start":5,"column_end":78}},{"value":"/ [may change in the future][changes].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1118618,"byte_end":1118658,"line_start":348,"line_end":348,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1118663,"byte_end":1118666,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ [changes]: ../io/index.html#platform-specific-behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1118671,"byte_end":1118729,"line_start":350,"line_end":350,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1118734,"byte_end":1118737,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1118742,"byte_end":1118754,"line_start":352,"line_end":352,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1118759,"byte_end":1118762,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the user lacks permission change","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1118767,"byte_end":1118841,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/ attributes on the underlying file. It may also return an error in other","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1118846,"byte_end":1118921,"line_start":355,"line_end":355,"column_start":5,"column_end":80}},{"value":"/ os-specific unspecified cases.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1118926,"byte_end":1118960,"line_start":356,"line_end":356,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1118965,"byte_end":1118968,"line_start":357,"line_end":357,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6816},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1121303,"byte_end":1121306,"line_start":460,"line_end":460,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenOptions>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank new set of options ready for configuration.","sig":null,"attributes":[{"value":"/ Creates a blank new set of options ready for configuration.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1121162,"byte_end":1121225,"line_start":456,"line_end":456,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1121230,"byte_end":1121233,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ All options are initially set to `false`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1121238,"byte_end":1121283,"line_start":458,"line_end":458,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1121288,"byte_end":1121291,"line_start":459,"line_end":459,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6817},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1121543,"byte_end":1121547,"line_start":469,"line_end":469,"column_start":12,"column_end":16},"name":"read","qualname":"<OpenOptions>::read","value":"pub fn read(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for read access.","sig":null,"attributes":[{"value":"/ Sets the option for read access.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1121378,"byte_end":1121414,"line_start":464,"line_end":464,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1121419,"byte_end":1121422,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ This option, when true, will indicate that the file should be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1121427,"byte_end":1121492,"line_start":466,"line_end":466,"column_start":5,"column_end":70}},{"value":"/ `read`-able if opened.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1121497,"byte_end":1121523,"line_start":467,"line_end":467,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1121528,"byte_end":1121531,"line_start":468,"line_end":468,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6818},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1121930,"byte_end":1121935,"line_start":482,"line_end":482,"column_start":12,"column_end":17},"name":"write","qualname":"<OpenOptions>::write","value":"pub fn write(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for write access.","sig":null,"attributes":[{"value":"/ Sets the option for write access.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1121637,"byte_end":1121674,"line_start":474,"line_end":474,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1121679,"byte_end":1121682,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ This option, when true, will indicate that the file should be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1121687,"byte_end":1121752,"line_start":476,"line_end":476,"column_start":5,"column_end":70}},{"value":"/ `write`-able if opened.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1121757,"byte_end":1121784,"line_start":477,"line_end":477,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1121789,"byte_end":1121792,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ If the file already exists, any write calls on it will overwrite its","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1121797,"byte_end":1121869,"line_start":479,"line_end":479,"column_start":5,"column_end":77}},{"value":"/ contents, without truncating it.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1121874,"byte_end":1121910,"line_start":480,"line_end":480,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1121915,"byte_end":1121918,"line_start":481,"line_end":481,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6819},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1123731,"byte_end":1123737,"line_start":521,"line_end":521,"column_start":12,"column_end":18},"name":"append","qualname":"<OpenOptions>::append","value":"pub fn append(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for the append mode.","sig":null,"attributes":[{"value":"/ Sets the option for the append mode.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1122028,"byte_end":1122068,"line_start":487,"line_end":487,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1122073,"byte_end":1122076,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ This option, when true, means that writes will append to a file instead","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1122081,"byte_end":1122156,"line_start":489,"line_end":489,"column_start":5,"column_end":80}},{"value":"/ of overwriting previous contents.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1122161,"byte_end":1122198,"line_start":490,"line_end":490,"column_start":5,"column_end":42}},{"value":"/ Note that setting `.write(true).append(true)` has the same effect as","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1122203,"byte_end":1122275,"line_start":491,"line_end":491,"column_start":5,"column_end":77}},{"value":"/ setting only `.append(true)`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1122280,"byte_end":1122313,"line_start":492,"line_end":492,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1122318,"byte_end":1122321,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ For most filesystems, the operating system guarantees that all writes are","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1122326,"byte_end":1122403,"line_start":494,"line_end":494,"column_start":5,"column_end":82}},{"value":"/ atomic: no writes get mangled because another process writes at the same","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1122408,"byte_end":1122484,"line_start":495,"line_end":495,"column_start":5,"column_end":81}},{"value":"/ time.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1122489,"byte_end":1122498,"line_start":496,"line_end":496,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1122503,"byte_end":1122506,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ One maybe obvious note when using append-mode: make sure that all data","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1122511,"byte_end":1122585,"line_start":498,"line_end":498,"column_start":5,"column_end":79}},{"value":"/ that belongs together is written to the file in one operation. This","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1122590,"byte_end":1122661,"line_start":499,"line_end":499,"column_start":5,"column_end":76}},{"value":"/ can be done by concatenating strings before passing them to [`write()`],","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1122666,"byte_end":1122742,"line_start":500,"line_end":500,"column_start":5,"column_end":81}},{"value":"/ or using a buffered writer (with a buffer of adequate size),","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1122747,"byte_end":1122811,"line_start":501,"line_end":501,"column_start":5,"column_end":69}},{"value":"/ and calling [`flush()`] when the message is complete.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1122816,"byte_end":1122873,"line_start":502,"line_end":502,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1122878,"byte_end":1122881,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ If a file is opened with both read and append access, beware that after","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1122886,"byte_end":1122961,"line_start":504,"line_end":504,"column_start":5,"column_end":80}},{"value":"/ opening, and after every write, the position for reading may be set at the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1122966,"byte_end":1123044,"line_start":505,"line_end":505,"column_start":5,"column_end":83}},{"value":"/ end of the file. So, before writing, save the current position (using","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1123049,"byte_end":1123122,"line_start":506,"line_end":506,"column_start":5,"column_end":78}},{"value":"/ [`seek`]`(`[`SeekFrom`]`::`[`Current`]`(0))`), and restore it before the next read.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1123127,"byte_end":1123214,"line_start":507,"line_end":507,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1123219,"byte_end":1123222,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1123227,"byte_end":1123238,"line_start":509,"line_end":509,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1123243,"byte_end":1123246,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ This function doesn't create the file if it doesn't exist. Use the [`create`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1123251,"byte_end":1123332,"line_start":511,"line_end":511,"column_start":5,"column_end":86}},{"value":"/ method to do so.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1123337,"byte_end":1123357,"line_start":512,"line_end":512,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1123362,"byte_end":1123365,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ [`write()`]: ../../std/fs/struct.File.html#method.write","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1123370,"byte_end":1123429,"line_start":514,"line_end":514,"column_start":5,"column_end":64}},{"value":"/ [`flush()`]: ../../std/fs/struct.File.html#method.flush","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1123434,"byte_end":1123493,"line_start":515,"line_end":515,"column_start":5,"column_end":64}},{"value":"/ [`seek`]: ../../std/fs/struct.File.html#method.seek","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1123498,"byte_end":1123553,"line_start":516,"line_end":516,"column_start":5,"column_end":60}},{"value":"/ [`SeekFrom`]: ../../std/io/enum.SeekFrom.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1123558,"byte_end":1123607,"line_start":517,"line_end":517,"column_start":5,"column_end":54}},{"value":"/ [`Current`]: ../../std/io/enum.SeekFrom.html#variant.Current","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1123612,"byte_end":1123676,"line_start":518,"line_end":518,"column_start":5,"column_end":69}},{"value":"/ [`create`]: #method.create","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1123681,"byte_end":1123711,"line_start":519,"line_end":519,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1123716,"byte_end":1123719,"line_start":520,"line_end":520,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6820},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1124122,"byte_end":1124130,"line_start":533,"line_end":533,"column_start":12,"column_end":20},"name":"truncate","qualname":"<OpenOptions>::truncate","value":"pub fn truncate(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for truncating a previous file.","sig":null,"attributes":[{"value":"/ Sets the option for truncating a previous file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1123833,"byte_end":1123884,"line_start":526,"line_end":526,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1123889,"byte_end":1123892,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ If a file is successfully opened with this option set it will truncate","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1123897,"byte_end":1123971,"line_start":528,"line_end":528,"column_start":5,"column_end":79}},{"value":"/ the file to 0 length if it already exists.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1123976,"byte_end":1124022,"line_start":529,"line_end":529,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1124027,"byte_end":1124030,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ The file must be opened with write access for truncate to work.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1124035,"byte_end":1124102,"line_start":531,"line_end":531,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1124107,"byte_end":1124110,"line_start":532,"line_end":532,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6821},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1124508,"byte_end":1124514,"line_start":546,"line_end":546,"column_start":12,"column_end":18},"name":"create","qualname":"<OpenOptions>::create","value":"pub fn create(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the option to create a new file, or open it if it already exists.","sig":null,"attributes":[{"value":"/ Sets the option to create a new file, or open it if it already exists.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1124232,"byte_end":1124306,"line_start":538,"line_end":538,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1124311,"byte_end":1124314,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ In order for the file to be created, [`write`] or [`append`] access must","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1124319,"byte_end":1124395,"line_start":540,"line_end":540,"column_start":5,"column_end":81}},{"value":"/ be used.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1124400,"byte_end":1124412,"line_start":541,"line_end":541,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1124417,"byte_end":1124420,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1124425,"byte_end":1124453,"line_start":543,"line_end":543,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1124458,"byte_end":1124488,"line_start":544,"line_end":544,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1124493,"byte_end":1124496,"line_start":545,"line_end":545,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6822},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1125415,"byte_end":1125425,"line_start":569,"line_end":569,"column_start":12,"column_end":22},"name":"create_new","qualname":"<OpenOptions>::create_new","value":"pub fn create_new(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the option to create a new file, failing if it already exists.","sig":null,"attributes":[{"value":"/ Sets the option to create a new file, failing if it already exists.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1124610,"byte_end":1124681,"line_start":551,"line_end":551,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1124686,"byte_end":1124689,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ No file is allowed to exist at the target location, also no (dangling) symlink. In this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1124694,"byte_end":1124785,"line_start":553,"line_end":553,"column_start":5,"column_end":96}},{"value":"/ way, if the call succeeds, the file returned is guaranteed to be new.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1124790,"byte_end":1124863,"line_start":554,"line_end":554,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1124868,"byte_end":1124871,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ This option is useful because it is atomic. Otherwise between checking","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1124876,"byte_end":1124950,"line_start":556,"line_end":556,"column_start":5,"column_end":79}},{"value":"/ whether a file exists and creating a new one, the file may have been","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1124955,"byte_end":1125027,"line_start":557,"line_end":557,"column_start":5,"column_end":77}},{"value":"/ created by another process (a TOCTOU race condition / attack).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1125032,"byte_end":1125098,"line_start":558,"line_end":558,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1125103,"byte_end":1125106,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ If `.create_new(true)` is set, [`.create()`] and [`.truncate()`] are","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1125111,"byte_end":1125183,"line_start":560,"line_end":560,"column_start":5,"column_end":77}},{"value":"/ ignored.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1125188,"byte_end":1125200,"line_start":561,"line_end":561,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1125205,"byte_end":1125208,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ The file must be opened with write or append access in order to create","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1125213,"byte_end":1125287,"line_start":563,"line_end":563,"column_start":5,"column_end":79}},{"value":"/ a new file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1125292,"byte_end":1125307,"line_start":564,"line_end":564,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1125312,"byte_end":1125315,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ [`.create()`]: #method.create","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1125320,"byte_end":1125353,"line_start":566,"line_end":566,"column_start":5,"column_end":38}},{"value":"/ [`.truncate()`]: #method.truncate","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1125358,"byte_end":1125395,"line_start":567,"line_end":567,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1125400,"byte_end":1125403,"line_start":568,"line_end":568,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6823},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1127117,"byte_end":1127121,"line_start":603,"line_end":603,"column_start":12,"column_end":16},"name":"open","qualname":"<OpenOptions>::open","value":"pub fn open<P: AsRef<Path>>(&Self, P) -> io::Result<File>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file at `path` with the options specified by `self`.","sig":null,"attributes":[{"value":"/ Opens a file at `path` with the options specified by `self`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1125533,"byte_end":1125597,"line_start":574,"line_end":574,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1125602,"byte_end":1125605,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1125610,"byte_end":1125622,"line_start":576,"line_end":576,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1125627,"byte_end":1125630,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ This function will return an error under a number of different","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1125635,"byte_end":1125701,"line_start":578,"line_end":578,"column_start":5,"column_end":71}},{"value":"/ circumstances. Some of these error conditions are listed here, together","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1125706,"byte_end":1125781,"line_start":579,"line_end":579,"column_start":5,"column_end":80}},{"value":"/ with their [`ErrorKind`]. The mapping to [`ErrorKind`]s is not part of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1125786,"byte_end":1125860,"line_start":580,"line_end":580,"column_start":5,"column_end":79}},{"value":"/ the compatibility contract of the function, especially the `Other` kind","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1125865,"byte_end":1125940,"line_start":581,"line_end":581,"column_start":5,"column_end":80}},{"value":"/ might change to more specific kinds in the future.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1125945,"byte_end":1125999,"line_start":582,"line_end":582,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1126004,"byte_end":1126007,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ * [`NotFound`]: The specified file does not exist and neither `create`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1126012,"byte_end":1126086,"line_start":584,"line_end":584,"column_start":5,"column_end":79}},{"value":"/   or `create_new` is set.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1126091,"byte_end":1126120,"line_start":585,"line_end":585,"column_start":5,"column_end":34}},{"value":"/ * [`NotFound`]: One of the directory components of the file path does","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1126125,"byte_end":1126198,"line_start":586,"line_end":586,"column_start":5,"column_end":78}},{"value":"/   not exist.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1126203,"byte_end":1126219,"line_start":587,"line_end":587,"column_start":5,"column_end":21}},{"value":"/ * [`PermissionDenied`]: The user lacks permission to get the specified","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1126224,"byte_end":1126298,"line_start":588,"line_end":588,"column_start":5,"column_end":79}},{"value":"/   access rights for the file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1126303,"byte_end":1126336,"line_start":589,"line_end":589,"column_start":5,"column_end":38}},{"value":"/ * [`PermissionDenied`]: The user lacks permission to open one of the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1126341,"byte_end":1126413,"line_start":590,"line_end":590,"column_start":5,"column_end":77}},{"value":"/   directory components of the specified path.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1126418,"byte_end":1126467,"line_start":591,"line_end":591,"column_start":5,"column_end":54}},{"value":"/ * [`AlreadyExists`]: `create_new` was specified and the file already","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1126472,"byte_end":1126544,"line_start":592,"line_end":592,"column_start":5,"column_end":77}},{"value":"/   exists.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1126549,"byte_end":1126562,"line_start":593,"line_end":593,"column_start":5,"column_end":18}},{"value":"/ * [`InvalidInput`]: Invalid combinations of open options (truncate","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1126567,"byte_end":1126637,"line_start":594,"line_end":594,"column_start":5,"column_end":75}},{"value":"/   without write access, no access mode set, etc.).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1126642,"byte_end":1126696,"line_start":595,"line_end":595,"column_start":5,"column_end":59}},{"value":"/ * [`Other`]: One of the directory components of the specified file path","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1126701,"byte_end":1126776,"line_start":596,"line_end":596,"column_start":5,"column_end":80}},{"value":"/   was not, in fact, a directory.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1126781,"byte_end":1126817,"line_start":597,"line_end":597,"column_start":5,"column_end":41}},{"value":"/ * [`Other`]: Filesystem-level errors: full disk, write permission","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1126822,"byte_end":1126891,"line_start":598,"line_end":598,"column_start":5,"column_end":74}},{"value":"/   requested on a read-only file system, exceeded disk quota, too many","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1126896,"byte_end":1126969,"line_start":599,"line_end":599,"column_start":5,"column_end":78}},{"value":"/   open files, too long filename, too many symbolic links in the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1126974,"byte_end":1127041,"line_start":600,"line_end":600,"column_start":5,"column_end":72}},{"value":"/   specified path (Unix-like systems only), etc.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1127046,"byte_end":1127097,"line_start":601,"line_end":601,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1127102,"byte_end":1127105,"line_start":602,"line_end":602,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6832},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1127706,"byte_end":1127715,"line_start":627,"line_end":627,"column_start":12,"column_end":21},"name":"file_type","qualname":"<Metadata>::file_type","value":"pub fn file_type(&Self) -> FileType","parent":null,"children":[],"decl_id":null,"docs":" Returns the file type for this metadata.","sig":null,"attributes":[{"value":"/ Returns the file type for this metadata.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1127642,"byte_end":1127686,"line_start":625,"line_end":625,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1127691,"byte_end":1127694,"line_start":626,"line_end":626,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6833},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1128142,"byte_end":1128148,"line_start":639,"line_end":639,"column_start":12,"column_end":18},"name":"is_dir","qualname":"<Metadata>::is_dir","value":"pub fn is_dir(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this metadata is for a directory. The\n result is mutually exclusive to the result of\n [`is_file`], and will be false for symlink metadata\n obtained from [`symlink_metadata`].","sig":null,"attributes":[{"value":"/ Returns `true` if this metadata is for a directory. The","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1127785,"byte_end":1127844,"line_start":631,"line_end":631,"column_start":5,"column_end":64}},{"value":"/ result is mutually exclusive to the result of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1127849,"byte_end":1127898,"line_start":632,"line_end":632,"column_start":5,"column_end":54}},{"value":"/ [`is_file`], and will be false for symlink metadata","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1127903,"byte_end":1127958,"line_start":633,"line_end":633,"column_start":5,"column_end":60}},{"value":"/ obtained from [`symlink_metadata`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1127963,"byte_end":1128002,"line_start":634,"line_end":634,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1128007,"byte_end":1128010,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ [`is_file`]: struct.Metadata.html#method.is_file","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1128015,"byte_end":1128067,"line_start":636,"line_end":636,"column_start":5,"column_end":57}},{"value":"/ [`symlink_metadata`]: fn.symlink_metadata.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1128072,"byte_end":1128122,"line_start":637,"line_end":637,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1128127,"byte_end":1128130,"line_start":638,"line_end":638,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6834},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1128568,"byte_end":1128575,"line_start":651,"line_end":651,"column_start":12,"column_end":19},"name":"is_file","qualname":"<Metadata>::is_file","value":"pub fn is_file(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this metadata is for a regular file. The\n result is mutually exclusive to the result of\n [`is_dir`], and will be false for symlink metadata\n obtained from [`symlink_metadata`].","sig":null,"attributes":[{"value":"/ Returns `true` if this metadata is for a regular file. The","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1128211,"byte_end":1128273,"line_start":643,"line_end":643,"column_start":5,"column_end":67}},{"value":"/ result is mutually exclusive to the result of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1128278,"byte_end":1128327,"line_start":644,"line_end":644,"column_start":5,"column_end":54}},{"value":"/ [`is_dir`], and will be false for symlink metadata","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1128332,"byte_end":1128386,"line_start":645,"line_end":645,"column_start":5,"column_end":59}},{"value":"/ obtained from [`symlink_metadata`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1128391,"byte_end":1128430,"line_start":646,"line_end":646,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1128435,"byte_end":1128438,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ [`is_dir`]: struct.Metadata.html#method.is_dir","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1128443,"byte_end":1128493,"line_start":648,"line_end":648,"column_start":5,"column_end":55}},{"value":"/ [`symlink_metadata`]: fn.symlink_metadata.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1128498,"byte_end":1128548,"line_start":649,"line_end":649,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1128553,"byte_end":1128556,"line_start":650,"line_end":650,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6835},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1128724,"byte_end":1128727,"line_start":657,"line_end":657,"column_start":12,"column_end":15},"name":"len","qualname":"<Metadata>::len","value":"pub fn len(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the file, in bytes, this metadata is for.","sig":null,"attributes":[{"value":"/ Returns the size of the file, in bytes, this metadata is for.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1128639,"byte_end":1128704,"line_start":655,"line_end":655,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1128709,"byte_end":1128712,"line_start":656,"line_end":656,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6836},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1128858,"byte_end":1128869,"line_start":663,"line_end":663,"column_start":12,"column_end":23},"name":"permissions","qualname":"<Metadata>::permissions","value":"pub fn permissions(&Self) -> Permissions","parent":null,"children":[],"decl_id":null,"docs":" Returns the permissions of the file this metadata is for.","sig":null,"attributes":[{"value":"/ Returns the permissions of the file this metadata is for.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1128777,"byte_end":1128838,"line_start":661,"line_end":661,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1128843,"byte_end":1128846,"line_start":662,"line_end":662,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6837},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1129345,"byte_end":1129353,"line_start":677,"line_end":677,"column_start":12,"column_end":20},"name":"modified","qualname":"<Metadata>::modified","value":"pub fn modified(&Self) -> io::Result<SystemTime>","parent":null,"children":[],"decl_id":null,"docs":" Returns the last modification time listed in this metadata.","sig":null,"attributes":[{"value":"/ Returns the last modification time listed in this metadata.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1128940,"byte_end":1129003,"line_start":667,"line_end":667,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1129008,"byte_end":1129011,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ The returned value corresponds to the `mtime` field of `stat` on Unix","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1129016,"byte_end":1129089,"line_start":669,"line_end":669,"column_start":5,"column_end":78}},{"value":"/ platforms and the `ftLastWriteTime` field on Windows platforms.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1129094,"byte_end":1129161,"line_start":670,"line_end":670,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1129166,"byte_end":1129169,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1129174,"byte_end":1129186,"line_start":672,"line_end":672,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1129191,"byte_end":1129194,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ This field may not be available on all platforms, and will return an","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1129199,"byte_end":1129271,"line_start":674,"line_end":674,"column_start":5,"column_end":77}},{"value":"/ `Err` on platforms where it is not available.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1129276,"byte_end":1129325,"line_start":675,"line_end":675,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1129330,"byte_end":1129333,"line_start":676,"line_end":676,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6838},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1130079,"byte_end":1130087,"line_start":695,"line_end":695,"column_start":12,"column_end":20},"name":"accessed","qualname":"<Metadata>::accessed","value":"pub fn accessed(&Self) -> io::Result<SystemTime>","parent":null,"children":[],"decl_id":null,"docs":" Returns the last access time of this metadata.","sig":null,"attributes":[{"value":"/ Returns the last access time of this metadata.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1129453,"byte_end":1129503,"line_start":681,"line_end":681,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1129508,"byte_end":1129511,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ The returned value corresponds to the `atime` field of `stat` on Unix","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1129516,"byte_end":1129589,"line_start":683,"line_end":683,"column_start":5,"column_end":78}},{"value":"/ platforms and the `ftLastAccessTime` field on Windows platforms.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1129594,"byte_end":1129662,"line_start":684,"line_end":684,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1129667,"byte_end":1129670,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ Note that not all platforms will keep this field update in a file's","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1129675,"byte_end":1129746,"line_start":686,"line_end":686,"column_start":5,"column_end":76}},{"value":"/ metadata, for example Windows has an option to disable updating this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1129751,"byte_end":1129823,"line_start":687,"line_end":687,"column_start":5,"column_end":77}},{"value":"/ time when files are accessed and Linux similarly has `noatime`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1129828,"byte_end":1129895,"line_start":688,"line_end":688,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1129900,"byte_end":1129903,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1129908,"byte_end":1129920,"line_start":690,"line_end":690,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1129925,"byte_end":1129928,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ This field may not be available on all platforms, and will return an","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1129933,"byte_end":1130005,"line_start":692,"line_end":692,"column_start":5,"column_end":77}},{"value":"/ `Err` on platforms where it is not available.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1130010,"byte_end":1130059,"line_start":693,"line_end":693,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1130064,"byte_end":1130067,"line_start":694,"line_end":694,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6839},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1130684,"byte_end":1130691,"line_start":710,"line_end":710,"column_start":12,"column_end":19},"name":"created","qualname":"<Metadata>::created","value":"pub fn created(&Self) -> io::Result<SystemTime>","parent":null,"children":[],"decl_id":null,"docs":" Returns the creation time listed in this metadata.","sig":null,"attributes":[{"value":"/ Returns the creation time listed in this metadata.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1130187,"byte_end":1130241,"line_start":699,"line_end":699,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1130246,"byte_end":1130249,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ The returned value corresponds to the `btime` field of `statx` on","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1130254,"byte_end":1130323,"line_start":701,"line_end":701,"column_start":5,"column_end":74}},{"value":"/ Linux kernel starting from to 4.11, the `birthtime` field of `stat` on other","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1130328,"byte_end":1130408,"line_start":702,"line_end":702,"column_start":5,"column_end":85}},{"value":"/ Unix platforms, and the `ftCreationTime` field on Windows platforms.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1130413,"byte_end":1130485,"line_start":703,"line_end":703,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1130490,"byte_end":1130493,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1130498,"byte_end":1130510,"line_start":705,"line_end":705,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1130515,"byte_end":1130518,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ This field may not be available on all platforms, and will return an","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1130523,"byte_end":1130595,"line_start":707,"line_end":707,"column_start":5,"column_end":77}},{"value":"/ `Err` on platforms or filesystems where it is not available.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1130600,"byte_end":1130664,"line_start":708,"line_end":708,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1130669,"byte_end":1130672,"line_start":709,"line_end":709,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6847},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1131665,"byte_end":1131673,"line_start":744,"line_end":744,"column_start":12,"column_end":20},"name":"readonly","qualname":"<Permissions>::readonly","value":"pub fn readonly(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if these permissions describe a readonly (unwritable) file.","sig":null,"attributes":[{"value":"/ Returns `true` if these permissions describe a readonly (unwritable) file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1131567,"byte_end":1131645,"line_start":742,"line_end":742,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1131650,"byte_end":1131653,"line_start":743,"line_end":743,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6848},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1132274,"byte_end":1132286,"line_start":759,"line_end":759,"column_start":12,"column_end":24},"name":"set_readonly","qualname":"<Permissions>::set_readonly","value":"pub fn set_readonly(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Modifies the readonly flag for this set of permissions. If the\n `readonly` argument is `true`, using the resulting `Permission` will\n update file permissions to forbid writing. Conversely, if it's `false`,\n using the resulting `Permission` will update file permissions to allow\n writing.","sig":null,"attributes":[{"value":"/ Modifies the readonly flag for this set of permissions. If the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1131728,"byte_end":1131794,"line_start":748,"line_end":748,"column_start":5,"column_end":71}},{"value":"/ `readonly` argument is `true`, using the resulting `Permission` will","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1131799,"byte_end":1131871,"line_start":749,"line_end":749,"column_start":5,"column_end":77}},{"value":"/ update file permissions to forbid writing. Conversely, if it's `false`,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1131876,"byte_end":1131951,"line_start":750,"line_end":750,"column_start":5,"column_end":80}},{"value":"/ using the resulting `Permission` will update file permissions to allow","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1131956,"byte_end":1132030,"line_start":751,"line_end":751,"column_start":5,"column_end":79}},{"value":"/ writing.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1132035,"byte_end":1132047,"line_start":752,"line_end":752,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1132052,"byte_end":1132055,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ This operation does **not** modify the filesystem. To modify the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1132060,"byte_end":1132128,"line_start":754,"line_end":754,"column_start":5,"column_end":73}},{"value":"/ filesystem use the [`fs::set_permissions`] function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1132133,"byte_end":1132189,"line_start":755,"line_end":755,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1132194,"byte_end":1132197,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ [`fs::set_permissions`]: fn.set_permissions.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1132202,"byte_end":1132254,"line_start":757,"line_end":757,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1132259,"byte_end":1132262,"line_start":758,"line_end":758,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6850},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1132736,"byte_end":1132742,"line_start":773,"line_end":773,"column_start":12,"column_end":18},"name":"is_dir","qualname":"<FileType>::is_dir","value":"pub fn is_dir(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this file type represents a directory. The\n result is mutually exclusive to the results of\n [`is_file`] and [`is_symlink`]; only zero or one of these\n tests may pass.","sig":null,"attributes":[{"value":"/ Tests whether this file type represents a directory. The","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1132383,"byte_end":1132443,"line_start":765,"line_end":765,"column_start":5,"column_end":65}},{"value":"/ result is mutually exclusive to the results of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1132448,"byte_end":1132498,"line_start":766,"line_end":766,"column_start":5,"column_end":55}},{"value":"/ [`is_file`] and [`is_symlink`]; only zero or one of these","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1132503,"byte_end":1132564,"line_start":767,"line_end":767,"column_start":5,"column_end":66}},{"value":"/ tests may pass.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1132569,"byte_end":1132588,"line_start":768,"line_end":768,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1132593,"byte_end":1132596,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ [`is_file`]: struct.FileType.html#method.is_file","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1132601,"byte_end":1132653,"line_start":770,"line_end":770,"column_start":5,"column_end":57}},{"value":"/ [`is_symlink`]: struct.FileType.html#method.is_symlink","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1132658,"byte_end":1132716,"line_start":771,"line_end":771,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1132721,"byte_end":1132724,"line_start":772,"line_end":772,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6851},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1133149,"byte_end":1133156,"line_start":785,"line_end":785,"column_start":12,"column_end":19},"name":"is_file","qualname":"<FileType>::is_file","value":"pub fn is_file(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this file type represents a regular file.\n The result is  mutually exclusive to the results of\n [`is_dir`] and [`is_symlink`]; only zero or one of these\n tests may pass.","sig":null,"attributes":[{"value":"/ Tests whether this file type represents a regular file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1132795,"byte_end":1132854,"line_start":777,"line_end":777,"column_start":5,"column_end":64}},{"value":"/ The result is  mutually exclusive to the results of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1132859,"byte_end":1132914,"line_start":778,"line_end":778,"column_start":5,"column_end":60}},{"value":"/ [`is_dir`] and [`is_symlink`]; only zero or one of these","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1132919,"byte_end":1132979,"line_start":779,"line_end":779,"column_start":5,"column_end":65}},{"value":"/ tests may pass.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1132984,"byte_end":1133003,"line_start":780,"line_end":780,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1133008,"byte_end":1133011,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ [`is_dir`]: struct.FileType.html#method.is_dir","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1133016,"byte_end":1133066,"line_start":782,"line_end":782,"column_start":5,"column_end":55}},{"value":"/ [`is_symlink`]: struct.FileType.html#method.is_symlink","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1133071,"byte_end":1133129,"line_start":783,"line_end":783,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1133134,"byte_end":1133137,"line_start":784,"line_end":784,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6852},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1134071,"byte_end":1134081,"line_start":807,"line_end":807,"column_start":12,"column_end":22},"name":"is_symlink","qualname":"<FileType>::is_symlink","value":"pub fn is_symlink(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this file type represents a symbolic link.\n The result is mutually exclusive to the results of\n [`is_dir`] and [`is_file`]; only zero or one of these\n tests may pass.","sig":null,"attributes":[{"value":"/ Tests whether this file type represents a symbolic link.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1133210,"byte_end":1133270,"line_start":789,"line_end":789,"column_start":5,"column_end":65}},{"value":"/ The result is mutually exclusive to the results of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1133275,"byte_end":1133329,"line_start":790,"line_end":790,"column_start":5,"column_end":59}},{"value":"/ [`is_dir`] and [`is_file`]; only zero or one of these","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1133334,"byte_end":1133391,"line_start":791,"line_end":791,"column_start":5,"column_end":62}},{"value":"/ tests may pass.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1133396,"byte_end":1133415,"line_start":792,"line_end":792,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1133420,"byte_end":1133423,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ The underlying [`Metadata`] struct needs to be retrieved","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1133428,"byte_end":1133488,"line_start":794,"line_end":794,"column_start":5,"column_end":65}},{"value":"/ with the [`fs::symlink_metadata`] function and not the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1133493,"byte_end":1133551,"line_start":795,"line_end":795,"column_start":5,"column_end":63}},{"value":"/ [`fs::metadata`] function. The [`fs::metadata`] function","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1133556,"byte_end":1133616,"line_start":796,"line_end":796,"column_start":5,"column_end":65}},{"value":"/ follows symbolic links, so [`is_symlink`] would always","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1133621,"byte_end":1133679,"line_start":797,"line_end":797,"column_start":5,"column_end":63}},{"value":"/ return `false` for the target file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1133684,"byte_end":1133723,"line_start":798,"line_end":798,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1133728,"byte_end":1133731,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ [`Metadata`]: struct.Metadata.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1133736,"byte_end":1133774,"line_start":800,"line_end":800,"column_start":5,"column_end":43}},{"value":"/ [`fs::metadata`]: fn.metadata.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1133779,"byte_end":1133817,"line_start":801,"line_end":801,"column_start":5,"column_end":43}},{"value":"/ [`fs::symlink_metadata`]: fn.symlink_metadata.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1133822,"byte_end":1133876,"line_start":802,"line_end":802,"column_start":5,"column_end":59}},{"value":"/ [`is_dir`]: struct.FileType.html#method.is_dir","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1133881,"byte_end":1133931,"line_start":803,"line_end":803,"column_start":5,"column_end":55}},{"value":"/ [`is_file`]: struct.FileType.html#method.is_file","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1133936,"byte_end":1133988,"line_start":804,"line_end":804,"column_start":5,"column_end":57}},{"value":"/ [`is_symlink`]: struct.FileType.html#method.is_symlink","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1133993,"byte_end":1134051,"line_start":805,"line_end":805,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1134056,"byte_end":1134059,"line_start":806,"line_end":806,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6864},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1134958,"byte_end":1134962,"line_start":844,"line_end":844,"column_start":12,"column_end":16},"name":"path","qualname":"<DirEntry>::path","value":"pub fn path(&Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the full path to the file that this entry represents.","sig":null,"attributes":[{"value":"/ Returns the full path to the file that this entry represents.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1134748,"byte_end":1134813,"line_start":839,"line_end":839,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1134818,"byte_end":1134821,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ The full path is created by joining the original path to `read_dir`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1134826,"byte_end":1134897,"line_start":841,"line_end":841,"column_start":5,"column_end":76}},{"value":"/ with the filename of this entry.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1134902,"byte_end":1134938,"line_start":842,"line_end":842,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1134943,"byte_end":1134946,"line_start":843,"line_end":843,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6865},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1135448,"byte_end":1135456,"line_start":859,"line_end":859,"column_start":12,"column_end":20},"name":"metadata","qualname":"<DirEntry>::metadata","value":"pub fn metadata(&Self) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Returns the metadata for the file that this entry points at.","sig":null,"attributes":[{"value":"/ Returns the metadata for the file that this entry points at.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1135016,"byte_end":1135080,"line_start":848,"line_end":848,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1135085,"byte_end":1135088,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symlinks if this entry points at a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1135093,"byte_end":1135163,"line_start":850,"line_end":850,"column_start":5,"column_end":75}},{"value":"/ symlink.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1135168,"byte_end":1135180,"line_start":851,"line_end":851,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1135185,"byte_end":1135188,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1135193,"byte_end":1135225,"line_start":853,"line_end":853,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1135230,"byte_end":1135233,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ On Windows this function is cheap to call (no extra system calls","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1135238,"byte_end":1135306,"line_start":855,"line_end":855,"column_start":5,"column_end":73}},{"value":"/ needed), but on Unix platforms this function is the equivalent of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1135311,"byte_end":1135380,"line_start":856,"line_end":856,"column_start":5,"column_end":74}},{"value":"/ calling `symlink_metadata` on the path.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1135385,"byte_end":1135428,"line_start":857,"line_end":857,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1135433,"byte_end":1135436,"line_start":858,"line_end":858,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6866},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1136007,"byte_end":1136016,"line_start":874,"line_end":874,"column_start":12,"column_end":21},"name":"file_type","qualname":"<DirEntry>::file_type","value":"pub fn file_type(&Self) -> io::Result<FileType>","parent":null,"children":[],"decl_id":null,"docs":" Returns the file type for the file that this entry points at.","sig":null,"attributes":[{"value":"/ Returns the file type for the file that this entry points at.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1135541,"byte_end":1135606,"line_start":863,"line_end":863,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1135611,"byte_end":1135614,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symlinks if this entry points at a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1135619,"byte_end":1135689,"line_start":865,"line_end":865,"column_start":5,"column_end":75}},{"value":"/ symlink.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1135694,"byte_end":1135706,"line_start":866,"line_end":866,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1135711,"byte_end":1135714,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1135719,"byte_end":1135751,"line_start":868,"line_end":868,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1135756,"byte_end":1135759,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ On Windows and most Unix platforms this function is free (no extra","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1135764,"byte_end":1135834,"line_start":870,"line_end":870,"column_start":5,"column_end":75}},{"value":"/ system calls needed), but some Unix platforms may require the equivalent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1135839,"byte_end":1135915,"line_start":871,"line_end":871,"column_start":5,"column_end":81}},{"value":"/ call to `symlink_metadata` to learn about the target file type.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1135920,"byte_end":1135987,"line_start":872,"line_end":872,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1135992,"byte_end":1135995,"line_start":873,"line_end":873,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6867},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1136226,"byte_end":1136235,"line_start":881,"line_end":881,"column_start":12,"column_end":21},"name":"file_name","qualname":"<DirEntry>::file_name","value":"pub fn file_name(&Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns the bare file name of this directory entry without any other\n leading path component.","sig":null,"attributes":[{"value":"/ Returns the bare file name of this directory entry without any other","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1136102,"byte_end":1136174,"line_start":878,"line_end":878,"column_start":5,"column_end":77}},{"value":"/ leading path component.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1136179,"byte_end":1136206,"line_start":879,"line_end":879,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1136211,"byte_end":1136214,"line_start":880,"line_end":880,"column_start":5,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6872},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137308,"byte_end":1137319,"line_start":920,"line_end":920,"column_start":8,"column_end":19},"name":"remove_file","qualname":"::fs::remove_file","value":"pub fn remove_file<P: AsRef<Path>>(P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes a file from the filesystem.","sig":null,"attributes":[{"value":"/ Removes a file from the filesystem.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1136576,"byte_end":1136615,"line_start":898,"line_end":898,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1136616,"byte_end":1136619,"line_start":899,"line_end":899,"column_start":1,"column_end":4}},{"value":"/ Note that there is no","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1136620,"byte_end":1136645,"line_start":900,"line_end":900,"column_start":1,"column_end":26}},{"value":"/ guarantee that the file is immediately deleted (e.g., depending on","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1136646,"byte_end":1136716,"line_start":901,"line_end":901,"column_start":1,"column_end":71}},{"value":"/ platform, other open file descriptors may prevent immediate removal).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1136717,"byte_end":1136790,"line_start":902,"line_end":902,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1136791,"byte_end":1136794,"line_start":903,"line_end":903,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1136795,"byte_end":1136827,"line_start":904,"line_end":904,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1136828,"byte_end":1136831,"line_start":905,"line_end":905,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `unlink` function on Unix","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1136832,"byte_end":1136904,"line_start":906,"line_end":906,"column_start":1,"column_end":73}},{"value":"/ and the `DeleteFile` function on Windows.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1136905,"byte_end":1136950,"line_start":907,"line_end":907,"column_start":1,"column_end":46}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1136951,"byte_end":1137007,"line_start":908,"line_end":908,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137008,"byte_end":1137011,"line_start":909,"line_end":909,"column_start":1,"column_end":4}},{"value":"/ [changes]: ../io/index.html#platform-specific-behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137012,"byte_end":1137070,"line_start":910,"line_end":910,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137071,"byte_end":1137074,"line_start":911,"line_end":911,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137075,"byte_end":1137087,"line_start":912,"line_end":912,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137088,"byte_end":1137091,"line_start":913,"line_end":913,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137092,"byte_end":1137170,"line_start":914,"line_end":914,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137171,"byte_end":1137203,"line_start":915,"line_end":915,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137204,"byte_end":1137207,"line_start":916,"line_end":916,"column_start":1,"column_end":4}},{"value":"/ * `path` points to a directory.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137208,"byte_end":1137243,"line_start":917,"line_end":917,"column_start":1,"column_end":36}},{"value":"/ * The user lacks permissions to remove the file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137244,"byte_end":1137296,"line_start":918,"line_end":918,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137297,"byte_end":1137300,"line_start":919,"line_end":919,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":6874},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1138134,"byte_end":1138142,"line_start":946,"line_end":946,"column_start":8,"column_end":16},"name":"metadata","qualname":"::fs::metadata","value":"pub fn metadata<P: AsRef<Path>>(P) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Given a path, query the file system to get information about a file,\n directory, etc.","sig":null,"attributes":[{"value":"/ Given a path, query the file system to get information about a file,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137402,"byte_end":1137474,"line_start":924,"line_end":924,"column_start":1,"column_end":73}},{"value":"/ directory, etc.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137475,"byte_end":1137494,"line_start":925,"line_end":925,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137495,"byte_end":1137498,"line_start":926,"line_end":926,"column_start":1,"column_end":4}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137499,"byte_end":1137576,"line_start":927,"line_end":927,"column_start":1,"column_end":78}},{"value":"/ destination file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137577,"byte_end":1137598,"line_start":928,"line_end":928,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137599,"byte_end":1137602,"line_start":929,"line_end":929,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137603,"byte_end":1137635,"line_start":930,"line_end":930,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137636,"byte_end":1137639,"line_start":931,"line_end":931,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `stat` function on Unix","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137640,"byte_end":1137710,"line_start":932,"line_end":932,"column_start":1,"column_end":71}},{"value":"/ and the `GetFileAttributesEx` function on Windows.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137711,"byte_end":1137765,"line_start":933,"line_end":933,"column_start":1,"column_end":55}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137766,"byte_end":1137822,"line_start":934,"line_end":934,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137823,"byte_end":1137826,"line_start":935,"line_end":935,"column_start":1,"column_end":4}},{"value":"/ [changes]: ../io/index.html#platform-specific-behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137827,"byte_end":1137885,"line_start":936,"line_end":936,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137886,"byte_end":1137889,"line_start":937,"line_end":937,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137890,"byte_end":1137902,"line_start":938,"line_end":938,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137903,"byte_end":1137906,"line_start":939,"line_end":939,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137907,"byte_end":1137985,"line_start":940,"line_end":940,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1137986,"byte_end":1138018,"line_start":941,"line_end":941,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1138019,"byte_end":1138022,"line_start":942,"line_end":942,"column_start":1,"column_end":4}},{"value":"/ * The user lacks permissions to perform `metadata` call on `path`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1138023,"byte_end":1138093,"line_start":943,"line_end":943,"column_start":1,"column_end":71}},{"value":"/ * `path` does not exist.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1138094,"byte_end":1138122,"line_start":944,"line_end":944,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1138123,"byte_end":1138126,"line_start":945,"line_end":945,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":6876},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1138843,"byte_end":1138859,"line_start":968,"line_end":968,"column_start":8,"column_end":24},"name":"symlink_metadata","qualname":"::fs::symlink_metadata","value":"pub fn symlink_metadata<P: AsRef<Path>>(P) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Query the metadata about a file without following symlinks.","sig":null,"attributes":[{"value":"/ Query the metadata about a file without following symlinks.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1138243,"byte_end":1138306,"line_start":950,"line_end":950,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1138307,"byte_end":1138310,"line_start":951,"line_end":951,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1138311,"byte_end":1138343,"line_start":952,"line_end":952,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1138344,"byte_end":1138347,"line_start":953,"line_end":953,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `lstat` function on Unix","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1138348,"byte_end":1138419,"line_start":954,"line_end":954,"column_start":1,"column_end":72}},{"value":"/ and the `GetFileAttributesEx` function on Windows.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1138420,"byte_end":1138474,"line_start":955,"line_end":955,"column_start":1,"column_end":55}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1138475,"byte_end":1138531,"line_start":956,"line_end":956,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1138532,"byte_end":1138535,"line_start":957,"line_end":957,"column_start":1,"column_end":4}},{"value":"/ [changes]: ../io/index.html#platform-specific-behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1138536,"byte_end":1138594,"line_start":958,"line_end":958,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1138595,"byte_end":1138598,"line_start":959,"line_end":959,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1138599,"byte_end":1138611,"line_start":960,"line_end":960,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1138612,"byte_end":1138615,"line_start":961,"line_end":961,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1138616,"byte_end":1138694,"line_start":962,"line_end":962,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1138695,"byte_end":1138727,"line_start":963,"line_end":963,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1138728,"byte_end":1138731,"line_start":964,"line_end":964,"column_start":1,"column_end":4}},{"value":"/ * The user lacks permissions to perform `metadata` call on `path`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1138732,"byte_end":1138802,"line_start":965,"line_end":965,"column_start":1,"column_end":71}},{"value":"/ * `path` does not exist.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1138803,"byte_end":1138831,"line_start":966,"line_end":966,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1138832,"byte_end":1138835,"line_start":967,"line_end":967,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":6878},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1140058,"byte_end":1140064,"line_start":1000,"line_end":1000,"column_start":8,"column_end":14},"name":"rename","qualname":"::fs::rename","value":"pub fn rename<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Rename a file or directory to a new name, replacing the original file if\n `to` already exists.","sig":null,"attributes":[{"value":"/ Rename a file or directory to a new name, replacing the original file if","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1138961,"byte_end":1139037,"line_start":972,"line_end":972,"column_start":1,"column_end":77}},{"value":"/ `to` already exists.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1139038,"byte_end":1139062,"line_start":973,"line_end":973,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1139063,"byte_end":1139066,"line_start":974,"line_end":974,"column_start":1,"column_end":4}},{"value":"/ This will not work if the new name is on a different mount point.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1139067,"byte_end":1139136,"line_start":975,"line_end":975,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1139137,"byte_end":1139140,"line_start":976,"line_end":976,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1139141,"byte_end":1139173,"line_start":977,"line_end":977,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1139174,"byte_end":1139177,"line_start":978,"line_end":978,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `rename` function on Unix","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1139178,"byte_end":1139250,"line_start":979,"line_end":979,"column_start":1,"column_end":73}},{"value":"/ and the `MoveFileEx` function with the `MOVEFILE_REPLACE_EXISTING` flag on Windows.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1139251,"byte_end":1139338,"line_start":980,"line_end":980,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1139339,"byte_end":1139342,"line_start":981,"line_end":981,"column_start":1,"column_end":4}},{"value":"/ Because of this, the behavior when both `from` and `to` exist differs. On","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1139343,"byte_end":1139420,"line_start":982,"line_end":982,"column_start":1,"column_end":78}},{"value":"/ Unix, if `from` is a directory, `to` must also be an (empty) directory. If","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1139421,"byte_end":1139499,"line_start":983,"line_end":983,"column_start":1,"column_end":79}},{"value":"/ `from` is not a directory, `to` must also be not a directory. In contrast,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1139500,"byte_end":1139578,"line_start":984,"line_end":984,"column_start":1,"column_end":79}},{"value":"/ on Windows, `from` can be anything, but `to` must *not* be a directory.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1139579,"byte_end":1139654,"line_start":985,"line_end":985,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1139655,"byte_end":1139658,"line_start":986,"line_end":986,"column_start":1,"column_end":4}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1139659,"byte_end":1139715,"line_start":987,"line_end":987,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1139716,"byte_end":1139719,"line_start":988,"line_end":988,"column_start":1,"column_end":4}},{"value":"/ [changes]: ../io/index.html#platform-specific-behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1139720,"byte_end":1139778,"line_start":989,"line_end":989,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1139779,"byte_end":1139782,"line_start":990,"line_end":990,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1139783,"byte_end":1139795,"line_start":991,"line_end":991,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1139796,"byte_end":1139799,"line_start":992,"line_end":992,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1139800,"byte_end":1139878,"line_start":993,"line_end":993,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1139879,"byte_end":1139911,"line_start":994,"line_end":994,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1139912,"byte_end":1139915,"line_start":995,"line_end":995,"column_start":1,"column_end":4}},{"value":"/ * `from` does not exist.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1139916,"byte_end":1139944,"line_start":996,"line_end":996,"column_start":1,"column_end":29}},{"value":"/ * The user lacks permissions to view contents.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1139945,"byte_end":1139995,"line_start":997,"line_end":997,"column_start":1,"column_end":51}},{"value":"/ * `from` and `to` are on separate filesystems.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1139996,"byte_end":1140046,"line_start":998,"line_end":998,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1140047,"byte_end":1140050,"line_start":999,"line_end":999,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":6881},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1141827,"byte_end":1141831,"line_start":1044,"line_end":1044,"column_start":8,"column_end":12},"name":"copy","qualname":"::fs::copy","value":"pub fn copy<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> io::Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Copies the contents of one file to another. This function will also\n copy the permission bits of the original file to the destination file.","sig":null,"attributes":[{"value":"/ Copies the contents of one file to another. This function will also","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1140183,"byte_end":1140254,"line_start":1004,"line_end":1004,"column_start":1,"column_end":72}},{"value":"/ copy the permission bits of the original file to the destination file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1140255,"byte_end":1140329,"line_start":1005,"line_end":1005,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1140330,"byte_end":1140333,"line_start":1006,"line_end":1006,"column_start":1,"column_end":4}},{"value":"/ This function will **overwrite** the contents of `to`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1140334,"byte_end":1140392,"line_start":1007,"line_end":1007,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1140393,"byte_end":1140396,"line_start":1008,"line_end":1008,"column_start":1,"column_end":4}},{"value":"/ Note that if `from` and `to` both point to the same file, then the file","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1140397,"byte_end":1140472,"line_start":1009,"line_end":1009,"column_start":1,"column_end":76}},{"value":"/ will likely get truncated by this operation.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1140473,"byte_end":1140521,"line_start":1010,"line_end":1010,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1140522,"byte_end":1140525,"line_start":1011,"line_end":1011,"column_start":1,"column_end":4}},{"value":"/ On success, the total number of bytes copied is returned and it is equal to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1140526,"byte_end":1140605,"line_start":1012,"line_end":1012,"column_start":1,"column_end":80}},{"value":"/ the length of the `to` file as reported by `metadata`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1140606,"byte_end":1140664,"line_start":1013,"line_end":1013,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1140665,"byte_end":1140668,"line_start":1014,"line_end":1014,"column_start":1,"column_end":4}},{"value":"/ If you’re wanting to copy the contents of one file to another and you’re","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1140669,"byte_end":1140749,"line_start":1015,"line_end":1015,"column_start":1,"column_end":77}},{"value":"/ working with [`File`]s, see the [`io::copy`] function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1140750,"byte_end":1140808,"line_start":1016,"line_end":1016,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1140809,"byte_end":1140812,"line_start":1017,"line_end":1017,"column_start":1,"column_end":4}},{"value":"/ [`io::copy`]: ../io/fn.copy.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1140813,"byte_end":1140849,"line_start":1018,"line_end":1018,"column_start":1,"column_end":37}},{"value":"/ [`File`]: ./struct.File.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1140850,"byte_end":1140882,"line_start":1019,"line_end":1019,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1140883,"byte_end":1140886,"line_start":1020,"line_end":1020,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1140887,"byte_end":1140919,"line_start":1021,"line_end":1021,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1140920,"byte_end":1140923,"line_start":1022,"line_end":1022,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `open` function in Unix","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1140924,"byte_end":1140994,"line_start":1023,"line_end":1023,"column_start":1,"column_end":71}},{"value":"/ with `O_RDONLY` for `from` and `O_WRONLY`, `O_CREAT`, and `O_TRUNC` for `to`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1140995,"byte_end":1141076,"line_start":1024,"line_end":1024,"column_start":1,"column_end":82}},{"value":"/ `O_CLOEXEC` is set for returned file descriptors.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1141077,"byte_end":1141130,"line_start":1025,"line_end":1025,"column_start":1,"column_end":54}},{"value":"/ On Windows, this function currently corresponds to `CopyFileEx`. Alternate","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1141131,"byte_end":1141209,"line_start":1026,"line_end":1026,"column_start":1,"column_end":79}},{"value":"/ NTFS streams are copied but only the size of the main stream is returned by","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1141210,"byte_end":1141289,"line_start":1027,"line_end":1027,"column_start":1,"column_end":80}},{"value":"/ this function. On MacOS, this function corresponds to `fclonefileat` and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1141290,"byte_end":1141366,"line_start":1028,"line_end":1028,"column_start":1,"column_end":77}},{"value":"/ `fcopyfile`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1141367,"byte_end":1141383,"line_start":1029,"line_end":1029,"column_start":1,"column_end":17}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1141384,"byte_end":1141440,"line_start":1030,"line_end":1030,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1141441,"byte_end":1141444,"line_start":1031,"line_end":1031,"column_start":1,"column_end":4}},{"value":"/ [changes]: ../io/index.html#platform-specific-behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1141445,"byte_end":1141503,"line_start":1032,"line_end":1032,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1141504,"byte_end":1141507,"line_start":1033,"line_end":1033,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1141508,"byte_end":1141520,"line_start":1034,"line_end":1034,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1141521,"byte_end":1141524,"line_start":1035,"line_end":1035,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1141525,"byte_end":1141603,"line_start":1036,"line_end":1036,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1141604,"byte_end":1141636,"line_start":1037,"line_end":1037,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1141637,"byte_end":1141640,"line_start":1038,"line_end":1038,"column_start":1,"column_end":4}},{"value":"/ * The `from` path is not a file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1141641,"byte_end":1141677,"line_start":1039,"line_end":1039,"column_start":1,"column_end":37}},{"value":"/ * The `from` file does not exist.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1141678,"byte_end":1141715,"line_start":1040,"line_end":1040,"column_start":1,"column_end":38}},{"value":"/ * The current process does not have the permission rights to access","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1141716,"byte_end":1141787,"line_start":1041,"line_end":1041,"column_start":1,"column_end":72}},{"value":"/   `from` or write `to`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1141788,"byte_end":1141815,"line_start":1042,"line_end":1042,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1141816,"byte_end":1141819,"line_start":1043,"line_end":1043,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":6884},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1142640,"byte_end":1142649,"line_start":1068,"line_end":1068,"column_start":8,"column_end":17},"name":"hard_link","qualname":"::fs::hard_link","value":"pub fn hard_link<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new hard link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new hard link on the filesystem.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1141949,"byte_end":1141995,"line_start":1048,"line_end":1048,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1141996,"byte_end":1141999,"line_start":1049,"line_end":1049,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a link pointing to the `src` path. Note that systems","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1142000,"byte_end":1142079,"line_start":1050,"line_end":1050,"column_start":1,"column_end":80}},{"value":"/ often require these two paths to both be located on the same filesystem.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1142080,"byte_end":1142156,"line_start":1051,"line_end":1051,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1142157,"byte_end":1142160,"line_start":1052,"line_end":1052,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1142161,"byte_end":1142193,"line_start":1053,"line_end":1053,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1142194,"byte_end":1142197,"line_start":1054,"line_end":1054,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `link` function on Unix","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1142198,"byte_end":1142268,"line_start":1055,"line_end":1055,"column_start":1,"column_end":71}},{"value":"/ and the `CreateHardLink` function on Windows.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1142269,"byte_end":1142318,"line_start":1056,"line_end":1056,"column_start":1,"column_end":50}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1142319,"byte_end":1142375,"line_start":1057,"line_end":1057,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1142376,"byte_end":1142379,"line_start":1058,"line_end":1058,"column_start":1,"column_end":4}},{"value":"/ [changes]: ../io/index.html#platform-specific-behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1142380,"byte_end":1142438,"line_start":1059,"line_end":1059,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1142439,"byte_end":1142442,"line_start":1060,"line_end":1060,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1142443,"byte_end":1142455,"line_start":1061,"line_end":1061,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1142456,"byte_end":1142459,"line_start":1062,"line_end":1062,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1142460,"byte_end":1142538,"line_start":1063,"line_end":1063,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1142539,"byte_end":1142571,"line_start":1064,"line_end":1064,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1142572,"byte_end":1142575,"line_start":1065,"line_end":1065,"column_start":1,"column_end":4}},{"value":"/ * The `src` path is not a file or doesn't exist.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1142576,"byte_end":1142628,"line_start":1066,"line_end":1066,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1142629,"byte_end":1142632,"line_start":1067,"line_end":1067,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":6887},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1143383,"byte_end":1143392,"line_start":1085,"line_end":1085,"column_start":8,"column_end":17},"name":"soft_link","qualname":"::fs::soft_link","value":"pub fn soft_link<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new symbolic link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new symbolic link on the filesystem.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1142766,"byte_end":1142816,"line_start":1072,"line_end":1072,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1142817,"byte_end":1142820,"line_start":1073,"line_end":1073,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a symbolic link pointing to the `src` path.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1142821,"byte_end":1142891,"line_start":1074,"line_end":1074,"column_start":1,"column_end":71}},{"value":"/ On Windows, this will be a file symlink, not a directory symlink;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1142892,"byte_end":1142961,"line_start":1075,"line_end":1075,"column_start":1,"column_end":70}},{"value":"/ for this reason, the platform-specific [`std::os::unix::fs::symlink`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1142962,"byte_end":1143035,"line_start":1076,"line_end":1076,"column_start":1,"column_end":74}},{"value":"/ and [`std::os::windows::fs::symlink_file`] or [`symlink_dir`] should be","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1143036,"byte_end":1143111,"line_start":1077,"line_end":1077,"column_start":1,"column_end":76}},{"value":"/ used instead to make the intent explicit.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1143112,"byte_end":1143157,"line_start":1078,"line_end":1078,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1143158,"byte_end":1143161,"line_start":1079,"line_end":1079,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::fs::symlink`]: ../os/unix/fs/fn.symlink.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1143162,"byte_end":1143227,"line_start":1080,"line_end":1080,"column_start":1,"column_end":66}},{"value":"/ [`std::os::windows::fs::symlink_file`]: ../os/windows/fs/fn.symlink_file.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1143228,"byte_end":1143309,"line_start":1081,"line_end":1081,"column_start":1,"column_end":82}},{"value":"/ [`symlink_dir`]: ../os/windows/fs/fn.symlink_dir.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1143310,"byte_end":1143367,"line_start":1082,"line_end":1082,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1143368,"byte_end":1143371,"line_start":1083,"line_end":1083,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1143372,"byte_end":1143375,"line_start":1084,"line_end":1084,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":6890},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1144158,"byte_end":1144167,"line_start":1108,"line_end":1108,"column_start":8,"column_end":17},"name":"read_link","qualname":"::fs::read_link","value":"pub fn read_link<P: AsRef<Path>>(P) -> io::Result<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link, returning the file that the link points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link, returning the file that the link points to.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1143512,"byte_end":1143582,"line_start":1089,"line_end":1089,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1143583,"byte_end":1143586,"line_start":1090,"line_end":1090,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1143587,"byte_end":1143619,"line_start":1091,"line_end":1091,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1143620,"byte_end":1143623,"line_start":1092,"line_end":1092,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `readlink` function on Unix","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1143624,"byte_end":1143698,"line_start":1093,"line_end":1093,"column_start":1,"column_end":75}},{"value":"/ and the `CreateFile` function with `FILE_FLAG_OPEN_REPARSE_POINT` and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1143699,"byte_end":1143772,"line_start":1094,"line_end":1094,"column_start":1,"column_end":74}},{"value":"/ `FILE_FLAG_BACKUP_SEMANTICS` flags on Windows.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1143773,"byte_end":1143823,"line_start":1095,"line_end":1095,"column_start":1,"column_end":51}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1143824,"byte_end":1143880,"line_start":1096,"line_end":1096,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1143881,"byte_end":1143884,"line_start":1097,"line_end":1097,"column_start":1,"column_end":4}},{"value":"/ [changes]: ../io/index.html#platform-specific-behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1143885,"byte_end":1143943,"line_start":1098,"line_end":1098,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1143944,"byte_end":1143947,"line_start":1099,"line_end":1099,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1143948,"byte_end":1143960,"line_start":1100,"line_end":1100,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1143961,"byte_end":1143964,"line_start":1101,"line_end":1101,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1143965,"byte_end":1144043,"line_start":1102,"line_end":1102,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1144044,"byte_end":1144076,"line_start":1103,"line_end":1103,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1144077,"byte_end":1144080,"line_start":1104,"line_end":1104,"column_start":1,"column_end":4}},{"value":"/ * `path` is not a symbolic link.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1144081,"byte_end":1144117,"line_start":1105,"line_end":1105,"column_start":1,"column_end":37}},{"value":"/ * `path` does not exist.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1144118,"byte_end":1144146,"line_start":1106,"line_end":1106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1144147,"byte_end":1144150,"line_start":1107,"line_end":1107,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":6892},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1145382,"byte_end":1145394,"line_start":1138,"line_end":1138,"column_start":8,"column_end":20},"name":"canonicalize","qualname":"::fs::canonicalize","value":"pub fn canonicalize<P: AsRef<Path>>(P) -> io::Result<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical, absolute form of a path with all intermediate\n components normalized and symbolic links resolved.","sig":null,"attributes":[{"value":"/ Returns the canonical, absolute form of a path with all intermediate","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1144257,"byte_end":1144329,"line_start":1112,"line_end":1112,"column_start":1,"column_end":73}},{"value":"/ components normalized and symbolic links resolved.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1144330,"byte_end":1144384,"line_start":1113,"line_end":1113,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1144385,"byte_end":1144388,"line_start":1114,"line_end":1114,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1144389,"byte_end":1144421,"line_start":1115,"line_end":1115,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1144422,"byte_end":1144425,"line_start":1116,"line_end":1116,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `realpath` function on Unix","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1144426,"byte_end":1144500,"line_start":1117,"line_end":1117,"column_start":1,"column_end":75}},{"value":"/ and the `CreateFile` and `GetFinalPathNameByHandle` functions on Windows.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1144501,"byte_end":1144578,"line_start":1118,"line_end":1118,"column_start":1,"column_end":78}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1144579,"byte_end":1144635,"line_start":1119,"line_end":1119,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1144636,"byte_end":1144639,"line_start":1120,"line_end":1120,"column_start":1,"column_end":4}},{"value":"/ On Windows, this converts the path to use [extended length path][path]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1144640,"byte_end":1144714,"line_start":1121,"line_end":1121,"column_start":1,"column_end":75}},{"value":"/ syntax, which allows your program to use longer path names, but means you","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1144715,"byte_end":1144792,"line_start":1122,"line_end":1122,"column_start":1,"column_end":78}},{"value":"/ can only join backslash-delimited paths to it, and it may be incompatible","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1144793,"byte_end":1144870,"line_start":1123,"line_end":1123,"column_start":1,"column_end":78}},{"value":"/ with other applications (if passed to the application on the command-line,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1144871,"byte_end":1144949,"line_start":1124,"line_end":1124,"column_start":1,"column_end":79}},{"value":"/ or written to a file another application may read).","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1144950,"byte_end":1145005,"line_start":1125,"line_end":1125,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1145006,"byte_end":1145009,"line_start":1126,"line_end":1126,"column_start":1,"column_end":4}},{"value":"/ [changes]: ../io/index.html#platform-specific-behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1145010,"byte_end":1145068,"line_start":1127,"line_end":1127,"column_start":1,"column_end":59}},{"value":"/ [path]: https://docs.microsoft.com/en-us/windows/win32/fileio/naming-a-file","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1145069,"byte_end":1145148,"line_start":1128,"line_end":1128,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1145149,"byte_end":1145152,"line_start":1129,"line_end":1129,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1145153,"byte_end":1145165,"line_start":1130,"line_end":1130,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1145166,"byte_end":1145169,"line_start":1131,"line_end":1131,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1145170,"byte_end":1145248,"line_start":1132,"line_end":1132,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1145249,"byte_end":1145281,"line_start":1133,"line_end":1133,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1145282,"byte_end":1145285,"line_start":1134,"line_end":1134,"column_start":1,"column_end":4}},{"value":"/ * `path` does not exist.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1145286,"byte_end":1145314,"line_start":1135,"line_end":1135,"column_start":1,"column_end":29}},{"value":"/ * A non-final component in path is not a directory.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1145315,"byte_end":1145370,"line_start":1136,"line_end":1136,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1145371,"byte_end":1145374,"line_start":1137,"line_end":1137,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":6894},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146495,"byte_end":1146505,"line_start":1169,"line_end":1169,"column_start":8,"column_end":18},"name":"create_dir","qualname":"::fs::create_dir","value":"pub fn create_dir<P: AsRef<Path>>(P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty directory at the provided path","sig":null,"attributes":[{"value":"/ Creates a new, empty directory at the provided path","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1145488,"byte_end":1145543,"line_start":1142,"line_end":1142,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1145544,"byte_end":1145547,"line_start":1143,"line_end":1143,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1145548,"byte_end":1145580,"line_start":1144,"line_end":1144,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1145581,"byte_end":1145584,"line_start":1145,"line_end":1145,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `mkdir` function on Unix","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1145585,"byte_end":1145656,"line_start":1146,"line_end":1146,"column_start":1,"column_end":72}},{"value":"/ and the `CreateDirectory` function on Windows.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1145657,"byte_end":1145707,"line_start":1147,"line_end":1147,"column_start":1,"column_end":51}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1145708,"byte_end":1145764,"line_start":1148,"line_end":1148,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1145765,"byte_end":1145768,"line_start":1149,"line_end":1149,"column_start":1,"column_end":4}},{"value":"/ [changes]: ../io/index.html#platform-specific-behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1145769,"byte_end":1145827,"line_start":1150,"line_end":1150,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1145828,"byte_end":1145831,"line_start":1151,"line_end":1151,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: If a parent of the given path doesn't exist, this function will","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1145832,"byte_end":1145909,"line_start":1152,"line_end":1152,"column_start":1,"column_end":78}},{"value":"/ return an error. To create a directory and all its missing parents at the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1145910,"byte_end":1145987,"line_start":1153,"line_end":1153,"column_start":1,"column_end":78}},{"value":"/ same time, use the [`create_dir_all`] function.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1145988,"byte_end":1146039,"line_start":1154,"line_end":1154,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146040,"byte_end":1146043,"line_start":1155,"line_end":1155,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146044,"byte_end":1146056,"line_start":1156,"line_end":1156,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146057,"byte_end":1146060,"line_start":1157,"line_end":1157,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146061,"byte_end":1146139,"line_start":1158,"line_end":1158,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146140,"byte_end":1146172,"line_start":1159,"line_end":1159,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146173,"byte_end":1146176,"line_start":1160,"line_end":1160,"column_start":1,"column_end":4}},{"value":"/ * User lacks permissions to create directory at `path`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146177,"byte_end":1146236,"line_start":1161,"line_end":1161,"column_start":1,"column_end":60}},{"value":"/ * A parent of the given path doesn't exist. (To create a directory and all","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146237,"byte_end":1146315,"line_start":1162,"line_end":1162,"column_start":1,"column_end":79}},{"value":"/   its missing parents at the same time, use the [`create_dir_all`]","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146316,"byte_end":1146386,"line_start":1163,"line_end":1163,"column_start":1,"column_end":71}},{"value":"/   function.)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146387,"byte_end":1146403,"line_start":1164,"line_end":1164,"column_start":1,"column_end":17}},{"value":"/ * `path` already exists.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146404,"byte_end":1146432,"line_start":1165,"line_end":1165,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146433,"byte_end":1146436,"line_start":1166,"line_end":1166,"column_start":1,"column_end":4}},{"value":"/ [`create_dir_all`]: fn.create_dir_all.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146437,"byte_end":1146483,"line_start":1167,"line_end":1167,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146484,"byte_end":1146487,"line_start":1168,"line_end":1168,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":6896},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1147807,"byte_end":1147821,"line_start":1202,"line_end":1202,"column_start":8,"column_end":22},"name":"create_dir_all","qualname":"::fs::create_dir_all","value":"pub fn create_dir_all<P: AsRef<Path>>(P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Recursively create a directory and all of its parent components if they\n are missing.","sig":null,"attributes":[{"value":"/ Recursively create a directory and all of its parent components if they","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146598,"byte_end":1146673,"line_start":1173,"line_end":1173,"column_start":1,"column_end":76}},{"value":"/ are missing.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146674,"byte_end":1146690,"line_start":1174,"line_end":1174,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146691,"byte_end":1146694,"line_start":1175,"line_end":1175,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146695,"byte_end":1146727,"line_start":1176,"line_end":1176,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146728,"byte_end":1146731,"line_start":1177,"line_end":1177,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `mkdir` function on Unix","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146732,"byte_end":1146803,"line_start":1178,"line_end":1178,"column_start":1,"column_end":72}},{"value":"/ and the `CreateDirectory` function on Windows.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146804,"byte_end":1146854,"line_start":1179,"line_end":1179,"column_start":1,"column_end":51}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146855,"byte_end":1146911,"line_start":1180,"line_end":1180,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146912,"byte_end":1146915,"line_start":1181,"line_end":1181,"column_start":1,"column_end":4}},{"value":"/ [changes]: ../io/index.html#platform-specific-behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146916,"byte_end":1146974,"line_start":1182,"line_end":1182,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146975,"byte_end":1146978,"line_start":1183,"line_end":1183,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146979,"byte_end":1146991,"line_start":1184,"line_end":1184,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146992,"byte_end":1146995,"line_start":1185,"line_end":1185,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1146996,"byte_end":1147074,"line_start":1186,"line_end":1186,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1147075,"byte_end":1147107,"line_start":1187,"line_end":1187,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1147108,"byte_end":1147111,"line_start":1188,"line_end":1188,"column_start":1,"column_end":4}},{"value":"/ * If any directory in the path specified by `path`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1147112,"byte_end":1147166,"line_start":1189,"line_end":1189,"column_start":1,"column_end":55}},{"value":"/ does not already exist and it could not be created otherwise. The specific","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1147167,"byte_end":1147245,"line_start":1190,"line_end":1190,"column_start":1,"column_end":79}},{"value":"/ error conditions for when a directory is being created (after it is","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1147246,"byte_end":1147317,"line_start":1191,"line_end":1191,"column_start":1,"column_end":72}},{"value":"/ determined to not exist) are outlined by [`fs::create_dir`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1147318,"byte_end":1147382,"line_start":1192,"line_end":1192,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1147383,"byte_end":1147386,"line_start":1193,"line_end":1193,"column_start":1,"column_end":4}},{"value":"/ Notable exception is made for situations where any of the directories","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1147387,"byte_end":1147460,"line_start":1194,"line_end":1194,"column_start":1,"column_end":74}},{"value":"/ specified in the `path` could not be created as it was being created concurrently.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1147461,"byte_end":1147547,"line_start":1195,"line_end":1195,"column_start":1,"column_end":87}},{"value":"/ Such cases are considered to be successful. That is, calling `create_dir_all`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1147548,"byte_end":1147629,"line_start":1196,"line_end":1196,"column_start":1,"column_end":82}},{"value":"/ concurrently from multiple threads or processes is guaranteed not to fail","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1147630,"byte_end":1147707,"line_start":1197,"line_end":1197,"column_start":1,"column_end":78}},{"value":"/ due to a race condition with itself.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1147708,"byte_end":1147748,"line_start":1198,"line_end":1198,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1147749,"byte_end":1147752,"line_start":1199,"line_end":1199,"column_start":1,"column_end":4}},{"value":"/ [`fs::create_dir`]: fn.create_dir.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1147753,"byte_end":1147795,"line_start":1200,"line_end":1200,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1147796,"byte_end":1147799,"line_start":1201,"line_end":1201,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":6898},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1148518,"byte_end":1148528,"line_start":1224,"line_end":1224,"column_start":8,"column_end":18},"name":"remove_dir","qualname":"::fs::remove_dir","value":"pub fn remove_dir<P: AsRef<Path>>(P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes an existing, empty directory.","sig":null,"attributes":[{"value":"/ Removes an existing, empty directory.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1147930,"byte_end":1147971,"line_start":1206,"line_end":1206,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1147972,"byte_end":1147975,"line_start":1207,"line_end":1207,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1147976,"byte_end":1148008,"line_start":1208,"line_end":1208,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1148009,"byte_end":1148012,"line_start":1209,"line_end":1209,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `rmdir` function on Unix","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1148013,"byte_end":1148084,"line_start":1210,"line_end":1210,"column_start":1,"column_end":72}},{"value":"/ and the `RemoveDirectory` function on Windows.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1148085,"byte_end":1148135,"line_start":1211,"line_end":1211,"column_start":1,"column_end":51}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1148136,"byte_end":1148192,"line_start":1212,"line_end":1212,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1148193,"byte_end":1148196,"line_start":1213,"line_end":1213,"column_start":1,"column_end":4}},{"value":"/ [changes]: ../io/index.html#platform-specific-behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1148197,"byte_end":1148255,"line_start":1214,"line_end":1214,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1148256,"byte_end":1148259,"line_start":1215,"line_end":1215,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1148260,"byte_end":1148272,"line_start":1216,"line_end":1216,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1148273,"byte_end":1148276,"line_start":1217,"line_end":1217,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1148277,"byte_end":1148355,"line_start":1218,"line_end":1218,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1148356,"byte_end":1148388,"line_start":1219,"line_end":1219,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1148389,"byte_end":1148392,"line_start":1220,"line_end":1220,"column_start":1,"column_end":4}},{"value":"/ * The user lacks permissions to remove the directory at the provided `path`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1148393,"byte_end":1148473,"line_start":1221,"line_end":1221,"column_start":1,"column_end":81}},{"value":"/ * The directory isn't empty.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1148474,"byte_end":1148506,"line_start":1222,"line_end":1222,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1148507,"byte_end":1148510,"line_start":1223,"line_end":1223,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":6900},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1149363,"byte_end":1149377,"line_start":1250,"line_end":1250,"column_start":8,"column_end":22},"name":"remove_dir_all","qualname":"::fs::remove_dir_all","value":"pub fn remove_dir_all<P: AsRef<Path>>(P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes a directory at this path, after removing all its contents. Use\n carefully!","sig":null,"attributes":[{"value":"/ Removes a directory at this path, after removing all its contents. Use","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1148610,"byte_end":1148684,"line_start":1228,"line_end":1228,"column_start":1,"column_end":75}},{"value":"/ carefully!","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1148685,"byte_end":1148699,"line_start":1229,"line_end":1229,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1148700,"byte_end":1148703,"line_start":1230,"line_end":1230,"column_start":1,"column_end":4}},{"value":"/ This function does **not** follow symbolic links and it will simply remove the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1148704,"byte_end":1148786,"line_start":1231,"line_end":1231,"column_start":1,"column_end":83}},{"value":"/ symbolic link itself.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1148787,"byte_end":1148812,"line_start":1232,"line_end":1232,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1148813,"byte_end":1148816,"line_start":1233,"line_end":1233,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1148817,"byte_end":1148849,"line_start":1234,"line_end":1234,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1148850,"byte_end":1148853,"line_start":1235,"line_end":1235,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to `opendir`, `lstat`, `rm` and `rmdir` functions on Unix","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1148854,"byte_end":1148951,"line_start":1236,"line_end":1236,"column_start":1,"column_end":98}},{"value":"/ and the `FindFirstFile`, `GetFileAttributesEx`, `DeleteFile`, and `RemoveDirectory` functions","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1148952,"byte_end":1149049,"line_start":1237,"line_end":1237,"column_start":1,"column_end":98}},{"value":"/ on Windows.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1149050,"byte_end":1149065,"line_start":1238,"line_end":1238,"column_start":1,"column_end":16}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1149066,"byte_end":1149122,"line_start":1239,"line_end":1239,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1149123,"byte_end":1149126,"line_start":1240,"line_end":1240,"column_start":1,"column_end":4}},{"value":"/ [changes]: ../io/index.html#platform-specific-behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1149127,"byte_end":1149185,"line_start":1241,"line_end":1241,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1149186,"byte_end":1149189,"line_start":1242,"line_end":1242,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1149190,"byte_end":1149202,"line_start":1243,"line_end":1243,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1149203,"byte_end":1149206,"line_start":1244,"line_end":1244,"column_start":1,"column_end":4}},{"value":"/ See [`fs::remove_file`] and [`fs::remove_dir`].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1149207,"byte_end":1149258,"line_start":1245,"line_end":1245,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1149259,"byte_end":1149262,"line_start":1246,"line_end":1246,"column_start":1,"column_end":4}},{"value":"/ [`fs::remove_file`]:  fn.remove_file.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1149263,"byte_end":1149308,"line_start":1247,"line_end":1247,"column_start":1,"column_end":46}},{"value":"/ [`fs::remove_dir`]: fn.remove_dir.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1149309,"byte_end":1149351,"line_start":1248,"line_end":1248,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1149352,"byte_end":1149355,"line_start":1249,"line_end":1249,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":6902},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1150552,"byte_end":1150560,"line_start":1283,"line_end":1283,"column_start":8,"column_end":16},"name":"read_dir","qualname":"::fs::read_dir","value":"pub fn read_dir<P: AsRef<Path>>(P) -> io::Result<ReadDir>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the entries within a directory.","sig":null,"attributes":[{"value":"/ Returns an iterator over the entries within a directory.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1149468,"byte_end":1149528,"line_start":1254,"line_end":1254,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1149529,"byte_end":1149532,"line_start":1255,"line_end":1255,"column_start":1,"column_end":4}},{"value":"/ The iterator will yield instances of [`io::Result`]`<`[`DirEntry`]`>`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1149533,"byte_end":1149607,"line_start":1256,"line_end":1256,"column_start":1,"column_end":75}},{"value":"/ New errors may be encountered after an iterator is initially constructed.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1149608,"byte_end":1149685,"line_start":1257,"line_end":1257,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1149686,"byte_end":1149689,"line_start":1258,"line_end":1258,"column_start":1,"column_end":4}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1149690,"byte_end":1149732,"line_start":1259,"line_end":1259,"column_start":1,"column_end":43}},{"value":"/ [`DirEntry`]: struct.DirEntry.html","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1149733,"byte_end":1149771,"line_start":1260,"line_end":1260,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1149772,"byte_end":1149775,"line_start":1261,"line_end":1261,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1149776,"byte_end":1149808,"line_start":1262,"line_end":1262,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1149809,"byte_end":1149812,"line_start":1263,"line_end":1263,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `opendir` function on Unix","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1149813,"byte_end":1149886,"line_start":1264,"line_end":1264,"column_start":1,"column_end":74}},{"value":"/ and the `FindFirstFile` function on Windows. Advancing the iterator","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1149887,"byte_end":1149958,"line_start":1265,"line_end":1265,"column_start":1,"column_end":72}},{"value":"/ currently corresponds to `readdir` on Unix and `FindNextFile` on Windows.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1149959,"byte_end":1150036,"line_start":1266,"line_end":1266,"column_start":1,"column_end":78}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1150037,"byte_end":1150093,"line_start":1267,"line_end":1267,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1150094,"byte_end":1150097,"line_start":1268,"line_end":1268,"column_start":1,"column_end":4}},{"value":"/ [changes]: ../io/index.html#platform-specific-behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1150098,"byte_end":1150156,"line_start":1269,"line_end":1269,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1150157,"byte_end":1150160,"line_start":1270,"line_end":1270,"column_start":1,"column_end":4}},{"value":"/ The order in which this iterator returns entries is platform and filesystem","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1150161,"byte_end":1150240,"line_start":1271,"line_end":1271,"column_start":1,"column_end":80}},{"value":"/ dependent.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1150241,"byte_end":1150255,"line_start":1272,"line_end":1272,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1150256,"byte_end":1150259,"line_start":1273,"line_end":1273,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1150260,"byte_end":1150272,"line_start":1274,"line_end":1274,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1150273,"byte_end":1150276,"line_start":1275,"line_end":1275,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1150277,"byte_end":1150355,"line_start":1276,"line_end":1276,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1150356,"byte_end":1150388,"line_start":1277,"line_end":1277,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1150389,"byte_end":1150392,"line_start":1278,"line_end":1278,"column_start":1,"column_end":4}},{"value":"/ * The provided `path` doesn't exist.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1150393,"byte_end":1150433,"line_start":1279,"line_end":1279,"column_start":1,"column_end":41}},{"value":"/ * The process lacks permissions to view the contents.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1150434,"byte_end":1150491,"line_start":1280,"line_end":1280,"column_start":1,"column_end":58}},{"value":"/ * The `path` points at a non-directory file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1150492,"byte_end":1150540,"line_start":1281,"line_end":1281,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1150541,"byte_end":1150544,"line_start":1282,"line_end":1282,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":6904},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151255,"byte_end":1151270,"line_start":1305,"line_end":1305,"column_start":8,"column_end":23},"name":"set_permissions","qualname":"::fs::set_permissions","value":"pub fn set_permissions<P: AsRef<Path>>(P, Permissions) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions found on a file or a directory.","sig":null,"attributes":[{"value":"/ Changes the permissions found on a file or a directory.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1150662,"byte_end":1150721,"line_start":1287,"line_end":1287,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1150722,"byte_end":1150725,"line_start":1288,"line_end":1288,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1150726,"byte_end":1150758,"line_start":1289,"line_end":1289,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1150759,"byte_end":1150762,"line_start":1290,"line_end":1290,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `chmod` function on Unix","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1150763,"byte_end":1150834,"line_start":1291,"line_end":1291,"column_start":1,"column_end":72}},{"value":"/ and the `SetFileAttributes` function on Windows.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1150835,"byte_end":1150887,"line_start":1292,"line_end":1292,"column_start":1,"column_end":53}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1150888,"byte_end":1150944,"line_start":1293,"line_end":1293,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1150945,"byte_end":1150948,"line_start":1294,"line_end":1294,"column_start":1,"column_end":4}},{"value":"/ [changes]: ../io/index.html#platform-specific-behavior","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1150949,"byte_end":1151007,"line_start":1295,"line_end":1295,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151008,"byte_end":1151011,"line_start":1296,"line_end":1296,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151012,"byte_end":1151024,"line_start":1297,"line_end":1297,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151025,"byte_end":1151028,"line_start":1298,"line_end":1298,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151029,"byte_end":1151107,"line_start":1299,"line_end":1299,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151108,"byte_end":1151140,"line_start":1300,"line_end":1300,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151141,"byte_end":1151144,"line_start":1301,"line_end":1301,"column_start":1,"column_end":4}},{"value":"/ * `path` does not exist.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151145,"byte_end":1151173,"line_start":1302,"line_end":1302,"column_start":1,"column_end":29}},{"value":"/ * The user lacks the permission to change attributes of the file.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151174,"byte_end":1151243,"line_start":1303,"line_end":1303,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151244,"byte_end":1151247,"line_start":1304,"line_end":1304,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":6907},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151675,"byte_end":1151678,"line_start":1320,"line_end":1320,"column_start":12,"column_end":15},"name":"new","qualname":"<DirBuilder>::new","value":"pub fn new() -> DirBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new set of options with default mode/security settings for all\n platforms and also non-recursive.","sig":null,"attributes":[{"value":"/ Creates a new set of options with default mode/security settings for all","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151404,"byte_end":1151480,"line_start":1310,"line_end":1310,"column_start":5,"column_end":81}},{"value":"/ platforms and also non-recursive.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151485,"byte_end":1151522,"line_start":1311,"line_end":1311,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151527,"byte_end":1151530,"line_start":1312,"line_end":1312,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151535,"byte_end":1151549,"line_start":1313,"line_end":1313,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151554,"byte_end":1151557,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151562,"byte_end":1151569,"line_start":1315,"line_end":1315,"column_start":5,"column_end":12}},{"value":"/ use std::fs::DirBuilder;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151574,"byte_end":1151602,"line_start":1316,"line_end":1316,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151607,"byte_end":1151610,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ let builder = DirBuilder::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151615,"byte_end":1151651,"line_start":1318,"line_end":1318,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151656,"byte_end":1151663,"line_start":1319,"line_end":1319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6908},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152218,"byte_end":1152227,"line_start":1338,"line_end":1338,"column_start":12,"column_end":21},"name":"recursive","qualname":"<DirBuilder>::recursive","value":"pub fn recursive(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates that directories should be created recursively, creating all\n parent directories. Parents that do not exist are created with the same\n security and permissions settings.","sig":null,"attributes":[{"value":"/ Indicates that directories should be created recursively, creating all","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151782,"byte_end":1151856,"line_start":1324,"line_end":1324,"column_start":5,"column_end":79}},{"value":"/ parent directories. Parents that do not exist are created with the same","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151861,"byte_end":1151936,"line_start":1325,"line_end":1325,"column_start":5,"column_end":80}},{"value":"/ security and permissions settings.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151941,"byte_end":1151979,"line_start":1326,"line_end":1326,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151984,"byte_end":1151987,"line_start":1327,"line_end":1327,"column_start":5,"column_end":8}},{"value":"/ This option defaults to `false`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151992,"byte_end":1152028,"line_start":1328,"line_end":1328,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152033,"byte_end":1152036,"line_start":1329,"line_end":1329,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152041,"byte_end":1152055,"line_start":1330,"line_end":1330,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152060,"byte_end":1152063,"line_start":1331,"line_end":1331,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152068,"byte_end":1152075,"line_start":1332,"line_end":1332,"column_start":5,"column_end":12}},{"value":"/ use std::fs::DirBuilder;","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152080,"byte_end":1152108,"line_start":1333,"line_end":1333,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152113,"byte_end":1152116,"line_start":1334,"line_end":1334,"column_start":5,"column_end":8}},{"value":"/ let mut builder = DirBuilder::new();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152121,"byte_end":1152161,"line_start":1335,"line_end":1335,"column_start":5,"column_end":45}},{"value":"/ builder.recursive(true);","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152166,"byte_end":1152194,"line_start":1336,"line_end":1336,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152199,"byte_end":1152206,"line_start":1337,"line_end":1337,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6909},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152854,"byte_end":1152860,"line_start":1361,"line_end":1361,"column_start":12,"column_end":18},"name":"create","qualname":"<DirBuilder>::create","value":"pub fn create<P: AsRef<Path>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates the specified directory with the options configured in this\n builder.","sig":null,"attributes":[{"value":"/ Creates the specified directory with the options configured in this","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152331,"byte_end":1152402,"line_start":1343,"line_end":1343,"column_start":5,"column_end":76}},{"value":"/ builder.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152407,"byte_end":1152419,"line_start":1344,"line_end":1344,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152424,"byte_end":1152427,"line_start":1345,"line_end":1345,"column_start":5,"column_end":8}},{"value":"/ It is considered an error if the directory already exists unless","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152432,"byte_end":1152500,"line_start":1346,"line_end":1346,"column_start":5,"column_end":73}},{"value":"/ recursive mode is enabled.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152505,"byte_end":1152535,"line_start":1347,"line_end":1347,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152540,"byte_end":1152543,"line_start":1348,"line_end":1348,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152548,"byte_end":1152562,"line_start":1349,"line_end":1349,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152567,"byte_end":1152570,"line_start":1350,"line_end":1350,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152575,"byte_end":1152588,"line_start":1351,"line_end":1351,"column_start":5,"column_end":18}},{"value":"/ use std::fs::{self, DirBuilder};","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152593,"byte_end":1152629,"line_start":1352,"line_end":1352,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152634,"byte_end":1152637,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ let path = \"/tmp/foo/bar/baz\";","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152642,"byte_end":1152676,"line_start":1354,"line_end":1354,"column_start":5,"column_end":39}},{"value":"/ DirBuilder::new()","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152681,"byte_end":1152702,"line_start":1355,"line_end":1355,"column_start":5,"column_end":26}},{"value":"/     .recursive(true)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152707,"byte_end":1152731,"line_start":1356,"line_end":1356,"column_start":5,"column_end":29}},{"value":"/     .create(path).unwrap();","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152736,"byte_end":1152767,"line_start":1357,"line_end":1357,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152772,"byte_end":1152775,"line_start":1358,"line_end":1358,"column_start":5,"column_end":8}},{"value":"/ assert!(fs::metadata(path).unwrap().is_dir());","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152780,"byte_end":1152830,"line_start":1359,"line_end":1359,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1152835,"byte_end":1152842,"line_start":1360,"line_end":1360,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":6915},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/rt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rt","qualname":"::rt","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/rt.rs","parent":null,"children":[{"krate":0,"index":6916},{"krate":0,"index":6917},{"krate":0,"index":6918},{"krate":0,"index":6919},{"krate":0,"index":6920},{"krate":0,"index":6921},{"krate":0,"index":6922},{"krate":0,"index":6923},{"krate":0,"index":6924},{"krate":0,"index":6925},{"krate":0,"index":6926},{"krate":0,"index":6927},{"krate":0,"index":6928},{"krate":0,"index":6929},{"krate":0,"index":8502},{"krate":0,"index":8501}],"decl_id":null,"docs":" Runtime services\n","sig":null,"attributes":[{"value":"/ Runtime services","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/rt.rs","byte_start":1154821,"byte_end":1154841,"line_start":18,"line_end":18,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":6928},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/rt.rs","byte_start":1155240,"byte_end":1155259,"line_start":33,"line_end":33,"column_start":19,"column_end":38},"name":"t_global_exit_ecall","qualname":"::rt::t_global_exit_ecall","value":"pub extern \"C\" fn t_global_exit_ecall()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_mangle","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/rt.rs","byte_start":1155209,"byte_end":1155221,"line_start":32,"line_end":32,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":6929},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/rt.rs","byte_start":1155298,"byte_end":1155317,"line_start":37,"line_end":37,"column_start":19,"column_end":38},"name":"t_global_init_ecall","qualname":"::rt::t_global_init_ecall","value":"pub extern \"C\" fn t_global_init_ecall(u64, *const u8, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_mangle","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/rt.rs","byte_start":1155267,"byte_end":1155279,"line_start":36,"line_end":36,"column_start":1,"column_end":13}}]},{"kind":"Static","id":{"krate":0,"index":8502},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/rt.rs","byte_start":1155661,"byte_end":1155673,"line_start":49,"line_end":49,"column_start":5,"column_end":17},"name":"GLOBAL_DTORS","qualname":"::rt::GLOBAL_DTORS","value":"fn()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(all(target_os = \"linux\", not(any())))","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_types/src/macros.rs","byte_start":7772345,"byte_end":7772350,"line_start":78,"line_end":78,"column_start":11,"column_end":16}},{"value":"link_section = \".fini_array\"","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_trts/src/macros.rs","byte_start":7948938,"byte_end":7948969,"line_start":58,"line_end":58,"column_start":17,"column_end":48}},{"value":"no_mangle","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_trts/src/macros.rs","byte_start":7948986,"byte_end":7948998,"line_start":59,"line_end":59,"column_start":17,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":8501},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/rt.rs","byte_start":1155675,"byte_end":1155686,"line_start":49,"line_end":49,"column_start":19,"column_end":30},"name":"global_exit","qualname":"::rt::global_exit","value":"pub fn global_exit()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_mangle","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_trts/src/macros.rs","byte_start":7949390,"byte_end":7949402,"line_start":71,"line_end":71,"column_start":9,"column_end":21}}]},{"kind":"Mod","id":{"krate":0,"index":6931},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"backtrace","qualname":"::backtrace","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","parent":null,"children":[{"krate":0,"index":6932},{"krate":0,"index":6933},{"krate":0,"index":6934},{"krate":0,"index":6935},{"krate":0,"index":6936},{"krate":0,"index":6937},{"krate":0,"index":6938},{"krate":0,"index":6939},{"krate":0,"index":6940},{"krate":0,"index":6941},{"krate":0,"index":6942},{"krate":0,"index":6943},{"krate":0,"index":6944},{"krate":0,"index":6945},{"krate":0,"index":6946},{"krate":0,"index":6947},{"krate":0,"index":6948},{"krate":0,"index":6949},{"krate":0,"index":6950},{"krate":0,"index":6951},{"krate":0,"index":6952},{"krate":0,"index":6953},{"krate":0,"index":8503},{"krate":0,"index":8516},{"krate":0,"index":8513},{"krate":0,"index":8514},{"krate":0,"index":8510},{"krate":0,"index":8511},{"krate":0,"index":6955},{"krate":0,"index":6963},{"krate":0,"index":6967},{"krate":0,"index":6970},{"krate":0,"index":6973},{"krate":0,"index":6977},{"krate":0,"index":6981},{"krate":0,"index":6988},{"krate":0,"index":6990},{"krate":0,"index":6993},{"krate":0,"index":6995},{"krate":0,"index":7002},{"krate":0,"index":7007},{"krate":0,"index":7012},{"krate":0,"index":7014}],"decl_id":null,"docs":" Support for capturing a stack backtrace of an OS thread","sig":null,"attributes":[{"value":"cfg(feature = \"backtrace\")","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":6408,"byte_end":6437,"line_start":242,"line_end":242,"column_start":1,"column_end":30}},{"value":"/ Support for capturing a stack backtrace of an OS thread","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1156511,"byte_end":1156570,"line_start":18,"line_end":18,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1156571,"byte_end":1156574,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This module contains the support necessary to capture a stack backtrace of a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1156575,"byte_end":1156655,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ running OS thread from the OS thread itself. The `Backtrace` type supports","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1156656,"byte_end":1156734,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ capturing a stack trace via the `Backtrace::capture` and","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1156735,"byte_end":1156795,"line_start":22,"line_end":22,"column_start":1,"column_end":61}},{"value":"/ `Backtrace::force_capture` functions.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1156796,"byte_end":1156837,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1156838,"byte_end":1156841,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ A backtrace is typically quite handy to attach to errors (e.g. types","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1156842,"byte_end":1156914,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ implementing `std::error::Error`) to get a causal chain of where an error","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1156915,"byte_end":1156992,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ was generated.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1156993,"byte_end":1157011,"line_start":27,"line_end":27,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1157012,"byte_end":1157015,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ > **Note**: this module is unstable and is designed in [RFC 2504], and you","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1157016,"byte_end":1157094,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ > can learn more about its status in the [tracking issue].","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1157095,"byte_end":1157157,"line_start":30,"line_end":30,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1157158,"byte_end":1157161,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ [RFC 2504]: https://github.com/rust-lang/rfcs/blob/master/text/2504-fix-error.md","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1157162,"byte_end":1157246,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ [tracking issue]: https://github.com/rust-lang/rust/issues/53487","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1157247,"byte_end":1157315,"line_start":33,"line_end":33,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1157316,"byte_end":1157319,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ## Accuracy","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1157320,"byte_end":1157335,"line_start":35,"line_end":35,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1157336,"byte_end":1157339,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Backtraces are attempted to be as accurate as possible, but no guarantees","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1157340,"byte_end":1157417,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ are provided about the exact accuracy of a backtrace. Instruction pointers,","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1157418,"byte_end":1157497,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/ symbol names, filenames, line numbers, etc, may all be incorrect when","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1157498,"byte_end":1157571,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ reported. Accuracy is attempted on a best-effort basis, however, and bugs","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1157572,"byte_end":1157649,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ are always welcome to indicate areas of improvement!","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1157650,"byte_end":1157706,"line_start":41,"line_end":41,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1157707,"byte_end":1157710,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ For most platforms a backtrace with a filename/line number requires that","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1157711,"byte_end":1157787,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ programs be compiled with debug information. Without debug information","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1157788,"byte_end":1157862,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ filenames/line numbers will not be reported.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1157863,"byte_end":1157911,"line_start":45,"line_end":45,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1157912,"byte_end":1157915,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Platform support","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1157916,"byte_end":1157939,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1157940,"byte_end":1157943,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Not all platforms that libstd compiles for support capturing backtraces.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1157944,"byte_end":1158020,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ Some platforms simply do nothing when capturing a backtrace. To check","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1158021,"byte_end":1158094,"line_start":50,"line_end":50,"column_start":1,"column_end":74}},{"value":"/ whether the platform supports capturing backtraces you can consult the","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1158095,"byte_end":1158169,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ `BacktraceStatus` enum as a result of `Backtrace::status`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1158170,"byte_end":1158232,"line_start":52,"line_end":52,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1158233,"byte_end":1158236,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Like above with accuracy platform support is done on a best effort basis.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1158237,"byte_end":1158314,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/ Sometimes libraries may not be available at runtime or something may go","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1158315,"byte_end":1158390,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/ wrong which would cause a backtrace to not be captured. Please feel free to","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1158391,"byte_end":1158470,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ report issues with platforms where a backtrace cannot be captured though!","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1158471,"byte_end":1158548,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1158549,"byte_end":1158552,"line_start":58,"line_end":58,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":6953},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1159384,"byte_end":1159393,"line_start":88,"line_end":88,"column_start":12,"column_end":21},"name":"Backtrace","qualname":"::backtrace::Backtrace","value":"Backtrace {  }","parent":null,"children":[{"krate":0,"index":6954}],"decl_id":null,"docs":" A captured OS thread stack backtrace.","sig":null,"attributes":[{"value":"/ A captured OS thread stack backtrace.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1159085,"byte_end":1159126,"line_start":82,"line_end":82,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1159127,"byte_end":1159130,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ This type represents a stack backtrace for an OS thread captured at a","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1159131,"byte_end":1159204,"line_start":84,"line_end":84,"column_start":1,"column_end":74}},{"value":"/ previous point in time. In some instances the `Backtrace` type may","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1159205,"byte_end":1159275,"line_start":85,"line_end":85,"column_start":1,"column_end":71}},{"value":"/ internally be empty due to configuration. For more information see","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1159276,"byte_end":1159346,"line_start":86,"line_end":86,"column_start":1,"column_end":71}},{"value":"/ `Backtrace::capture`.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1159347,"byte_end":1159372,"line_start":87,"line_end":87,"column_start":1,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8504},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1159670,"byte_end":1159681,"line_start":98,"line_end":98,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::backtrace::BacktraceStatus::Unsupported","value":"BacktraceStatus::Unsupported","parent":{"krate":0,"index":8503},"children":[],"decl_id":null,"docs":" Capturing a backtrace is not supported.\n","sig":null,"attributes":[{"value":"/ Capturing a backtrace is not supported.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1159622,"byte_end":1159665,"line_start":97,"line_end":97,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8506},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1159736,"byte_end":1159744,"line_start":100,"line_end":100,"column_start":5,"column_end":13},"name":"Disabled","qualname":"::backtrace::BacktraceStatus::Disabled","value":"BacktraceStatus::Disabled","parent":{"krate":0,"index":8503},"children":[],"decl_id":null,"docs":" Capturing a backtrace has been disabled.\n","sig":null,"attributes":[{"value":"/ Capturing a backtrace has been disabled.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1159687,"byte_end":1159731,"line_start":99,"line_end":99,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8508},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1159867,"byte_end":1159875,"line_start":103,"line_end":103,"column_start":5,"column_end":13},"name":"Captured","qualname":"::backtrace::BacktraceStatus::Captured","value":"BacktraceStatus::Captured","parent":{"krate":0,"index":8503},"children":[],"decl_id":null,"docs":" A backtrace has been captured and the `Backtrace` should print\n reasonable information when rendered.\n","sig":null,"attributes":[{"value":"/ A backtrace has been captured and the `Backtrace` should print","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1159750,"byte_end":1159816,"line_start":101,"line_end":101,"column_start":5,"column_end":71}},{"value":"/ reasonable information when rendered.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1159821,"byte_end":1159862,"line_start":102,"line_end":102,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":8503},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1159600,"byte_end":1159615,"line_start":96,"line_end":96,"column_start":10,"column_end":25},"name":"BacktraceStatus","qualname":"::backtrace::BacktraceStatus","value":"pub enum BacktraceStatus {\n\n    /// Capturing a backtrace is not supported.\n    Unsupported,\n\n    /// Capturing a backtrace has been disabled.\n    Disabled,\n\n    /// A backtrace has been captured and the `Backtrace` should print\n    /// reasonable information when rendered.\n    Captured,\n}","parent":null,"children":[{"krate":0,"index":8504},{"krate":0,"index":8506},{"krate":0,"index":8508}],"decl_id":null,"docs":" The current status of a backtrace, indicating whether it was captured or\n whether it is empty for some other reason.\n","sig":null,"attributes":[{"value":"/ The current status of a backtrace, indicating whether it was captured or","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1159417,"byte_end":1159493,"line_start":92,"line_end":92,"column_start":1,"column_end":77}},{"value":"/ whether it is empty for some other reason.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1159494,"byte_end":1159540,"line_start":93,"line_end":93,"column_start":1,"column_end":47}},{"value":"non_exhaustive","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1159541,"byte_end":1159558,"line_start":94,"line_end":94,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":6997},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1162793,"byte_end":1162800,"line_start":224,"line_end":224,"column_start":12,"column_end":19},"name":"capture","qualname":"<Backtrace>::capture","value":"pub fn capture() -> Backtrace","parent":null,"children":[],"decl_id":null,"docs":" Capture a stack backtrace of the current thread.","sig":null,"attributes":[{"value":"/ Capture a stack backtrace of the current thread.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1162421,"byte_end":1162473,"line_start":217,"line_end":217,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1162478,"byte_end":1162481,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ This function will capture a stack backtrace of the current OS thread of","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1162486,"byte_end":1162562,"line_start":219,"line_end":219,"column_start":5,"column_end":81}},{"value":"/ execution, returning a `Backtrace` type which can be later used to print","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1162567,"byte_end":1162643,"line_start":220,"line_end":220,"column_start":5,"column_end":81}},{"value":"/ the entire stack trace or render it to a string.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1162648,"byte_end":1162700,"line_start":221,"line_end":221,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1162705,"byte_end":1162708,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"inline(never)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1162713,"byte_end":1162729,"line_start":223,"line_end":223,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":6998},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1163118,"byte_end":1163131,"line_start":234,"line_end":234,"column_start":12,"column_end":25},"name":"force_capture","qualname":"<Backtrace>::force_capture","value":"pub fn force_capture() -> Backtrace","parent":null,"children":[],"decl_id":null,"docs":" Forcibly captures a full backtrace.","sig":null,"attributes":[{"value":"/ Forcibly captures a full backtrace.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1162986,"byte_end":1163025,"line_start":231,"line_end":231,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1163030,"byte_end":1163033,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"inline(never)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1163038,"byte_end":1163054,"line_start":233,"line_end":233,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":7001},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1164710,"byte_end":1164716,"line_start":279,"line_end":279,"column_start":12,"column_end":18},"name":"status","qualname":"<Backtrace>::status","value":"pub fn status(&Self) -> BacktraceStatus","parent":null,"children":[],"decl_id":null,"docs":" Returns the status of this backtrace, indicating whether this backtrace\n request was unsupported, disabled, or a stack trace was actually\n captured.\n","sig":null,"attributes":[{"value":"/ Returns the status of this backtrace, indicating whether this backtrace","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1164532,"byte_end":1164607,"line_start":276,"line_end":276,"column_start":5,"column_end":80}},{"value":"/ request was unsupported, disabled, or a stack trace was actually","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1164612,"byte_end":1164680,"line_start":277,"line_end":277,"column_start":5,"column_end":73}},{"value":"/ captured.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1164685,"byte_end":1164698,"line_start":278,"line_end":278,"column_start":5,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":7014},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1168855,"byte_end":1168871,"line_start":391,"line_end":391,"column_start":8,"column_end":24},"name":"enable_backtrace","qualname":"::backtrace::enable_backtrace","value":"pub fn enable_backtrace<P: AsRef<Path>>(P, PrintFormat) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Enable backtrace for dumping call stack on crash.","sig":null,"attributes":[{"value":"/ Enable backtrace for dumping call stack on crash.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1168488,"byte_end":1168541,"line_start":383,"line_end":383,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1168542,"byte_end":1168545,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ Enabling backtrace here makes the panic information along with call stack","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1168546,"byte_end":1168623,"line_start":385,"line_end":385,"column_start":1,"column_end":78}},{"value":"/ information. Very similar to normal `RUST_BACKTRACE=1` flag in Rust.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1168624,"byte_end":1168696,"line_start":386,"line_end":386,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1168697,"byte_end":1168700,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ * `path` - The path of enclave's file image. This is essential for dumping","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1168701,"byte_end":1168779,"line_start":388,"line_end":388,"column_start":1,"column_end":79}},{"value":"/ symbol information on crash point.","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1168780,"byte_end":1168818,"line_start":389,"line_end":389,"column_start":1,"column_end":39}},{"value":"/ * Always return `Ok(())`","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1168819,"byte_end":1168847,"line_start":390,"line_end":390,"column_start":1,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":7020},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/debug.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"debug","qualname":"::debug","value":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/debug.rs","parent":null,"children":[{"krate":0,"index":7021},{"krate":0,"index":7022}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(debug_assertions)","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":6548,"byte_end":6572,"line_start":251,"line_end":251,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":7022},"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/debug.rs","byte_start":1169916,"byte_end":1169929,"line_start":21,"line_end":21,"column_start":19,"column_end":32},"name":"__assert_fail","qualname":"::debug::__assert_fail","value":"pub extern \"C\" fn __assert_fail(*const u8, *const u8, u32, *const u8) -> !","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_mangle","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/debug.rs","byte_start":1169885,"byte_end":1169897,"line_start":20,"line_end":20,"column_start":1,"column_end":13}}]}],"impls":[{"id":2,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":78761,"byte_end":78769,"line_start":40,"line_end":40,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":81318,"byte_end":81329,"line_start":122,"line_end":122,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":81458,"byte_end":81469,"line_start":128,"line_end":128,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":81491,"byte_end":81499,"line_start":130,"line_end":130,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":83012,"byte_end":83024,"line_start":181,"line_end":181,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":85342,"byte_end":85345,"line_start":240,"line_end":240,"column_start":29,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":85380,"byte_end":85383,"line_start":242,"line_end":242,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":85517,"byte_end":85520,"line_start":248,"line_end":248,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":64892,"byte_end":64900,"line_start":586,"line_end":586,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":66711,"byte_end":66720,"line_start":648,"line_end":648,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":69659,"byte_end":69668,"line_start":721,"line_end":721,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123012,"byte_end":123019,"line_start":205,"line_end":205,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":124147,"byte_end":124154,"line_start":241,"line_end":241,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134595,"byte_end":134602,"line_start":582,"line_end":582,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":483},{"krate":0,"index":485},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":146284,"byte_end":146291,"line_start":968,"line_end":968,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":149354,"byte_end":149361,"line_start":1032,"line_end":1032,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":149729,"byte_end":149736,"line_start":1048,"line_end":1048,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":149878,"byte_end":149885,"line_start":1057,"line_end":1057,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":150129,"byte_end":150136,"line_start":1068,"line_end":1068,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":150454,"byte_end":150461,"line_start":1080,"line_end":1080,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":151284,"byte_end":151288,"line_start":1112,"line_end":1112,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":151488,"byte_end":151492,"line_start":1120,"line_end":1120,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":151979,"byte_end":151986,"line_start":1137,"line_end":1137,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":152562,"byte_end":152570,"line_start":1156,"line_end":1156,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":153189,"byte_end":153193,"line_start":1177,"line_end":1177,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":153388,"byte_end":153392,"line_start":1185,"line_end":1185,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":153965,"byte_end":153971,"line_start":1204,"line_end":1204,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":154168,"byte_end":154174,"line_start":1212,"line_end":1212,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":154649,"byte_end":154654,"line_start":1229,"line_end":1229,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":158178,"byte_end":158196,"line_start":1336,"line_end":1336,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":649},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":159332,"byte_end":159347,"line_start":1373,"line_end":1373,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":661},{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":160358,"byte_end":160369,"line_start":1410,"line_end":1410,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":163695,"byte_end":163714,"line_start":1517,"line_end":1517,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":166817,"byte_end":166834,"line_start":1613,"line_end":1613,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":167696,"byte_end":167714,"line_start":1640,"line_end":1640,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":167950,"byte_end":167961,"line_start":1647,"line_end":1647,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":168354,"byte_end":168373,"line_start":1657,"line_end":1657,"column_start":39,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":168690,"byte_end":168707,"line_start":1667,"line_end":1667,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":168931,"byte_end":168946,"line_start":1674,"line_end":1674,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":169686,"byte_end":169691,"line_start":1697,"line_end":1697,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":170310,"byte_end":170323,"line_start":1716,"line_end":1716,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":170853,"byte_end":170864,"line_start":1732,"line_end":1732,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":171632,"byte_end":171639,"line_start":1761,"line_end":1761,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":172415,"byte_end":172419,"line_start":1789,"line_end":1789,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":172746,"byte_end":172750,"line_start":1802,"line_end":1802,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":172917,"byte_end":172921,"line_start":1810,"line_end":1810,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":173012,"byte_end":173019,"line_start":1813,"line_end":1813,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":173354,"byte_end":173361,"line_start":1826,"line_end":1826,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":173527,"byte_end":173534,"line_start":1833,"line_end":1833,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":173628,"byte_end":173635,"line_start":1836,"line_end":1836,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":173889,"byte_end":173897,"line_start":1847,"line_end":1847,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":174204,"byte_end":174212,"line_start":1860,"line_end":1860,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":174374,"byte_end":174382,"line_start":1867,"line_end":1867,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":174486,"byte_end":174494,"line_start":1870,"line_end":1870,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":174704,"byte_end":174708,"line_start":1877,"line_end":1877,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":175035,"byte_end":175039,"line_start":1890,"line_end":1890,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":175206,"byte_end":175210,"line_start":1897,"line_end":1897,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":175301,"byte_end":175307,"line_start":1900,"line_end":1900,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":175634,"byte_end":175640,"line_start":1913,"line_end":1913,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":175807,"byte_end":175813,"line_start":1920,"line_end":1920,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":175914,"byte_end":175923,"line_start":1923,"line_end":1923,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":176268,"byte_end":176277,"line_start":1936,"line_end":1936,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":176444,"byte_end":176453,"line_start":1943,"line_end":1943,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":176547,"byte_end":176556,"line_start":1946,"line_end":1946,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":176833,"byte_end":176841,"line_start":1957,"line_end":1957,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":177173,"byte_end":177181,"line_start":1970,"line_end":1970,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":177360,"byte_end":177368,"line_start":1977,"line_end":1977,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":177484,"byte_end":177492,"line_start":1980,"line_end":1980,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":177737,"byte_end":177747,"line_start":1987,"line_end":1987,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":178079,"byte_end":178089,"line_start":2000,"line_end":2000,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":178268,"byte_end":178278,"line_start":2007,"line_end":2007,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":178394,"byte_end":178404,"line_start":2010,"line_end":2010,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":178636,"byte_end":178641,"line_start":2017,"line_end":2017,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":178952,"byte_end":178957,"line_start":2030,"line_end":2030,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":179123,"byte_end":179128,"line_start":2037,"line_end":2037,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":179222,"byte_end":179227,"line_start":2040,"line_end":2040,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":179498,"byte_end":179509,"line_start":2051,"line_end":2051,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":179877,"byte_end":179888,"line_start":2068,"line_end":2068,"column_start":33,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":180036,"byte_end":180047,"line_start":2071,"line_end":2071,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":180226,"byte_end":180231,"line_start":2080,"line_end":2080,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":184936,"byte_end":184941,"line_start":2238,"line_end":2238,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185693,"byte_end":185706,"line_start":2264,"line_end":2264,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":192605,"byte_end":192616,"line_start":2494,"line_end":2494,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":194945,"byte_end":194952,"line_start":2578,"line_end":2578,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":195426,"byte_end":195433,"line_start":2593,"line_end":2593,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1002},{"krate":0,"index":1003}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":196377,"byte_end":196384,"line_start":2623,"line_end":2623,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1009},{"krate":0,"index":1011},{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197483,"byte_end":197494,"line_start":2668,"line_end":2668,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":199035,"byte_end":199046,"line_start":2707,"line_end":2707,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1017},{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":199571,"byte_end":199584,"line_start":2725,"line_end":2725,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":200113,"byte_end":200126,"line_start":2739,"line_end":2739,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":200593,"byte_end":200606,"line_start":2751,"line_end":2751,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1024},{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":200851,"byte_end":200862,"line_start":2764,"line_end":2764,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":201062,"byte_end":201073,"line_start":2773,"line_end":2773,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206993,"byte_end":207000,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208159,"byte_end":208166,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215453,"byte_end":215460,"line_start":387,"line_end":387,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1116},{"krate":0,"index":1118},{"krate":0,"index":1120},{"krate":0,"index":1122},{"krate":0,"index":1124},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1129},{"krate":0,"index":1132},{"krate":0,"index":1135},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1142},{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":233100,"byte_end":233107,"line_start":936,"line_end":936,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":233412,"byte_end":233419,"line_start":951,"line_end":951,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":233549,"byte_end":233556,"line_start":959,"line_end":959,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":233793,"byte_end":233800,"line_start":969,"line_end":969,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":234133,"byte_end":234140,"line_start":983,"line_end":983,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1168},{"krate":0,"index":1169}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":234617,"byte_end":234624,"line_start":1005,"line_end":1005,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1174},{"krate":0,"index":1176},{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":235125,"byte_end":235132,"line_start":1027,"line_end":1027,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":242117,"byte_end":242124,"line_start":1278,"line_end":1278,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":242999,"byte_end":243003,"line_start":1309,"line_end":1309,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":243179,"byte_end":243183,"line_start":1316,"line_end":1316,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":243486,"byte_end":243490,"line_start":1329,"line_end":1329,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":243650,"byte_end":243654,"line_start":1336,"line_end":1336,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":243754,"byte_end":243758,"line_start":1339,"line_end":1339,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":243963,"byte_end":243971,"line_start":1346,"line_end":1346,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":244262,"byte_end":244270,"line_start":1359,"line_end":1359,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1277}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":244426,"byte_end":244434,"line_start":1366,"line_end":1366,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":244530,"byte_end":244538,"line_start":1369,"line_end":1369,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":244728,"byte_end":244733,"line_start":1376,"line_end":1376,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":245028,"byte_end":245033,"line_start":1389,"line_end":1389,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":245193,"byte_end":245198,"line_start":1396,"line_end":1396,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":245298,"byte_end":245303,"line_start":1399,"line_end":1399,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":245510,"byte_end":245521,"line_start":1406,"line_end":1406,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":245865,"byte_end":245876,"line_start":1423,"line_end":1423,"column_start":30,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":246010,"byte_end":246021,"line_start":1426,"line_end":1426,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1310}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":246243,"byte_end":246255,"line_start":1436,"line_end":1436,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":246455,"byte_end":246467,"line_start":1444,"line_end":1444,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":246988,"byte_end":247000,"line_start":1469,"line_end":1469,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":247274,"byte_end":247286,"line_start":1480,"line_end":1480,"column_start":30,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":247415,"byte_end":247425,"line_start":1488,"line_end":1488,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":247623,"byte_end":247633,"line_start":1496,"line_end":1496,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":248154,"byte_end":248164,"line_start":1521,"line_end":1521,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":248303,"byte_end":248313,"line_start":1529,"line_end":1529,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":248578,"byte_end":248597,"line_start":1540,"line_end":1540,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1350}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":248795,"byte_end":248814,"line_start":1548,"line_end":1548,"column_start":29,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":249165,"byte_end":249184,"line_start":1566,"line_end":1566,"column_start":30,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":249323,"byte_end":249342,"line_start":1574,"line_end":1574,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1364}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":249607,"byte_end":249612,"line_start":1585,"line_end":1585,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1368}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":249798,"byte_end":249803,"line_start":1593,"line_end":1593,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":249942,"byte_end":249947,"line_start":1601,"line_end":1601,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":250219,"byte_end":250224,"line_start":1612,"line_end":1612,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":254964,"byte_end":254968,"line_start":103,"line_end":103,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1433}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":255269,"byte_end":255273,"line_start":113,"line_end":113,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":255395,"byte_end":255401,"line_start":119,"line_end":119,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":255643,"byte_end":255649,"line_start":129,"line_end":129,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1441}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":257599,"byte_end":257607,"line_start":195,"line_end":195,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1450}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":257950,"byte_end":257958,"line_start":206,"line_end":206,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1452}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":261327,"byte_end":261337,"line_start":297,"line_end":297,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":261557,"byte_end":261567,"line_start":307,"line_end":307,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1473}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":262656,"byte_end":262670,"line_start":343,"line_end":343,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":262786,"byte_end":262800,"line_start":349,"line_end":349,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":272377,"byte_end":272380,"line_start":101,"line_end":101,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1529}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":272652,"byte_end":272655,"line_start":111,"line_end":111,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1533}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":272979,"byte_end":272982,"line_start":122,"line_end":122,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1535}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":273218,"byte_end":273229,"line_start":128,"line_end":128,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":273350,"byte_end":273361,"line_start":134,"line_end":134,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":273580,"byte_end":273591,"line_start":141,"line_end":141,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1544}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":273795,"byte_end":273798,"line_start":151,"line_end":151,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":274085,"byte_end":274088,"line_start":161,"line_end":161,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":274350,"byte_end":274353,"line_start":170,"line_end":170,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1551}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":274557,"byte_end":274560,"line_start":178,"line_end":178,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1555}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":274922,"byte_end":274925,"line_start":189,"line_end":189,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":275288,"byte_end":275298,"line_start":206,"line_end":206,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":275396,"byte_end":275405,"line_start":212,"line_end":212,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":275529,"byte_end":275543,"line_start":218,"line_end":218,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1566}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":275642,"byte_end":275651,"line_start":224,"line_end":224,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1568}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":275761,"byte_end":275774,"line_start":230,"line_end":230,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1570}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":275871,"byte_end":275886,"line_start":236,"line_end":236,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":275985,"byte_end":276002,"line_start":242,"line_end":242,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1574}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":276099,"byte_end":276114,"line_start":248,"line_end":248,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1576}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":276214,"byte_end":276227,"line_start":254,"line_end":254,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1578}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":276322,"byte_end":276336,"line_start":260,"line_end":260,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":276432,"byte_end":276442,"line_start":266,"line_end":266,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":276534,"byte_end":276550,"line_start":272,"line_end":272,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1584}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":276658,"byte_end":276661,"line_start":278,"line_end":278,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":276969,"byte_end":276974,"line_start":293,"line_end":293,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1591}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":277099,"byte_end":277110,"line_start":299,"line_end":299,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1593}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":277214,"byte_end":277228,"line_start":305,"line_end":305,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1595}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":277324,"byte_end":277340,"line_start":311,"line_end":311,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":277461,"byte_end":277475,"line_start":317,"line_end":317,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1599}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":277580,"byte_end":277595,"line_start":323,"line_end":323,"column_start":29,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":281619,"byte_end":281624,"line_start":460,"line_end":460,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1630},{"krate":0,"index":1631}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":282061,"byte_end":282070,"line_start":478,"line_end":478,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1634},{"krate":0,"index":1635}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/c_str.rs","byte_start":292794,"byte_end":292802,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/c_str.rs","byte_start":292911,"byte_end":292916,"line_start":29,"line_end":29,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1666}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/c_str.rs","byte_start":293231,"byte_end":293252,"line_start":39,"line_end":39,"column_start":16,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1668}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/c_str.rs","byte_start":293344,"byte_end":293359,"line_start":45,"line_end":45,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1670},{"krate":0,"index":1671}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":295586,"byte_end":295594,"line_start":58,"line_end":58,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1701},{"krate":0,"index":1703},{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1710}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":298997,"byte_end":299005,"line_start":167,"line_end":167,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1712}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":299350,"byte_end":299358,"line_start":178,"line_end":178,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1715}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":299473,"byte_end":299481,"line_start":184,"line_end":184,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1717},{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":299677,"byte_end":299685,"line_start":193,"line_end":193,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":299856,"byte_end":299864,"line_start":200,"line_end":200,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1722},{"krate":0,"index":1723}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":299989,"byte_end":299997,"line_start":209,"line_end":209,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1725}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":300106,"byte_end":300114,"line_start":216,"line_end":216,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1727}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":300255,"byte_end":300263,"line_start":224,"line_end":224,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1729}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":300409,"byte_end":300417,"line_start":230,"line_end":230,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1731}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":300526,"byte_end":300534,"line_start":236,"line_end":236,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1733}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":300750,"byte_end":300758,"line_start":248,"line_end":248,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1737}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":300972,"byte_end":300980,"line_start":260,"line_end":260,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":301005,"byte_end":301013,"line_start":262,"line_end":262,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":301545,"byte_end":301553,"line_start":285,"line_end":285,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1749}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":301695,"byte_end":301703,"line_start":292,"line_end":292,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1751}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":301830,"byte_end":301838,"line_start":299,"line_end":299,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1753}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":301946,"byte_end":301951,"line_start":306,"line_end":306,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1756},{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1772}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":307865,"byte_end":307868,"line_start":477,"line_end":477,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1775}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":308055,"byte_end":308063,"line_start":484,"line_end":484,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1777}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":308368,"byte_end":308371,"line_start":495,"line_end":495,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1779}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":308663,"byte_end":308666,"line_start":505,"line_end":505,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1781}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":308801,"byte_end":308804,"line_start":512,"line_end":512,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1783}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":309193,"byte_end":309196,"line_start":524,"line_end":524,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1785}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":309399,"byte_end":309401,"line_start":532,"line_end":532,"column_start":25,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1787}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":309779,"byte_end":309781,"line_start":544,"line_end":544,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1789}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":309982,"byte_end":309985,"line_start":552,"line_end":552,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1792}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":310118,"byte_end":310121,"line_start":559,"line_end":559,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1795}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":310261,"byte_end":310264,"line_start":566,"line_end":566,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1798}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":310421,"byte_end":310429,"line_start":573,"line_end":573,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1801}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":310536,"byte_end":310539,"line_start":580,"line_end":580,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1803}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":310846,"byte_end":310851,"line_start":595,"line_end":595,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1807}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":310968,"byte_end":310973,"line_start":601,"line_end":601,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1809}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":311220,"byte_end":311225,"line_start":615,"line_end":615,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":311250,"byte_end":311255,"line_start":617,"line_end":617,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1816},{"krate":0,"index":1817},{"krate":0,"index":1818}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":311826,"byte_end":311831,"line_start":640,"line_end":640,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1820}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":312089,"byte_end":312094,"line_start":650,"line_end":650,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1822}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":313324,"byte_end":313329,"line_start":695,"line_end":695,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1825}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":313455,"byte_end":313460,"line_start":702,"line_end":702,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1828}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":313596,"byte_end":313601,"line_start":708,"line_end":708,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1830}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":313772,"byte_end":313780,"line_start":714,"line_end":714,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1832}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":313860,"byte_end":313865,"line_start":720,"line_end":720,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1834},{"krate":0,"index":1835},{"krate":0,"index":1836}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":314096,"byte_end":314101,"line_start":730,"line_end":730,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1838}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":314181,"byte_end":314189,"line_start":736,"line_end":736,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1840}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":314416,"byte_end":314422,"line_start":750,"line_end":750,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1844}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":314532,"byte_end":314540,"line_start":757,"line_end":757,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":314650,"byte_end":314658,"line_start":763,"line_end":763,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1848}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":314746,"byte_end":314751,"line_start":769,"line_end":769,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1850}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":318505,"byte_end":318512,"line_start":98,"line_end":98,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1879},{"krate":0,"index":1881},{"krate":0,"index":1883},{"krate":0,"index":1885},{"krate":0,"index":1887},{"krate":0,"index":1888},{"krate":0,"index":1889}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":319856,"byte_end":319863,"line_start":142,"line_end":142,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1891}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":319963,"byte_end":319970,"line_start":145,"line_end":145,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1893}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":320097,"byte_end":320104,"line_start":150,"line_end":150,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1895}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":320194,"byte_end":320201,"line_start":156,"line_end":156,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1897},{"krate":0,"index":1898}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":320417,"byte_end":320424,"line_start":167,"line_end":167,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1900},{"krate":0,"index":1901}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":320604,"byte_end":320611,"line_start":174,"line_end":174,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1903}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":321271,"byte_end":321282,"line_start":204,"line_end":204,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1924},{"krate":0,"index":1926},{"krate":0,"index":1927}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":324359,"byte_end":324370,"line_start":287,"line_end":287,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1929}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":377716,"byte_end":377725,"line_start":59,"line_end":59,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2022},{"krate":0,"index":2023}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":378414,"byte_end":378423,"line_start":79,"line_end":79,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2026},{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2029},{"krate":0,"index":2030},{"krate":0,"index":2031}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":379709,"byte_end":379718,"line_start":127,"line_end":127,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2034}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":380681,"byte_end":380690,"line_start":151,"line_end":151,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2040}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":381917,"byte_end":381926,"line_start":188,"line_end":188,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2043},{"krate":0,"index":2044}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":382603,"byte_end":382612,"line_start":207,"line_end":207,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2047}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":382932,"byte_end":382941,"line_start":219,"line_end":219,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2050}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":387368,"byte_end":387377,"line_start":313,"line_end":313,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":389949,"byte_end":389958,"line_start":398,"line_end":398,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2071}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":391026,"byte_end":391035,"line_start":433,"line_end":433,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2075}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":391381,"byte_end":391390,"line_start":445,"line_end":445,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2078}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":391694,"byte_end":391703,"line_start":454,"line_end":454,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2082}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":391919,"byte_end":391933,"line_start":463,"line_end":463,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2085},{"krate":0,"index":2086}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":392452,"byte_end":392457,"line_start":482,"line_end":482,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2089}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":392574,"byte_end":392588,"line_start":488,"line_end":488,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2092}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":392712,"byte_end":392726,"line_start":494,"line_end":494,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2095}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":393716,"byte_end":393726,"line_start":522,"line_end":522,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":2104},{"krate":0,"index":2105},{"krate":0,"index":2106}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":395170,"byte_end":395180,"line_start":567,"line_end":567,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2115}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":398937,"byte_end":398947,"line_start":672,"line_end":672,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2118}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":400911,"byte_end":400917,"line_start":42,"line_end":42,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2133},{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":2136},{"krate":0,"index":2137},{"krate":0,"index":2138}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":402098,"byte_end":402104,"line_start":82,"line_end":82,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2143}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":403173,"byte_end":403179,"line_start":121,"line_end":121,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2146},{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2149}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":404001,"byte_end":404007,"line_start":156,"line_end":156,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2152},{"krate":0,"index":2153}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":406188,"byte_end":406194,"line_start":236,"line_end":236,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2162}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":406598,"byte_end":406604,"line_start":253,"line_end":253,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":406979,"byte_end":406985,"line_start":268,"line_end":268,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2170}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":407365,"byte_end":407371,"line_start":283,"line_end":283,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2174}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":409880,"byte_end":409885,"line_start":57,"line_end":57,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2189}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":413182,"byte_end":413191,"line_start":158,"line_end":158,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2204}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":414580,"byte_end":414585,"line_start":186,"line_end":186,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2206}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":414783,"byte_end":414788,"line_start":195,"line_end":195,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2208}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":414912,"byte_end":414917,"line_start":202,"line_end":202,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2210},{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2215},{"krate":0,"index":2216},{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2221}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":419299,"byte_end":419303,"line_start":328,"line_end":328,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2223}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":420043,"byte_end":420048,"line_start":348,"line_end":348,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2225}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":420645,"byte_end":420650,"line_start":365,"line_end":365,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2227},{"krate":0,"index":2228},{"krate":0,"index":2229}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":421614,"byte_end":421626,"line_start":399,"line_end":399,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2234}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/impls.rs","byte_start":424861,"byte_end":424864,"line_start":116,"line_end":116,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2277},{"krate":0,"index":2278},{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2281},{"krate":0,"index":2282}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/impls.rs","byte_start":425638,"byte_end":425641,"line_start":148,"line_end":148,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2287},{"krate":0,"index":2288},{"krate":0,"index":2289}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/impls.rs","byte_start":426255,"byte_end":426258,"line_start":175,"line_end":175,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2292}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/impls.rs","byte_start":426411,"byte_end":426414,"line_start":182,"line_end":182,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2295},{"krate":0,"index":2296},{"krate":0,"index":2297},{"krate":0,"index":2298}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/impls.rs","byte_start":430487,"byte_end":430490,"line_start":334,"line_end":334,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2314},{"krate":0,"index":2315},{"krate":0,"index":2317},{"krate":0,"index":2318}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/lazy.rs","byte_start":432329,"byte_end":432333,"line_start":35,"line_end":35,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/lazy.rs","byte_start":432349,"byte_end":432353,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2337}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/lazy.rs","byte_start":432546,"byte_end":432550,"line_start":46,"line_end":46,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2340},{"krate":0,"index":2341}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/lazy.rs","byte_start":434173,"byte_end":434183,"line_start":95,"line_end":95,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/lazy.rs","byte_start":434219,"byte_end":434229,"line_start":98,"line_end":98,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2351}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/lazy.rs","byte_start":434449,"byte_end":434459,"line_start":108,"line_end":108,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2354},{"krate":0,"index":2355}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":438222,"byte_end":438230,"line_start":79,"line_end":79,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2388},{"krate":0,"index":2389},{"krate":0,"index":2390}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":438567,"byte_end":438576,"line_start":93,"line_end":93,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2392},{"krate":0,"index":2393},{"krate":0,"index":2394}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":438882,"byte_end":438891,"line_start":106,"line_end":106,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2398}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":439258,"byte_end":439263,"line_start":125,"line_end":125,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2408},{"krate":0,"index":2409},{"krate":0,"index":2411}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":439989,"byte_end":439994,"line_start":149,"line_end":149,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2414},{"krate":0,"index":2415}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":443292,"byte_end":443297,"line_start":242,"line_end":242,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2427},{"krate":0,"index":2429}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":444234,"byte_end":444239,"line_start":269,"line_end":269,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2431}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":444358,"byte_end":444363,"line_start":275,"line_end":275,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2433},{"krate":0,"index":2434},{"krate":0,"index":2435},{"krate":0,"index":2436},{"krate":0,"index":2437},{"krate":0,"index":2438}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":445050,"byte_end":445059,"line_start":297,"line_end":297,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2442}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":445411,"byte_end":445420,"line_start":312,"line_end":312,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2444},{"krate":0,"index":2445}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":445610,"byte_end":445619,"line_start":321,"line_end":321,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2447}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":448536,"byte_end":448542,"line_start":394,"line_end":394,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2457}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":448959,"byte_end":448965,"line_start":406,"line_end":406,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2460}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":449086,"byte_end":449092,"line_start":412,"line_end":412,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2462},{"krate":0,"index":2463},{"krate":0,"index":2464},{"krate":0,"index":2465},{"krate":0,"index":2466}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":449629,"byte_end":449639,"line_start":430,"line_end":430,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2470}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":450004,"byte_end":450014,"line_start":442,"line_end":442,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2472}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":451881,"byte_end":451887,"line_start":496,"line_end":496,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2482}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":452303,"byte_end":452309,"line_start":508,"line_end":508,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2485}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":452430,"byte_end":452436,"line_start":514,"line_end":514,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2487},{"krate":0,"index":2488},{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":2491}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":452973,"byte_end":452983,"line_start":532,"line_end":532,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2493},{"krate":0,"index":2494},{"krate":0,"index":2495}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":453348,"byte_end":453358,"line_start":544,"line_end":544,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2497}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":457687,"byte_end":457692,"line_start":89,"line_end":89,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2522},{"krate":0,"index":2523}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":457910,"byte_end":457915,"line_start":101,"line_end":101,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2525},{"krate":0,"index":2526}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":458081,"byte_end":458086,"line_start":110,"line_end":110,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2528}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":458729,"byte_end":458735,"line_start":134,"line_end":134,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2535}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":459269,"byte_end":459275,"line_start":158,"line_end":158,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2537}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":459909,"byte_end":459913,"line_start":182,"line_end":182,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2542},{"krate":0,"index":2543},{"krate":0,"index":2545}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":460301,"byte_end":460305,"line_start":200,"line_end":200,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2547}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":327287,"byte_end":327292,"line_start":61,"line_end":61,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2554}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342296,"byte_end":342306,"line_start":439,"line_end":439,"column_start":26,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342340,"byte_end":342350,"line_start":441,"line_end":441,"column_start":26,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342383,"byte_end":342393,"line_start":443,"line_end":443,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2596}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342531,"byte_end":342541,"line_start":449,"line_end":449,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2599},{"krate":0,"index":2600}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":343951,"byte_end":343961,"line_start":493,"line_end":493,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2604},{"krate":0,"index":2605}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":344095,"byte_end":344105,"line_start":502,"line_end":502,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2608}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":344545,"byte_end":344552,"line_start":518,"line_end":518,"column_start":26,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":344586,"byte_end":344593,"line_start":520,"line_end":520,"column_start":26,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":344626,"byte_end":344633,"line_start":522,"line_end":522,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2615}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":344771,"byte_end":344778,"line_start":528,"line_end":528,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2618},{"krate":0,"index":2619}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":346160,"byte_end":346167,"line_start":572,"line_end":572,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2623},{"krate":0,"index":2624}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":346410,"byte_end":346421,"line_start":585,"line_end":585,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2626},{"krate":0,"index":2627},{"krate":0,"index":2628},{"krate":0,"index":2629}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":355292,"byte_end":355299,"line_start":803,"line_end":803,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2645}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":366314,"byte_end":366319,"line_start":1107,"line_end":1107,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2672}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":367055,"byte_end":367060,"line_start":1131,"line_end":1131,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2676}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":367263,"byte_end":367268,"line_start":1137,"line_end":1137,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2683}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":368164,"byte_end":368169,"line_start":1164,"line_end":1164,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2687},{"krate":0,"index":2688}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":368978,"byte_end":368982,"line_start":1194,"line_end":1194,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2691},{"krate":0,"index":2692},{"krate":0,"index":2693},{"krate":0,"index":2694},{"krate":0,"index":2695}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":370336,"byte_end":370340,"line_start":1241,"line_end":1241,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2698},{"krate":0,"index":2699},{"krate":0,"index":2700}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":371222,"byte_end":371226,"line_start":1266,"line_end":1266,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2704},{"krate":0,"index":2705}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":372135,"byte_end":372140,"line_start":1297,"line_end":1297,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2708},{"krate":0,"index":2709}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":372945,"byte_end":372950,"line_start":1326,"line_end":1326,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2712},{"krate":0,"index":2713}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":373724,"byte_end":373729,"line_start":1355,"line_end":1355,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2716},{"krate":0,"index":2717}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":466579,"byte_end":466585,"line_start":109,"line_end":109,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2751},{"krate":0,"index":2752},{"krate":0,"index":2753}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":470185,"byte_end":470193,"line_start":211,"line_end":211,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2755},{"krate":0,"index":2756},{"krate":0,"index":2757},{"krate":0,"index":2758},{"krate":0,"index":2759},{"krate":0,"index":2761},{"krate":0,"index":2762},{"krate":0,"index":2763},{"krate":0,"index":2764},{"krate":0,"index":2765},{"krate":0,"index":2766},{"krate":0,"index":2767},{"krate":0,"index":2768},{"krate":0,"index":2769},{"krate":0,"index":2770},{"krate":0,"index":2771},{"krate":0,"index":2772},{"krate":0,"index":2773},{"krate":0,"index":2774}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":480224,"byte_end":480230,"line_start":475,"line_end":475,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2776}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":480448,"byte_end":480454,"line_start":484,"line_end":484,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2778}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":480555,"byte_end":480561,"line_start":490,"line_end":490,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2780}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":480719,"byte_end":480727,"line_start":498,"line_end":498,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2782}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":481431,"byte_end":481439,"line_start":513,"line_end":513,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2786}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":481568,"byte_end":481576,"line_start":519,"line_end":519,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2788}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":481655,"byte_end":481663,"line_start":525,"line_end":525,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2790}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":481797,"byte_end":481803,"line_start":531,"line_end":531,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2792}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":481997,"byte_end":482005,"line_start":540,"line_end":540,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2794}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":482182,"byte_end":482190,"line_start":549,"line_end":549,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":482215,"byte_end":482223,"line_start":551,"line_end":551,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2797}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":482410,"byte_end":482418,"line_start":558,"line_end":558,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2800}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":482556,"byte_end":482562,"line_start":564,"line_end":564,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2802}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":482806,"byte_end":482814,"line_start":573,"line_end":573,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2804}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":483038,"byte_end":483046,"line_start":582,"line_end":582,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2806}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":483216,"byte_end":483224,"line_start":588,"line_end":588,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2808}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":483326,"byte_end":483334,"line_start":593,"line_end":593,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2810}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":483652,"byte_end":483660,"line_start":608,"line_end":608,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2814}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":483840,"byte_end":483848,"line_start":616,"line_end":616,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2817}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":484062,"byte_end":484068,"line_start":624,"line_end":624,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2821}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":484241,"byte_end":484249,"line_start":632,"line_end":632,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2824},{"krate":0,"index":2825},{"krate":0,"index":2826},{"krate":0,"index":2827},{"krate":0,"index":2829},{"krate":0,"index":2830},{"krate":0,"index":2831},{"krate":0,"index":2832},{"krate":0,"index":2833},{"krate":0,"index":2834},{"krate":0,"index":2835},{"krate":0,"index":2836},{"krate":0,"index":2837},{"krate":0,"index":2838},{"krate":0,"index":2839},{"krate":0,"index":2840},{"krate":0,"index":2841}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":495354,"byte_end":495362,"line_start":927,"line_end":927,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2844}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":499103,"byte_end":499111,"line_start":1025,"line_end":1025,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2851}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":499240,"byte_end":499248,"line_start":1031,"line_end":1031,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2853}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":499327,"byte_end":499335,"line_start":1037,"line_end":1037,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2855}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":499469,"byte_end":499477,"line_start":1043,"line_end":1043,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2857}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":499671,"byte_end":499677,"line_start":1052,"line_end":1052,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2859}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":499856,"byte_end":499864,"line_start":1061,"line_end":1061,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":499889,"byte_end":499897,"line_start":1063,"line_end":1063,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2862}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":500013,"byte_end":500021,"line_start":1069,"line_end":1069,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2865}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":500159,"byte_end":500165,"line_start":1075,"line_end":1075,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2867}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":500406,"byte_end":500414,"line_start":1084,"line_end":1084,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2869}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":500641,"byte_end":500649,"line_start":1093,"line_end":1093,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2871}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":500788,"byte_end":500796,"line_start":1099,"line_end":1099,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2873}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":500900,"byte_end":500908,"line_start":1104,"line_end":1104,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2875}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":501231,"byte_end":501239,"line_start":1119,"line_end":1119,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2879}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":501421,"byte_end":501429,"line_start":1127,"line_end":1127,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2882}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":501598,"byte_end":501606,"line_start":1134,"line_end":1134,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2886}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":501858,"byte_end":501864,"line_start":1144,"line_end":1144,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2890}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":502060,"byte_end":502066,"line_start":1152,"line_end":1152,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2894}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":504869,"byte_end":504879,"line_start":79,"line_end":79,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2919},{"krate":0,"index":2920},{"krate":0,"index":2921},{"krate":0,"index":2922},{"krate":0,"index":2923},{"krate":0,"index":2924},{"krate":0,"index":2925}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":506952,"byte_end":506964,"line_start":142,"line_end":142,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2927},{"krate":0,"index":2928},{"krate":0,"index":2929},{"krate":0,"index":2930},{"krate":0,"index":2931}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":508106,"byte_end":508118,"line_start":181,"line_end":181,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2933},{"krate":0,"index":2934},{"krate":0,"index":2935},{"krate":0,"index":2936},{"krate":0,"index":2937},{"krate":0,"index":2938},{"krate":0,"index":2939},{"krate":0,"index":2940},{"krate":0,"index":2941}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":511442,"byte_end":511454,"line_start":274,"line_end":274,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2943}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":511597,"byte_end":511609,"line_start":280,"line_end":280,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2945}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":511745,"byte_end":511755,"line_start":286,"line_end":286,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2947}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":511937,"byte_end":511947,"line_start":293,"line_end":293,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2949}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":512142,"byte_end":512152,"line_start":300,"line_end":300,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2952}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":513434,"byte_end":513444,"line_start":332,"line_end":332,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2957}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":513667,"byte_end":513679,"line_start":341,"line_end":341,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2959}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":513825,"byte_end":513837,"line_start":347,"line_end":347,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2961}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":513973,"byte_end":513985,"line_start":353,"line_end":353,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2963}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":514133,"byte_end":514145,"line_start":359,"line_end":359,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2965}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":514274,"byte_end":514286,"line_start":365,"line_end":365,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2967}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":514365,"byte_end":514377,"line_start":371,"line_end":371,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2969}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":514460,"byte_end":514472,"line_start":377,"line_end":377,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2971}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":514677,"byte_end":514689,"line_start":384,"line_end":384,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2973}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":515031,"byte_end":515043,"line_start":393,"line_end":393,"column_start":13,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":515060,"byte_end":515072,"line_start":395,"line_end":395,"column_start":13,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":515097,"byte_end":515109,"line_start":397,"line_end":397,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2977}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":515256,"byte_end":515268,"line_start":403,"line_end":403,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2980}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":518376,"byte_end":518386,"line_start":475,"line_end":475,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2986},{"krate":0,"index":2987}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":518579,"byte_end":518591,"line_start":482,"line_end":482,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2989},{"krate":0,"index":2990}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":518796,"byte_end":518808,"line_start":489,"line_end":489,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2992},{"krate":0,"index":2993}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":521985,"byte_end":521991,"line_start":590,"line_end":590,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3020},{"krate":0,"index":3021}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":523220,"byte_end":523226,"line_start":29,"line_end":29,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3039},{"krate":0,"index":3040},{"krate":0,"index":3041},{"krate":0,"index":3044},{"krate":0,"index":3049},{"krate":0,"index":3057},{"krate":0,"index":3058},{"krate":0,"index":3060},{"krate":0,"index":3064},{"krate":0,"index":3065},{"krate":0,"index":3067},{"krate":0,"index":3070},{"krate":0,"index":3072},{"krate":0,"index":3082},{"krate":0,"index":3084},{"krate":0,"index":3086},{"krate":0,"index":3092},{"krate":0,"index":3102}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":531578,"byte_end":531584,"line_start":274,"line_end":274,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3105},{"krate":0,"index":3106}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":531857,"byte_end":531865,"line_start":284,"line_end":284,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3109},{"krate":0,"index":3110}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":532142,"byte_end":532150,"line_start":294,"line_end":294,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3113},{"krate":0,"index":3114}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":532427,"byte_end":532439,"line_start":304,"line_end":304,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3117},{"krate":0,"index":3118}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":532725,"byte_end":532737,"line_start":314,"line_end":314,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3121},{"krate":0,"index":3122}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":533023,"byte_end":533033,"line_start":324,"line_end":324,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3125},{"krate":0,"index":3126}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":534668,"byte_end":534682,"line_start":369,"line_end":369,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3129}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":534816,"byte_end":534830,"line_start":375,"line_end":375,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3131}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":538129,"byte_end":538138,"line_start":81,"line_end":81,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3158},{"krate":0,"index":3159},{"krate":0,"index":3160},{"krate":0,"index":3161},{"krate":0,"index":3162},{"krate":0,"index":3163},{"krate":0,"index":3165},{"krate":0,"index":3168},{"krate":0,"index":3169},{"krate":0,"index":3170},{"krate":0,"index":3171},{"krate":0,"index":3172},{"krate":0,"index":3173},{"krate":0,"index":3174},{"krate":0,"index":3175},{"krate":0,"index":3176},{"krate":0,"index":3177},{"krate":0,"index":3178},{"krate":0,"index":3179},{"krate":0,"index":3180},{"krate":0,"index":3181},{"krate":0,"index":3182},{"krate":0,"index":3183},{"krate":0,"index":3184}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":549261,"byte_end":549270,"line_start":363,"line_end":363,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3186},{"krate":0,"index":3187},{"krate":0,"index":3188}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":549608,"byte_end":549617,"line_start":378,"line_end":378,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3190},{"krate":0,"index":3191},{"krate":0,"index":3192}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":550594,"byte_end":550603,"line_start":421,"line_end":421,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3202}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":550718,"byte_end":550727,"line_start":427,"line_end":427,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3204}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":550863,"byte_end":550872,"line_start":433,"line_end":433,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3206}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":550967,"byte_end":550976,"line_start":439,"line_end":439,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3208}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":551078,"byte_end":551089,"line_start":445,"line_end":445,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3210},{"krate":0,"index":3211},{"krate":0,"index":3212},{"krate":0,"index":3213},{"krate":0,"index":3214},{"krate":0,"index":3215},{"krate":0,"index":3217},{"krate":0,"index":3220},{"krate":0,"index":3221},{"krate":0,"index":3222},{"krate":0,"index":3224},{"krate":0,"index":3225},{"krate":0,"index":3226},{"krate":0,"index":3227},{"krate":0,"index":3228},{"krate":0,"index":3229},{"krate":0,"index":3230}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":557137,"byte_end":557145,"line_start":608,"line_end":608,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3233},{"krate":0,"index":3234}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":557347,"byte_end":557358,"line_start":615,"line_end":615,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3237}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":557477,"byte_end":557488,"line_start":621,"line_end":621,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3239}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":557632,"byte_end":557643,"line_start":627,"line_end":627,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3241}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":557740,"byte_end":557751,"line_start":633,"line_end":633,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3243}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":559988,"byte_end":559997,"line_start":52,"line_end":52,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3266},{"krate":0,"index":3267},{"krate":0,"index":3268},{"krate":0,"index":3269},{"krate":0,"index":3270},{"krate":0,"index":3271},{"krate":0,"index":3273},{"krate":0,"index":3276},{"krate":0,"index":3277},{"krate":0,"index":3278},{"krate":0,"index":3280},{"krate":0,"index":3281},{"krate":0,"index":3282},{"krate":0,"index":3283},{"krate":0,"index":3284},{"krate":0,"index":3285},{"krate":0,"index":3286},{"krate":0,"index":3287},{"krate":0,"index":3288},{"krate":0,"index":3289},{"krate":0,"index":3290},{"krate":0,"index":3291},{"krate":0,"index":3292},{"krate":0,"index":3293},{"krate":0,"index":3294},{"krate":0,"index":3295},{"krate":0,"index":3296},{"krate":0,"index":3297},{"krate":0,"index":3298},{"krate":0,"index":3299},{"krate":0,"index":3300},{"krate":0,"index":3301},{"krate":0,"index":3302},{"krate":0,"index":3305},{"krate":0,"index":3306},{"krate":0,"index":3307},{"krate":0,"index":3308}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":576901,"byte_end":576910,"line_start":476,"line_end":476,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3310}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":577025,"byte_end":577034,"line_start":482,"line_end":482,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3312}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":577170,"byte_end":577179,"line_start":488,"line_end":488,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3314}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":577274,"byte_end":577283,"line_start":494,"line_end":494,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3316}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":585270,"byte_end":585278,"line_start":94,"line_end":94,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3407},{"krate":0,"index":3408},{"krate":0,"index":3409},{"krate":0,"index":3410},{"krate":0,"index":3411},{"krate":0,"index":3412},{"krate":0,"index":3413},{"krate":0,"index":3414},{"krate":0,"index":3415},{"krate":0,"index":3416},{"krate":0,"index":3417},{"krate":0,"index":3418},{"krate":0,"index":3419},{"krate":0,"index":3420},{"krate":0,"index":3421},{"krate":0,"index":3422},{"krate":0,"index":3423}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":594092,"byte_end":594098,"line_start":160,"line_end":160,"column_start":45,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":594152,"byte_end":594159,"line_start":161,"line_end":161,"column_start":48,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":594197,"byte_end":594205,"line_start":162,"line_end":162,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":594235,"byte_end":594252,"line_start":163,"line_end":163,"column_start":24,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":594290,"byte_end":594299,"line_start":164,"line_end":164,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":594329,"byte_end":594345,"line_start":165,"line_end":165,"column_start":24,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":594580,"byte_end":594582,"line_start":170,"line_end":170,"column_start":48,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":594636,"byte_end":594639,"line_start":171,"line_end":171,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":594902,"byte_end":594912,"line_start":178,"line_end":178,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":594945,"byte_end":594961,"line_start":179,"line_end":179,"column_start":27,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":595003,"byte_end":595011,"line_start":181,"line_end":181,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":595044,"byte_end":595061,"line_start":182,"line_end":182,"column_start":27,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":595102,"byte_end":595111,"line_start":183,"line_end":183,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":595195,"byte_end":595206,"line_start":186,"line_end":186,"column_start":32,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":595284,"byte_end":595292,"line_start":188,"line_end":188,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":595371,"byte_end":595380,"line_start":190,"line_end":190,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":595459,"byte_end":595468,"line_start":192,"line_end":192,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":595547,"byte_end":595556,"line_start":194,"line_end":194,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":595727,"byte_end":595738,"line_start":199,"line_end":199,"column_start":32,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":595816,"byte_end":595824,"line_start":201,"line_end":201,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":595903,"byte_end":595912,"line_start":203,"line_end":203,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":595991,"byte_end":596000,"line_start":205,"line_end":205,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":596079,"byte_end":596088,"line_start":207,"line_end":207,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":596257,"byte_end":596267,"line_start":212,"line_end":212,"column_start":32,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":596351,"byte_end":596360,"line_start":215,"line_end":215,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":596410,"byte_end":596417,"line_start":217,"line_end":217,"column_start":43,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":596513,"byte_end":596529,"line_start":225,"line_end":225,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3515},{"krate":0,"index":3516}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":596631,"byte_end":596647,"line_start":233,"line_end":233,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3519}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":596763,"byte_end":596779,"line_start":239,"line_end":239,"column_start":42,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3523},{"krate":0,"index":3524}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":596930,"byte_end":596946,"line_start":247,"line_end":247,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3527}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":597117,"byte_end":597133,"line_start":253,"line_end":253,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3530},{"krate":0,"index":3531}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":604545,"byte_end":604551,"line_start":110,"line_end":110,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3566},{"krate":0,"index":3569},{"krate":0,"index":3571},{"krate":0,"index":3572}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":610310,"byte_end":610325,"line_start":276,"line_end":276,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3589},{"krate":0,"index":3590}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":610808,"byte_end":610823,"line_start":295,"line_end":295,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3593}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":610980,"byte_end":610995,"line_start":301,"line_end":301,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3596}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":611177,"byte_end":611192,"line_start":307,"line_end":307,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3598}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":611324,"byte_end":611339,"line_start":313,"line_end":313,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3600}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":612636,"byte_end":612645,"line_start":358,"line_end":358,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3604}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":613073,"byte_end":613082,"line_start":372,"line_end":372,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3606}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":613177,"byte_end":613186,"line_start":378,"line_end":378,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3608}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":614468,"byte_end":614478,"line_start":422,"line_end":422,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3610}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":614619,"byte_end":614630,"line_start":426,"line_end":426,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3616}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":614901,"byte_end":614911,"line_start":436,"line_end":436,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3619},{"krate":0,"index":3620},{"krate":0,"index":3621},{"krate":0,"index":3622},{"krate":0,"index":3623},{"krate":0,"index":3624},{"krate":0,"index":3625},{"krate":0,"index":3626},{"krate":0,"index":3627},{"krate":0,"index":3628},{"krate":0,"index":3630},{"krate":0,"index":3632},{"krate":0,"index":3634},{"krate":0,"index":3635}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":619638,"byte_end":619648,"line_start":573,"line_end":573,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3637}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":619741,"byte_end":619751,"line_start":579,"line_end":579,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3639}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":619855,"byte_end":619859,"line_start":585,"line_end":585,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3641}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":620000,"byte_end":620011,"line_start":589,"line_end":589,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3647}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":620270,"byte_end":620274,"line_start":599,"line_end":599,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3650}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":620479,"byte_end":620483,"line_start":607,"line_end":607,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3652}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":620576,"byte_end":620580,"line_start":613,"line_end":613,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3654}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":620686,"byte_end":620690,"line_start":619,"line_end":619,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3657},{"krate":0,"index":3658}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":620865,"byte_end":620869,"line_start":627,"line_end":627,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3661}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":621016,"byte_end":621020,"line_start":633,"line_end":633,"column_start":24,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":621051,"byte_end":621061,"line_start":635,"line_end":635,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3665},{"krate":0,"index":3666}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":623161,"byte_end":623171,"line_start":687,"line_end":687,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3669}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":625019,"byte_end":625029,"line_start":733,"line_end":733,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":625066,"byte_end":625076,"line_start":735,"line_end":735,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3673}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":625210,"byte_end":625220,"line_start":741,"line_end":741,"column_start":18,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":625258,"byte_end":625268,"line_start":743,"line_end":743,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3677}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":625438,"byte_end":625448,"line_start":749,"line_end":749,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3679}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":625839,"byte_end":625848,"line_start":765,"line_end":765,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3682},{"krate":0,"index":3683}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":626053,"byte_end":626062,"line_start":775,"line_end":775,"column_start":24,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":626956,"byte_end":626963,"line_start":801,"line_end":801,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3686},{"krate":0,"index":3687},{"krate":0,"index":3688},{"krate":0,"index":3689},{"krate":0,"index":3690},{"krate":0,"index":3692},{"krate":0,"index":3694},{"krate":0,"index":3696},{"krate":0,"index":3698},{"krate":0,"index":3699},{"krate":0,"index":3701},{"krate":0,"index":3702},{"krate":0,"index":3703},{"krate":0,"index":3704},{"krate":0,"index":3705},{"krate":0,"index":3706},{"krate":0,"index":3707},{"krate":0,"index":3708},{"krate":0,"index":3709}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":634340,"byte_end":634343,"line_start":1022,"line_end":1022,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3711}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":634566,"byte_end":634573,"line_start":1030,"line_end":1030,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3713}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":634795,"byte_end":634798,"line_start":1039,"line_end":1039,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3715}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":635104,"byte_end":635107,"line_start":1049,"line_end":1049,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3717}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":635258,"byte_end":635265,"line_start":1056,"line_end":1056,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3720}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":635382,"byte_end":635389,"line_start":1062,"line_end":1062,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3722}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":635618,"byte_end":635626,"line_start":1072,"line_end":1072,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3724}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":635841,"byte_end":635848,"line_start":1081,"line_end":1081,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3726}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":636065,"byte_end":636072,"line_start":1090,"line_end":1090,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3728},{"krate":0,"index":3729}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":636257,"byte_end":636264,"line_start":1098,"line_end":1098,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3732}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":636459,"byte_end":636466,"line_start":1106,"line_end":1106,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3736}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":636628,"byte_end":636635,"line_start":1112,"line_end":1112,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3740}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":636782,"byte_end":636789,"line_start":1118,"line_end":1118,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3742},{"krate":0,"index":3743}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":636923,"byte_end":636930,"line_start":1126,"line_end":1126,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3745}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":637012,"byte_end":637019,"line_start":1132,"line_end":1132,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3747}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":637109,"byte_end":637112,"line_start":1138,"line_end":1138,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3750}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":637244,"byte_end":637247,"line_start":1145,"line_end":1145,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3753}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":637379,"byte_end":637382,"line_start":1152,"line_end":1152,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3756}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":637533,"byte_end":637540,"line_start":1159,"line_end":1159,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3759}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":637652,"byte_end":637655,"line_start":1166,"line_end":1166,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3761}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":637973,"byte_end":637976,"line_start":1175,"line_end":1175,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3763}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":638284,"byte_end":638286,"line_start":1184,"line_end":1184,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3765}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":638595,"byte_end":638597,"line_start":1193,"line_end":1193,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3767}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":638890,"byte_end":638894,"line_start":1202,"line_end":1202,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3769},{"krate":0,"index":3770},{"krate":0,"index":3771}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":639124,"byte_end":639131,"line_start":1212,"line_end":1212,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3773}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":639249,"byte_end":639256,"line_start":1218,"line_end":1218,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3775}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":639359,"byte_end":639366,"line_start":1224,"line_end":1224,"column_start":18,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":639396,"byte_end":639403,"line_start":1226,"line_end":1226,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3779}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":639561,"byte_end":639568,"line_start":1232,"line_end":1232,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3781}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":639706,"byte_end":639713,"line_start":1238,"line_end":1238,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3783}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":640917,"byte_end":640921,"line_start":1277,"line_end":1277,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3787},{"krate":0,"index":3788},{"krate":0,"index":3789},{"krate":0,"index":3791},{"krate":0,"index":3792},{"krate":0,"index":3793},{"krate":0,"index":3794},{"krate":0,"index":3795},{"krate":0,"index":3796},{"krate":0,"index":3797},{"krate":0,"index":3798},{"krate":0,"index":3799},{"krate":0,"index":3801},{"krate":0,"index":3802},{"krate":0,"index":3804},{"krate":0,"index":3806},{"krate":0,"index":3808},{"krate":0,"index":3810},{"krate":0,"index":3811},{"krate":0,"index":3813},{"krate":0,"index":3814},{"krate":0,"index":3816},{"krate":0,"index":3818},{"krate":0,"index":3820},{"krate":0,"index":3821},{"krate":0,"index":3823},{"krate":0,"index":3824},{"krate":0,"index":3826},{"krate":0,"index":3827},{"krate":0,"index":3828},{"krate":0,"index":3829},{"krate":0,"index":3830}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":656595,"byte_end":656599,"line_start":1730,"line_end":1730,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3832}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":656684,"byte_end":656688,"line_start":1736,"line_end":1736,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3834}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":657168,"byte_end":657175,"line_start":1752,"line_end":1752,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3839}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":657315,"byte_end":657322,"line_start":1758,"line_end":1758,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3841}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":657460,"byte_end":657464,"line_start":1764,"line_end":1764,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3843}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":657580,"byte_end":657584,"line_start":1770,"line_end":1770,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3845}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":657742,"byte_end":657746,"line_start":1778,"line_end":1778,"column_start":18,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":657776,"byte_end":657780,"line_start":1780,"line_end":1780,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3849}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":657935,"byte_end":657939,"line_start":1786,"line_end":1786,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3851}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":658073,"byte_end":658077,"line_start":1792,"line_end":1792,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3853}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":658155,"byte_end":658160,"line_start":1798,"line_end":1798,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3855}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":658249,"byte_end":658252,"line_start":1804,"line_end":1804,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3857}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":658352,"byte_end":658360,"line_start":1810,"line_end":1810,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3859}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":658555,"byte_end":658561,"line_start":1823,"line_end":1823,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3863}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":658650,"byte_end":658657,"line_start":1829,"line_end":1829,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3865}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":661661,"byte_end":661677,"line_start":1937,"line_end":1937,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3879}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":661801,"byte_end":661817,"line_start":1943,"line_end":1943,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3881}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":665680,"byte_end":665687,"line_start":44,"line_end":44,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3936}],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":665799,"byte_end":665806,"line_start":50,"line_end":50,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3938},{"krate":0,"index":3939}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":667662,"byte_end":667679,"line_start":99,"line_end":99,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3941}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":667850,"byte_end":667867,"line_start":105,"line_end":105,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3943}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":670561,"byte_end":670578,"line_start":54,"line_end":54,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3967}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":670789,"byte_end":670805,"line_start":64,"line_end":64,"column_start":22,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":670830,"byte_end":670846,"line_start":65,"line_end":65,"column_start":22,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":670856,"byte_end":670872,"line_start":67,"line_end":67,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3974},{"krate":0,"index":3975},{"krate":0,"index":3976},{"krate":0,"index":3977},{"krate":0,"index":3978},{"krate":0,"index":3979},{"krate":0,"index":3980},{"krate":0,"index":3981}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":672772,"byte_end":672782,"line_start":129,"line_end":129,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3986},{"krate":0,"index":3987},{"krate":0,"index":3990},{"krate":0,"index":3994},{"krate":0,"index":3998},{"krate":0,"index":4002},{"krate":0,"index":4005},{"krate":0,"index":4009},{"krate":0,"index":4013},{"krate":0,"index":4014},{"krate":0,"index":4015},{"krate":0,"index":4016},{"krate":0,"index":4017}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":686436,"byte_end":686446,"line_start":468,"line_end":468,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4019}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":686570,"byte_end":686580,"line_start":474,"line_end":474,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4021}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":686738,"byte_end":686748,"line_start":481,"line_end":481,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4023}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":688886,"byte_end":688900,"line_start":42,"line_end":42,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":688925,"byte_end":688939,"line_start":43,"line_end":43,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":688949,"byte_end":688963,"line_start":45,"line_end":45,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4046},{"krate":0,"index":4047},{"krate":0,"index":4048},{"krate":0,"index":4049},{"krate":0,"index":4050}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":697212,"byte_end":697220,"line_start":260,"line_end":260,"column_start":40,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":697266,"byte_end":697274,"line_start":261,"line_end":261,"column_start":40,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":698013,"byte_end":698026,"line_start":283,"line_end":283,"column_start":27,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":698076,"byte_end":698089,"line_start":284,"line_end":284,"column_start":40,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":698109,"byte_end":698117,"line_start":286,"line_end":286,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4072}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":698425,"byte_end":698433,"line_start":299,"line_end":299,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4075},{"krate":0,"index":4076},{"krate":0,"index":4077},{"krate":0,"index":4078},{"krate":0,"index":4080}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":702195,"byte_end":702203,"line_start":406,"line_end":406,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4084}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":702500,"byte_end":702508,"line_start":414,"line_end":414,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4087}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":702800,"byte_end":702808,"line_start":424,"line_end":424,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4090}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":703008,"byte_end":703016,"line_start":431,"line_end":431,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4093}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":703478,"byte_end":703495,"line_start":440,"line_end":440,"column_start":37,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4097}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":703809,"byte_end":703822,"line_start":452,"line_end":452,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4101}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":704054,"byte_end":704067,"line_start":458,"line_end":458,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4105},{"krate":0,"index":4106}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":704207,"byte_end":704220,"line_start":466,"line_end":466,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4109}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":704350,"byte_end":704363,"line_start":472,"line_end":472,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4112}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":704695,"byte_end":704708,"line_start":483,"line_end":483,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4115}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":704874,"byte_end":704887,"line_start":489,"line_end":489,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4118}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":706334,"byte_end":706357,"line_start":28,"line_end":28,"column_start":22,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":706382,"byte_end":706405,"line_start":29,"line_end":29,"column_start":22,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":706415,"byte_end":706438,"line_start":31,"line_end":31,"column_start":6,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4142},{"krate":0,"index":4143},{"krate":0,"index":4144},{"krate":0,"index":4145},{"krate":0,"index":4146}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712944,"byte_end":712961,"line_start":213,"line_end":213,"column_start":31,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712998,"byte_end":713015,"line_start":214,"line_end":214,"column_start":31,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":713031,"byte_end":713048,"line_start":216,"line_end":216,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4158},{"krate":0,"index":4159},{"krate":0,"index":4160}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":714747,"byte_end":714764,"line_start":263,"line_end":263,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4163}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":715205,"byte_end":715222,"line_start":273,"line_end":273,"column_start":46,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4166}],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":715700,"byte_end":715717,"line_start":282,"line_end":282,"column_start":37,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4170}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":716787,"byte_end":716809,"line_start":314,"line_end":314,"column_start":19,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":716837,"byte_end":716859,"line_start":316,"line_end":316,"column_start":17,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4181}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":717178,"byte_end":717200,"line_start":327,"line_end":327,"column_start":19,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4185},{"krate":0,"index":4186}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":717310,"byte_end":717332,"line_start":335,"line_end":335,"column_start":18,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4189}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":717664,"byte_end":717686,"line_start":346,"line_end":346,"column_start":36,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4192}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":717843,"byte_end":717865,"line_start":352,"line_end":352,"column_start":40,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4195}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":722677,"byte_end":722681,"line_start":94,"line_end":94,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":722706,"byte_end":722710,"line_start":95,"line_end":95,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":724340,"byte_end":724344,"line_start":145,"line_end":145,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":4227},{"krate":0,"index":4228},{"krate":0,"index":4231},{"krate":0,"index":4234},{"krate":0,"index":4235}],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":732833,"byte_end":732837,"line_start":341,"line_end":341,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4238}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":732955,"byte_end":732966,"line_start":347,"line_end":347,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4240}],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":734250,"byte_end":734259,"line_start":377,"line_end":377,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4242}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":736016,"byte_end":736031,"line_start":36,"line_end":36,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":736056,"byte_end":736071,"line_start":37,"line_end":37,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":736081,"byte_end":736096,"line_start":39,"line_end":39,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4266},{"krate":0,"index":4267},{"krate":0,"index":4268},{"krate":0,"index":4269},{"krate":0,"index":4270},{"krate":0,"index":4271},{"krate":0,"index":4272},{"krate":0,"index":4273}],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":739280,"byte_end":739289,"line_start":132,"line_end":132,"column_start":40,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":739342,"byte_end":739351,"line_start":133,"line_end":133,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":739675,"byte_end":739693,"line_start":145,"line_end":145,"column_start":27,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":739743,"byte_end":739761,"line_start":146,"line_end":146,"column_start":40,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":740096,"byte_end":740115,"line_start":158,"line_end":158,"column_start":27,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":740165,"byte_end":740184,"line_start":159,"line_end":159,"column_start":40,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":691,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":740204,"byte_end":740213,"line_start":161,"line_end":161,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4303}],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":740513,"byte_end":740522,"line_start":172,"line_end":172,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4306},{"krate":0,"index":4307},{"krate":0,"index":4308},{"krate":0,"index":4309},{"krate":0,"index":4310},{"krate":0,"index":4311},{"krate":0,"index":4313}],"docs":"","sig":null,"attributes":[]},{"id":693,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":747611,"byte_end":747620,"line_start":350,"line_end":350,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4317}],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":747946,"byte_end":747955,"line_start":358,"line_end":358,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4320}],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":748418,"byte_end":748435,"line_start":367,"line_end":367,"column_start":37,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4324}],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":748755,"byte_end":748764,"line_start":379,"line_end":379,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4327}],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":748947,"byte_end":748956,"line_start":386,"line_end":386,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4330}],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":749219,"byte_end":749237,"line_start":396,"line_end":396,"column_start":26,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4334}],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":749487,"byte_end":749506,"line_start":403,"line_end":403,"column_start":26,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4339}],"docs":"","sig":null,"attributes":[]},{"id":700,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":749763,"byte_end":749781,"line_start":409,"line_end":409,"column_start":36,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4343}],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":749991,"byte_end":750009,"line_start":415,"line_end":415,"column_start":49,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4346}],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":750150,"byte_end":750169,"line_start":421,"line_end":421,"column_start":36,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4349}],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":750380,"byte_end":750399,"line_start":427,"line_end":427,"column_start":49,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":4352}],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":750531,"byte_end":750549,"line_start":433,"line_end":433,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4355},{"krate":0,"index":4356}],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":750686,"byte_end":750705,"line_start":441,"line_end":441,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4359},{"krate":0,"index":4360}],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":750845,"byte_end":750864,"line_start":449,"line_end":449,"column_start":30,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4363}],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":750994,"byte_end":751012,"line_start":455,"line_end":455,"column_start":26,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4366}],"docs":"","sig":null,"attributes":[]},{"id":708,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":751317,"byte_end":751336,"line_start":465,"line_end":465,"column_start":26,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4369}],"docs":"","sig":null,"attributes":[]},{"id":709,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":753826,"byte_end":753843,"line_start":76,"line_end":76,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":710,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":753868,"byte_end":753885,"line_start":77,"line_end":77,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":711,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":753895,"byte_end":753912,"line_start":79,"line_end":79,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4384},{"krate":0,"index":4385},{"krate":0,"index":4386}],"docs":"","sig":null,"attributes":[]},{"id":712,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":754315,"byte_end":754326,"line_start":99,"line_end":99,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":713,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":754351,"byte_end":754362,"line_start":100,"line_end":100,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":714,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":754372,"byte_end":754383,"line_start":102,"line_end":102,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4392},{"krate":0,"index":4393}],"docs":"","sig":null,"attributes":[]},{"id":715,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":754649,"byte_end":754660,"line_start":115,"line_end":115,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4395}],"docs":"","sig":null,"attributes":[]},{"id":716,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":754824,"byte_end":754840,"line_start":125,"line_end":125,"column_start":28,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":717,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":754866,"byte_end":754882,"line_start":127,"line_end":127,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4403}],"docs":"","sig":null,"attributes":[]},{"id":718,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":755018,"byte_end":755034,"line_start":133,"line_end":133,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4406}],"docs":"","sig":null,"attributes":[]},{"id":719,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":758853,"byte_end":758860,"line_start":87,"line_end":87,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4421},{"krate":0,"index":4424},{"krate":0,"index":4425},{"krate":0,"index":4426},{"krate":0,"index":4427},{"krate":0,"index":4428},{"krate":0,"index":4429}],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":763236,"byte_end":763243,"line_start":201,"line_end":201,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4431},{"krate":0,"index":4432}],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":763730,"byte_end":763737,"line_start":215,"line_end":215,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4434}],"docs":"","sig":null,"attributes":[]},{"id":722,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":763851,"byte_end":763858,"line_start":221,"line_end":221,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4436},{"krate":0,"index":4437}],"docs":"","sig":null,"attributes":[]},{"id":723,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":764064,"byte_end":764071,"line_start":229,"line_end":229,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4439}],"docs":"","sig":null,"attributes":[]},{"id":724,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":764184,"byte_end":764191,"line_start":235,"line_end":235,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4441},{"krate":0,"index":4442}],"docs":"","sig":null,"attributes":[]},{"id":725,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":764334,"byte_end":764341,"line_start":243,"line_end":243,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4444}],"docs":"","sig":null,"attributes":[]},{"id":726,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":764443,"byte_end":764453,"line_start":249,"line_end":249,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4446},{"krate":0,"index":4447},{"krate":0,"index":4448},{"krate":0,"index":4449},{"krate":0,"index":4450},{"krate":0,"index":4451}],"docs":"","sig":null,"attributes":[]},{"id":727,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":768453,"byte_end":768463,"line_start":339,"line_end":339,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4453},{"krate":0,"index":4454}],"docs":"","sig":null,"attributes":[]},{"id":728,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":768955,"byte_end":768965,"line_start":353,"line_end":353,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4456}],"docs":"","sig":null,"attributes":[]},{"id":729,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":769079,"byte_end":769089,"line_start":359,"line_end":359,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4458},{"krate":0,"index":4459}],"docs":"","sig":null,"attributes":[]},{"id":730,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":769297,"byte_end":769307,"line_start":367,"line_end":367,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4461}],"docs":"","sig":null,"attributes":[]},{"id":731,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":769418,"byte_end":769428,"line_start":373,"line_end":373,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4463}],"docs":"","sig":null,"attributes":[]},{"id":732,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":770175,"byte_end":770190,"line_start":392,"line_end":392,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4466}],"docs":"","sig":null,"attributes":[]},{"id":733,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":770870,"byte_end":770885,"line_start":409,"line_end":409,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4468}],"docs":"","sig":null,"attributes":[]},{"id":734,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":771002,"byte_end":771017,"line_start":415,"line_end":415,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4470}],"docs":"","sig":null,"attributes":[]},{"id":735,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":771191,"byte_end":771201,"line_start":421,"line_end":421,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4472}],"docs":"","sig":null,"attributes":[]},{"id":736,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/path.rs","byte_start":777570,"byte_end":777574,"line_start":34,"line_end":34,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4521},{"krate":0,"index":4522},{"krate":0,"index":4523},{"krate":0,"index":4524},{"krate":0,"index":4525},{"krate":0,"index":4526},{"krate":0,"index":4527},{"krate":0,"index":4529}],"docs":"","sig":null,"attributes":[]},{"id":737,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/time.rs","byte_start":781468,"byte_end":781475,"line_start":25,"line_end":25,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4541},{"krate":0,"index":4542}],"docs":"","sig":null,"attributes":[]},{"id":738,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/time.rs","byte_start":782101,"byte_end":782111,"line_start":50,"line_end":50,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4547},{"krate":0,"index":4548}],"docs":"","sig":null,"attributes":[]},{"id":739,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":796232,"byte_end":796237,"line_start":50,"line_end":50,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4591}],"docs":"","sig":null,"attributes":[]},{"id":740,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":796395,"byte_end":796400,"line_start":56,"line_end":56,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4593}],"docs":"","sig":null,"attributes":[]},{"id":741,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":796577,"byte_end":796580,"line_start":62,"line_end":62,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4595}],"docs":"","sig":null,"attributes":[]},{"id":742,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":796737,"byte_end":796740,"line_start":68,"line_end":68,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4597}],"docs":"","sig":null,"attributes":[]},{"id":743,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":796905,"byte_end":796908,"line_start":74,"line_end":74,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4599}],"docs":"","sig":null,"attributes":[]},{"id":744,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":796999,"byte_end":797002,"line_start":80,"line_end":80,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4601}],"docs":"","sig":null,"attributes":[]},{"id":745,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":797073,"byte_end":797076,"line_start":86,"line_end":86,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":4603},{"krate":0,"index":4604},{"krate":0,"index":4605},{"krate":0,"index":4606},{"krate":0,"index":4607},{"krate":0,"index":4608},{"krate":0,"index":4609},{"krate":0,"index":4610},{"krate":0,"index":4611},{"krate":0,"index":4612},{"krate":0,"index":4613},{"krate":0,"index":4615},{"krate":0,"index":4616},{"krate":0,"index":4617},{"krate":0,"index":4618},{"krate":0,"index":4619}],"docs":"","sig":null,"attributes":[]},{"id":746,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":799175,"byte_end":799180,"line_start":172,"line_end":172,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4621},{"krate":0,"index":4622},{"krate":0,"index":4623},{"krate":0,"index":4624},{"krate":0,"index":4625},{"krate":0,"index":4626},{"krate":0,"index":4627},{"krate":0,"index":4628},{"krate":0,"index":4629},{"krate":0,"index":4630},{"krate":0,"index":4631},{"krate":0,"index":4632},{"krate":0,"index":4633},{"krate":0,"index":4634},{"krate":0,"index":4635},{"krate":0,"index":4636}],"docs":"","sig":null,"attributes":[]},{"id":747,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":801713,"byte_end":801721,"line_start":272,"line_end":272,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4641},{"krate":0,"index":4642}],"docs":"","sig":null,"attributes":[]},{"id":748,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":802470,"byte_end":802475,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4647},{"krate":0,"index":4648}],"docs":"","sig":null,"attributes":[]},{"id":749,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/backtrace.rs","byte_start":804087,"byte_end":804092,"line_start":39,"line_end":39,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4674}],"docs":"","sig":null,"attributes":[]},{"id":750,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/backtrace.rs","byte_start":804675,"byte_end":804691,"line_start":66,"line_end":66,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4680}],"docs":"","sig":null,"attributes":[]},{"id":751,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/gnu/mod.rs","byte_start":810284,"byte_end":810295,"line_start":30,"line_end":30,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4723}],"docs":"","sig":null,"attributes":[]},{"id":752,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/gnu/mod.rs","byte_start":813563,"byte_end":813569,"line_start":117,"line_end":117,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4735},{"krate":0,"index":4737},{"krate":0,"index":4738},{"krate":0,"index":4740}],"docs":"","sig":null,"attributes":[]},{"id":753,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/gnu/mod.rs","byte_start":814769,"byte_end":814775,"line_start":151,"line_end":151,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4742}],"docs":"","sig":null,"attributes":[]},{"id":754,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/gnu/mod.rs","byte_start":815671,"byte_end":815681,"line_start":184,"line_end":184,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4749},{"krate":0,"index":4751},{"krate":0,"index":4754}],"docs":"","sig":null,"attributes":[]},{"id":755,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/gnu/mod.rs","byte_start":817119,"byte_end":817129,"line_start":236,"line_end":236,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4758}],"docs":"","sig":null,"attributes":[]},{"id":756,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/gnu/mod.rs","byte_start":817387,"byte_end":817397,"line_start":246,"line_end":246,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4761}],"docs":"","sig":null,"attributes":[]},{"id":757,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/gnu/libbacktrace.rs","byte_start":819002,"byte_end":819008,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4792},{"krate":0,"index":4794},{"krate":0,"index":4796},{"krate":0,"index":4797},{"krate":0,"index":4798},{"krate":0,"index":4799}],"docs":"","sig":null,"attributes":[]},{"id":758,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":837882,"byte_end":837886,"line_start":38,"line_end":38,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":4856},{"krate":0,"index":4857},{"krate":0,"index":4858},{"krate":0,"index":4859}],"docs":"","sig":null,"attributes":[]},{"id":759,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":840245,"byte_end":840256,"line_start":106,"line_end":106,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4878}],"docs":"","sig":null,"attributes":[]},{"id":760,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":840402,"byte_end":840413,"line_start":112,"line_end":112,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4881}],"docs":"","sig":null,"attributes":[]},{"id":761,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":840568,"byte_end":840579,"line_start":118,"line_end":118,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4884}],"docs":"","sig":null,"attributes":[]},{"id":762,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":840690,"byte_end":840701,"line_start":124,"line_end":124,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4887},{"krate":0,"index":4888},{"krate":0,"index":4889},{"krate":0,"index":4890}],"docs":"","sig":null,"attributes":[]},{"id":763,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":841624,"byte_end":841636,"line_start":155,"line_end":155,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4893}],"docs":"","sig":null,"attributes":[]},{"id":764,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":841764,"byte_end":841776,"line_start":161,"line_end":161,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4896}],"docs":"","sig":null,"attributes":[]},{"id":765,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":842037,"byte_end":842049,"line_start":170,"line_end":170,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4899}],"docs":"","sig":null,"attributes":[]},{"id":766,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":842373,"byte_end":842385,"line_start":180,"line_end":180,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4902},{"krate":0,"index":4903}],"docs":"","sig":null,"attributes":[]},{"id":767,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/thread_info.rs","byte_start":844017,"byte_end":844030,"line_start":27,"line_end":27,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4914}],"docs":"","sig":null,"attributes":[]},{"id":768,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":848140,"byte_end":848149,"line_start":53,"line_end":53,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4946}],"docs":"","sig":null,"attributes":[]},{"id":769,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":848301,"byte_end":848310,"line_start":60,"line_end":60,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4948},{"krate":0,"index":4949},{"krate":0,"index":4950},{"krate":0,"index":4951},{"krate":0,"index":4952},{"krate":0,"index":4953}],"docs":"","sig":null,"attributes":[]},{"id":770,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":850246,"byte_end":850253,"line_start":124,"line_end":124,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4955},{"krate":0,"index":4956}],"docs":"","sig":null,"attributes":[]},{"id":771,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":850368,"byte_end":850375,"line_start":132,"line_end":132,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4958}],"docs":"","sig":null,"attributes":[]},{"id":772,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":850658,"byte_end":850665,"line_start":141,"line_end":141,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4960}],"docs":"","sig":null,"attributes":[]},{"id":773,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":850811,"byte_end":850818,"line_start":148,"line_end":148,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4962},{"krate":0,"index":4963},{"krate":0,"index":4964},{"krate":0,"index":4965},{"krate":0,"index":4966},{"krate":0,"index":4967},{"krate":0,"index":4968},{"krate":0,"index":4970},{"krate":0,"index":4971},{"krate":0,"index":4972},{"krate":0,"index":4973},{"krate":0,"index":4974},{"krate":0,"index":4975},{"krate":0,"index":4976},{"krate":0,"index":4977},{"krate":0,"index":4978},{"krate":0,"index":4979},{"krate":0,"index":4980},{"krate":0,"index":4981},{"krate":0,"index":4982},{"krate":0,"index":4983},{"krate":0,"index":4984},{"krate":0,"index":4985}],"docs":"","sig":null,"attributes":[]},{"id":774,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":858896,"byte_end":858903,"line_start":375,"line_end":375,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4987}],"docs":"","sig":null,"attributes":[]},{"id":775,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":859305,"byte_end":859312,"line_start":387,"line_end":387,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4990}],"docs":"","sig":null,"attributes":[]},{"id":776,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":859920,"byte_end":859924,"line_start":406,"line_end":406,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4994}],"docs":"","sig":null,"attributes":[]},{"id":777,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":860188,"byte_end":860192,"line_start":415,"line_end":415,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4996}],"docs":"","sig":null,"attributes":[]},{"id":778,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":861073,"byte_end":861077,"line_start":439,"line_end":439,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5001}],"docs":"","sig":null,"attributes":[]},{"id":779,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":861875,"byte_end":861879,"line_start":461,"line_end":461,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5003},{"krate":0,"index":5004},{"krate":0,"index":5005},{"krate":0,"index":5006},{"krate":0,"index":5007},{"krate":0,"index":5008},{"krate":0,"index":5009},{"krate":0,"index":5010},{"krate":0,"index":5011},{"krate":0,"index":5012},{"krate":0,"index":5013},{"krate":0,"index":5014},{"krate":0,"index":5015},{"krate":0,"index":5016},{"krate":0,"index":5017},{"krate":0,"index":5018},{"krate":0,"index":5019},{"krate":0,"index":5020},{"krate":0,"index":5021},{"krate":0,"index":5022},{"krate":0,"index":5023},{"krate":0,"index":5024},{"krate":0,"index":5025},{"krate":0,"index":5026}],"docs":"","sig":null,"attributes":[]},{"id":780,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":868974,"byte_end":868978,"line_start":688,"line_end":688,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5028},{"krate":0,"index":5029}],"docs":"","sig":null,"attributes":[]},{"id":781,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":869704,"byte_end":869708,"line_start":711,"line_end":711,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5031},{"krate":0,"index":5032}],"docs":"","sig":null,"attributes":[]},{"id":782,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":870337,"byte_end":870341,"line_start":731,"line_end":731,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5034},{"krate":0,"index":5035}],"docs":"","sig":null,"attributes":[]},{"id":783,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":870749,"byte_end":870753,"line_start":745,"line_end":745,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5037},{"krate":0,"index":5038}],"docs":"","sig":null,"attributes":[]},{"id":784,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":872332,"byte_end":872346,"line_start":800,"line_end":800,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5046},{"krate":0,"index":5047},{"krate":0,"index":5049}],"docs":"","sig":null,"attributes":[]},{"id":785,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":872912,"byte_end":872922,"line_start":823,"line_end":823,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5052},{"krate":0,"index":5053},{"krate":0,"index":5056}],"docs":"","sig":null,"attributes":[]},{"id":786,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":873812,"byte_end":873821,"line_start":855,"line_end":855,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5059}],"docs":"","sig":null,"attributes":[]},{"id":787,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":873939,"byte_end":873946,"line_start":862,"line_end":862,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5062}],"docs":"","sig":null,"attributes":[]},{"id":788,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":874094,"byte_end":874098,"line_start":870,"line_end":870,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5065}],"docs":"","sig":null,"attributes":[]},{"id":789,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":878007,"byte_end":878017,"line_start":111,"line_end":111,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5116}],"docs":"","sig":null,"attributes":[]},{"id":790,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":878097,"byte_end":878107,"line_start":117,"line_end":117,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5118},{"krate":0,"index":5119}],"docs":"","sig":null,"attributes":[]},{"id":791,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":878565,"byte_end":878575,"line_start":133,"line_end":133,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":792,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":878600,"byte_end":878610,"line_start":134,"line_end":134,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":793,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":878629,"byte_end":878639,"line_start":136,"line_end":136,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5123}],"docs":"","sig":null,"attributes":[]},{"id":794,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":878752,"byte_end":878762,"line_start":142,"line_end":142,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5125},{"krate":0,"index":5126}],"docs":"","sig":null,"attributes":[]},{"id":795,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":879540,"byte_end":879550,"line_start":165,"line_end":165,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5130},{"krate":0,"index":5131}],"docs":"","sig":null,"attributes":[]},{"id":796,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":880289,"byte_end":880298,"line_start":190,"line_end":190,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5136},{"krate":0,"index":5137},{"krate":0,"index":5138},{"krate":0,"index":5139},{"krate":0,"index":5140},{"krate":0,"index":5141},{"krate":0,"index":5143},{"krate":0,"index":5145},{"krate":0,"index":5146},{"krate":0,"index":5147},{"krate":0,"index":5148},{"krate":0,"index":5149},{"krate":0,"index":5150},{"krate":0,"index":5151},{"krate":0,"index":5152},{"krate":0,"index":5153},{"krate":0,"index":5154},{"krate":0,"index":5155},{"krate":0,"index":5156},{"krate":0,"index":5157},{"krate":0,"index":5158},{"krate":0,"index":5160},{"krate":0,"index":5162},{"krate":0,"index":5163},{"krate":0,"index":5165},{"krate":0,"index":5166},{"krate":0,"index":5167},{"krate":0,"index":5168},{"krate":0,"index":5169},{"krate":0,"index":5170},{"krate":0,"index":5171},{"krate":0,"index":5172}],"docs":"","sig":null,"attributes":[]},{"id":797,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":885133,"byte_end":885142,"line_start":354,"line_end":354,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5174}],"docs":"","sig":null,"attributes":[]},{"id":798,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":885259,"byte_end":885268,"line_start":360,"line_end":360,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5176}],"docs":"","sig":null,"attributes":[]},{"id":799,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":885899,"byte_end":885910,"line_start":385,"line_end":385,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5180},{"krate":0,"index":5181},{"krate":0,"index":5182},{"krate":0,"index":5183},{"krate":0,"index":5184},{"krate":0,"index":5185},{"krate":0,"index":5186},{"krate":0,"index":5187},{"krate":0,"index":5188},{"krate":0,"index":5189},{"krate":0,"index":5191},{"krate":0,"index":5192},{"krate":0,"index":5194},{"krate":0,"index":5195},{"krate":0,"index":5196},{"krate":0,"index":5197},{"krate":0,"index":5198},{"krate":0,"index":5199}],"docs":"","sig":null,"attributes":[]},{"id":800,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":889424,"byte_end":889435,"line_start":494,"line_end":494,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5201}],"docs":"","sig":null,"attributes":[]},{"id":801,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":889556,"byte_end":889567,"line_start":500,"line_end":500,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5203}],"docs":"","sig":null,"attributes":[]},{"id":802,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":890094,"byte_end":890103,"line_start":521,"line_end":521,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5207},{"krate":0,"index":5208},{"krate":0,"index":5209},{"krate":0,"index":5210},{"krate":0,"index":5211},{"krate":0,"index":5212},{"krate":0,"index":5213},{"krate":0,"index":5214},{"krate":0,"index":5215},{"krate":0,"index":5216},{"krate":0,"index":5218},{"krate":0,"index":5220},{"krate":0,"index":5221},{"krate":0,"index":5222},{"krate":0,"index":5223},{"krate":0,"index":5225},{"krate":0,"index":5226},{"krate":0,"index":5227},{"krate":0,"index":5228},{"krate":0,"index":5229},{"krate":0,"index":5230},{"krate":0,"index":5231},{"krate":0,"index":5232},{"krate":0,"index":5233},{"krate":0,"index":5234},{"krate":0,"index":5235},{"krate":0,"index":5236},{"krate":0,"index":5237},{"krate":0,"index":5238},{"krate":0,"index":5239},{"krate":0,"index":5240},{"krate":0,"index":5241},{"krate":0,"index":5242},{"krate":0,"index":5243},{"krate":0,"index":5244},{"krate":0,"index":5245},{"krate":0,"index":5246},{"krate":0,"index":5247},{"krate":0,"index":5248}],"docs":"","sig":null,"attributes":[]},{"id":803,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":897423,"byte_end":897432,"line_start":742,"line_end":742,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5251}],"docs":"","sig":null,"attributes":[]},{"id":804,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":897549,"byte_end":897558,"line_start":748,"line_end":748,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5253}],"docs":"","sig":null,"attributes":[]},{"id":805,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/mutex.rs","byte_start":909568,"byte_end":909587,"line_start":181,"line_end":181,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5349},{"krate":0,"index":5350},{"krate":0,"index":5351},{"krate":0,"index":5352},{"krate":0,"index":5353},{"krate":0,"index":5354}],"docs":"","sig":null,"attributes":[]},{"id":806,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/mutex.rs","byte_start":913611,"byte_end":913625,"line_start":314,"line_end":314,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":807,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/mutex.rs","byte_start":913650,"byte_end":913664,"line_start":315,"line_end":315,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":808,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/mutex.rs","byte_start":913748,"byte_end":913762,"line_start":321,"line_end":321,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5360},{"krate":0,"index":5361},{"krate":0,"index":5362},{"krate":0,"index":5363},{"krate":0,"index":5364},{"krate":0,"index":5365}],"docs":"","sig":null,"attributes":[]},{"id":809,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/condvar.rs","byte_start":916072,"byte_end":916093,"line_start":35,"line_end":35,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5389},{"krate":0,"index":5390},{"krate":0,"index":5392},{"krate":0,"index":5395},{"krate":0,"index":5396},{"krate":0,"index":5397},{"krate":0,"index":5398},{"krate":0,"index":5399}],"docs":"","sig":null,"attributes":[]},{"id":810,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/condvar.rs","byte_start":920218,"byte_end":920234,"line_start":173,"line_end":173,"column_start":22,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":811,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/condvar.rs","byte_start":920259,"byte_end":920275,"line_start":174,"line_end":174,"column_start":22,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":812,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/condvar.rs","byte_start":920365,"byte_end":920381,"line_start":181,"line_end":181,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5405},{"krate":0,"index":5406},{"krate":0,"index":5407},{"krate":0,"index":5408},{"krate":0,"index":5409},{"krate":0,"index":5410},{"krate":0,"index":5411},{"krate":0,"index":5412}],"docs":"","sig":null,"attributes":[]},{"id":813,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/rwlock.rs","byte_start":922973,"byte_end":922993,"line_start":37,"line_end":37,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5434},{"krate":0,"index":5435},{"krate":0,"index":5437},{"krate":0,"index":5438},{"krate":0,"index":5440},{"krate":0,"index":5441},{"krate":0,"index":5442},{"krate":0,"index":5443},{"krate":0,"index":5444}],"docs":"","sig":null,"attributes":[]},{"id":814,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/rwlock.rs","byte_start":928426,"byte_end":928441,"line_start":227,"line_end":227,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":815,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/rwlock.rs","byte_start":928466,"byte_end":928481,"line_start":228,"line_end":228,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":816,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/rwlock.rs","byte_start":928825,"byte_end":928840,"line_start":239,"line_end":239,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5450},{"krate":0,"index":5451},{"krate":0,"index":5452},{"krate":0,"index":5453},{"krate":0,"index":5454},{"krate":0,"index":5455},{"krate":0,"index":5456},{"krate":0,"index":5457},{"krate":0,"index":5458}],"docs":"","sig":null,"attributes":[]},{"id":817,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fd.rs","byte_start":932829,"byte_end":932837,"line_start":47,"line_end":47,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5479},{"krate":0,"index":5480},{"krate":0,"index":5481},{"krate":0,"index":5482},{"krate":0,"index":5483},{"krate":0,"index":5484},{"krate":0,"index":5485},{"krate":0,"index":5489},{"krate":0,"index":5490},{"krate":0,"index":5491},{"krate":0,"index":5495},{"krate":0,"index":5496},{"krate":0,"index":5497},{"krate":0,"index":5498}],"docs":"","sig":null,"attributes":[]},{"id":818,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fd.rs","byte_start":938696,"byte_end":938704,"line_start":229,"line_end":229,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5507}],"docs":"","sig":null,"attributes":[]},{"id":819,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fd.rs","byte_start":938782,"byte_end":938790,"line_start":235,"line_end":235,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5509}],"docs":"","sig":null,"attributes":[]},{"id":820,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":941198,"byte_end":941201,"line_start":58,"line_end":58,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":821,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":941226,"byte_end":941229,"line_start":59,"line_end":59,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":822,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":941728,"byte_end":941736,"line_start":90,"line_end":90,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5578}],"docs":"","sig":null,"attributes":[]},{"id":823,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":941818,"byte_end":941826,"line_start":96,"line_end":96,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5580},{"krate":0,"index":5581},{"krate":0,"index":5582}],"docs":"","sig":null,"attributes":[]},{"id":824,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":942126,"byte_end":942134,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5584},{"krate":0,"index":5585},{"krate":0,"index":5586}],"docs":"","sig":null,"attributes":[]},{"id":825,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":942841,"byte_end":942849,"line_start":133,"line_end":133,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5588}],"docs":"","sig":null,"attributes":[]},{"id":826,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":942921,"byte_end":942936,"line_start":139,"line_end":139,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5590},{"krate":0,"index":5591},{"krate":0,"index":5592}],"docs":"","sig":null,"attributes":[]},{"id":827,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":943507,"byte_end":943515,"line_start":159,"line_end":159,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5594},{"krate":0,"index":5595},{"krate":0,"index":5596},{"krate":0,"index":5597}],"docs":"","sig":null,"attributes":[]},{"id":828,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":943859,"byte_end":943874,"line_start":175,"line_end":175,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5599}],"docs":"","sig":null,"attributes":[]},{"id":829,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":944005,"byte_end":944012,"line_start":181,"line_end":181,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5601}],"docs":"","sig":null,"attributes":[]},{"id":830,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":944304,"byte_end":944311,"line_start":189,"line_end":189,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5603},{"krate":0,"index":5604}],"docs":"","sig":null,"attributes":[]},{"id":831,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":945561,"byte_end":945564,"line_start":222,"line_end":222,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5606}],"docs":"","sig":null,"attributes":[]},{"id":832,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":945689,"byte_end":945697,"line_start":229,"line_end":229,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5608},{"krate":0,"index":5609},{"krate":0,"index":5610},{"krate":0,"index":5611},{"krate":0,"index":5613},{"krate":0,"index":5614}],"docs":"","sig":null,"attributes":[]},{"id":833,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":947094,"byte_end":947105,"line_start":269,"line_end":269,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5616},{"krate":0,"index":5617},{"krate":0,"index":5618},{"krate":0,"index":5619},{"krate":0,"index":5620},{"krate":0,"index":5621},{"krate":0,"index":5622},{"krate":0,"index":5623},{"krate":0,"index":5624},{"krate":0,"index":5625},{"krate":0,"index":5626}],"docs":"","sig":null,"attributes":[]},{"id":834,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":949569,"byte_end":949573,"line_start":347,"line_end":347,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5628},{"krate":0,"index":5629},{"krate":0,"index":5639},{"krate":0,"index":5640},{"krate":0,"index":5642},{"krate":0,"index":5645},{"krate":0,"index":5649},{"krate":0,"index":5650},{"krate":0,"index":5651},{"krate":0,"index":5652},{"krate":0,"index":5653},{"krate":0,"index":5654},{"krate":0,"index":5655},{"krate":0,"index":5656},{"krate":0,"index":5657},{"krate":0,"index":5658},{"krate":0,"index":5659},{"krate":0,"index":5660}],"docs":"","sig":null,"attributes":[]},{"id":835,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":954482,"byte_end":954492,"line_start":491,"line_end":491,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5663},{"krate":0,"index":5664},{"krate":0,"index":5665}],"docs":"","sig":null,"attributes":[]},{"id":836,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":954948,"byte_end":954952,"line_start":511,"line_end":511,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5668}],"docs":"","sig":null,"attributes":[]},{"id":837,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":955055,"byte_end":955059,"line_start":517,"line_end":517,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5670}],"docs":"","sig":null,"attributes":[]},{"id":838,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/sgxfs.rs","byte_start":961471,"byte_end":961482,"line_start":38,"line_end":38,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5738},{"krate":0,"index":5739},{"krate":0,"index":5740},{"krate":0,"index":5741},{"krate":0,"index":5742},{"krate":0,"index":5743},{"krate":0,"index":5744}],"docs":"","sig":null,"attributes":[]},{"id":839,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/sgxfs.rs","byte_start":962558,"byte_end":962565,"line_start":73,"line_end":73,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5746},{"krate":0,"index":5747},{"krate":0,"index":5748},{"krate":0,"index":5751},{"krate":0,"index":5753},{"krate":0,"index":5755},{"krate":0,"index":5758},{"krate":0,"index":5760},{"krate":0,"index":5762},{"krate":0,"index":5763},{"krate":0,"index":5764}],"docs":"","sig":null,"attributes":[]},{"id":840,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/sgxfs.rs","byte_start":971410,"byte_end":971417,"line_start":290,"line_end":290,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5776}],"docs":"","sig":null,"attributes":[]},{"id":841,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/io.rs","byte_start":973271,"byte_end":973278,"line_start":29,"line_end":29,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5787},{"krate":0,"index":5788},{"krate":0,"index":5789}],"docs":"","sig":null,"attributes":[]},{"id":842,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/io.rs","byte_start":974056,"byte_end":974066,"line_start":62,"line_end":62,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5796},{"krate":0,"index":5797},{"krate":0,"index":5798},{"krate":0,"index":5799}],"docs":"","sig":null,"attributes":[]},{"id":843,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/net.rs","byte_start":977017,"byte_end":977023,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5839},{"krate":0,"index":5840},{"krate":0,"index":5841},{"krate":0,"index":5842},{"krate":0,"index":5843},{"krate":0,"index":5845},{"krate":0,"index":5847},{"krate":0,"index":5848},{"krate":0,"index":5849},{"krate":0,"index":5850},{"krate":0,"index":5851},{"krate":0,"index":5852},{"krate":0,"index":5853},{"krate":0,"index":5854},{"krate":0,"index":5855},{"krate":0,"index":5856},{"krate":0,"index":5857},{"krate":0,"index":5858},{"krate":0,"index":5859},{"krate":0,"index":5860},{"krate":0,"index":5861},{"krate":0,"index":5862},{"krate":0,"index":5863},{"krate":0,"index":5864},{"krate":0,"index":5865}],"docs":"","sig":null,"attributes":[]},{"id":844,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/net.rs","byte_start":987030,"byte_end":987036,"line_start":349,"line_end":349,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5867}],"docs":"","sig":null,"attributes":[]},{"id":845,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/net.rs","byte_start":987135,"byte_end":987141,"line_start":355,"line_end":355,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5869}],"docs":"","sig":null,"attributes":[]},{"id":846,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/net.rs","byte_start":987254,"byte_end":987260,"line_start":361,"line_end":361,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5871}],"docs":"","sig":null,"attributes":[]},{"id":847,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":997378,"byte_end":997382,"line_start":161,"line_end":161,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5916},{"krate":0,"index":5917}],"docs":"","sig":null,"attributes":[]},{"id":848,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":998226,"byte_end":998237,"line_start":189,"line_end":189,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5923},{"krate":0,"index":5924},{"krate":0,"index":5925}],"docs":"","sig":null,"attributes":[]},{"id":849,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":999635,"byte_end":999646,"line_start":228,"line_end":228,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5930},{"krate":0,"index":5931}],"docs":"","sig":null,"attributes":[]},{"id":850,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001957,"byte_end":1001965,"line_start":302,"line_end":302,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5950},{"krate":0,"index":5951},{"krate":0,"index":5952},{"krate":0,"index":5953},{"krate":0,"index":5954},{"krate":0,"index":5955},{"krate":0,"index":5956},{"krate":0,"index":5957},{"krate":0,"index":5958},{"krate":0,"index":5959},{"krate":0,"index":5960},{"krate":0,"index":5961},{"krate":0,"index":5962},{"krate":0,"index":5963},{"krate":0,"index":5964},{"krate":0,"index":5965}],"docs":"","sig":null,"attributes":[]},{"id":851,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1003594,"byte_end":1003602,"line_start":374,"line_end":374,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5972},{"krate":0,"index":5973},{"krate":0,"index":5974},{"krate":0,"index":5975}],"docs":"","sig":null,"attributes":[]},{"id":852,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1004175,"byte_end":1004183,"line_start":396,"line_end":396,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5979}],"docs":"","sig":null,"attributes":[]},{"id":853,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1005012,"byte_end":1005022,"line_start":423,"line_end":423,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5986}],"docs":"","sig":null,"attributes":[]},{"id":854,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1008187,"byte_end":1008191,"line_start":77,"line_end":77,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6005}],"docs":"","sig":null,"attributes":[]},{"id":855,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1008296,"byte_end":1008300,"line_start":83,"line_end":83,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6007}],"docs":"","sig":null,"attributes":[]},{"id":856,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1008446,"byte_end":1008450,"line_start":89,"line_end":89,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6009}],"docs":"","sig":null,"attributes":[]},{"id":857,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1008592,"byte_end":1008597,"line_start":96,"line_end":96,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6011}],"docs":"","sig":null,"attributes":[]},{"id":858,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1008718,"byte_end":1008724,"line_start":103,"line_end":103,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6013}],"docs":"","sig":null,"attributes":[]},{"id":859,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1008846,"byte_end":1008852,"line_start":110,"line_end":110,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6015}],"docs":"","sig":null,"attributes":[]},{"id":860,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1008978,"byte_end":1008987,"line_start":117,"line_end":117,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6018}],"docs":"","sig":null,"attributes":[]},{"id":861,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1009116,"byte_end":1009126,"line_start":124,"line_end":124,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6021}],"docs":"","sig":null,"attributes":[]},{"id":862,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1009256,"byte_end":1009266,"line_start":131,"line_end":131,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6024}],"docs":"","sig":null,"attributes":[]},{"id":863,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1012079,"byte_end":1012089,"line_start":86,"line_end":86,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6068},{"krate":0,"index":6070},{"krate":0,"index":6071},{"krate":0,"index":6072},{"krate":0,"index":6073}],"docs":"","sig":null,"attributes":[]},{"id":864,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1014139,"byte_end":1014149,"line_start":142,"line_end":142,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6075}],"docs":"","sig":null,"attributes":[]},{"id":865,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1014565,"byte_end":1014577,"line_start":154,"line_end":154,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6082}],"docs":"","sig":null,"attributes":[]},{"id":866,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1014927,"byte_end":1014937,"line_start":168,"line_end":168,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6087}],"docs":"","sig":null,"attributes":[]},{"id":867,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1015346,"byte_end":1015356,"line_start":182,"line_end":182,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6089},{"krate":0,"index":6092},{"krate":0,"index":6093},{"krate":0,"index":6094},{"krate":0,"index":6096},{"krate":0,"index":6098},{"krate":0,"index":6099},{"krate":0,"index":6100},{"krate":0,"index":6101},{"krate":0,"index":6102},{"krate":0,"index":6103},{"krate":0,"index":6104}],"docs":"","sig":null,"attributes":[]},{"id":868,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1019644,"byte_end":1019654,"line_start":297,"line_end":297,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6106},{"krate":0,"index":6107},{"krate":0,"index":6108}],"docs":"","sig":null,"attributes":[]},{"id":869,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1020387,"byte_end":1020397,"line_start":327,"line_end":327,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6115},{"krate":0,"index":6116},{"krate":0,"index":6117}],"docs":"","sig":null,"attributes":[]},{"id":870,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1021076,"byte_end":1021086,"line_start":355,"line_end":355,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6124}],"docs":"","sig":null,"attributes":[]},{"id":871,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1021179,"byte_end":1021189,"line_start":361,"line_end":361,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6126}],"docs":"","sig":null,"attributes":[]},{"id":872,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1021316,"byte_end":1021326,"line_start":367,"line_end":367,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6128}],"docs":"","sig":null,"attributes":[]},{"id":873,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1021424,"byte_end":1021433,"line_start":373,"line_end":373,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6130}],"docs":"","sig":null,"attributes":[]},{"id":874,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1021547,"byte_end":1021558,"line_start":379,"line_end":379,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6132}],"docs":"","sig":null,"attributes":[]},{"id":875,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1021672,"byte_end":1021681,"line_start":385,"line_end":385,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6134}],"docs":"","sig":null,"attributes":[]},{"id":876,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1021797,"byte_end":1021806,"line_start":391,"line_end":391,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6136}],"docs":"","sig":null,"attributes":[]},{"id":877,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1022037,"byte_end":1022048,"line_start":398,"line_end":398,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6138}],"docs":"","sig":null,"attributes":[]},{"id":878,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1022285,"byte_end":1022294,"line_start":405,"line_end":405,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6140}],"docs":"","sig":null,"attributes":[]},{"id":879,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1022525,"byte_end":1022534,"line_start":412,"line_end":412,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6142}],"docs":"","sig":null,"attributes":[]},{"id":880,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1022659,"byte_end":1022670,"line_start":418,"line_end":418,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6144}],"docs":"","sig":null,"attributes":[]},{"id":881,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1022795,"byte_end":1022804,"line_start":424,"line_end":424,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6146}],"docs":"","sig":null,"attributes":[]},{"id":882,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1023021,"byte_end":1023033,"line_start":434,"line_end":434,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6151}],"docs":"","sig":null,"attributes":[]},{"id":883,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1023347,"byte_end":1023359,"line_start":445,"line_end":445,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6153},{"krate":0,"index":6156},{"krate":0,"index":6157},{"krate":0,"index":6158},{"krate":0,"index":6160},{"krate":0,"index":6161},{"krate":0,"index":6162}],"docs":"","sig":null,"attributes":[]},{"id":884,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1026080,"byte_end":1026092,"line_start":518,"line_end":518,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6164}],"docs":"","sig":null,"attributes":[]},{"id":885,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1026185,"byte_end":1026197,"line_start":524,"line_end":524,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6166}],"docs":"","sig":null,"attributes":[]},{"id":886,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1026328,"byte_end":1026340,"line_start":530,"line_end":530,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6168}],"docs":"","sig":null,"attributes":[]},{"id":887,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1026936,"byte_end":1026944,"line_start":557,"line_end":557,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6176},{"krate":0,"index":6177},{"krate":0,"index":6179}],"docs":"","sig":null,"attributes":[]},{"id":888,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1027290,"byte_end":1027302,"line_start":573,"line_end":573,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6184}],"docs":"","sig":null,"attributes":[]},{"id":889,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1027713,"byte_end":1027725,"line_start":587,"line_end":587,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6186},{"krate":0,"index":6189},{"krate":0,"index":6190},{"krate":0,"index":6191},{"krate":0,"index":6194},{"krate":0,"index":6195},{"krate":0,"index":6197},{"krate":0,"index":6199},{"krate":0,"index":6201},{"krate":0,"index":6202},{"krate":0,"index":6205},{"krate":0,"index":6206},{"krate":0,"index":6207},{"krate":0,"index":6208},{"krate":0,"index":6209},{"krate":0,"index":6210},{"krate":0,"index":6211},{"krate":0,"index":6212}],"docs":"","sig":null,"attributes":[]},{"id":890,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1035038,"byte_end":1035050,"line_start":804,"line_end":804,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6214}],"docs":"","sig":null,"attributes":[]},{"id":891,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1035143,"byte_end":1035155,"line_start":810,"line_end":810,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6216}],"docs":"","sig":null,"attributes":[]},{"id":892,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1035286,"byte_end":1035298,"line_start":816,"line_end":816,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6218}],"docs":"","sig":null,"attributes":[]},{"id":893,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/os.rs","byte_start":1040493,"byte_end":1040503,"line_start":78,"line_end":78,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6313},{"krate":0,"index":6314},{"krate":0,"index":6315}],"docs":"","sig":null,"attributes":[]},{"id":894,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/os.rs","byte_start":1041210,"byte_end":1041224,"line_start":104,"line_end":104,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6320}],"docs":"","sig":null,"attributes":[]},{"id":895,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/os.rs","byte_start":1041370,"byte_end":1041384,"line_start":110,"line_end":110,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6322}],"docs":"","sig":null,"attributes":[]},{"id":896,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/os.rs","byte_start":1041939,"byte_end":1041942,"line_start":131,"line_end":131,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6328},{"krate":0,"index":6329},{"krate":0,"index":6330}],"docs":"","sig":null,"attributes":[]},{"id":897,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/stdio.rs","byte_start":1048163,"byte_end":1048168,"line_start":26,"line_end":26,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6377}],"docs":"","sig":null,"attributes":[]},{"id":898,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/stdio.rs","byte_start":1048260,"byte_end":1048265,"line_start":32,"line_end":32,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6379},{"krate":0,"index":6380}],"docs":"","sig":null,"attributes":[]},{"id":899,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/stdio.rs","byte_start":1048587,"byte_end":1048593,"line_start":42,"line_end":42,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6382}],"docs":"","sig":null,"attributes":[]},{"id":900,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/stdio.rs","byte_start":1048688,"byte_end":1048694,"line_start":48,"line_end":48,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6384},{"krate":0,"index":6385},{"krate":0,"index":6386}],"docs":"","sig":null,"attributes":[]},{"id":901,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/stdio.rs","byte_start":1049077,"byte_end":1049083,"line_start":62,"line_end":62,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6388}],"docs":"","sig":null,"attributes":[]},{"id":902,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/stdio.rs","byte_start":1049178,"byte_end":1049184,"line_start":68,"line_end":68,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6390},{"krate":0,"index":6391},{"krate":0,"index":6392}],"docs":"","sig":null,"attributes":[]},{"id":903,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/backtrace/tracing/mod.rs","byte_start":1058398,"byte_end":1058403,"line_start":45,"line_end":45,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6411},{"krate":0,"index":6412}],"docs":"","sig":null,"attributes":[]},{"id":904,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/backtrace/tracing/mod.rs","byte_start":1059380,"byte_end":1059385,"line_start":71,"line_end":71,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6414}],"docs":"","sig":null,"attributes":[]},{"id":905,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/backtrace/tracing/gcc_s.rs","byte_start":1060998,"byte_end":1061003,"line_start":34,"line_end":34,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":906,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/backtrace/tracing/gcc_s.rs","byte_start":1061028,"byte_end":1061033,"line_start":35,"line_end":35,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":907,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/backtrace/tracing/gcc_s.rs","byte_start":1061043,"byte_end":1061048,"line_start":37,"line_end":37,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6429},{"krate":0,"index":6430}],"docs":"","sig":null,"attributes":[]},{"id":908,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/backtrace/tracing/gcc_s.rs","byte_start":1062154,"byte_end":1062159,"line_start":67,"line_end":67,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6432}],"docs":"","sig":null,"attributes":[]},{"id":909,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/backtrace/printing/mod.rs","byte_start":1064789,"byte_end":1064801,"line_start":48,"line_end":48,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6457},{"krate":0,"index":6458},{"krate":0,"index":6459},{"krate":0,"index":6460}],"docs":"","sig":null,"attributes":[]},{"id":910,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/backtrace/printing/mod.rs","byte_start":1066835,"byte_end":1066852,"line_start":108,"line_end":108,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6468},{"krate":0,"index":6469},{"krate":0,"index":6470},{"krate":0,"index":6471}],"docs":"","sig":null,"attributes":[]},{"id":911,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/backtrace/printing/mod.rs","byte_start":1070453,"byte_end":1070470,"line_start":204,"line_end":204,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6473}],"docs":"","sig":null,"attributes":[]},{"id":912,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/backtrace/mod.rs","byte_start":1055737,"byte_end":1055741,"line_start":116,"line_end":116,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6477},{"krate":0,"index":6478}],"docs":"","sig":null,"attributes":[]},{"id":913,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/backtrace/mod.rs","byte_start":1055914,"byte_end":1055918,"line_start":126,"line_end":126,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6480}],"docs":"","sig":null,"attributes":[]},{"id":914,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/time.rs","byte_start":1071660,"byte_end":1071668,"line_start":32,"line_end":32,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6508},{"krate":0,"index":6509},{"krate":0,"index":6510},{"krate":0,"index":6512}],"docs":"","sig":null,"attributes":[]},{"id":915,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/time.rs","byte_start":1073800,"byte_end":1073808,"line_start":92,"line_end":92,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6515}],"docs":"","sig":null,"attributes":[]},{"id":916,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/time.rs","byte_start":1073954,"byte_end":1073962,"line_start":98,"line_end":98,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":917,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/time.rs","byte_start":1073987,"byte_end":1073995,"line_start":100,"line_end":100,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6518}],"docs":"","sig":null,"attributes":[]},{"id":918,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/time.rs","byte_start":1074116,"byte_end":1074124,"line_start":106,"line_end":106,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6520}],"docs":"","sig":null,"attributes":[]},{"id":919,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/time.rs","byte_start":1074328,"byte_end":1074336,"line_start":114,"line_end":114,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6522}],"docs":"","sig":null,"attributes":[]},{"id":920,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/time.rs","byte_start":1074917,"byte_end":1074924,"line_start":142,"line_end":142,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6531},{"krate":0,"index":6532},{"krate":0,"index":6533},{"krate":0,"index":6534},{"krate":0,"index":6535},{"krate":0,"index":6536},{"krate":0,"index":6537}],"docs":"","sig":null,"attributes":[]},{"id":921,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/time.rs","byte_start":1076025,"byte_end":1076032,"line_start":176,"line_end":176,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6539}],"docs":"","sig":null,"attributes":[]},{"id":922,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/time.rs","byte_start":1076296,"byte_end":1076306,"line_start":185,"line_end":185,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6541},{"krate":0,"index":6542},{"krate":0,"index":6543},{"krate":0,"index":6544},{"krate":0,"index":6545}],"docs":"","sig":null,"attributes":[]},{"id":923,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/time.rs","byte_start":1077030,"byte_end":1077040,"line_start":207,"line_end":207,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6547}],"docs":"","sig":null,"attributes":[]},{"id":924,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/time.rs","byte_start":1077180,"byte_end":1077190,"line_start":213,"line_end":213,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6549}],"docs":"","sig":null,"attributes":[]},{"id":925,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1097281,"byte_end":1097293,"line_start":303,"line_end":303,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6701},{"krate":0,"index":6702}],"docs":"","sig":null,"attributes":[]},{"id":926,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1097849,"byte_end":1097861,"line_start":321,"line_end":321,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6707},{"krate":0,"index":6708}],"docs":"","sig":null,"attributes":[]},{"id":927,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1099233,"byte_end":1099245,"line_start":356,"line_end":356,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6716}],"docs":"","sig":null,"attributes":[]},{"id":928,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1099409,"byte_end":1099421,"line_start":362,"line_end":362,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":6719},{"krate":0,"index":6720}],"docs":"","sig":null,"attributes":[]},{"id":929,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1102143,"byte_end":1102152,"line_start":436,"line_end":436,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6727},{"krate":0,"index":6728}],"docs":"","sig":null,"attributes":[]},{"id":930,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1114114,"byte_end":1114118,"line_start":229,"line_end":229,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6776},{"krate":0,"index":6778},{"krate":0,"index":6780},{"krate":0,"index":6781},{"krate":0,"index":6782},{"krate":0,"index":6783},{"krate":0,"index":6784},{"krate":0,"index":6785},{"krate":0,"index":6786}],"docs":"","sig":null,"attributes":[]},{"id":931,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1119125,"byte_end":1119129,"line_start":363,"line_end":363,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6788}],"docs":"","sig":null,"attributes":[]},{"id":932,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1119235,"byte_end":1119239,"line_start":368,"line_end":368,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6790}],"docs":"","sig":null,"attributes":[]},{"id":933,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1119354,"byte_end":1119358,"line_start":373,"line_end":373,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6792}],"docs":"","sig":null,"attributes":[]},{"id":934,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1119451,"byte_end":1119455,"line_start":379,"line_end":379,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6794}],"docs":"","sig":null,"attributes":[]},{"id":935,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1119570,"byte_end":1119574,"line_start":385,"line_end":385,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6796},{"krate":0,"index":6797},{"krate":0,"index":6798}],"docs":"","sig":null,"attributes":[]},{"id":936,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1119920,"byte_end":1119924,"line_start":400,"line_end":400,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6800},{"krate":0,"index":6801},{"krate":0,"index":6802}],"docs":"","sig":null,"attributes":[]},{"id":937,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1120242,"byte_end":1120246,"line_start":414,"line_end":414,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6804}],"docs":"","sig":null,"attributes":[]},{"id":938,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1121144,"byte_end":1121155,"line_start":455,"line_end":455,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6816},{"krate":0,"index":6817},{"krate":0,"index":6818},{"krate":0,"index":6819},{"krate":0,"index":6820},{"krate":0,"index":6821},{"krate":0,"index":6822},{"krate":0,"index":6823},{"krate":0,"index":6825}],"docs":"","sig":null,"attributes":[]},{"id":939,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1127389,"byte_end":1127400,"line_start":612,"line_end":612,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6828}],"docs":"","sig":null,"attributes":[]},{"id":940,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1127518,"byte_end":1127529,"line_start":618,"line_end":618,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6830}],"docs":"","sig":null,"attributes":[]},{"id":941,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1127627,"byte_end":1127635,"line_start":624,"line_end":624,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6832},{"krate":0,"index":6833},{"krate":0,"index":6834},{"krate":0,"index":6835},{"krate":0,"index":6836},{"krate":0,"index":6837},{"krate":0,"index":6838},{"krate":0,"index":6839}],"docs":"","sig":null,"attributes":[]},{"id":942,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1130808,"byte_end":1130816,"line_start":715,"line_end":715,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6841}],"docs":"","sig":null,"attributes":[]},{"id":943,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1131326,"byte_end":1131334,"line_start":729,"line_end":729,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6843}],"docs":"","sig":null,"attributes":[]},{"id":944,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1131445,"byte_end":1131453,"line_start":735,"line_end":735,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6845}],"docs":"","sig":null,"attributes":[]},{"id":945,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1131549,"byte_end":1131560,"line_start":741,"line_end":741,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6847},{"krate":0,"index":6848}],"docs":"","sig":null,"attributes":[]},{"id":946,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1132368,"byte_end":1132376,"line_start":764,"line_end":764,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6850},{"krate":0,"index":6851},{"krate":0,"index":6852}],"docs":"","sig":null,"attributes":[]},{"id":947,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1134171,"byte_end":1134179,"line_start":812,"line_end":812,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6854}],"docs":"","sig":null,"attributes":[]},{"id":948,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1134297,"byte_end":1134308,"line_start":818,"line_end":818,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6856}],"docs":"","sig":null,"attributes":[]},{"id":949,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1134448,"byte_end":1134459,"line_start":824,"line_end":824,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6858}],"docs":"","sig":null,"attributes":[]},{"id":950,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1134558,"byte_end":1134565,"line_start":830,"line_end":830,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6860},{"krate":0,"index":6861}],"docs":"","sig":null,"attributes":[]},{"id":951,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1134733,"byte_end":1134741,"line_start":838,"line_end":838,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6864},{"krate":0,"index":6865},{"krate":0,"index":6866},{"krate":0,"index":6867}],"docs":"","sig":null,"attributes":[]},{"id":952,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1136313,"byte_end":1136321,"line_start":886,"line_end":886,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6869}],"docs":"","sig":null,"attributes":[]},{"id":953,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1136494,"byte_end":1136502,"line_start":892,"line_end":892,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6871}],"docs":"","sig":null,"attributes":[]},{"id":954,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151387,"byte_end":1151397,"line_start":1309,"line_end":1309,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6907},{"krate":0,"index":6908},{"krate":0,"index":6909},{"krate":0,"index":6911},{"krate":0,"index":6912}],"docs":"","sig":null,"attributes":[]},{"id":955,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1153912,"byte_end":1153922,"line_start":1394,"line_end":1394,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6914}],"docs":"","sig":null,"attributes":[]},{"id":956,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1160506,"byte_end":1160515,"line_start":145,"line_end":145,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6989}],"docs":"","sig":null,"attributes":[]},{"id":957,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1161219,"byte_end":1161234,"line_start":172,"line_end":172,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6991}],"docs":"","sig":null,"attributes":[]},{"id":958,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1161818,"byte_end":1161829,"line_start":194,"line_end":194,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6994}],"docs":"","sig":null,"attributes":[]},{"id":959,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1162199,"byte_end":1162208,"line_start":208,"line_end":208,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6996},{"krate":0,"index":6997},{"krate":0,"index":6998},{"krate":0,"index":6999},{"krate":0,"index":7001}],"docs":"","sig":null,"attributes":[]},{"id":960,"kind":"Direct","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1164996,"byte_end":1165005,"line_start":288,"line_end":288,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7003}],"docs":"","sig":null,"attributes":[]},{"id":961,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1166992,"byte_end":1166999,"line_start":338,"line_end":338,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7008}],"docs":"","sig":null,"attributes":[]},{"id":962,"kind":"Inherent","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1168279,"byte_end":1168287,"line_start":373,"line_end":373,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7013}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":4683,"byte_end":4690,"line_start":147,"line_end":147,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":28}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/prelude/mod.rs","byte_start":15691,"byte_end":15693,"line_start":32,"line_end":32,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":29}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5637,"byte_end":5640,"line_start":192,"line_end":192,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":147}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5650,"byte_end":5653,"line_start":193,"line_end":193,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":210}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5677,"byte_end":5683,"line_start":196,"line_end":196,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":278}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5693,"byte_end":5698,"line_start":197,"line_end":197,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":396}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5708,"byte_end":5719,"line_start":198,"line_end":198,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":398}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5729,"byte_end":5732,"line_start":199,"line_end":199,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1409}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5742,"byte_end":5747,"line_start":200,"line_end":200,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1497}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5757,"byte_end":5760,"line_start":201,"line_end":201,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1644}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5770,"byte_end":5775,"line_start":202,"line_end":202,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1851}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5830,"byte_end":5832,"line_start":205,"line_end":205,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":1941}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":327020,"byte_end":327027,"line_start":44,"line_end":44,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1993}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5842,"byte_end":5845,"line_start":206,"line_end":206,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2718}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5855,"byte_end":5858,"line_start":207,"line_end":207,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":3324}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5868,"byte_end":5870,"line_start":208,"line_end":208,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":3345}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/mod.rs","byte_start":579561,"byte_end":579564,"line_start":19,"line_end":19,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":3347}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/mod.rs","byte_start":579574,"byte_end":579576,"line_start":20,"line_end":20,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":3383}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5880,"byte_end":5885,"line_start":209,"line_end":209,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3424}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5895,"byte_end":5899,"line_start":210,"line_end":210,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3537}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5909,"byte_end":5913,"line_start":211,"line_end":211,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3882}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5923,"byte_end":5927,"line_start":212,"line_end":212,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":4407}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5937,"byte_end":5944,"line_start":213,"line_end":213,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":4473}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":5954,"byte_end":5963,"line_start":214,"line_end":214,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":4503}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/mod.rs","byte_start":775387,"byte_end":775389,"line_start":18,"line_end":18,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":4504}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/mod.rs","byte_start":775399,"byte_end":775403,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":4506}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/mod.rs","byte_start":775413,"byte_end":775417,"line_start":20,"line_end":20,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":4531}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":6100,"byte_end":6106,"line_start":222,"line_end":222,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4551}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/mod.rs","byte_start":902339,"byte_end":902342,"line_start":40,"line_end":40,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":5893}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/mod.rs","byte_start":989475,"byte_end":989478,"line_start":18,"line_end":18,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":5894}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/mod.rs","byte_start":989488,"byte_end":989490,"line_start":19,"line_end":19,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":5896}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/mod.rs","byte_start":989500,"byte_end":989502,"line_start":20,"line_end":20,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":5987}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/mod.rs","byte_start":989536,"byte_end":989539,"line_start":22,"line_end":22,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":6025}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/mod.rs","byte_start":989549,"byte_end":989552,"line_start":23,"line_end":23,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":6229}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":6188,"byte_end":6193,"line_start":229,"line_end":229,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":6607}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":6403,"byte_end":6405,"line_start":240,"line_end":240,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":6915}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":6446,"byte_end":6455,"line_start":243,"line_end":243,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":6931}},{"kind":"Mod","span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/lib.rs","byte_start":6581,"byte_end":6586,"line_start":252,"line_end":252,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":7020}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":78761,"byte_end":78769,"line_start":40,"line_end":40,"column_start":33,"column_end":41},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":304},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":81318,"byte_end":81329,"line_start":122,"line_end":122,"column_start":23,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":7059},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":81458,"byte_end":81469,"line_start":128,"line_end":128,"column_start":16,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":7059},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":81491,"byte_end":81499,"line_start":130,"line_end":130,"column_start":18,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":83012,"byte_end":83024,"line_start":181,"line_end":181,"column_start":13,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":85342,"byte_end":85345,"line_start":240,"line_end":240,"column_start":29,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":345},"to":{"krate":1,"index":2056}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":85380,"byte_end":85383,"line_start":242,"line_end":242,"column_start":28,"column_end":31},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":345},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/local.rs","byte_start":85517,"byte_end":85520,"line_start":248,"line_end":248,"column_start":13,"column_end":16},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":64892,"byte_end":64900,"line_start":586,"line_end":586,"column_start":6,"column_end":14},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":7063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":66711,"byte_end":66720,"line_start":648,"line_end":648,"column_start":6,"column_end":15},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":7081},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/thread/mod.rs","byte_start":69659,"byte_end":69668,"line_start":721,"line_end":721,"column_start":21,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":7081},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":123012,"byte_end":123019,"line_start":205,"line_end":205,"column_start":12,"column_end":19},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":7085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":124147,"byte_end":124154,"line_start":241,"line_end":241,"column_start":15,"column_end":22},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":7085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":134595,"byte_end":134602,"line_start":582,"line_end":582,"column_start":15,"column_end":22},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":7085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":146284,"byte_end":146291,"line_start":968,"line_end":968,"column_start":15,"column_end":22},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":7085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":149354,"byte_end":149361,"line_start":1032,"line_end":1032,"column_start":29,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":7085},"to":{"krate":1,"index":1769}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":149729,"byte_end":149736,"line_start":1048,"line_end":1048,"column_start":22,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":7085},"to":{"krate":1,"index":1774}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":149878,"byte_end":149885,"line_start":1057,"line_end":1057,"column_start":25,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":7085},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":150129,"byte_end":150136,"line_start":1068,"line_end":1068,"column_start":27,"column_end":34},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":7085},"to":{"krate":1,"index":2032}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":150454,"byte_end":150461,"line_start":1080,"line_end":1080,"column_start":40,"column_end":47},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":7085},"to":{"krate":1,"index":2322}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":151284,"byte_end":151288,"line_start":1112,"line_end":1112,"column_start":22,"column_end":26},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":521},"to":{"krate":1,"index":1741}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":151488,"byte_end":151492,"line_start":1120,"line_end":1120,"column_start":41,"column_end":45},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":521},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":151979,"byte_end":151986,"line_start":1137,"line_end":1137,"column_start":16,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":152562,"byte_end":152570,"line_start":1156,"line_end":1156,"column_start":12,"column_end":20},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":544},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":153189,"byte_end":153193,"line_start":1177,"line_end":1177,"column_start":22,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":552},"to":{"krate":1,"index":1741}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":153388,"byte_end":153392,"line_start":1185,"line_end":1185,"column_start":34,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":552},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":153965,"byte_end":153971,"line_start":1204,"line_end":1204,"column_start":22,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":565},"to":{"krate":1,"index":1741}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":154168,"byte_end":154174,"line_start":1212,"line_end":1212,"column_start":34,"column_end":40},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":565},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":154649,"byte_end":154654,"line_start":1229,"line_end":1229,"column_start":16,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":158178,"byte_end":158196,"line_start":1336,"line_end":1336,"column_start":19,"column_end":37},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":159332,"byte_end":159347,"line_start":1373,"line_end":1373,"column_start":19,"column_end":34},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":160358,"byte_end":160369,"line_start":1410,"line_end":1410,"column_start":19,"column_end":30},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":163695,"byte_end":163714,"line_start":1517,"line_end":1517,"column_start":19,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":166817,"byte_end":166834,"line_start":1613,"line_end":1613,"column_start":19,"column_end":36},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":167696,"byte_end":167714,"line_start":1640,"line_end":1640,"column_start":25,"column_end":43},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":607},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":167950,"byte_end":167961,"line_start":1647,"line_end":1647,"column_start":39,"column_end":50},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":168354,"byte_end":168373,"line_start":1657,"line_end":1657,"column_start":39,"column_end":58},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":624},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":168690,"byte_end":168707,"line_start":1667,"line_end":1667,"column_start":25,"column_end":42},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":630},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":168931,"byte_end":168946,"line_start":1674,"line_end":1674,"column_start":25,"column_end":40},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":636},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":169686,"byte_end":169691,"line_start":1697,"line_end":1697,"column_start":36,"column_end":41},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":725},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":170310,"byte_end":170323,"line_start":1716,"line_end":1716,"column_start":36,"column_end":49},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":739},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":170853,"byte_end":170864,"line_start":1732,"line_end":1732,"column_start":29,"column_end":40},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":748},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":171632,"byte_end":171639,"line_start":1761,"line_end":1761,"column_start":32,"column_end":39},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":7085},"to":{"krate":1,"index":5209}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":172415,"byte_end":172419,"line_start":1789,"line_end":1789,"column_start":29,"column_end":33},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":521},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":172746,"byte_end":172750,"line_start":1802,"line_end":1802,"column_start":34,"column_end":38},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":521},"to":{"krate":1,"index":5257}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":172917,"byte_end":172921,"line_start":1810,"line_end":1810,"column_start":30,"column_end":34},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":521},"to":{"krate":1,"index":5566}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":173012,"byte_end":173019,"line_start":1813,"line_end":1813,"column_start":29,"column_end":36},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":534},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":173354,"byte_end":173361,"line_start":1826,"line_end":1826,"column_start":34,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":534},"to":{"krate":1,"index":5257}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":173527,"byte_end":173534,"line_start":1833,"line_end":1833,"column_start":30,"column_end":37},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":534},"to":{"krate":1,"index":5566}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":173628,"byte_end":173635,"line_start":1836,"line_end":1836,"column_start":27,"column_end":34},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":534},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":173889,"byte_end":173897,"line_start":1847,"line_end":1847,"column_start":25,"column_end":33},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":174204,"byte_end":174212,"line_start":1860,"line_end":1860,"column_start":34,"column_end":42},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":5257}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":174374,"byte_end":174382,"line_start":1867,"line_end":1867,"column_start":30,"column_end":38},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":5566}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":174486,"byte_end":174494,"line_start":1870,"line_end":1870,"column_start":41,"column_end":49},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":174704,"byte_end":174708,"line_start":1877,"line_end":1877,"column_start":29,"column_end":33},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":552},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":175035,"byte_end":175039,"line_start":1890,"line_end":1890,"column_start":34,"column_end":38},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":552},"to":{"krate":1,"index":5257}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":175206,"byte_end":175210,"line_start":1897,"line_end":1897,"column_start":30,"column_end":34},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":552},"to":{"krate":1,"index":5566}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":175301,"byte_end":175307,"line_start":1900,"line_end":1900,"column_start":29,"column_end":35},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":565},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":175634,"byte_end":175640,"line_start":1913,"line_end":1913,"column_start":34,"column_end":40},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":565},"to":{"krate":1,"index":5257}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":175807,"byte_end":175813,"line_start":1920,"line_end":1920,"column_start":30,"column_end":36},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":565},"to":{"krate":1,"index":5566}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":175914,"byte_end":175923,"line_start":1923,"line_end":1923,"column_start":29,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":594},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":176268,"byte_end":176277,"line_start":1936,"line_end":1936,"column_start":34,"column_end":43},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":594},"to":{"krate":1,"index":5257}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":176444,"byte_end":176453,"line_start":1943,"line_end":1943,"column_start":30,"column_end":39},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":594},"to":{"krate":1,"index":5566}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":176547,"byte_end":176556,"line_start":1946,"line_end":1946,"column_start":27,"column_end":36},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":594},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":176833,"byte_end":176841,"line_start":1957,"line_end":1957,"column_start":25,"column_end":33},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":599},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":177173,"byte_end":177181,"line_start":1970,"line_end":1970,"column_start":34,"column_end":42},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":599},"to":{"krate":1,"index":5257}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":177360,"byte_end":177368,"line_start":1977,"line_end":1977,"column_start":30,"column_end":38},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":599},"to":{"krate":1,"index":5566}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":177484,"byte_end":177492,"line_start":1980,"line_end":1980,"column_start":41,"column_end":49},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":599},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":177737,"byte_end":177747,"line_start":1987,"line_end":1987,"column_start":25,"column_end":35},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":603},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":178079,"byte_end":178089,"line_start":2000,"line_end":2000,"column_start":34,"column_end":44},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":603},"to":{"krate":1,"index":5257}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":178268,"byte_end":178278,"line_start":2007,"line_end":2007,"column_start":30,"column_end":40},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":603},"to":{"krate":1,"index":5566}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":178394,"byte_end":178404,"line_start":2010,"line_end":2010,"column_start":41,"column_end":51},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":603},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":178636,"byte_end":178641,"line_start":2017,"line_end":2017,"column_start":29,"column_end":34},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":578},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":178952,"byte_end":178957,"line_start":2030,"line_end":2030,"column_start":34,"column_end":39},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":578},"to":{"krate":1,"index":5257}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":179123,"byte_end":179128,"line_start":2037,"line_end":2037,"column_start":30,"column_end":35},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":578},"to":{"krate":1,"index":5566}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":179222,"byte_end":179227,"line_start":2040,"line_end":2040,"column_start":27,"column_end":32},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":578},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":179498,"byte_end":179509,"line_start":2051,"line_end":2051,"column_start":28,"column_end":39},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":179877,"byte_end":179888,"line_start":2068,"line_end":2068,"column_start":33,"column_end":44},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":5566}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":180036,"byte_end":180047,"line_start":2071,"line_end":2071,"column_start":34,"column_end":45},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":180226,"byte_end":180231,"line_start":2080,"line_end":2080,"column_start":16,"column_end":21},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":184936,"byte_end":184941,"line_start":2238,"line_end":2238,"column_start":25,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":185693,"byte_end":185706,"line_start":2264,"line_end":2264,"column_start":16,"column_end":29},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":739},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":192605,"byte_end":192616,"line_start":2494,"line_end":2494,"column_start":24,"column_end":35},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":194945,"byte_end":194952,"line_start":2578,"line_end":2578,"column_start":40,"column_end":47},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":7085},"to":{"krate":1,"index":5205}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":195426,"byte_end":195433,"line_start":2593,"line_end":2593,"column_start":34,"column_end":41},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":7085},"to":{"krate":1,"index":5218}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":196377,"byte_end":196384,"line_start":2623,"line_end":2623,"column_start":54,"column_end":61},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":7085},"to":{"krate":1,"index":5218}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":197483,"byte_end":197494,"line_start":2668,"line_end":2668,"column_start":6,"column_end":17},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":7095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":199035,"byte_end":199046,"line_start":2707,"line_end":2707,"column_start":22,"column_end":33},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":7095},"to":{"krate":1,"index":6817}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":199571,"byte_end":199584,"line_start":2725,"line_end":2725,"column_start":6,"column_end":19},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":7104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":200113,"byte_end":200126,"line_start":2739,"line_end":2739,"column_start":18,"column_end":31},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":7104},"to":{"krate":1,"index":2032}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":200593,"byte_end":200606,"line_start":2751,"line_end":2751,"column_start":17,"column_end":30},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":7104},"to":{"krate":1,"index":6786}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":200851,"byte_end":200862,"line_start":2764,"line_end":2764,"column_start":18,"column_end":29},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":7095},"to":{"krate":1,"index":2032}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/map.rs","byte_start":201062,"byte_end":201073,"line_start":2773,"line_end":2773,"column_start":21,"column_end":32},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":7095},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":206993,"byte_end":207000,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":7111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":208159,"byte_end":208166,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":7111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":215453,"byte_end":215460,"line_start":387,"line_end":387,"column_start":12,"column_end":19},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":7111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":233100,"byte_end":233107,"line_start":936,"line_end":936,"column_start":26,"column_end":33},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":7111},"to":{"krate":1,"index":1769}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":233412,"byte_end":233419,"line_start":951,"line_end":951,"column_start":19,"column_end":26},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":7111},"to":{"krate":1,"index":1774}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":233549,"byte_end":233556,"line_start":959,"line_end":959,"column_start":27,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":7111},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":233793,"byte_end":233800,"line_start":969,"line_end":969,"column_start":32,"column_end":39},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":7111},"to":{"krate":1,"index":5205}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":234133,"byte_end":234140,"line_start":983,"line_end":983,"column_start":26,"column_end":33},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":7111},"to":{"krate":1,"index":5218}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":234617,"byte_end":234624,"line_start":1005,"line_end":1005,"column_start":34,"column_end":41},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":7111},"to":{"krate":1,"index":5218}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":235125,"byte_end":235132,"line_start":1027,"line_end":1027,"column_start":24,"column_end":31},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":7111},"to":{"krate":1,"index":2032}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":242117,"byte_end":242124,"line_start":1278,"line_end":1278,"column_start":29,"column_end":36},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":7111},"to":{"krate":1,"index":5209}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":242999,"byte_end":243003,"line_start":1309,"line_end":1309,"column_start":19,"column_end":23},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1202},"to":{"krate":1,"index":1741}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":243179,"byte_end":243183,"line_start":1316,"line_end":1316,"column_start":26,"column_end":30},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1202},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":243486,"byte_end":243490,"line_start":1329,"line_end":1329,"column_start":31,"column_end":35},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1202},"to":{"krate":1,"index":5257}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":243650,"byte_end":243654,"line_start":1336,"line_end":1336,"column_start":27,"column_end":31},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1202},"to":{"krate":1,"index":5566}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":243754,"byte_end":243758,"line_start":1339,"line_end":1339,"column_start":36,"column_end":40},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1202},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":243963,"byte_end":243971,"line_start":1346,"line_end":1346,"column_start":22,"column_end":30},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1206},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":244262,"byte_end":244270,"line_start":1359,"line_end":1359,"column_start":31,"column_end":39},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1206},"to":{"krate":1,"index":5257}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":244426,"byte_end":244434,"line_start":1366,"line_end":1366,"column_start":27,"column_end":35},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1206},"to":{"krate":1,"index":5566}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":244530,"byte_end":244538,"line_start":1369,"line_end":1369,"column_start":36,"column_end":44},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1206},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":244728,"byte_end":244733,"line_start":1376,"line_end":1376,"column_start":26,"column_end":31},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1209},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":245028,"byte_end":245033,"line_start":1389,"line_end":1389,"column_start":31,"column_end":36},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1209},"to":{"krate":1,"index":5257}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":245193,"byte_end":245198,"line_start":1396,"line_end":1396,"column_start":27,"column_end":32},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1209},"to":{"krate":1,"index":5566}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":245298,"byte_end":245303,"line_start":1399,"line_end":1399,"column_start":36,"column_end":41},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1209},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":245510,"byte_end":245521,"line_start":1406,"line_end":1406,"column_start":25,"column_end":36},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1213},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":245865,"byte_end":245876,"line_start":1423,"line_end":1423,"column_start":30,"column_end":41},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1213},"to":{"krate":1,"index":5566}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":246010,"byte_end":246021,"line_start":1426,"line_end":1426,"column_start":31,"column_end":42},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1213},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":246243,"byte_end":246255,"line_start":1436,"line_end":1436,"column_start":22,"column_end":34},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1218},"to":{"krate":1,"index":1741}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":246455,"byte_end":246467,"line_start":1444,"line_end":1444,"column_start":29,"column_end":41},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1218},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":246988,"byte_end":247000,"line_start":1469,"line_end":1469,"column_start":27,"column_end":39},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1218},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":247274,"byte_end":247286,"line_start":1480,"line_end":1480,"column_start":30,"column_end":42},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1218},"to":{"krate":1,"index":5566}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":247415,"byte_end":247425,"line_start":1488,"line_end":1488,"column_start":22,"column_end":32},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1224},"to":{"krate":1,"index":1741}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":247623,"byte_end":247633,"line_start":1496,"line_end":1496,"column_start":29,"column_end":39},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1224},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":248154,"byte_end":248164,"line_start":1521,"line_end":1521,"column_start":30,"column_end":40},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1224},"to":{"krate":1,"index":5566}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":248303,"byte_end":248313,"line_start":1529,"line_end":1529,"column_start":27,"column_end":37},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1224},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":248578,"byte_end":248597,"line_start":1540,"line_end":1540,"column_start":22,"column_end":41},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1230},"to":{"krate":1,"index":1741}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":248795,"byte_end":248814,"line_start":1548,"line_end":1548,"column_start":29,"column_end":48},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1230},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":249165,"byte_end":249184,"line_start":1566,"line_end":1566,"column_start":30,"column_end":49},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1230},"to":{"krate":1,"index":5566}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":249323,"byte_end":249342,"line_start":1574,"line_end":1574,"column_start":27,"column_end":46},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1230},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":249607,"byte_end":249612,"line_start":1585,"line_end":1585,"column_start":22,"column_end":27},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1235},"to":{"krate":1,"index":1741}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":249798,"byte_end":249803,"line_start":1593,"line_end":1593,"column_start":30,"column_end":35},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1235},"to":{"krate":1,"index":5566}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":249942,"byte_end":249947,"line_start":1601,"line_end":1601,"column_start":27,"column_end":32},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1235},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/collections/hash/set.rs","byte_start":250219,"byte_end":250224,"line_start":1612,"line_end":1612,"column_start":29,"column_end":34},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1235},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":254964,"byte_end":254968,"line_start":103,"line_end":103,"column_start":19,"column_end":23},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1423},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":255269,"byte_end":255273,"line_start":113,"line_end":113,"column_start":21,"column_end":25},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1423},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":255395,"byte_end":255401,"line_start":119,"line_end":119,"column_start":19,"column_end":25},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1425},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":255643,"byte_end":255649,"line_start":129,"line_end":129,"column_start":21,"column_end":27},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1425},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":257599,"byte_end":257607,"line_start":195,"line_end":195,"column_start":23,"column_end":31},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":7119},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":257950,"byte_end":257958,"line_start":206,"line_end":206,"column_start":16,"column_end":24},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":7119},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":261327,"byte_end":261337,"line_start":297,"line_end":297,"column_start":23,"column_end":33},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1462},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":261557,"byte_end":261567,"line_start":307,"line_end":307,"column_start":21,"column_end":31},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1462},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":262656,"byte_end":262670,"line_start":343,"line_end":343,"column_start":23,"column_end":37},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":7136},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/env.rs","byte_start":262786,"byte_end":262800,"line_start":349,"line_end":349,"column_start":16,"column_end":30},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":7136},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":270844,"byte_end":270849,"line_start":50,"line_end":50,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":1,"index":6590},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":270852,"byte_end":270859,"line_start":50,"line_end":50,"column_start":26,"column_end":33},"kind":"SuperTrait","from":{"krate":1,"index":6595},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":272377,"byte_end":272380,"line_start":101,"line_end":101,"column_start":37,"column_end":40},"kind":{"Impl":{"id":148}},"from":{"krate":5,"index":91},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":272652,"byte_end":272655,"line_start":111,"line_end":111,"column_start":51,"column_end":54},"kind":{"Impl":{"id":149}},"from":{"krate":5,"index":91},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":272979,"byte_end":272982,"line_start":122,"line_end":122,"column_start":23,"column_end":26},"kind":{"Impl":{"id":150}},"from":{"krate":5,"index":91},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":273218,"byte_end":273229,"line_start":128,"line_end":128,"column_start":24,"column_end":35},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1536},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":273350,"byte_end":273361,"line_start":134,"line_end":134,"column_start":26,"column_end":37},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1536},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":273580,"byte_end":273591,"line_start":141,"line_end":141,"column_start":24,"column_end":35},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1536},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":273795,"byte_end":273798,"line_start":151,"line_end":151,"column_start":23,"column_end":26},"kind":{"Impl":{"id":154}},"from":{"krate":5,"index":91},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":274085,"byte_end":274088,"line_start":161,"line_end":161,"column_start":25,"column_end":28},"kind":{"Impl":{"id":155}},"from":{"krate":5,"index":91},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":274350,"byte_end":274353,"line_start":170,"line_end":170,"column_start":21,"column_end":24},"kind":{"Impl":{"id":156}},"from":{"krate":5,"index":91},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":274557,"byte_end":274560,"line_start":178,"line_end":178,"column_start":37,"column_end":40},"kind":{"Impl":{"id":157}},"from":{"krate":5,"index":91},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":274922,"byte_end":274925,"line_start":189,"line_end":189,"column_start":33,"column_end":36},"kind":{"Impl":{"id":158}},"from":{"krate":5,"index":91},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":275288,"byte_end":275298,"line_start":206,"line_end":206,"column_start":16,"column_end":26},"kind":{"Impl":{"id":159}},"from":{"krate":1,"index":35042},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":275396,"byte_end":275405,"line_start":212,"line_end":212,"column_start":16,"column_end":25},"kind":{"Impl":{"id":160}},"from":{"krate":1,"index":35029},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":275529,"byte_end":275543,"line_start":218,"line_end":218,"column_start":21,"column_end":35},"kind":{"Impl":{"id":161}},"from":{"krate":1,"index":34100},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":275642,"byte_end":275651,"line_start":224,"line_end":224,"column_start":21,"column_end":30},"kind":{"Impl":{"id":162}},"from":{"krate":1,"index":34085},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":275761,"byte_end":275774,"line_start":230,"line_end":230,"column_start":21,"column_end":34},"kind":{"Impl":{"id":163}},"from":{"krate":1,"index":13480},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":275871,"byte_end":275886,"line_start":236,"line_end":236,"column_start":21,"column_end":36},"kind":{"Impl":{"id":164}},"from":{"krate":1,"index":13465},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":275985,"byte_end":276002,"line_start":242,"line_end":242,"column_start":23,"column_end":40},"kind":{"Impl":{"id":165}},"from":{"krate":1,"index":31200},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":276099,"byte_end":276114,"line_start":248,"line_end":248,"column_start":21,"column_end":36},"kind":{"Impl":{"id":166}},"from":{"krate":1,"index":13332},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":276214,"byte_end":276227,"line_start":254,"line_end":254,"column_start":24,"column_end":37},"kind":{"Impl":{"id":167}},"from":{"krate":5,"index":5387},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":276322,"byte_end":276336,"line_start":260,"line_end":260,"column_start":24,"column_end":38},"kind":{"Impl":{"id":168}},"from":{"krate":5,"index":5401},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":276432,"byte_end":276442,"line_start":266,"line_end":266,"column_start":24,"column_end":34},"kind":{"Impl":{"id":169}},"from":{"krate":5,"index":4136},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":276534,"byte_end":276550,"line_start":272,"line_end":272,"column_start":22,"column_end":38},"kind":{"Impl":{"id":170}},"from":{"krate":1,"index":31433},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":276658,"byte_end":276661,"line_start":278,"line_end":278,"column_start":26,"column_end":29},"kind":{"Impl":{"id":171}},"from":{"krate":5,"index":91},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":276969,"byte_end":276974,"line_start":293,"line_end":293,"column_start":21,"column_end":26},"kind":{"Impl":{"id":172}},"from":{"krate":1,"index":33304},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":277099,"byte_end":277110,"line_start":299,"line_end":299,"column_start":22,"column_end":33},"kind":{"Impl":{"id":173}},"from":{"krate":1,"index":2991},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":277214,"byte_end":277228,"line_start":305,"line_end":305,"column_start":22,"column_end":36},"kind":{"Impl":{"id":174}},"from":{"krate":1,"index":2997},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":277324,"byte_end":277340,"line_start":311,"line_end":311,"column_start":22,"column_end":38},"kind":{"Impl":{"id":175}},"from":{"krate":1,"index":31408},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":277461,"byte_end":277475,"line_start":317,"line_end":317,"column_start":22,"column_end":36},"kind":{"Impl":{"id":176}},"from":{"krate":1,"index":31379},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":277580,"byte_end":277595,"line_start":323,"line_end":323,"column_start":29,"column_end":44},"kind":{"Impl":{"id":177}},"from":{"krate":5,"index":5347},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":281619,"byte_end":281624,"line_start":460,"line_end":460,"column_start":23,"column_end":28},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":7144},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/error.rs","byte_start":282061,"byte_end":282070,"line_start":478,"line_end":478,"column_start":23,"column_end":32},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":7153},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/c_str.rs","byte_start":292794,"byte_end":292802,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":180}},"from":{"krate":12,"index":411},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/c_str.rs","byte_start":292911,"byte_end":292916,"line_start":29,"line_end":29,"column_start":29,"column_end":34},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2186},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/c_str.rs","byte_start":293231,"byte_end":293252,"line_start":39,"line_end":39,"column_start":16,"column_end":37},"kind":{"Impl":{"id":182}},"from":{"krate":12,"index":426},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/c_str.rs","byte_start":293344,"byte_end":293359,"line_start":45,"line_end":45,"column_start":16,"column_end":31},"kind":{"Impl":{"id":183}},"from":{"krate":12,"index":456},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":295586,"byte_end":295594,"line_start":58,"line_end":58,"column_start":6,"column_end":14},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":7164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":298997,"byte_end":299005,"line_start":167,"line_end":167,"column_start":23,"column_end":31},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":7164},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":299350,"byte_end":299358,"line_start":178,"line_end":178,"column_start":45,"column_end":53},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":7164},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":299473,"byte_end":299481,"line_start":184,"line_end":184,"column_start":37,"column_end":45},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":7164},"to":{"krate":1,"index":2322}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":299677,"byte_end":299685,"line_start":193,"line_end":193,"column_start":40,"column_end":48},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":7164},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":299856,"byte_end":299864,"line_start":200,"line_end":200,"column_start":21,"column_end":29},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":7164},"to":{"krate":1,"index":2241}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":299989,"byte_end":299997,"line_start":209,"line_end":209,"column_start":24,"column_end":32},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":7164},"to":{"krate":1,"index":2254}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":300106,"byte_end":300114,"line_start":216,"line_end":216,"column_start":18,"column_end":26},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":7164},"to":{"krate":1,"index":2032}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":300255,"byte_end":300263,"line_start":224,"line_end":224,"column_start":21,"column_end":29},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":7164},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":300409,"byte_end":300417,"line_start":230,"line_end":230,"column_start":20,"column_end":28},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":7164},"to":{"krate":1,"index":1769}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":300526,"byte_end":300534,"line_start":236,"line_end":236,"column_start":25,"column_end":33},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":7164},"to":{"krate":1,"index":1769}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":300750,"byte_end":300758,"line_start":248,"line_end":248,"column_start":26,"column_end":34},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":7164},"to":{"krate":1,"index":1769}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":300972,"byte_end":300980,"line_start":260,"line_end":260,"column_start":13,"column_end":21},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":7164},"to":{"krate":1,"index":1774}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":301005,"byte_end":301013,"line_start":262,"line_end":262,"column_start":21,"column_end":29},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":7164},"to":{"krate":1,"index":1806}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":301545,"byte_end":301553,"line_start":285,"line_end":285,"column_start":26,"column_end":34},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":7164},"to":{"krate":1,"index":1806}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":301695,"byte_end":301703,"line_start":292,"line_end":292,"column_start":14,"column_end":22},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":7164},"to":{"krate":1,"index":1795}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":301830,"byte_end":301838,"line_start":299,"line_end":299,"column_start":15,"column_end":23},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":7164},"to":{"krate":1,"index":6778}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":301946,"byte_end":301951,"line_start":306,"line_end":306,"column_start":6,"column_end":11},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":1694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":307865,"byte_end":307868,"line_start":477,"line_end":477,"column_start":23,"column_end":26},"kind":{"Impl":{"id":203}},"from":{"krate":5,"index":91},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":308055,"byte_end":308063,"line_start":484,"line_end":484,"column_start":27,"column_end":35},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":7164},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":308368,"byte_end":308371,"line_start":495,"line_end":495,"column_start":25,"column_end":28},"kind":{"Impl":{"id":205}},"from":{"krate":5,"index":91},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":308663,"byte_end":308666,"line_start":505,"line_end":505,"column_start":16,"column_end":19},"kind":{"Impl":{"id":206}},"from":{"krate":5,"index":91},"to":{"krate":1,"index":1741}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":308801,"byte_end":308804,"line_start":512,"line_end":512,"column_start":25,"column_end":28},"kind":{"Impl":{"id":207}},"from":{"krate":5,"index":4280},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":309193,"byte_end":309196,"line_start":524,"line_end":524,"column_start":23,"column_end":26},"kind":{"Impl":{"id":208}},"from":{"krate":5,"index":4280},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":309399,"byte_end":309401,"line_start":532,"line_end":532,"column_start":25,"column_end":27},"kind":{"Impl":{"id":209}},"from":{"krate":5,"index":3391},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":309779,"byte_end":309781,"line_start":544,"line_end":544,"column_start":23,"column_end":25},"kind":{"Impl":{"id":210}},"from":{"krate":5,"index":3391},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":309982,"byte_end":309985,"line_start":552,"line_end":552,"column_start":29,"column_end":32},"kind":{"Impl":{"id":211}},"from":{"krate":5,"index":346},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":310118,"byte_end":310121,"line_start":559,"line_end":559,"column_start":30,"column_end":33},"kind":{"Impl":{"id":212}},"from":{"krate":5,"index":346},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":310261,"byte_end":310264,"line_start":566,"line_end":566,"column_start":33,"column_end":36},"kind":{"Impl":{"id":213}},"from":{"krate":5,"index":346},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":310421,"byte_end":310429,"line_start":573,"line_end":573,"column_start":35,"column_end":43},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":7164},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":310536,"byte_end":310539,"line_start":580,"line_end":580,"column_start":18,"column_end":21},"kind":{"Impl":{"id":215}},"from":{"krate":5,"index":91},"to":{"krate":1,"index":2032}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":310846,"byte_end":310851,"line_start":595,"line_end":595,"column_start":20,"column_end":25},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":1694},"to":{"krate":1,"index":1769}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":310968,"byte_end":310973,"line_start":601,"line_end":601,"column_start":25,"column_end":30},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":1694},"to":{"krate":1,"index":1769}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":311220,"byte_end":311225,"line_start":615,"line_end":615,"column_start":13,"column_end":18},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":1694},"to":{"krate":1,"index":1774}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":311250,"byte_end":311255,"line_start":617,"line_end":617,"column_start":21,"column_end":26},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":1694},"to":{"krate":1,"index":1806}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":311826,"byte_end":311831,"line_start":640,"line_end":640,"column_start":26,"column_end":31},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":1694},"to":{"krate":1,"index":1806}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":312089,"byte_end":312094,"line_start":650,"line_end":650,"column_start":14,"column_end":19},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":1694},"to":{"krate":1,"index":1795}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":313324,"byte_end":313329,"line_start":695,"line_end":695,"column_start":15,"column_end":20},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":1694},"to":{"krate":1,"index":6778}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":313455,"byte_end":313460,"line_start":702,"line_end":702,"column_start":21,"column_end":26},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":1694},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":313596,"byte_end":313601,"line_start":708,"line_end":708,"column_start":6,"column_end":11},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":1694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":313772,"byte_end":313780,"line_start":714,"line_end":714,"column_start":24,"column_end":32},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":7164},"to":{"krate":1,"index":1719}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":313860,"byte_end":313865,"line_start":720,"line_end":720,"column_start":18,"column_end":23},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":1694},"to":{"krate":5,"index":337}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":314096,"byte_end":314101,"line_start":730,"line_end":730,"column_start":23,"column_end":28},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":1694},"to":{"krate":1,"index":1953}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":314181,"byte_end":314189,"line_start":736,"line_end":736,"column_start":23,"column_end":31},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":7164},"to":{"krate":1,"index":1953}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":314416,"byte_end":314422,"line_start":750,"line_end":750,"column_start":23,"column_end":29},"kind":{"Impl":{"id":247}},"from":{"krate":5,"index":5374},"to":{"krate":1,"index":1953}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":314532,"byte_end":314540,"line_start":757,"line_end":757,"column_start":25,"column_end":33},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":7164},"to":{"krate":0,"index":5294}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":314650,"byte_end":314658,"line_start":763,"line_end":763,"column_start":25,"column_end":33},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":7164},"to":{"krate":0,"index":5291}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/ffi/os_str.rs","byte_start":314746,"byte_end":314751,"line_start":769,"line_end":769,"column_start":25,"column_end":30},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":1694},"to":{"krate":0,"index":5285}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":318505,"byte_end":318512,"line_start":98,"line_end":98,"column_start":6,"column_end":13},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":1869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":319856,"byte_end":319863,"line_start":142,"line_end":142,"column_start":35,"column_end":42},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":1869},"to":{"krate":0,"index":5285}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":319963,"byte_end":319970,"line_start":145,"line_end":145,"column_start":37,"column_end":44},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":1869},"to":{"krate":0,"index":5294}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":320097,"byte_end":320104,"line_start":150,"line_end":150,"column_start":37,"column_end":44},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":1869},"to":{"krate":0,"index":5291}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":320194,"byte_end":320201,"line_start":156,"line_end":156,"column_start":15,"column_end":22},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":1869},"to":{"krate":0,"index":2572}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":320417,"byte_end":320424,"line_start":167,"line_end":167,"column_start":16,"column_end":23},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":1869},"to":{"krate":0,"index":2630}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":320604,"byte_end":320611,"line_start":174,"line_end":174,"column_start":15,"column_end":22},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":1869},"to":{"krate":0,"index":2647}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":321271,"byte_end":321282,"line_start":204,"line_end":204,"column_start":6,"column_end":17},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":7248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sgxfs.rs","byte_start":324359,"byte_end":324370,"line_start":287,"line_end":287,"column_start":42,"column_end":53},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":7248},"to":{"krate":0,"index":5288}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":377716,"byte_end":377725,"line_start":59,"line_end":59,"column_start":15,"column_end":24},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":2014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":378414,"byte_end":378423,"line_start":79,"line_end":79,"column_start":9,"column_end":18},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":2014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":379709,"byte_end":379718,"line_start":127,"line_end":127,"column_start":15,"column_end":24},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":2014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":380681,"byte_end":380690,"line_start":151,"line_end":151,"column_start":24,"column_end":33},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":2014},"to":{"krate":0,"index":2572}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":381917,"byte_end":381926,"line_start":188,"line_end":188,"column_start":27,"column_end":36},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":2014},"to":{"krate":0,"index":2653}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":382603,"byte_end":382612,"line_start":207,"line_end":207,"column_start":24,"column_end":33},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":2014},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":382932,"byte_end":382941,"line_start":219,"line_end":219,"column_start":24,"column_end":33},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":2014},"to":{"krate":0,"index":2647}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":387368,"byte_end":387377,"line_start":313,"line_end":313,"column_start":16,"column_end":25},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":2051},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":389949,"byte_end":389958,"line_start":398,"line_end":398,"column_start":26,"column_end":35},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":2051},"to":{"krate":0,"index":2630}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":391026,"byte_end":391035,"line_start":433,"line_end":433,"column_start":31,"column_end":40},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":2051},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":391381,"byte_end":391390,"line_start":445,"line_end":445,"column_start":32,"column_end":41},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":2051},"to":{"krate":0,"index":2647}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":391694,"byte_end":391703,"line_start":454,"line_end":454,"column_start":25,"column_end":34},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":2051},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":391919,"byte_end":391933,"line_start":463,"line_end":463,"column_start":9,"column_end":23},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":7255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":392452,"byte_end":392457,"line_start":482,"line_end":482,"column_start":37,"column_end":42},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":2186},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":392574,"byte_end":392588,"line_start":488,"line_end":488,"column_start":45,"column_end":59},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":7255},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":392712,"byte_end":392726,"line_start":494,"line_end":494,"column_start":26,"column_end":40},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":7255},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":393716,"byte_end":393726,"line_start":522,"line_end":522,"column_start":16,"column_end":26},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":2096},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":395170,"byte_end":395180,"line_start":567,"line_end":567,"column_start":26,"column_end":36},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":2096},"to":{"krate":0,"index":2630}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/buffered.rs","byte_start":398937,"byte_end":398947,"line_start":672,"line_end":672,"column_start":31,"column_end":41},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":2096},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":400911,"byte_end":400917,"line_start":42,"line_end":42,"column_start":9,"column_end":15},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":7263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":402098,"byte_end":402104,"line_start":82,"line_end":82,"column_start":22,"column_end":28},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":7263},"to":{"krate":0,"index":2647}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":403173,"byte_end":403179,"line_start":121,"line_end":121,"column_start":18,"column_end":24},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":7263},"to":{"krate":0,"index":2572}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":404001,"byte_end":404007,"line_start":156,"line_end":156,"column_start":21,"column_end":27},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":7263},"to":{"krate":0,"index":2653}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":406188,"byte_end":406194,"line_start":236,"line_end":236,"column_start":16,"column_end":22},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":7263},"to":{"krate":0,"index":2630}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":406598,"byte_end":406604,"line_start":253,"line_end":253,"column_start":16,"column_end":22},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":7263},"to":{"krate":0,"index":2630}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":406979,"byte_end":406985,"line_start":268,"line_end":268,"column_start":16,"column_end":22},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":7263},"to":{"krate":0,"index":2630}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/cursor.rs","byte_start":407365,"byte_end":407371,"line_start":283,"line_end":283,"column_start":16,"column_end":22},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":7263},"to":{"krate":0,"index":2630}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":409880,"byte_end":409885,"line_start":57,"line_end":57,"column_start":21,"column_end":26},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":2186},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":413182,"byte_end":413191,"line_start":158,"line_end":158,"column_start":6,"column_end":15},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":7292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":414580,"byte_end":414585,"line_start":186,"line_end":186,"column_start":26,"column_end":31},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":2186},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":414783,"byte_end":414788,"line_start":195,"line_end":195,"column_start":29,"column_end":34},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":2186},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":414912,"byte_end":414917,"line_start":202,"line_end":202,"column_start":6,"column_end":11},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":2186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":419299,"byte_end":419303,"line_start":328,"line_end":328,"column_start":21,"column_end":25},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":2190},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":420043,"byte_end":420048,"line_start":348,"line_end":348,"column_start":23,"column_end":28},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":2186},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":420645,"byte_end":420650,"line_start":365,"line_end":365,"column_start":23,"column_end":28},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":2186},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/error.rs","byte_start":421614,"byte_end":421626,"line_start":399,"line_end":399,"column_start":23,"column_end":35},"kind":{"Impl":{"id":295}},"from":{"krate":9,"index":2168},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/impls.rs","byte_start":424861,"byte_end":424864,"line_start":116,"line_end":116,"column_start":33,"column_end":36},"kind":{"Impl":{"id":296}},"from":{"krate":5,"index":91},"to":{"krate":0,"index":2572}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/impls.rs","byte_start":425638,"byte_end":425641,"line_start":148,"line_end":148,"column_start":35,"column_end":38},"kind":{"Impl":{"id":297}},"from":{"krate":5,"index":91},"to":{"krate":0,"index":2630}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/impls.rs","byte_start":426255,"byte_end":426258,"line_start":175,"line_end":175,"column_start":33,"column_end":36},"kind":{"Impl":{"id":298}},"from":{"krate":5,"index":91},"to":{"krate":0,"index":2647}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/impls.rs","byte_start":426411,"byte_end":426414,"line_start":182,"line_end":182,"column_start":39,"column_end":42},"kind":{"Impl":{"id":299}},"from":{"krate":5,"index":91},"to":{"krate":0,"index":2653}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/impls.rs","byte_start":430487,"byte_end":430490,"line_start":334,"line_end":334,"column_start":16,"column_end":19},"kind":{"Impl":{"id":300}},"from":{"krate":5,"index":4617},"to":{"krate":0,"index":2630}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/lazy.rs","byte_start":432329,"byte_end":432333,"line_start":35,"line_end":35,"column_start":25,"column_end":29},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":2327},"to":{"krate":1,"index":2056}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/lazy.rs","byte_start":432349,"byte_end":432353,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":2327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/lazy.rs","byte_start":432546,"byte_end":432550,"line_start":46,"line_end":46,"column_start":32,"column_end":36},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":2327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/lazy.rs","byte_start":434173,"byte_end":434183,"line_start":95,"line_end":95,"column_start":25,"column_end":35},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":2343},"to":{"krate":1,"index":2056}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/lazy.rs","byte_start":434219,"byte_end":434229,"line_start":98,"line_end":98,"column_start":9,"column_end":19},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":2343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/lazy.rs","byte_start":434449,"byte_end":434459,"line_start":108,"line_end":108,"column_start":32,"column_end":42},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":2343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":438222,"byte_end":438230,"line_start":79,"line_end":79,"column_start":15,"column_end":23},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":2375},"to":{"krate":0,"index":2572}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":438567,"byte_end":438576,"line_start":93,"line_end":93,"column_start":16,"column_end":25},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":2378},"to":{"krate":0,"index":2630}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":438882,"byte_end":438891,"line_start":106,"line_end":106,"column_start":16,"column_end":25},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":2381},"to":{"krate":0,"index":2630}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":439258,"byte_end":439263,"line_start":125,"line_end":125,"column_start":34,"column_end":39},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":2399},"to":{"krate":0,"index":2630}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":439989,"byte_end":439994,"line_start":149,"line_end":149,"column_start":32,"column_end":37},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":2399},"to":{"krate":0,"index":2572}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":443292,"byte_end":443297,"line_start":242,"line_end":242,"column_start":6,"column_end":11},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":2418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":444234,"byte_end":444239,"line_start":269,"line_end":269,"column_start":21,"column_end":26},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":2418},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":444358,"byte_end":444363,"line_start":275,"line_end":275,"column_start":15,"column_end":20},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":2418},"to":{"krate":0,"index":2572}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":445050,"byte_end":445059,"line_start":297,"line_end":297,"column_start":15,"column_end":24},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":2420},"to":{"krate":0,"index":2572}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":445411,"byte_end":445420,"line_start":312,"line_end":312,"column_start":18,"column_end":27},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":2420},"to":{"krate":0,"index":2653}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":445610,"byte_end":445619,"line_start":321,"line_end":321,"column_start":21,"column_end":30},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":2420},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":448536,"byte_end":448542,"line_start":394,"line_end":394,"column_start":6,"column_end":12},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":2448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":448959,"byte_end":448965,"line_start":406,"line_end":406,"column_start":21,"column_end":27},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":2448},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":449086,"byte_end":449092,"line_start":412,"line_end":412,"column_start":16,"column_end":22},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":2448},"to":{"krate":0,"index":2630}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":449629,"byte_end":449639,"line_start":430,"line_end":430,"column_start":16,"column_end":26},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":2450},"to":{"krate":0,"index":2630}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":450004,"byte_end":450014,"line_start":442,"line_end":442,"column_start":21,"column_end":31},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":2450},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":451881,"byte_end":451887,"line_start":496,"line_end":496,"column_start":6,"column_end":12},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":2473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":452303,"byte_end":452309,"line_start":508,"line_end":508,"column_start":21,"column_end":27},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":2473},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":452430,"byte_end":452436,"line_start":514,"line_end":514,"column_start":16,"column_end":22},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":2473},"to":{"krate":0,"index":2630}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":452973,"byte_end":452983,"line_start":532,"line_end":532,"column_start":16,"column_end":26},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":2475},"to":{"krate":0,"index":2630}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/stdio.rs","byte_start":453348,"byte_end":453358,"line_start":544,"line_end":544,"column_start":21,"column_end":31},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":2475},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":457687,"byte_end":457692,"line_start":89,"line_end":89,"column_start":15,"column_end":20},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":2518},"to":{"krate":0,"index":2572}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":457910,"byte_end":457915,"line_start":101,"line_end":101,"column_start":18,"column_end":23},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":2518},"to":{"krate":0,"index":2653}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":458081,"byte_end":458086,"line_start":110,"line_end":110,"column_start":21,"column_end":26},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":2518},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":458729,"byte_end":458735,"line_start":134,"line_end":134,"column_start":15,"column_end":21},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":2529},"to":{"krate":0,"index":2572}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":459269,"byte_end":459275,"line_start":158,"line_end":158,"column_start":21,"column_end":27},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":2529},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":459909,"byte_end":459913,"line_start":182,"line_end":182,"column_start":16,"column_end":20},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":2538},"to":{"krate":0,"index":2630}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/util.rs","byte_start":460301,"byte_end":460305,"line_start":200,"line_end":200,"column_start":21,"column_end":25},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":2538},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":327287,"byte_end":327292,"line_start":61,"line_end":61,"column_start":15,"column_end":20},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":2549},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342296,"byte_end":342306,"line_start":439,"line_end":439,"column_start":26,"column_end":36},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":2586},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342340,"byte_end":342350,"line_start":441,"line_end":441,"column_start":26,"column_end":36},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":2586},"to":{"krate":1,"index":2056}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342383,"byte_end":342393,"line_start":443,"line_end":443,"column_start":25,"column_end":35},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":2586},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":342531,"byte_end":342541,"line_start":449,"line_end":449,"column_start":10,"column_end":20},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":2586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":343951,"byte_end":343961,"line_start":493,"line_end":493,"column_start":20,"column_end":30},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":2586},"to":{"krate":1,"index":2241}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":344095,"byte_end":344105,"line_start":502,"line_end":502,"column_start":23,"column_end":33},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":2586},"to":{"krate":1,"index":2254}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":344545,"byte_end":344552,"line_start":518,"line_end":518,"column_start":26,"column_end":33},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":7349},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":344586,"byte_end":344593,"line_start":520,"line_end":520,"column_start":26,"column_end":33},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":7349},"to":{"krate":1,"index":2056}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":344626,"byte_end":344633,"line_start":522,"line_end":522,"column_start":25,"column_end":32},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":7349},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":344771,"byte_end":344778,"line_start":528,"line_end":528,"column_start":10,"column_end":17},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":7349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":346160,"byte_end":346167,"line_start":572,"line_end":572,"column_start":20,"column_end":27},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":7349},"to":{"krate":1,"index":2241}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":346410,"byte_end":346421,"line_start":585,"line_end":585,"column_start":6,"column_end":17},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":7358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":355292,"byte_end":355299,"line_start":803,"line_end":803,"column_start":48,"column_end":55},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":2638},"to":{"krate":1,"index":6548}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":360734,"byte_end":360738,"line_start":964,"line_end":964,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":2572},"to":{"krate":0,"index":2653}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":366314,"byte_end":366319,"line_start":1107,"line_end":1107,"column_start":12,"column_end":17},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":2661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":367055,"byte_end":367060,"line_start":1131,"line_end":1131,"column_start":51,"column_end":56},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":2661},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":367263,"byte_end":367268,"line_start":1137,"line_end":1137,"column_start":33,"column_end":38},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":2661},"to":{"krate":0,"index":2572}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":368164,"byte_end":368169,"line_start":1164,"line_end":1164,"column_start":42,"column_end":47},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":2661},"to":{"krate":0,"index":2653}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":368978,"byte_end":368982,"line_start":1194,"line_end":1194,"column_start":9,"column_end":13},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":7385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":370336,"byte_end":370340,"line_start":1241,"line_end":1241,"column_start":24,"column_end":28},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":7385},"to":{"krate":0,"index":2572}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":371222,"byte_end":371226,"line_start":1266,"line_end":1266,"column_start":30,"column_end":34},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":7385},"to":{"krate":0,"index":2653}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":372135,"byte_end":372140,"line_start":1297,"line_end":1297,"column_start":28,"column_end":33},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":7392},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":372945,"byte_end":372950,"line_start":1326,"line_end":1326,"column_start":31,"column_end":36},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":7398},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/io/mod.rs","byte_start":373724,"byte_end":373729,"line_start":1355,"line_end":1355,"column_start":31,"column_end":36},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":7405},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":466579,"byte_end":466585,"line_start":109,"line_end":109,"column_start":6,"column_end":12},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":7411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":470185,"byte_end":470193,"line_start":211,"line_end":211,"column_start":6,"column_end":14},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":7441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":480224,"byte_end":480230,"line_start":475,"line_end":475,"column_start":23,"column_end":29},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":7411},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":480448,"byte_end":480454,"line_start":484,"line_end":484,"column_start":25,"column_end":31},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":7411},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":480555,"byte_end":480561,"line_start":490,"line_end":490,"column_start":25,"column_end":31},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":7411},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":480719,"byte_end":480727,"line_start":498,"line_end":498,"column_start":23,"column_end":31},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":7441},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":481431,"byte_end":481439,"line_start":513,"line_end":513,"column_start":21,"column_end":29},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":7441},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":481568,"byte_end":481576,"line_start":519,"line_end":519,"column_start":16,"column_end":24},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":7441},"to":{"krate":1,"index":1741}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":481655,"byte_end":481663,"line_start":525,"line_end":525,"column_start":20,"column_end":28},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":7441},"to":{"krate":1,"index":1769}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":481797,"byte_end":481803,"line_start":531,"line_end":531,"column_start":30,"column_end":36},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":7411},"to":{"krate":1,"index":1769}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":481997,"byte_end":482005,"line_start":540,"line_end":540,"column_start":28,"column_end":36},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":7441},"to":{"krate":1,"index":1769}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":482182,"byte_end":482190,"line_start":549,"line_end":549,"column_start":13,"column_end":21},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":7441},"to":{"krate":1,"index":1774}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":482215,"byte_end":482223,"line_start":551,"line_end":551,"column_start":21,"column_end":29},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":7441},"to":{"krate":1,"index":6778}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":482410,"byte_end":482418,"line_start":558,"line_end":558,"column_start":21,"column_end":29},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":7441},"to":{"krate":1,"index":1806}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":482556,"byte_end":482562,"line_start":564,"line_end":564,"column_start":31,"column_end":37},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":7411},"to":{"krate":1,"index":1806}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":482806,"byte_end":482814,"line_start":573,"line_end":573,"column_start":29,"column_end":37},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":7441},"to":{"krate":1,"index":1806}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":483038,"byte_end":483046,"line_start":582,"line_end":582,"column_start":14,"column_end":22},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":7441},"to":{"krate":1,"index":1795}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":483216,"byte_end":483224,"line_start":588,"line_end":588,"column_start":30,"column_end":38},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":7441},"to":{"krate":0,"index":5285}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":483326,"byte_end":483334,"line_start":593,"line_end":593,"column_start":32,"column_end":40},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":7441},"to":{"krate":0,"index":5294}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":483652,"byte_end":483660,"line_start":608,"line_end":608,"column_start":20,"column_end":28},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":7441},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":483840,"byte_end":483848,"line_start":616,"line_end":616,"column_start":24,"column_end":32},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":7441},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":484062,"byte_end":484068,"line_start":624,"line_end":624,"column_start":24,"column_end":30},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":7411},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":484241,"byte_end":484249,"line_start":632,"line_end":632,"column_start":6,"column_end":14},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":7444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":495354,"byte_end":495362,"line_start":927,"line_end":927,"column_start":23,"column_end":31},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":7444},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":499103,"byte_end":499111,"line_start":1025,"line_end":1025,"column_start":21,"column_end":29},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":7444},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":499240,"byte_end":499248,"line_start":1031,"line_end":1031,"column_start":16,"column_end":24},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":7444},"to":{"krate":1,"index":1741}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":499327,"byte_end":499335,"line_start":1037,"line_end":1037,"column_start":20,"column_end":28},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":7444},"to":{"krate":1,"index":1769}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":499469,"byte_end":499477,"line_start":1043,"line_end":1043,"column_start":28,"column_end":36},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":7444},"to":{"krate":1,"index":1769}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":499671,"byte_end":499677,"line_start":1052,"line_end":1052,"column_start":30,"column_end":36},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":7411},"to":{"krate":1,"index":1769}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":499856,"byte_end":499864,"line_start":1061,"line_end":1061,"column_start":13,"column_end":21},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":7444},"to":{"krate":1,"index":1774}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":499889,"byte_end":499897,"line_start":1063,"line_end":1063,"column_start":21,"column_end":29},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":7444},"to":{"krate":1,"index":6778}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":500013,"byte_end":500021,"line_start":1069,"line_end":1069,"column_start":21,"column_end":29},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":7444},"to":{"krate":1,"index":1806}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":500159,"byte_end":500165,"line_start":1075,"line_end":1075,"column_start":31,"column_end":37},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":7411},"to":{"krate":1,"index":1806}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":500406,"byte_end":500414,"line_start":1084,"line_end":1084,"column_start":29,"column_end":37},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":7444},"to":{"krate":1,"index":1806}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":500641,"byte_end":500649,"line_start":1093,"line_end":1093,"column_start":14,"column_end":22},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":7444},"to":{"krate":1,"index":1795}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":500788,"byte_end":500796,"line_start":1099,"line_end":1099,"column_start":31,"column_end":39},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":7444},"to":{"krate":0,"index":5285}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":500900,"byte_end":500908,"line_start":1104,"line_end":1104,"column_start":33,"column_end":41},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":7444},"to":{"krate":0,"index":5294}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":501231,"byte_end":501239,"line_start":1119,"line_end":1119,"column_start":21,"column_end":29},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":7444},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":501421,"byte_end":501429,"line_start":1127,"line_end":1127,"column_start":25,"column_end":33},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":7444},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":501598,"byte_end":501606,"line_start":1134,"line_end":1134,"column_start":25,"column_end":33},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":7444},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":501858,"byte_end":501864,"line_start":1144,"line_end":1144,"column_start":25,"column_end":31},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":7411},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/ip.rs","byte_start":502060,"byte_end":502066,"line_start":1152,"line_end":1152,"column_start":25,"column_end":31},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":7411},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":504869,"byte_end":504879,"line_start":79,"line_end":79,"column_start":6,"column_end":16},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":7476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":506952,"byte_end":506964,"line_start":142,"line_end":142,"column_start":6,"column_end":18},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":7498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":508106,"byte_end":508118,"line_start":181,"line_end":181,"column_start":6,"column_end":18},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":7501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":511442,"byte_end":511454,"line_start":274,"line_end":274,"column_start":36,"column_end":48},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":7498},"to":{"krate":0,"index":5294}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":511597,"byte_end":511609,"line_start":280,"line_end":280,"column_start":37,"column_end":49},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":7501},"to":{"krate":0,"index":5294}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":511745,"byte_end":511755,"line_start":286,"line_end":286,"column_start":29,"column_end":39},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":7476},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":511937,"byte_end":511947,"line_start":293,"line_end":293,"column_start":29,"column_end":39},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":7476},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":512142,"byte_end":512152,"line_start":300,"line_end":300,"column_start":42,"column_end":52},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":7476},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":513434,"byte_end":513444,"line_start":332,"line_end":332,"column_start":23,"column_end":33},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":7476},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":513667,"byte_end":513679,"line_start":341,"line_end":341,"column_start":23,"column_end":35},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":7498},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":513825,"byte_end":513837,"line_start":347,"line_end":347,"column_start":21,"column_end":33},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":7498},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":513973,"byte_end":513985,"line_start":353,"line_end":353,"column_start":23,"column_end":35},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":7501},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":514133,"byte_end":514145,"line_start":359,"line_end":359,"column_start":21,"column_end":33},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":7501},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":514274,"byte_end":514286,"line_start":365,"line_end":365,"column_start":16,"column_end":28},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":7498},"to":{"krate":1,"index":1741}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":514365,"byte_end":514377,"line_start":371,"line_end":371,"column_start":16,"column_end":28},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":7501},"to":{"krate":1,"index":1741}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":514460,"byte_end":514472,"line_start":377,"line_end":377,"column_start":20,"column_end":32},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":7498},"to":{"krate":1,"index":1769}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":514677,"byte_end":514689,"line_start":384,"line_end":384,"column_start":20,"column_end":32},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":7501},"to":{"krate":1,"index":1769}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":515031,"byte_end":515043,"line_start":393,"line_end":393,"column_start":13,"column_end":25},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":7498},"to":{"krate":1,"index":1774}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":515060,"byte_end":515072,"line_start":395,"line_end":395,"column_start":13,"column_end":25},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":7501},"to":{"krate":1,"index":1774}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":515097,"byte_end":515109,"line_start":397,"line_end":397,"column_start":21,"column_end":33},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":7498},"to":{"krate":1,"index":6778}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":515256,"byte_end":515268,"line_start":403,"line_end":403,"column_start":21,"column_end":33},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":7501},"to":{"krate":1,"index":6778}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":518376,"byte_end":518386,"line_start":475,"line_end":475,"column_start":24,"column_end":34},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":7476},"to":{"krate":0,"index":2982}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":518579,"byte_end":518591,"line_start":482,"line_end":482,"column_start":24,"column_end":36},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":7498},"to":{"krate":0,"index":2982}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":518796,"byte_end":518808,"line_start":489,"line_end":489,"column_start":24,"column_end":36},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":7501},"to":{"krate":0,"index":2982}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/addr.rs","byte_start":521985,"byte_end":521991,"line_start":590,"line_end":590,"column_start":24,"column_end":30},"kind":{"Impl":{"id":428}},"from":{"krate":5,"index":5374},"to":{"krate":0,"index":2982}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":523220,"byte_end":523226,"line_start":29,"line_end":29,"column_start":10,"column_end":16},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":3033},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":531578,"byte_end":531584,"line_start":274,"line_end":274,"column_start":18,"column_end":24},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":7411},"to":{"krate":1,"index":8556}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":531857,"byte_end":531865,"line_start":284,"line_end":284,"column_start":18,"column_end":26},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":7441},"to":{"krate":1,"index":8556}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":532142,"byte_end":532150,"line_start":294,"line_end":294,"column_start":18,"column_end":26},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":7444},"to":{"krate":1,"index":8556}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":532427,"byte_end":532439,"line_start":304,"line_end":304,"column_start":18,"column_end":30},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":7498},"to":{"krate":1,"index":8556}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":532725,"byte_end":532737,"line_start":314,"line_end":314,"column_start":18,"column_end":30},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":7501},"to":{"krate":1,"index":8556}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":533023,"byte_end":533033,"line_start":324,"line_end":324,"column_start":18,"column_end":28},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":7476},"to":{"krate":1,"index":8556}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":534668,"byte_end":534682,"line_start":369,"line_end":369,"column_start":23,"column_end":37},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":7504},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/parser.rs","byte_start":534816,"byte_end":534830,"line_start":375,"line_end":375,"column_start":16,"column_end":30},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":7504},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":538129,"byte_end":538138,"line_start":81,"line_end":81,"column_start":6,"column_end":15},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":3151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":549261,"byte_end":549270,"line_start":363,"line_end":363,"column_start":15,"column_end":24},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":3151},"to":{"krate":0,"index":2572}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":549608,"byte_end":549617,"line_start":378,"line_end":378,"column_start":16,"column_end":25},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":3151},"to":{"krate":0,"index":2630}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":550594,"byte_end":550603,"line_start":421,"line_end":421,"column_start":38,"column_end":47},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":3151},"to":{"krate":0,"index":5285}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":550718,"byte_end":550727,"line_start":427,"line_end":427,"column_start":40,"column_end":49},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":3151},"to":{"krate":0,"index":5294}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":550863,"byte_end":550872,"line_start":433,"line_end":433,"column_start":40,"column_end":49},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":3151},"to":{"krate":0,"index":5291}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":550967,"byte_end":550976,"line_start":439,"line_end":439,"column_start":21,"column_end":30},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":3151},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":551078,"byte_end":551089,"line_start":445,"line_end":445,"column_start":6,"column_end":17},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":3154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":557137,"byte_end":557145,"line_start":608,"line_end":608,"column_start":23,"column_end":31},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":7518},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":557347,"byte_end":557358,"line_start":615,"line_end":615,"column_start":40,"column_end":51},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":3154},"to":{"krate":0,"index":5285}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":557477,"byte_end":557488,"line_start":621,"line_end":621,"column_start":42,"column_end":53},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":3154},"to":{"krate":0,"index":5294}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":557632,"byte_end":557643,"line_start":627,"line_end":627,"column_start":42,"column_end":53},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":3154},"to":{"krate":0,"index":5291}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/tcp.rs","byte_start":557740,"byte_end":557751,"line_start":633,"line_end":633,"column_start":21,"column_end":32},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":3154},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":559988,"byte_end":559997,"line_start":52,"line_end":52,"column_start":6,"column_end":15},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":3262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":576901,"byte_end":576910,"line_start":476,"line_end":476,"column_start":38,"column_end":47},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":3262},"to":{"krate":0,"index":5285}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":577025,"byte_end":577034,"line_start":482,"line_end":482,"column_start":40,"column_end":49},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":3262},"to":{"krate":0,"index":5294}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":577170,"byte_end":577179,"line_start":488,"line_end":488,"column_start":40,"column_end":49},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":3262},"to":{"krate":0,"index":5291}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/net/udp.rs","byte_start":577274,"byte_end":577283,"line_start":494,"line_end":494,"column_start":21,"column_end":30},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":3262},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/os/fs.rs","byte_start":585270,"byte_end":585278,"line_start":94,"line_end":94,"column_start":22,"column_end":30},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":8447},"to":{"krate":0,"index":3388}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":594092,"byte_end":594098,"line_start":160,"line_end":160,"column_start":45,"column_end":51},"kind":{"Impl":{"id":457}},"from":{"krate":1,"index":1463},"to":{"krate":0,"index":3456}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":594152,"byte_end":594159,"line_start":161,"line_end":161,"column_start":48,"column_end":55},"kind":{"Impl":{"id":458}},"from":{"krate":1,"index":1380},"to":{"krate":0,"index":3456}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":594197,"byte_end":594205,"line_start":162,"line_end":162,"column_start":32,"column_end":40},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":4052},"to":{"krate":0,"index":3456}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":594235,"byte_end":594252,"line_start":163,"line_end":163,"column_start":24,"column_end":41},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":4147},"to":{"krate":0,"index":3456}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":594290,"byte_end":594299,"line_start":164,"line_end":164,"column_start":32,"column_end":41},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":4274},"to":{"krate":0,"index":3456}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":594329,"byte_end":594345,"line_start":165,"line_end":165,"column_start":24,"column_end":40},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":3458},"to":{"krate":0,"index":3456}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":594580,"byte_end":594582,"line_start":170,"line_end":170,"column_start":48,"column_end":50},"kind":{"Impl":{"id":463}},"from":{"krate":5,"index":3391},"to":{"krate":0,"index":3456}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":594636,"byte_end":594639,"line_start":171,"line_end":171,"column_start":48,"column_end":51},"kind":{"Impl":{"id":464}},"from":{"krate":5,"index":4280},"to":{"krate":0,"index":3456}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":594902,"byte_end":594912,"line_start":178,"line_end":178,"column_start":36,"column_end":46},"kind":{"Impl":{"id":465}},"from":{"krate":1,"index":3136},"to":{"krate":0,"index":3457}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":594945,"byte_end":594961,"line_start":179,"line_end":179,"column_start":27,"column_end":43},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":3458},"to":{"krate":0,"index":3457}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":595003,"byte_end":595011,"line_start":181,"line_end":181,"column_start":35,"column_end":43},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":4052},"to":{"krate":0,"index":3457}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":595044,"byte_end":595061,"line_start":182,"line_end":182,"column_start":27,"column_end":44},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":4147},"to":{"krate":0,"index":3457}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":595102,"byte_end":595111,"line_start":183,"line_end":183,"column_start":35,"column_end":44},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":4274},"to":{"krate":0,"index":3457}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":595195,"byte_end":595206,"line_start":186,"line_end":186,"column_start":32,"column_end":43},"kind":{"Impl":{"id":470}},"from":{"krate":1,"index":32830},"to":{"krate":0,"index":3457}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":595284,"byte_end":595292,"line_start":188,"line_end":188,"column_start":32,"column_end":40},"kind":{"Impl":{"id":471}},"from":{"krate":1,"index":32558},"to":{"krate":0,"index":3457}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":595371,"byte_end":595380,"line_start":190,"line_end":190,"column_start":32,"column_end":41},"kind":{"Impl":{"id":472}},"from":{"krate":1,"index":32626},"to":{"krate":0,"index":3457}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":595459,"byte_end":595468,"line_start":192,"line_end":192,"column_start":32,"column_end":41},"kind":{"Impl":{"id":473}},"from":{"krate":1,"index":32694},"to":{"krate":0,"index":3457}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":595547,"byte_end":595556,"line_start":194,"line_end":194,"column_start":32,"column_end":41},"kind":{"Impl":{"id":474}},"from":{"krate":1,"index":32762},"to":{"krate":0,"index":3457}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":595727,"byte_end":595738,"line_start":199,"line_end":199,"column_start":32,"column_end":43},"kind":{"Impl":{"id":475}},"from":{"krate":1,"index":32864},"to":{"krate":0,"index":3457}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":595816,"byte_end":595824,"line_start":201,"line_end":201,"column_start":32,"column_end":40},"kind":{"Impl":{"id":476}},"from":{"krate":1,"index":32592},"to":{"krate":0,"index":3457}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":595903,"byte_end":595912,"line_start":203,"line_end":203,"column_start":32,"column_end":41},"kind":{"Impl":{"id":477}},"from":{"krate":1,"index":32660},"to":{"krate":0,"index":3457}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":595991,"byte_end":596000,"line_start":205,"line_end":205,"column_start":32,"column_end":41},"kind":{"Impl":{"id":478}},"from":{"krate":1,"index":32728},"to":{"krate":0,"index":3457}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":596079,"byte_end":596088,"line_start":207,"line_end":207,"column_start":32,"column_end":41},"kind":{"Impl":{"id":479}},"from":{"krate":1,"index":32796},"to":{"krate":0,"index":3457}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":596257,"byte_end":596267,"line_start":212,"line_end":212,"column_start":32,"column_end":42},"kind":{"Impl":{"id":480}},"from":{"krate":1,"index":6224},"to":{"krate":0,"index":3457}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":596351,"byte_end":596360,"line_start":215,"line_end":215,"column_start":35,"column_end":44},"kind":{"Impl":{"id":481}},"from":{"krate":1,"index":6229},"to":{"krate":0,"index":3457}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":596410,"byte_end":596417,"line_start":217,"line_end":217,"column_start":43,"column_end":50},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":7085},"to":{"krate":0,"index":3456}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":596513,"byte_end":596529,"line_start":225,"line_end":225,"column_start":19,"column_end":35},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":3458},"to":{"krate":1,"index":2241}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":596631,"byte_end":596647,"line_start":233,"line_end":233,"column_start":22,"column_end":38},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":3458},"to":{"krate":1,"index":2254}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":596763,"byte_end":596779,"line_start":239,"line_end":239,"column_start":42,"column_end":58},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":3458},"to":{"krate":1,"index":2274}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":596930,"byte_end":596946,"line_start":247,"line_end":247,"column_start":36,"column_end":52},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":3458},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panic.rs","byte_start":597117,"byte_end":597133,"line_start":253,"line_end":253,"column_start":28,"column_end":44},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":3458},"to":{"krate":1,"index":9117}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":604545,"byte_end":604551,"line_start":110,"line_end":110,"column_start":10,"column_end":16},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":7564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":610310,"byte_end":610325,"line_start":276,"line_end":276,"column_start":10,"column_end":25},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":7650},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":610808,"byte_end":610823,"line_start":295,"line_end":295,"column_start":29,"column_end":44},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":7650},"to":{"krate":1,"index":1769}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":610980,"byte_end":610995,"line_start":301,"line_end":301,"column_start":30,"column_end":45},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":7650},"to":{"krate":1,"index":1806}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":611177,"byte_end":611192,"line_start":307,"line_end":307,"column_start":19,"column_end":34},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":7650},"to":{"krate":1,"index":1795}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":611324,"byte_end":611339,"line_start":313,"line_end":313,"column_start":15,"column_end":30},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":7650},"to":{"krate":1,"index":6778}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":612636,"byte_end":612645,"line_start":358,"line_end":358,"column_start":10,"column_end":19},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":7667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":613073,"byte_end":613082,"line_start":372,"line_end":372,"column_start":23,"column_end":32},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":7667},"to":{"krate":1,"index":1953}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":613177,"byte_end":613186,"line_start":378,"line_end":378,"column_start":22,"column_end":31},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":7667},"to":{"krate":1,"index":1953}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":614468,"byte_end":614478,"line_start":422,"line_end":422,"column_start":21,"column_end":31},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":7714},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":614619,"byte_end":614630,"line_start":426,"line_end":426,"column_start":29,"column_end":40},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":3611},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":614901,"byte_end":614911,"line_start":436,"line_end":436,"column_start":10,"column_end":20},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":7714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":619638,"byte_end":619648,"line_start":573,"line_end":573,"column_start":22,"column_end":32},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":7714},"to":{"krate":1,"index":1953}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":619741,"byte_end":619751,"line_start":579,"line_end":579,"column_start":23,"column_end":33},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":7714},"to":{"krate":1,"index":1953}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":619855,"byte_end":619859,"line_start":585,"line_end":585,"column_start":21,"column_end":25},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":7724},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":620000,"byte_end":620011,"line_start":589,"line_end":589,"column_start":29,"column_end":40},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":3642},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":620270,"byte_end":620274,"line_start":599,"line_end":599,"column_start":10,"column_end":14},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":7724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":620479,"byte_end":620483,"line_start":607,"line_end":607,"column_start":22,"column_end":26},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":7724},"to":{"krate":1,"index":1953}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":620576,"byte_end":620580,"line_start":613,"line_end":613,"column_start":23,"column_end":27},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":7724},"to":{"krate":1,"index":1953}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":620686,"byte_end":620690,"line_start":619,"line_end":619,"column_start":23,"column_end":27},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":7724},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":620865,"byte_end":620869,"line_start":627,"line_end":627,"column_start":34,"column_end":38},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":7724},"to":{"krate":1,"index":5232}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":621016,"byte_end":621020,"line_start":633,"line_end":633,"column_start":24,"column_end":28},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":7724},"to":{"krate":1,"index":5566}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":621051,"byte_end":621061,"line_start":635,"line_end":635,"column_start":23,"column_end":33},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":7714},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":623161,"byte_end":623171,"line_start":687,"line_end":687,"column_start":34,"column_end":44},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":7714},"to":{"krate":1,"index":5232}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":625019,"byte_end":625029,"line_start":733,"line_end":733,"column_start":24,"column_end":34},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":7714},"to":{"krate":1,"index":5566}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":625066,"byte_end":625076,"line_start":735,"line_end":735,"column_start":29,"column_end":39},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":7714},"to":{"krate":1,"index":1769}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":625210,"byte_end":625220,"line_start":741,"line_end":741,"column_start":18,"column_end":28},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":7714},"to":{"krate":1,"index":1774}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":625258,"byte_end":625268,"line_start":743,"line_end":743,"column_start":30,"column_end":40},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":7714},"to":{"krate":1,"index":1806}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":625438,"byte_end":625448,"line_start":749,"line_end":749,"column_start":19,"column_end":29},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":7714},"to":{"krate":1,"index":1795}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":625839,"byte_end":625848,"line_start":765,"line_end":765,"column_start":23,"column_end":32},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":7730},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":626053,"byte_end":626062,"line_start":775,"line_end":775,"column_start":24,"column_end":33},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":7730},"to":{"krate":1,"index":5566}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":626956,"byte_end":626963,"line_start":801,"line_end":801,"column_start":6,"column_end":13},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":7741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":634340,"byte_end":634343,"line_start":1022,"line_end":1022,"column_start":22,"column_end":25},"kind":{"Impl":{"id":520}},"from":{"krate":5,"index":91},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":634566,"byte_end":634573,"line_start":1030,"line_end":1030,"column_start":26,"column_end":33},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":7741},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":634795,"byte_end":634798,"line_start":1039,"line_end":1039,"column_start":24,"column_end":27},"kind":{"Impl":{"id":522}},"from":{"krate":5,"index":91},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":635104,"byte_end":635107,"line_start":1049,"line_end":1049,"column_start":16,"column_end":19},"kind":{"Impl":{"id":523}},"from":{"krate":5,"index":91},"to":{"krate":1,"index":1741}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":635258,"byte_end":635265,"line_start":1056,"line_end":1056,"column_start":45,"column_end":52},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":7741},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":635382,"byte_end":635389,"line_start":1062,"line_end":1062,"column_start":25,"column_end":32},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":7741},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":635618,"byte_end":635626,"line_start":1072,"line_end":1072,"column_start":24,"column_end":32},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":7164},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":635841,"byte_end":635848,"line_start":1081,"line_end":1081,"column_start":23,"column_end":30},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":7741},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":636065,"byte_end":636072,"line_start":1090,"line_end":1090,"column_start":18,"column_end":25},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":7741},"to":{"krate":1,"index":8556}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":636257,"byte_end":636264,"line_start":1098,"line_end":1098,"column_start":48,"column_end":55},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":7741},"to":{"krate":1,"index":5205}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":636459,"byte_end":636466,"line_start":1106,"line_end":1106,"column_start":42,"column_end":49},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":7741},"to":{"krate":1,"index":5218}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":636628,"byte_end":636635,"line_start":1112,"line_end":1112,"column_start":21,"column_end":28},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":7741},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":636782,"byte_end":636789,"line_start":1118,"line_end":1118,"column_start":21,"column_end":28},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":7741},"to":{"krate":1,"index":2241}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":636923,"byte_end":636930,"line_start":1126,"line_end":1126,"column_start":23,"column_end":30},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":7741},"to":{"krate":1,"index":1719}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":637012,"byte_end":637019,"line_start":1132,"line_end":1132,"column_start":18,"column_end":25},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":7741},"to":{"krate":1,"index":2032}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":637109,"byte_end":637112,"line_start":1138,"line_end":1138,"column_start":29,"column_end":32},"kind":{"Impl":{"id":535}},"from":{"krate":5,"index":346},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":637244,"byte_end":637247,"line_start":1145,"line_end":1145,"column_start":28,"column_end":31},"kind":{"Impl":{"id":536}},"from":{"krate":5,"index":346},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":637379,"byte_end":637382,"line_start":1152,"line_end":1152,"column_start":32,"column_end":35},"kind":{"Impl":{"id":537}},"from":{"krate":5,"index":346},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":637533,"byte_end":637540,"line_start":1159,"line_end":1159,"column_start":34,"column_end":41},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":7741},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":637652,"byte_end":637655,"line_start":1166,"line_end":1166,"column_start":24,"column_end":27},"kind":{"Impl":{"id":539}},"from":{"krate":5,"index":4280},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":637973,"byte_end":637976,"line_start":1175,"line_end":1175,"column_start":22,"column_end":25},"kind":{"Impl":{"id":540}},"from":{"krate":5,"index":4280},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":638284,"byte_end":638286,"line_start":1184,"line_end":1184,"column_start":24,"column_end":26},"kind":{"Impl":{"id":541}},"from":{"krate":5,"index":3391},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":638595,"byte_end":638597,"line_start":1193,"line_end":1193,"column_start":22,"column_end":24},"kind":{"Impl":{"id":542}},"from":{"krate":5,"index":3391},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":638890,"byte_end":638894,"line_start":1202,"line_end":1202,"column_start":18,"column_end":22},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":3784},"to":{"krate":5,"index":337}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":639124,"byte_end":639131,"line_start":1212,"line_end":1212,"column_start":25,"column_end":32},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":7741},"to":{"krate":1,"index":1769}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":639249,"byte_end":639256,"line_start":1218,"line_end":1218,"column_start":15,"column_end":22},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":7741},"to":{"krate":1,"index":6778}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":639359,"byte_end":639366,"line_start":1224,"line_end":1224,"column_start":18,"column_end":25},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":7741},"to":{"krate":1,"index":1774}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":639396,"byte_end":639403,"line_start":1226,"line_end":1226,"column_start":26,"column_end":33},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":7741},"to":{"krate":1,"index":1806}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":639561,"byte_end":639568,"line_start":1232,"line_end":1232,"column_start":19,"column_end":26},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":7741},"to":{"krate":1,"index":1795}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":639706,"byte_end":639713,"line_start":1238,"line_end":1238,"column_start":23,"column_end":30},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":7741},"to":{"krate":1,"index":1953}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":640917,"byte_end":640921,"line_start":1277,"line_end":1277,"column_start":6,"column_end":10},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":3784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":656595,"byte_end":656599,"line_start":1730,"line_end":1730,"column_start":23,"column_end":27},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":3784},"to":{"krate":1,"index":1953}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":656684,"byte_end":656688,"line_start":1736,"line_end":1736,"column_start":21,"column_end":25},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":3784},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":657168,"byte_end":657175,"line_start":1752,"line_end":1752,"column_start":21,"column_end":28},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":3835},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":657315,"byte_end":657322,"line_start":1758,"line_end":1758,"column_start":23,"column_end":30},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":3835},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":657460,"byte_end":657464,"line_start":1764,"line_end":1764,"column_start":25,"column_end":29},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":3784},"to":{"krate":1,"index":1769}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":657580,"byte_end":657584,"line_start":1770,"line_end":1770,"column_start":15,"column_end":19},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":3784},"to":{"krate":1,"index":6778}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":657742,"byte_end":657746,"line_start":1778,"line_end":1778,"column_start":18,"column_end":22},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":3784},"to":{"krate":1,"index":1774}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":657776,"byte_end":657780,"line_start":1780,"line_end":1780,"column_start":26,"column_end":30},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":3784},"to":{"krate":1,"index":1806}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":657935,"byte_end":657939,"line_start":1786,"line_end":1786,"column_start":19,"column_end":23},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":3784},"to":{"krate":1,"index":1795}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":658073,"byte_end":658077,"line_start":1792,"line_end":1792,"column_start":22,"column_end":26},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":3784},"to":{"krate":1,"index":1953}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":658155,"byte_end":658160,"line_start":1798,"line_end":1798,"column_start":22,"column_end":27},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":1694},"to":{"krate":1,"index":1953}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":658249,"byte_end":658252,"line_start":1804,"line_end":1804,"column_start":22,"column_end":25},"kind":{"Impl":{"id":562}},"from":{"krate":5,"index":346},"to":{"krate":1,"index":1953}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":658352,"byte_end":658360,"line_start":1810,"line_end":1810,"column_start":22,"column_end":30},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":7164},"to":{"krate":1,"index":1953}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":658555,"byte_end":658561,"line_start":1823,"line_end":1823,"column_start":22,"column_end":28},"kind":{"Impl":{"id":565}},"from":{"krate":5,"index":5374},"to":{"krate":1,"index":1953}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":658650,"byte_end":658657,"line_start":1829,"line_end":1829,"column_start":22,"column_end":29},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":7741},"to":{"krate":1,"index":1953}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":661661,"byte_end":661677,"line_start":1937,"line_end":1937,"column_start":23,"column_end":39},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":7745},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/path.rs","byte_start":661801,"byte_end":661817,"line_start":1943,"line_end":1943,"column_start":16,"column_end":32},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":7745},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":665680,"byte_end":665687,"line_start":44,"line_end":44,"column_start":21,"column_end":28},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":3925},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":665799,"byte_end":665806,"line_start":50,"line_end":50,"column_start":6,"column_end":13},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":3925},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":667662,"byte_end":667679,"line_start":99,"line_end":99,"column_start":21,"column_end":38},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":3932},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/barrier.rs","byte_start":667850,"byte_end":667867,"line_start":105,"line_end":105,"column_start":6,"column_end":23},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":3932},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":670561,"byte_end":670578,"line_start":54,"line_end":54,"column_start":6,"column_end":23},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":8063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":670789,"byte_end":670805,"line_start":64,"line_end":64,"column_start":22,"column_end":38},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":3968},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":670830,"byte_end":670846,"line_start":65,"line_end":65,"column_start":22,"column_end":38},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":3968},"to":{"krate":1,"index":2056}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":670856,"byte_end":670872,"line_start":67,"line_end":67,"column_start":6,"column_end":22},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":3968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":672772,"byte_end":672782,"line_start":129,"line_end":129,"column_start":6,"column_end":16},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":3982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":686436,"byte_end":686446,"line_start":468,"line_end":468,"column_start":21,"column_end":31},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":3982},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":686570,"byte_end":686580,"line_start":474,"line_end":474,"column_start":18,"column_end":28},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":3982},"to":{"krate":1,"index":2032}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/condvar.rs","byte_start":686738,"byte_end":686748,"line_start":481,"line_end":481,"column_start":15,"column_end":25},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":3982},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":688886,"byte_end":688900,"line_start":42,"line_end":42,"column_start":22,"column_end":36},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":4040},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":688925,"byte_end":688939,"line_start":43,"line_end":43,"column_start":22,"column_end":36},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":4040},"to":{"krate":1,"index":2056}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":688949,"byte_end":688963,"line_start":45,"line_end":45,"column_start":6,"column_end":20},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":4040},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":697212,"byte_end":697220,"line_start":260,"line_end":260,"column_start":40,"column_end":48},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":4052},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":697266,"byte_end":697274,"line_start":261,"line_end":261,"column_start":40,"column_end":48},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":4052},"to":{"krate":1,"index":2056}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":698013,"byte_end":698026,"line_start":283,"line_end":283,"column_start":27,"column_end":40},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":4061},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":698076,"byte_end":698089,"line_start":284,"line_end":284,"column_start":40,"column_end":53},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":4061},"to":{"krate":1,"index":2056}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":698109,"byte_end":698117,"line_start":286,"line_end":286,"column_start":9,"column_end":17},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":4052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":698425,"byte_end":698433,"line_start":299,"line_end":299,"column_start":17,"column_end":25},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":4052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":702195,"byte_end":702203,"line_start":406,"line_end":406,"column_start":47,"column_end":55},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":4052},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":702500,"byte_end":702508,"line_start":414,"line_end":414,"column_start":21,"column_end":29},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":4052},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":702800,"byte_end":702808,"line_start":424,"line_end":424,"column_start":39,"column_end":47},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":4052},"to":{"krate":1,"index":2032}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":703008,"byte_end":703016,"line_start":431,"line_end":431,"column_start":45,"column_end":53},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":4052},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":703478,"byte_end":703495,"line_start":440,"line_end":440,"column_start":37,"column_end":54},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":4094},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":703809,"byte_end":703822,"line_start":452,"line_end":452,"column_start":25,"column_end":38},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":4061},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":704054,"byte_end":704067,"line_start":458,"line_end":458,"column_start":27,"column_end":40},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":4061},"to":{"krate":1,"index":2241}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":704207,"byte_end":704220,"line_start":466,"line_end":466,"column_start":30,"column_end":43},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":4061},"to":{"krate":1,"index":2254}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":704350,"byte_end":704363,"line_start":472,"line_end":472,"column_start":26,"column_end":39},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":4061},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":704695,"byte_end":704708,"line_start":483,"line_end":483,"column_start":45,"column_end":58},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":4061},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/mutex.rs","byte_start":704874,"byte_end":704887,"line_start":489,"line_end":489,"column_start":49,"column_end":62},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":4061},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":706334,"byte_end":706357,"line_start":28,"line_end":28,"column_start":22,"column_end":45},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":4136},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":706382,"byte_end":706405,"line_start":29,"line_end":29,"column_start":22,"column_end":45},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":4136},"to":{"krate":1,"index":2056}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":706415,"byte_end":706438,"line_start":31,"line_end":31,"column_start":6,"column_end":29},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":4136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712944,"byte_end":712961,"line_start":213,"line_end":213,"column_start":31,"column_end":48},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":4147},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":712998,"byte_end":713015,"line_start":214,"line_end":214,"column_start":31,"column_end":48},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":4147},"to":{"krate":1,"index":2056}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":713031,"byte_end":713048,"line_start":216,"line_end":216,"column_start":9,"column_end":26},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":4147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":714747,"byte_end":714764,"line_start":263,"line_end":263,"column_start":18,"column_end":35},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":4147},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":715205,"byte_end":715222,"line_start":273,"line_end":273,"column_start":46,"column_end":63},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":4147},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":715700,"byte_end":715717,"line_start":282,"line_end":282,"column_start":37,"column_end":54},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":4167},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":716787,"byte_end":716809,"line_start":314,"line_end":314,"column_start":19,"column_end":41},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":4171},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":716837,"byte_end":716859,"line_start":316,"line_end":316,"column_start":17,"column_end":39},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":4171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":717178,"byte_end":717200,"line_start":327,"line_end":327,"column_start":19,"column_end":41},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":4171},"to":{"krate":1,"index":2241}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":717310,"byte_end":717332,"line_start":335,"line_end":335,"column_start":18,"column_end":40},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":4171},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":717664,"byte_end":717686,"line_start":346,"line_end":346,"column_start":36,"column_end":58},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":4171},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/remutex.rs","byte_start":717843,"byte_end":717865,"line_start":352,"line_end":352,"column_start":40,"column_end":62},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":4171},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":722677,"byte_end":722681,"line_start":94,"line_end":94,"column_start":22,"column_end":26},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":4207},"to":{"krate":1,"index":2056}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":722706,"byte_end":722710,"line_start":95,"line_end":95,"column_start":22,"column_end":26},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":4207},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":724340,"byte_end":724344,"line_start":145,"line_end":145,"column_start":6,"column_end":10},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":4207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":732833,"byte_end":732837,"line_start":341,"line_end":341,"column_start":21,"column_end":25},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":4207},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":732955,"byte_end":732966,"line_start":347,"line_end":347,"column_start":15,"column_end":26},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":4222},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/once.rs","byte_start":734250,"byte_end":734259,"line_start":377,"line_end":377,"column_start":6,"column_end":15},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":8078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":736016,"byte_end":736031,"line_start":36,"line_end":36,"column_start":22,"column_end":37},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":4260},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":736056,"byte_end":736071,"line_start":37,"line_end":37,"column_start":22,"column_end":37},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":4260},"to":{"krate":1,"index":2056}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":736081,"byte_end":736096,"line_start":39,"line_end":39,"column_start":6,"column_end":21},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":4260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":739280,"byte_end":739289,"line_start":132,"line_end":132,"column_start":40,"column_end":49},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":4274},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":739342,"byte_end":739351,"line_start":133,"line_end":133,"column_start":47,"column_end":56},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":4274},"to":{"krate":1,"index":2056}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":739675,"byte_end":739693,"line_start":145,"line_end":145,"column_start":27,"column_end":45},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":4283},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":739743,"byte_end":739761,"line_start":146,"line_end":146,"column_start":40,"column_end":58},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":4283},"to":{"krate":1,"index":2056}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":740096,"byte_end":740115,"line_start":158,"line_end":158,"column_start":27,"column_end":46},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":4292},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":740165,"byte_end":740184,"line_start":159,"line_end":159,"column_start":40,"column_end":59},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":4292},"to":{"krate":1,"index":2056}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":740204,"byte_end":740213,"line_start":161,"line_end":161,"column_start":9,"column_end":18},"kind":{"Impl":{"id":691}},"from":{"krate":0,"index":4274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":740513,"byte_end":740522,"line_start":172,"line_end":172,"column_start":17,"column_end":26},"kind":{"Impl":{"id":692}},"from":{"krate":0,"index":4274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":747611,"byte_end":747620,"line_start":350,"line_end":350,"column_start":47,"column_end":56},"kind":{"Impl":{"id":693}},"from":{"krate":0,"index":4274},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":747946,"byte_end":747955,"line_start":358,"line_end":358,"column_start":45,"column_end":54},"kind":{"Impl":{"id":694}},"from":{"krate":0,"index":4274},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":748418,"byte_end":748435,"line_start":367,"line_end":367,"column_start":37,"column_end":54},"kind":{"Impl":{"id":695}},"from":{"krate":0,"index":4321},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":748755,"byte_end":748764,"line_start":379,"line_end":379,"column_start":30,"column_end":39},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":4274},"to":{"krate":1,"index":2032}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":748947,"byte_end":748956,"line_start":386,"line_end":386,"column_start":21,"column_end":30},"kind":{"Impl":{"id":697}},"from":{"krate":0,"index":4274},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":749219,"byte_end":749237,"line_start":396,"line_end":396,"column_start":26,"column_end":44},"kind":{"Impl":{"id":698}},"from":{"krate":0,"index":4283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":749487,"byte_end":749506,"line_start":403,"line_end":403,"column_start":26,"column_end":45},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":4292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":749763,"byte_end":749781,"line_start":409,"line_end":409,"column_start":36,"column_end":54},"kind":{"Impl":{"id":700}},"from":{"krate":0,"index":4283},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":749991,"byte_end":750009,"line_start":415,"line_end":415,"column_start":49,"column_end":67},"kind":{"Impl":{"id":701}},"from":{"krate":0,"index":4283},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":750150,"byte_end":750169,"line_start":421,"line_end":421,"column_start":36,"column_end":55},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":4292},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":750380,"byte_end":750399,"line_start":427,"line_end":427,"column_start":49,"column_end":68},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":4292},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":750531,"byte_end":750549,"line_start":433,"line_end":433,"column_start":27,"column_end":45},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":4283},"to":{"krate":1,"index":2241}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":750686,"byte_end":750705,"line_start":441,"line_end":441,"column_start":27,"column_end":46},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":4292},"to":{"krate":1,"index":2241}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":750845,"byte_end":750864,"line_start":449,"line_end":449,"column_start":30,"column_end":49},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":4292},"to":{"krate":1,"index":2254}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":750994,"byte_end":751012,"line_start":455,"line_end":455,"column_start":26,"column_end":44},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":4283},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/rwlock.rs","byte_start":751317,"byte_end":751336,"line_start":465,"line_end":465,"column_start":26,"column_end":45},"kind":{"Impl":{"id":708}},"from":{"krate":0,"index":4292},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":753826,"byte_end":753843,"line_start":76,"line_end":76,"column_start":22,"column_end":39},"kind":{"Impl":{"id":709}},"from":{"krate":0,"index":4379},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":753868,"byte_end":753885,"line_start":77,"line_end":77,"column_start":22,"column_end":39},"kind":{"Impl":{"id":710}},"from":{"krate":0,"index":4379},"to":{"krate":1,"index":2056}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":753895,"byte_end":753912,"line_start":79,"line_end":79,"column_start":6,"column_end":23},"kind":{"Impl":{"id":711}},"from":{"krate":0,"index":4379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":754315,"byte_end":754326,"line_start":99,"line_end":99,"column_start":22,"column_end":33},"kind":{"Impl":{"id":712}},"from":{"krate":0,"index":4387},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":754351,"byte_end":754362,"line_start":100,"line_end":100,"column_start":22,"column_end":33},"kind":{"Impl":{"id":713}},"from":{"krate":0,"index":4387},"to":{"krate":1,"index":2056}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":754372,"byte_end":754383,"line_start":102,"line_end":102,"column_start":6,"column_end":17},"kind":{"Impl":{"id":714}},"from":{"krate":0,"index":4387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":754649,"byte_end":754660,"line_start":115,"line_end":115,"column_start":18,"column_end":29},"kind":{"Impl":{"id":715}},"from":{"krate":0,"index":4387},"to":{"krate":1,"index":2032}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":754824,"byte_end":754840,"line_start":125,"line_end":125,"column_start":28,"column_end":44},"kind":{"Impl":{"id":716}},"from":{"krate":0,"index":4396},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":754866,"byte_end":754882,"line_start":127,"line_end":127,"column_start":17,"column_end":33},"kind":{"Impl":{"id":717}},"from":{"krate":0,"index":4396},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sync/spinlock.rs","byte_start":755018,"byte_end":755034,"line_start":133,"line_end":133,"column_start":19,"column_end":35},"kind":{"Impl":{"id":718}},"from":{"krate":0,"index":4396},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":758853,"byte_end":758860,"line_start":87,"line_end":87,"column_start":6,"column_end":13},"kind":{"Impl":{"id":719}},"from":{"krate":0,"index":8082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":763236,"byte_end":763243,"line_start":201,"line_end":201,"column_start":24,"column_end":31},"kind":{"Impl":{"id":720}},"from":{"krate":0,"index":8082},"to":{"krate":1,"index":2109}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":763730,"byte_end":763737,"line_start":215,"line_end":215,"column_start":30,"column_end":37},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":8082},"to":{"krate":1,"index":2140}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":763851,"byte_end":763858,"line_start":221,"line_end":221,"column_start":24,"column_end":31},"kind":{"Impl":{"id":722}},"from":{"krate":0,"index":8082},"to":{"krate":1,"index":2114}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":764064,"byte_end":764071,"line_start":229,"line_end":229,"column_start":30,"column_end":37},"kind":{"Impl":{"id":723}},"from":{"krate":0,"index":8082},"to":{"krate":1,"index":2144}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":764184,"byte_end":764191,"line_start":235,"line_end":235,"column_start":23,"column_end":30},"kind":{"Impl":{"id":724}},"from":{"krate":0,"index":8082},"to":{"krate":1,"index":2114}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":764334,"byte_end":764341,"line_start":243,"line_end":243,"column_start":21,"column_end":28},"kind":{"Impl":{"id":725}},"from":{"krate":0,"index":8082},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":764443,"byte_end":764453,"line_start":249,"line_end":249,"column_start":6,"column_end":16},"kind":{"Impl":{"id":726}},"from":{"krate":0,"index":8106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":768453,"byte_end":768463,"line_start":339,"line_end":339,"column_start":24,"column_end":34},"kind":{"Impl":{"id":727}},"from":{"krate":0,"index":8106},"to":{"krate":1,"index":2109}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":768955,"byte_end":768965,"line_start":353,"line_end":353,"column_start":30,"column_end":40},"kind":{"Impl":{"id":728}},"from":{"krate":0,"index":8106},"to":{"krate":1,"index":2140}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":769079,"byte_end":769089,"line_start":359,"line_end":359,"column_start":24,"column_end":34},"kind":{"Impl":{"id":729}},"from":{"krate":0,"index":8106},"to":{"krate":1,"index":2114}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":769297,"byte_end":769307,"line_start":367,"line_end":367,"column_start":30,"column_end":40},"kind":{"Impl":{"id":730}},"from":{"krate":0,"index":8106},"to":{"krate":1,"index":2144}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":769418,"byte_end":769428,"line_start":373,"line_end":373,"column_start":21,"column_end":31},"kind":{"Impl":{"id":731}},"from":{"krate":0,"index":8106},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":770175,"byte_end":770190,"line_start":392,"line_end":392,"column_start":6,"column_end":21},"kind":{"Impl":{"id":732}},"from":{"krate":0,"index":8130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":770870,"byte_end":770885,"line_start":409,"line_end":409,"column_start":16,"column_end":31},"kind":{"Impl":{"id":733}},"from":{"krate":0,"index":8130},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":771002,"byte_end":771017,"line_start":415,"line_end":415,"column_start":23,"column_end":38},"kind":{"Impl":{"id":734}},"from":{"krate":0,"index":8130},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/time.rs","byte_start":771191,"byte_end":771201,"line_start":421,"line_end":421,"column_start":38,"column_end":48},"kind":{"Impl":{"id":735}},"from":{"krate":0,"index":8106},"to":{"krate":0,"index":5294}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/path.rs","byte_start":777570,"byte_end":777574,"line_start":34,"line_end":34,"column_start":17,"column_end":21},"kind":{"Impl":{"id":736}},"from":{"krate":0,"index":3784},"to":{"krate":0,"index":4511}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/time.rs","byte_start":781468,"byte_end":781475,"line_start":25,"line_end":25,"column_start":20,"column_end":27},"kind":{"Impl":{"id":737}},"from":{"krate":0,"index":8082},"to":{"krate":0,"index":4537}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/untrusted/time.rs","byte_start":782101,"byte_end":782111,"line_start":50,"line_end":50,"column_start":23,"column_end":33},"kind":{"Impl":{"id":738}},"from":{"krate":0,"index":8106},"to":{"krate":0,"index":4543}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":796232,"byte_end":796237,"line_start":50,"line_end":50,"column_start":21,"column_end":26},"kind":{"Impl":{"id":739}},"from":{"krate":0,"index":4588},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":796395,"byte_end":796400,"line_start":56,"line_end":56,"column_start":23,"column_end":28},"kind":{"Impl":{"id":740}},"from":{"krate":0,"index":4588},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":796577,"byte_end":796580,"line_start":62,"line_end":62,"column_start":21,"column_end":24},"kind":{"Impl":{"id":741}},"from":{"krate":0,"index":8137},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":796737,"byte_end":796740,"line_start":68,"line_end":68,"column_start":23,"column_end":26},"kind":{"Impl":{"id":742}},"from":{"krate":0,"index":8137},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":796905,"byte_end":796908,"line_start":74,"line_end":74,"column_start":29,"column_end":32},"kind":{"Impl":{"id":743}},"from":{"krate":0,"index":8137},"to":{"krate":0,"index":5291}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":796999,"byte_end":797002,"line_start":80,"line_end":80,"column_start":24,"column_end":27},"kind":{"Impl":{"id":744}},"from":{"krate":0,"index":8137},"to":{"krate":0,"index":5285}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":797073,"byte_end":797076,"line_start":86,"line_end":86,"column_start":6,"column_end":9},"kind":{"Impl":{"id":745}},"from":{"krate":0,"index":8137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":799175,"byte_end":799180,"line_start":172,"line_end":172,"column_start":6,"column_end":11},"kind":{"Impl":{"id":746}},"from":{"krate":0,"index":4588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":801713,"byte_end":801721,"line_start":272,"line_end":272,"column_start":22,"column_end":30},"kind":{"Impl":{"id":747}},"from":{"krate":0,"index":7164},"to":{"krate":0,"index":4637}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/os_str_bytes.rs","byte_start":802470,"byte_end":802475,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"kind":{"Impl":{"id":748}},"from":{"krate":0,"index":1694},"to":{"krate":0,"index":4643}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/backtrace.rs","byte_start":804087,"byte_end":804092,"line_start":39,"line_end":39,"column_start":19,"column_end":24},"kind":{"Impl":{"id":749}},"from":{"krate":0,"index":4670},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/backtrace.rs","byte_start":804675,"byte_end":804691,"line_start":66,"line_end":66,"column_start":27,"column_end":43},"kind":{"Impl":{"id":750}},"from":{"krate":0,"index":4677},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/gnu/mod.rs","byte_start":810284,"byte_end":810295,"line_start":30,"line_end":30,"column_start":10,"column_end":21},"kind":{"Impl":{"id":751}},"from":{"krate":0,"index":4713},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/gnu/mod.rs","byte_start":813563,"byte_end":813569,"line_start":117,"line_end":117,"column_start":6,"column_end":12},"kind":{"Impl":{"id":752}},"from":{"krate":0,"index":4729},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/gnu/mod.rs","byte_start":814769,"byte_end":814775,"line_start":151,"line_end":151,"column_start":21,"column_end":27},"kind":{"Impl":{"id":753}},"from":{"krate":0,"index":4729},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/gnu/mod.rs","byte_start":815671,"byte_end":815681,"line_start":184,"line_end":184,"column_start":10,"column_end":20},"kind":{"Impl":{"id":754}},"from":{"krate":0,"index":4743},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/gnu/mod.rs","byte_start":817119,"byte_end":817129,"line_start":236,"line_end":236,"column_start":27,"column_end":37},"kind":{"Impl":{"id":755}},"from":{"krate":0,"index":4743},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/gnu/mod.rs","byte_start":817387,"byte_end":817397,"line_start":246,"line_end":246,"column_start":25,"column_end":35},"kind":{"Impl":{"id":756}},"from":{"krate":0,"index":4743},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/gnu/libbacktrace.rs","byte_start":819002,"byte_end":819008,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"kind":{"Impl":{"id":757}},"from":{"krate":0,"index":4781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":837882,"byte_end":837886,"line_start":38,"line_end":38,"column_start":6,"column_end":10},"kind":{"Impl":{"id":758}},"from":{"krate":0,"index":4853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":840245,"byte_end":840256,"line_start":106,"line_end":106,"column_start":24,"column_end":35},"kind":{"Impl":{"id":759}},"from":{"krate":0,"index":4862},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":840402,"byte_end":840413,"line_start":112,"line_end":112,"column_start":26,"column_end":37},"kind":{"Impl":{"id":760}},"from":{"krate":0,"index":4862},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":840568,"byte_end":840579,"line_start":118,"line_end":118,"column_start":19,"column_end":30},"kind":{"Impl":{"id":761}},"from":{"krate":0,"index":4862},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":840690,"byte_end":840701,"line_start":124,"line_end":124,"column_start":9,"column_end":20},"kind":{"Impl":{"id":762}},"from":{"krate":0,"index":4862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":841624,"byte_end":841636,"line_start":155,"line_end":155,"column_start":34,"column_end":46},"kind":{"Impl":{"id":763}},"from":{"krate":0,"index":4865},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":841764,"byte_end":841776,"line_start":161,"line_end":161,"column_start":24,"column_end":36},"kind":{"Impl":{"id":764}},"from":{"krate":0,"index":4865},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":842037,"byte_end":842049,"line_start":170,"line_end":170,"column_start":26,"column_end":38},"kind":{"Impl":{"id":765}},"from":{"krate":0,"index":4865},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/poison.rs","byte_start":842373,"byte_end":842385,"line_start":180,"line_end":180,"column_start":19,"column_end":31},"kind":{"Impl":{"id":766}},"from":{"krate":0,"index":4865},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/thread_info.rs","byte_start":844017,"byte_end":844030,"line_start":27,"line_end":27,"column_start":6,"column_end":19},"kind":{"Impl":{"id":767}},"from":{"krate":0,"index":4911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":848140,"byte_end":848149,"line_start":53,"line_end":53,"column_start":21,"column_end":30},"kind":{"Impl":{"id":768}},"from":{"krate":0,"index":8166},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":848301,"byte_end":848310,"line_start":60,"line_end":60,"column_start":6,"column_end":15},"kind":{"Impl":{"id":769}},"from":{"krate":0,"index":8166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":850246,"byte_end":850253,"line_start":124,"line_end":124,"column_start":21,"column_end":28},"kind":{"Impl":{"id":770}},"from":{"krate":0,"index":8186},"to":{"krate":1,"index":2241}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":850368,"byte_end":850375,"line_start":132,"line_end":132,"column_start":24,"column_end":31},"kind":{"Impl":{"id":771}},"from":{"krate":0,"index":8186},"to":{"krate":1,"index":2254}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":850658,"byte_end":850665,"line_start":141,"line_end":141,"column_start":21,"column_end":28},"kind":{"Impl":{"id":772}},"from":{"krate":0,"index":8186},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":850811,"byte_end":850818,"line_start":148,"line_end":148,"column_start":6,"column_end":13},"kind":{"Impl":{"id":773}},"from":{"krate":0,"index":8186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":858896,"byte_end":858903,"line_start":375,"line_end":375,"column_start":34,"column_end":41},"kind":{"Impl":{"id":774}},"from":{"krate":0,"index":8186},"to":{"krate":1,"index":5205}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":859305,"byte_end":859312,"line_start":387,"line_end":387,"column_start":28,"column_end":35},"kind":{"Impl":{"id":775}},"from":{"krate":0,"index":8186},"to":{"krate":1,"index":5218}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":859920,"byte_end":859924,"line_start":406,"line_end":406,"column_start":24,"column_end":28},"kind":{"Impl":{"id":776}},"from":{"krate":0,"index":8205},"to":{"krate":0,"index":5285}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":860188,"byte_end":860192,"line_start":415,"line_end":415,"column_start":21,"column_end":25},"kind":{"Impl":{"id":777}},"from":{"krate":0,"index":8205},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":861073,"byte_end":861077,"line_start":439,"line_end":439,"column_start":23,"column_end":27},"kind":{"Impl":{"id":778}},"from":{"krate":0,"index":8205},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":861875,"byte_end":861879,"line_start":461,"line_end":461,"column_start":6,"column_end":10},"kind":{"Impl":{"id":779}},"from":{"krate":0,"index":8205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":868974,"byte_end":868978,"line_start":688,"line_end":688,"column_start":40,"column_end":44},"kind":{"Impl":{"id":780}},"from":{"krate":0,"index":8205},"to":{"krate":1,"index":2322}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":869704,"byte_end":869708,"line_start":711,"line_end":711,"column_start":44,"column_end":48},"kind":{"Impl":{"id":781}},"from":{"krate":0,"index":8205},"to":{"krate":1,"index":2322}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":870337,"byte_end":870341,"line_start":731,"line_end":731,"column_start":42,"column_end":46},"kind":{"Impl":{"id":782}},"from":{"krate":0,"index":8205},"to":{"krate":1,"index":2322}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":870749,"byte_end":870753,"line_start":745,"line_end":745,"column_start":37,"column_end":41},"kind":{"Impl":{"id":783}},"from":{"krate":0,"index":8205},"to":{"krate":1,"index":2322}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":872332,"byte_end":872346,"line_start":800,"line_end":800,"column_start":23,"column_end":37},"kind":{"Impl":{"id":784}},"from":{"krate":0,"index":8222},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":872912,"byte_end":872922,"line_start":823,"line_end":823,"column_start":23,"column_end":33},"kind":{"Impl":{"id":785}},"from":{"krate":0,"index":8228},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":873812,"byte_end":873821,"line_start":855,"line_end":855,"column_start":15,"column_end":24},"kind":{"Impl":{"id":786}},"from":{"krate":0,"index":8166},"to":{"krate":1,"index":6778}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":873939,"byte_end":873946,"line_start":862,"line_end":862,"column_start":15,"column_end":22},"kind":{"Impl":{"id":787}},"from":{"krate":0,"index":8186},"to":{"krate":1,"index":6778}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/wtf8.rs","byte_start":874094,"byte_end":874098,"line_start":870,"line_end":870,"column_start":15,"column_end":19},"kind":{"Impl":{"id":788}},"from":{"krate":0,"index":8205},"to":{"krate":1,"index":6778}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":878007,"byte_end":878017,"line_start":111,"line_end":111,"column_start":6,"column_end":16},"kind":{"Impl":{"id":789}},"from":{"krate":0,"index":5111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":878097,"byte_end":878107,"line_start":117,"line_end":117,"column_start":19,"column_end":29},"kind":{"Impl":{"id":790}},"from":{"krate":0,"index":5111},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":878565,"byte_end":878575,"line_start":133,"line_end":133,"column_start":22,"column_end":32},"kind":{"Impl":{"id":791}},"from":{"krate":0,"index":5111},"to":{"krate":1,"index":2056}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":878600,"byte_end":878610,"line_start":134,"line_end":134,"column_start":22,"column_end":32},"kind":{"Impl":{"id":792}},"from":{"krate":0,"index":5111},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":878629,"byte_end":878639,"line_start":136,"line_end":136,"column_start":15,"column_end":25},"kind":{"Impl":{"id":793}},"from":{"krate":0,"index":5111},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":878752,"byte_end":878762,"line_start":142,"line_end":142,"column_start":24,"column_end":34},"kind":{"Impl":{"id":794}},"from":{"krate":0,"index":5111},"to":{"krate":1,"index":1969}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":879540,"byte_end":879550,"line_start":165,"line_end":165,"column_start":38,"column_end":48},"kind":{"Impl":{"id":795}},"from":{"krate":0,"index":5111},"to":{"krate":1,"index":1969}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":880289,"byte_end":880298,"line_start":190,"line_end":190,"column_start":6,"column_end":15},"kind":{"Impl":{"id":796}},"from":{"krate":0,"index":5133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":885133,"byte_end":885142,"line_start":354,"line_end":354,"column_start":28,"column_end":37},"kind":{"Impl":{"id":797}},"from":{"krate":0,"index":5133},"to":{"krate":0,"index":5294}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":885259,"byte_end":885268,"line_start":360,"line_end":360,"column_start":21,"column_end":30},"kind":{"Impl":{"id":798}},"from":{"krate":0,"index":5133},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":885899,"byte_end":885910,"line_start":385,"line_end":385,"column_start":6,"column_end":17},"kind":{"Impl":{"id":799}},"from":{"krate":0,"index":5177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":889424,"byte_end":889435,"line_start":494,"line_end":494,"column_start":28,"column_end":39},"kind":{"Impl":{"id":800}},"from":{"krate":0,"index":5177},"to":{"krate":0,"index":5294}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":889556,"byte_end":889567,"line_start":500,"line_end":500,"column_start":21,"column_end":32},"kind":{"Impl":{"id":801}},"from":{"krate":0,"index":5177},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":890094,"byte_end":890103,"line_start":521,"line_end":521,"column_start":6,"column_end":15},"kind":{"Impl":{"id":802}},"from":{"krate":0,"index":5204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":897423,"byte_end":897432,"line_start":742,"line_end":742,"column_start":28,"column_end":37},"kind":{"Impl":{"id":803}},"from":{"krate":0,"index":5204},"to":{"krate":0,"index":5294}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys_common/net.rs","byte_start":897549,"byte_end":897558,"line_start":748,"line_end":748,"column_start":21,"column_end":30},"kind":{"Impl":{"id":804}},"from":{"krate":0,"index":5204},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/mutex.rs","byte_start":909568,"byte_end":909587,"line_start":181,"line_end":181,"column_start":6,"column_end":25},"kind":{"Impl":{"id":805}},"from":{"krate":0,"index":5342},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/mutex.rs","byte_start":913611,"byte_end":913625,"line_start":314,"line_end":314,"column_start":22,"column_end":36},"kind":{"Impl":{"id":806}},"from":{"krate":0,"index":5357},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/mutex.rs","byte_start":913650,"byte_end":913664,"line_start":315,"line_end":315,"column_start":22,"column_end":36},"kind":{"Impl":{"id":807}},"from":{"krate":0,"index":5357},"to":{"krate":1,"index":2056}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/mutex.rs","byte_start":913748,"byte_end":913762,"line_start":321,"line_end":321,"column_start":6,"column_end":20},"kind":{"Impl":{"id":808}},"from":{"krate":0,"index":5357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/condvar.rs","byte_start":916072,"byte_end":916093,"line_start":35,"line_end":35,"column_start":6,"column_end":27},"kind":{"Impl":{"id":809}},"from":{"krate":0,"index":5385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/condvar.rs","byte_start":920218,"byte_end":920234,"line_start":173,"line_end":173,"column_start":22,"column_end":38},"kind":{"Impl":{"id":810}},"from":{"krate":0,"index":5402},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/condvar.rs","byte_start":920259,"byte_end":920275,"line_start":174,"line_end":174,"column_start":22,"column_end":38},"kind":{"Impl":{"id":811}},"from":{"krate":0,"index":5402},"to":{"krate":1,"index":2056}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/condvar.rs","byte_start":920365,"byte_end":920381,"line_start":181,"line_end":181,"column_start":6,"column_end":22},"kind":{"Impl":{"id":812}},"from":{"krate":0,"index":5402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/rwlock.rs","byte_start":922973,"byte_end":922993,"line_start":37,"line_end":37,"column_start":6,"column_end":26},"kind":{"Impl":{"id":813}},"from":{"krate":0,"index":5426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/rwlock.rs","byte_start":928426,"byte_end":928441,"line_start":227,"line_end":227,"column_start":22,"column_end":37},"kind":{"Impl":{"id":814}},"from":{"krate":0,"index":5447},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/rwlock.rs","byte_start":928466,"byte_end":928481,"line_start":228,"line_end":228,"column_start":22,"column_end":37},"kind":{"Impl":{"id":815}},"from":{"krate":0,"index":5447},"to":{"krate":1,"index":2056}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/rwlock.rs","byte_start":928825,"byte_end":928840,"line_start":239,"line_end":239,"column_start":6,"column_end":21},"kind":{"Impl":{"id":816}},"from":{"krate":0,"index":5447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fd.rs","byte_start":932829,"byte_end":932837,"line_start":47,"line_end":47,"column_start":6,"column_end":14},"kind":{"Impl":{"id":817}},"from":{"krate":0,"index":8253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fd.rs","byte_start":938696,"byte_end":938704,"line_start":229,"line_end":229,"column_start":25,"column_end":33},"kind":{"Impl":{"id":818}},"from":{"krate":0,"index":8253},"to":{"krate":0,"index":5285}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fd.rs","byte_start":938782,"byte_end":938790,"line_start":235,"line_end":235,"column_start":15,"column_end":23},"kind":{"Impl":{"id":819}},"from":{"krate":0,"index":8253},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":941198,"byte_end":941201,"line_start":58,"line_end":58,"column_start":22,"column_end":25},"kind":{"Impl":{"id":820}},"from":{"krate":0,"index":5569},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":941226,"byte_end":941229,"line_start":59,"line_end":59,"column_start":22,"column_end":25},"kind":{"Impl":{"id":821}},"from":{"krate":0,"index":5569},"to":{"krate":1,"index":2056}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":941728,"byte_end":941736,"line_start":90,"line_end":90,"column_start":6,"column_end":14},"kind":{"Impl":{"id":822}},"from":{"krate":0,"index":8257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":941818,"byte_end":941826,"line_start":96,"line_end":96,"column_start":6,"column_end":14},"kind":{"Impl":{"id":823}},"from":{"krate":0,"index":8257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":942126,"byte_end":942134,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"kind":{"Impl":{"id":824}},"from":{"krate":0,"index":8257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":942841,"byte_end":942849,"line_start":133,"line_end":133,"column_start":26,"column_end":34},"kind":{"Impl":{"id":825}},"from":{"krate":0,"index":8257},"to":{"krate":0,"index":5285}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":942921,"byte_end":942936,"line_start":139,"line_end":139,"column_start":6,"column_end":21},"kind":{"Impl":{"id":826}},"from":{"krate":0,"index":8283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":943507,"byte_end":943515,"line_start":159,"line_end":159,"column_start":6,"column_end":14},"kind":{"Impl":{"id":827}},"from":{"krate":0,"index":8296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":943859,"byte_end":943874,"line_start":175,"line_end":175,"column_start":25,"column_end":40},"kind":{"Impl":{"id":828}},"from":{"krate":0,"index":8283},"to":{"krate":0,"index":5294}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":944005,"byte_end":944012,"line_start":181,"line_end":181,"column_start":21,"column_end":28},"kind":{"Impl":{"id":829}},"from":{"krate":0,"index":8265},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":944304,"byte_end":944311,"line_start":189,"line_end":189,"column_start":19,"column_end":26},"kind":{"Impl":{"id":830}},"from":{"krate":0,"index":8265},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":945561,"byte_end":945564,"line_start":222,"line_end":222,"column_start":15,"column_end":18},"kind":{"Impl":{"id":831}},"from":{"krate":0,"index":5569},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":945689,"byte_end":945697,"line_start":229,"line_end":229,"column_start":6,"column_end":14},"kind":{"Impl":{"id":832}},"from":{"krate":0,"index":5574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":947094,"byte_end":947105,"line_start":269,"line_end":269,"column_start":6,"column_end":17},"kind":{"Impl":{"id":833}},"from":{"krate":0,"index":8270},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":949569,"byte_end":949573,"line_start":347,"line_end":347,"column_start":6,"column_end":10},"kind":{"Impl":{"id":834}},"from":{"krate":0,"index":5563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":954482,"byte_end":954492,"line_start":491,"line_end":491,"column_start":6,"column_end":16},"kind":{"Impl":{"id":835}},"from":{"krate":0,"index":8261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":954948,"byte_end":954952,"line_start":511,"line_end":511,"column_start":27,"column_end":31},"kind":{"Impl":{"id":836}},"from":{"krate":0,"index":5563},"to":{"krate":0,"index":5294}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/fs.rs","byte_start":955055,"byte_end":955059,"line_start":517,"line_end":517,"column_start":21,"column_end":25},"kind":{"Impl":{"id":837}},"from":{"krate":0,"index":5563},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/sgxfs.rs","byte_start":961471,"byte_end":961482,"line_start":38,"line_end":38,"column_start":6,"column_end":17},"kind":{"Impl":{"id":838}},"from":{"krate":0,"index":8315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/sgxfs.rs","byte_start":962558,"byte_end":962565,"line_start":73,"line_end":73,"column_start":6,"column_end":13},"kind":{"Impl":{"id":839}},"from":{"krate":0,"index":5734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/sgxfs.rs","byte_start":971410,"byte_end":971417,"line_start":290,"line_end":290,"column_start":35,"column_end":42},"kind":{"Impl":{"id":840}},"from":{"krate":0,"index":5734},"to":{"krate":0,"index":5294}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/io.rs","byte_start":973271,"byte_end":973278,"line_start":29,"line_end":29,"column_start":10,"column_end":17},"kind":{"Impl":{"id":841}},"from":{"krate":0,"index":8327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/io.rs","byte_start":974056,"byte_end":974066,"line_start":62,"line_end":62,"column_start":10,"column_end":20},"kind":{"Impl":{"id":842}},"from":{"krate":0,"index":5790},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/net.rs","byte_start":977017,"byte_end":977023,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"kind":{"Impl":{"id":843}},"from":{"krate":0,"index":5833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/net.rs","byte_start":987030,"byte_end":987036,"line_start":349,"line_end":349,"column_start":25,"column_end":31},"kind":{"Impl":{"id":844}},"from":{"krate":0,"index":5833},"to":{"krate":0,"index":5285}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/net.rs","byte_start":987135,"byte_end":987141,"line_start":355,"line_end":355,"column_start":27,"column_end":33},"kind":{"Impl":{"id":845}},"from":{"krate":0,"index":5833},"to":{"krate":0,"index":5294}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/net.rs","byte_start":987254,"byte_end":987260,"line_start":361,"line_end":361,"column_start":27,"column_end":33},"kind":{"Impl":{"id":846}},"from":{"krate":0,"index":5833},"to":{"krate":0,"index":5291}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":997378,"byte_end":997382,"line_start":161,"line_end":161,"column_start":22,"column_end":26},"kind":{"Impl":{"id":847}},"from":{"krate":0,"index":6758},"to":{"krate":0,"index":5910}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":998226,"byte_end":998237,"line_start":189,"line_end":189,"column_start":25,"column_end":36},"kind":{"Impl":{"id":848}},"from":{"krate":0,"index":8464},"to":{"krate":0,"index":5918}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":999635,"byte_end":999646,"line_start":228,"line_end":228,"column_start":25,"column_end":36},"kind":{"Impl":{"id":849}},"from":{"krate":0,"index":8457},"to":{"krate":0,"index":5926}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1001957,"byte_end":1001965,"line_start":302,"line_end":302,"column_start":26,"column_end":34},"kind":{"Impl":{"id":850}},"from":{"krate":0,"index":8447},"to":{"krate":0,"index":5932}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1003594,"byte_end":1003602,"line_start":374,"line_end":374,"column_start":26,"column_end":34},"kind":{"Impl":{"id":851}},"from":{"krate":0,"index":8478},"to":{"krate":0,"index":5966}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1004175,"byte_end":1004183,"line_start":396,"line_end":396,"column_start":26,"column_end":34},"kind":{"Impl":{"id":852}},"from":{"krate":0,"index":6760},"to":{"krate":0,"index":5976}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/fs.rs","byte_start":1005012,"byte_end":1005022,"line_start":423,"line_end":423,"column_start":28,"column_end":38},"kind":{"Impl":{"id":853}},"from":{"krate":0,"index":8496},"to":{"krate":0,"index":5983}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1008187,"byte_end":1008191,"line_start":77,"line_end":77,"column_start":22,"column_end":26},"kind":{"Impl":{"id":854}},"from":{"krate":0,"index":6758},"to":{"krate":0,"index":5998}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1008296,"byte_end":1008300,"line_start":83,"line_end":83,"column_start":24,"column_end":28},"kind":{"Impl":{"id":855}},"from":{"krate":0,"index":6758},"to":{"krate":0,"index":6000}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1008446,"byte_end":1008450,"line_start":89,"line_end":89,"column_start":24,"column_end":28},"kind":{"Impl":{"id":856}},"from":{"krate":0,"index":6758},"to":{"krate":0,"index":6002}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1008592,"byte_end":1008597,"line_start":96,"line_end":96,"column_start":22,"column_end":27},"kind":{"Impl":{"id":857}},"from":{"krate":0,"index":2418},"to":{"krate":0,"index":5998}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1008718,"byte_end":1008724,"line_start":103,"line_end":103,"column_start":22,"column_end":28},"kind":{"Impl":{"id":858}},"from":{"krate":0,"index":2448},"to":{"krate":0,"index":5998}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1008846,"byte_end":1008852,"line_start":110,"line_end":110,"column_start":22,"column_end":28},"kind":{"Impl":{"id":859}},"from":{"krate":0,"index":2473},"to":{"krate":0,"index":5998}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1008978,"byte_end":1008987,"line_start":117,"line_end":117,"column_start":26,"column_end":35},"kind":{"Impl":{"id":860}},"from":{"krate":0,"index":2420},"to":{"krate":0,"index":5998}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1009116,"byte_end":1009126,"line_start":124,"line_end":124,"column_start":26,"column_end":36},"kind":{"Impl":{"id":861}},"from":{"krate":0,"index":2450},"to":{"krate":0,"index":5998}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/io.rs","byte_start":1009256,"byte_end":1009266,"line_start":131,"line_end":131,"column_start":26,"column_end":36},"kind":{"Impl":{"id":862}},"from":{"krate":0,"index":2475},"to":{"krate":0,"index":5998}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1012079,"byte_end":1012089,"line_start":86,"line_end":86,"column_start":6,"column_end":16},"kind":{"Impl":{"id":863}},"from":{"krate":0,"index":8336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1014139,"byte_end":1014149,"line_start":142,"line_end":142,"column_start":21,"column_end":31},"kind":{"Impl":{"id":864}},"from":{"krate":0,"index":8336},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1014565,"byte_end":1014577,"line_start":154,"line_end":154,"column_start":27,"column_end":39},"kind":{"Impl":{"id":865}},"from":{"krate":0,"index":6076},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1014927,"byte_end":1014937,"line_start":168,"line_end":168,"column_start":21,"column_end":31},"kind":{"Impl":{"id":866}},"from":{"krate":0,"index":6083},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1015346,"byte_end":1015356,"line_start":182,"line_end":182,"column_start":6,"column_end":16},"kind":{"Impl":{"id":867}},"from":{"krate":0,"index":6083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1019644,"byte_end":1019654,"line_start":297,"line_end":297,"column_start":19,"column_end":29},"kind":{"Impl":{"id":868}},"from":{"krate":0,"index":6083},"to":{"krate":0,"index":2572}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1020387,"byte_end":1020397,"line_start":327,"line_end":327,"column_start":20,"column_end":30},"kind":{"Impl":{"id":869}},"from":{"krate":0,"index":6083},"to":{"krate":0,"index":2630}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1021076,"byte_end":1021086,"line_start":355,"line_end":355,"column_start":18,"column_end":28},"kind":{"Impl":{"id":870}},"from":{"krate":0,"index":6083},"to":{"krate":0,"index":5998}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1021179,"byte_end":1021189,"line_start":361,"line_end":361,"column_start":20,"column_end":30},"kind":{"Impl":{"id":871}},"from":{"krate":0,"index":6083},"to":{"krate":0,"index":6000}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1021316,"byte_end":1021326,"line_start":367,"line_end":367,"column_start":20,"column_end":30},"kind":{"Impl":{"id":872}},"from":{"krate":0,"index":6083},"to":{"krate":0,"index":6002}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1021424,"byte_end":1021433,"line_start":373,"line_end":373,"column_start":23,"column_end":32},"kind":{"Impl":{"id":873}},"from":{"krate":0,"index":3151},"to":{"krate":0,"index":5998}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1021547,"byte_end":1021558,"line_start":379,"line_end":379,"column_start":23,"column_end":34},"kind":{"Impl":{"id":874}},"from":{"krate":0,"index":3154},"to":{"krate":0,"index":5998}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1021672,"byte_end":1021681,"line_start":385,"line_end":385,"column_start":23,"column_end":32},"kind":{"Impl":{"id":875}},"from":{"krate":0,"index":3262},"to":{"krate":0,"index":5998}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1021797,"byte_end":1021806,"line_start":391,"line_end":391,"column_start":25,"column_end":34},"kind":{"Impl":{"id":876}},"from":{"krate":0,"index":3151},"to":{"krate":0,"index":6000}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1022037,"byte_end":1022048,"line_start":398,"line_end":398,"column_start":25,"column_end":36},"kind":{"Impl":{"id":877}},"from":{"krate":0,"index":3154},"to":{"krate":0,"index":6000}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1022285,"byte_end":1022294,"line_start":405,"line_end":405,"column_start":25,"column_end":34},"kind":{"Impl":{"id":878}},"from":{"krate":0,"index":3262},"to":{"krate":0,"index":6000}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1022525,"byte_end":1022534,"line_start":412,"line_end":412,"column_start":25,"column_end":34},"kind":{"Impl":{"id":879}},"from":{"krate":0,"index":3151},"to":{"krate":0,"index":6002}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1022659,"byte_end":1022670,"line_start":418,"line_end":418,"column_start":25,"column_end":36},"kind":{"Impl":{"id":880}},"from":{"krate":0,"index":3154},"to":{"krate":0,"index":6002}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1022795,"byte_end":1022804,"line_start":424,"line_end":424,"column_start":25,"column_end":34},"kind":{"Impl":{"id":881}},"from":{"krate":0,"index":3262},"to":{"krate":0,"index":6002}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1023021,"byte_end":1023033,"line_start":434,"line_end":434,"column_start":21,"column_end":33},"kind":{"Impl":{"id":882}},"from":{"krate":0,"index":6147},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1023347,"byte_end":1023359,"line_start":445,"line_end":445,"column_start":6,"column_end":18},"kind":{"Impl":{"id":883}},"from":{"krate":0,"index":6147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1026080,"byte_end":1026092,"line_start":518,"line_end":518,"column_start":18,"column_end":30},"kind":{"Impl":{"id":884}},"from":{"krate":0,"index":6147},"to":{"krate":0,"index":5998}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1026185,"byte_end":1026197,"line_start":524,"line_end":524,"column_start":20,"column_end":32},"kind":{"Impl":{"id":885}},"from":{"krate":0,"index":6147},"to":{"krate":0,"index":6000}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1026328,"byte_end":1026340,"line_start":530,"line_end":530,"column_start":20,"column_end":32},"kind":{"Impl":{"id":886}},"from":{"krate":0,"index":6147},"to":{"krate":0,"index":6002}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1026936,"byte_end":1026944,"line_start":557,"line_end":557,"column_start":23,"column_end":31},"kind":{"Impl":{"id":887}},"from":{"krate":0,"index":8341},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1027290,"byte_end":1027302,"line_start":573,"line_end":573,"column_start":21,"column_end":33},"kind":{"Impl":{"id":888}},"from":{"krate":0,"index":6180},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1027713,"byte_end":1027725,"line_start":587,"line_end":587,"column_start":6,"column_end":18},"kind":{"Impl":{"id":889}},"from":{"krate":0,"index":6180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1035038,"byte_end":1035050,"line_start":804,"line_end":804,"column_start":18,"column_end":30},"kind":{"Impl":{"id":890}},"from":{"krate":0,"index":6180},"to":{"krate":0,"index":5998}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1035143,"byte_end":1035155,"line_start":810,"line_end":810,"column_start":20,"column_end":32},"kind":{"Impl":{"id":891}},"from":{"krate":0,"index":6180},"to":{"krate":0,"index":6000}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/ext/net.rs","byte_start":1035286,"byte_end":1035298,"line_start":816,"line_end":816,"column_start":20,"column_end":32},"kind":{"Impl":{"id":892}},"from":{"krate":0,"index":6180},"to":{"krate":0,"index":6002}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/os.rs","byte_start":1040493,"byte_end":1040503,"line_start":78,"line_end":78,"column_start":23,"column_end":33},"kind":{"Impl":{"id":893}},"from":{"krate":0,"index":6305},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/os.rs","byte_start":1041210,"byte_end":1041224,"line_start":104,"line_end":104,"column_start":23,"column_end":37},"kind":{"Impl":{"id":894}},"from":{"krate":0,"index":8347},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/os.rs","byte_start":1041370,"byte_end":1041384,"line_start":110,"line_end":110,"column_start":19,"column_end":33},"kind":{"Impl":{"id":895}},"from":{"krate":0,"index":8347},"to":{"krate":0,"index":1519}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/os.rs","byte_start":1041939,"byte_end":1041942,"line_start":131,"line_end":131,"column_start":19,"column_end":22},"kind":{"Impl":{"id":896}},"from":{"krate":0,"index":6324},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/stdio.rs","byte_start":1048163,"byte_end":1048168,"line_start":26,"line_end":26,"column_start":6,"column_end":11},"kind":{"Impl":{"id":897}},"from":{"krate":0,"index":6367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/stdio.rs","byte_start":1048260,"byte_end":1048265,"line_start":32,"line_end":32,"column_start":19,"column_end":24},"kind":{"Impl":{"id":898}},"from":{"krate":0,"index":6367},"to":{"krate":0,"index":2572}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/stdio.rs","byte_start":1048587,"byte_end":1048593,"line_start":42,"line_end":42,"column_start":6,"column_end":12},"kind":{"Impl":{"id":899}},"from":{"krate":0,"index":6370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/stdio.rs","byte_start":1048688,"byte_end":1048694,"line_start":48,"line_end":48,"column_start":20,"column_end":26},"kind":{"Impl":{"id":900}},"from":{"krate":0,"index":6370},"to":{"krate":0,"index":2630}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/stdio.rs","byte_start":1049077,"byte_end":1049083,"line_start":62,"line_end":62,"column_start":6,"column_end":12},"kind":{"Impl":{"id":901}},"from":{"krate":0,"index":6373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/stdio.rs","byte_start":1049178,"byte_end":1049184,"line_start":68,"line_end":68,"column_start":20,"column_end":26},"kind":{"Impl":{"id":902}},"from":{"krate":0,"index":6373},"to":{"krate":0,"index":2630}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/backtrace/tracing/mod.rs","byte_start":1058398,"byte_end":1058403,"line_start":45,"line_end":45,"column_start":6,"column_end":11},"kind":{"Impl":{"id":903}},"from":{"krate":0,"index":8351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/backtrace/tracing/mod.rs","byte_start":1059380,"byte_end":1059385,"line_start":71,"line_end":71,"column_start":21,"column_end":26},"kind":{"Impl":{"id":904}},"from":{"krate":0,"index":8351},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/backtrace/tracing/gcc_s.rs","byte_start":1060998,"byte_end":1061003,"line_start":34,"line_end":34,"column_start":22,"column_end":27},"kind":{"Impl":{"id":905}},"from":{"krate":0,"index":6419},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/backtrace/tracing/gcc_s.rs","byte_start":1061028,"byte_end":1061033,"line_start":35,"line_end":35,"column_start":22,"column_end":27},"kind":{"Impl":{"id":906}},"from":{"krate":0,"index":6419},"to":{"krate":1,"index":2056}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/backtrace/tracing/gcc_s.rs","byte_start":1061043,"byte_end":1061048,"line_start":37,"line_end":37,"column_start":6,"column_end":11},"kind":{"Impl":{"id":907}},"from":{"krate":0,"index":6419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/backtrace/tracing/gcc_s.rs","byte_start":1062154,"byte_end":1062159,"line_start":67,"line_end":67,"column_start":16,"column_end":21},"kind":{"Impl":{"id":908}},"from":{"krate":0,"index":6419},"to":{"krate":1,"index":1741}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/backtrace/printing/mod.rs","byte_start":1064789,"byte_end":1064801,"line_start":48,"line_end":48,"column_start":14,"column_end":26},"kind":{"Impl":{"id":909}},"from":{"krate":0,"index":6447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/backtrace/printing/mod.rs","byte_start":1066835,"byte_end":1066852,"line_start":108,"line_end":108,"column_start":6,"column_end":23},"kind":{"Impl":{"id":910}},"from":{"krate":0,"index":6461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/backtrace/printing/mod.rs","byte_start":1070453,"byte_end":1070470,"line_start":204,"line_end":204,"column_start":15,"column_end":32},"kind":{"Impl":{"id":911}},"from":{"krate":0,"index":6461},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/backtrace/mod.rs","byte_start":1055737,"byte_end":1055741,"line_start":116,"line_end":116,"column_start":6,"column_end":10},"kind":{"Impl":{"id":912}},"from":{"krate":0,"index":6474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/backtrace/mod.rs","byte_start":1055914,"byte_end":1055918,"line_start":126,"line_end":126,"column_start":15,"column_end":19},"kind":{"Impl":{"id":913}},"from":{"krate":0,"index":6474},"to":{"krate":1,"index":2265}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/time.rs","byte_start":1071660,"byte_end":1071668,"line_start":32,"line_end":32,"column_start":6,"column_end":14},"kind":{"Impl":{"id":914}},"from":{"krate":0,"index":8382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/time.rs","byte_start":1073800,"byte_end":1073808,"line_start":92,"line_end":92,"column_start":20,"column_end":28},"kind":{"Impl":{"id":915}},"from":{"krate":0,"index":8382},"to":{"krate":1,"index":1769}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/time.rs","byte_start":1073954,"byte_end":1073962,"line_start":98,"line_end":98,"column_start":13,"column_end":21},"kind":{"Impl":{"id":916}},"from":{"krate":0,"index":8382},"to":{"krate":1,"index":1774}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/time.rs","byte_start":1073987,"byte_end":1073995,"line_start":100,"line_end":100,"column_start":21,"column_end":29},"kind":{"Impl":{"id":917}},"from":{"krate":0,"index":8382},"to":{"krate":1,"index":1806}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/time.rs","byte_start":1074116,"byte_end":1074124,"line_start":106,"line_end":106,"column_start":14,"column_end":22},"kind":{"Impl":{"id":918}},"from":{"krate":0,"index":8382},"to":{"krate":1,"index":1795}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/time.rs","byte_start":1074328,"byte_end":1074336,"line_start":114,"line_end":114,"column_start":15,"column_end":23},"kind":{"Impl":{"id":919}},"from":{"krate":0,"index":8382},"to":{"krate":1,"index":6778}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/time.rs","byte_start":1074917,"byte_end":1074924,"line_start":142,"line_end":142,"column_start":10,"column_end":17},"kind":{"Impl":{"id":920}},"from":{"krate":0,"index":8387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/time.rs","byte_start":1076025,"byte_end":1076032,"line_start":176,"line_end":176,"column_start":25,"column_end":32},"kind":{"Impl":{"id":921}},"from":{"krate":0,"index":8387},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/time.rs","byte_start":1076296,"byte_end":1076306,"line_start":185,"line_end":185,"column_start":10,"column_end":20},"kind":{"Impl":{"id":922}},"from":{"krate":0,"index":8410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/time.rs","byte_start":1077030,"byte_end":1077040,"line_start":207,"line_end":207,"column_start":35,"column_end":45},"kind":{"Impl":{"id":923}},"from":{"krate":0,"index":8410},"to":{"krate":1,"index":1962}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/sys/time.rs","byte_start":1077180,"byte_end":1077190,"line_start":213,"line_end":213,"column_start":25,"column_end":35},"kind":{"Impl":{"id":924}},"from":{"krate":0,"index":8410},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1097281,"byte_end":1097293,"line_start":303,"line_end":303,"column_start":14,"column_end":26},"kind":{"Impl":{"id":925}},"from":{"krate":0,"index":6695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1097849,"byte_end":1097861,"line_start":321,"line_end":321,"column_start":33,"column_end":45},"kind":{"Impl":{"id":926}},"from":{"krate":0,"index":6695},"to":{"krate":1,"index":5903}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1099233,"byte_end":1099245,"line_start":356,"line_end":356,"column_start":29,"column_end":41},"kind":{"Impl":{"id":927}},"from":{"krate":0,"index":6711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1099409,"byte_end":1099421,"line_start":362,"line_end":362,"column_start":48,"column_end":60},"kind":{"Impl":{"id":928}},"from":{"krate":0,"index":6711},"to":{"krate":1,"index":5903}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/panicking.rs","byte_start":1102143,"byte_end":1102152,"line_start":436,"line_end":436,"column_start":29,"column_end":38},"kind":{"Impl":{"id":929}},"from":{"krate":0,"index":6723},"to":{"krate":1,"index":5903}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1114114,"byte_end":1114118,"line_start":229,"line_end":229,"column_start":6,"column_end":10},"kind":{"Impl":{"id":930}},"from":{"krate":0,"index":6758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1119125,"byte_end":1119129,"line_start":363,"line_end":363,"column_start":32,"column_end":36},"kind":{"Impl":{"id":931}},"from":{"krate":0,"index":6758},"to":{"krate":0,"index":5285}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1119235,"byte_end":1119239,"line_start":368,"line_end":368,"column_start":34,"column_end":38},"kind":{"Impl":{"id":932}},"from":{"krate":0,"index":6758},"to":{"krate":0,"index":5294}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1119354,"byte_end":1119358,"line_start":373,"line_end":373,"column_start":34,"column_end":38},"kind":{"Impl":{"id":933}},"from":{"krate":0,"index":6758},"to":{"krate":0,"index":5291}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1119451,"byte_end":1119455,"line_start":379,"line_end":379,"column_start":21,"column_end":25},"kind":{"Impl":{"id":934}},"from":{"krate":0,"index":6758},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1119570,"byte_end":1119574,"line_start":385,"line_end":385,"column_start":15,"column_end":19},"kind":{"Impl":{"id":935}},"from":{"krate":0,"index":6758},"to":{"krate":0,"index":2572}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1119920,"byte_end":1119924,"line_start":400,"line_end":400,"column_start":16,"column_end":20},"kind":{"Impl":{"id":936}},"from":{"krate":0,"index":6758},"to":{"krate":0,"index":2630}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1120242,"byte_end":1120246,"line_start":414,"line_end":414,"column_start":15,"column_end":19},"kind":{"Impl":{"id":937}},"from":{"krate":0,"index":6758},"to":{"krate":0,"index":2647}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1121144,"byte_end":1121155,"line_start":455,"line_end":455,"column_start":6,"column_end":17},"kind":{"Impl":{"id":938}},"from":{"krate":0,"index":8457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1127389,"byte_end":1127400,"line_start":612,"line_end":612,"column_start":39,"column_end":50},"kind":{"Impl":{"id":939}},"from":{"krate":0,"index":8457},"to":{"krate":0,"index":5285}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1127518,"byte_end":1127529,"line_start":618,"line_end":618,"column_start":42,"column_end":53},"kind":{"Impl":{"id":940}},"from":{"krate":0,"index":8457},"to":{"krate":0,"index":5288}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1127627,"byte_end":1127635,"line_start":624,"line_end":624,"column_start":6,"column_end":14},"kind":{"Impl":{"id":941}},"from":{"krate":0,"index":8447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1130808,"byte_end":1130816,"line_start":715,"line_end":715,"column_start":21,"column_end":29},"kind":{"Impl":{"id":942}},"from":{"krate":0,"index":8447},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1131326,"byte_end":1131334,"line_start":729,"line_end":729,"column_start":36,"column_end":44},"kind":{"Impl":{"id":943}},"from":{"krate":0,"index":8447},"to":{"krate":0,"index":5285}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1131445,"byte_end":1131453,"line_start":735,"line_end":735,"column_start":38,"column_end":46},"kind":{"Impl":{"id":944}},"from":{"krate":0,"index":8447},"to":{"krate":0,"index":5294}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1131549,"byte_end":1131560,"line_start":741,"line_end":741,"column_start":6,"column_end":17},"kind":{"Impl":{"id":945}},"from":{"krate":0,"index":8464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1132368,"byte_end":1132376,"line_start":764,"line_end":764,"column_start":6,"column_end":14},"kind":{"Impl":{"id":946}},"from":{"krate":0,"index":8478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1134171,"byte_end":1134179,"line_start":812,"line_end":812,"column_start":36,"column_end":44},"kind":{"Impl":{"id":947}},"from":{"krate":0,"index":8478},"to":{"krate":0,"index":5285}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1134297,"byte_end":1134308,"line_start":818,"line_end":818,"column_start":45,"column_end":56},"kind":{"Impl":{"id":948}},"from":{"krate":0,"index":8464},"to":{"krate":0,"index":5294}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1134448,"byte_end":1134459,"line_start":824,"line_end":824,"column_start":43,"column_end":54},"kind":{"Impl":{"id":949}},"from":{"krate":0,"index":8464},"to":{"krate":0,"index":5285}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1134558,"byte_end":1134565,"line_start":830,"line_end":830,"column_start":19,"column_end":26},"kind":{"Impl":{"id":950}},"from":{"krate":0,"index":8452},"to":{"krate":1,"index":5303}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1134733,"byte_end":1134741,"line_start":838,"line_end":838,"column_start":6,"column_end":14},"kind":{"Impl":{"id":951}},"from":{"krate":0,"index":6760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1136313,"byte_end":1136321,"line_start":886,"line_end":886,"column_start":21,"column_end":29},"kind":{"Impl":{"id":952}},"from":{"krate":0,"index":6760},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1136494,"byte_end":1136502,"line_start":892,"line_end":892,"column_start":36,"column_end":44},"kind":{"Impl":{"id":953}},"from":{"krate":0,"index":6760},"to":{"krate":0,"index":5285}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1151387,"byte_end":1151397,"line_start":1309,"line_end":1309,"column_start":6,"column_end":16},"kind":{"Impl":{"id":954}},"from":{"krate":0,"index":8496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/fs.rs","byte_start":1153912,"byte_end":1153922,"line_start":1394,"line_end":1394,"column_start":41,"column_end":51},"kind":{"Impl":{"id":955}},"from":{"krate":0,"index":8496},"to":{"krate":0,"index":5288}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1160506,"byte_end":1160515,"line_start":145,"line_end":145,"column_start":21,"column_end":30},"kind":{"Impl":{"id":956}},"from":{"krate":0,"index":6953},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1161219,"byte_end":1161234,"line_start":172,"line_end":172,"column_start":21,"column_end":36},"kind":{"Impl":{"id":957}},"from":{"krate":0,"index":6977},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1161818,"byte_end":1161829,"line_start":194,"line_end":194,"column_start":21,"column_end":32},"kind":{"Impl":{"id":958}},"from":{"krate":0,"index":6981},"to":{"krate":1,"index":6590}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1162199,"byte_end":1162208,"line_start":208,"line_end":208,"column_start":6,"column_end":15},"kind":{"Impl":{"id":959}},"from":{"krate":0,"index":6953},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1164996,"byte_end":1165005,"line_start":288,"line_end":288,"column_start":23,"column_end":32},"kind":{"Impl":{"id":960}},"from":{"krate":0,"index":6953},"to":{"krate":1,"index":6595}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1166992,"byte_end":1166999,"line_start":338,"line_end":338,"column_start":6,"column_end":13},"kind":{"Impl":{"id":961}},"from":{"krate":0,"index":6963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chenge/.cargo/git/checkouts/teaclave-sgx-sdk-be25c2ad2f03718d/a6a172e/sgx_tstd/src/backtrace.rs","byte_start":1168279,"byte_end":1168287,"line_start":373,"line_end":373,"column_start":6,"column_end":14},"kind":{"Impl":{"id":962}},"from":{"krate":0,"index":6973},"to":{"krate":4294967295,"index":4294967295}}]}